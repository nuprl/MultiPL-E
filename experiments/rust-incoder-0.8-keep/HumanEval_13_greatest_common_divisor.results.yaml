name: HumanEval_13_greatest_common_divisor
language: rust
results:
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        let swap = a.swap(b);\n        greatest_common_divisor(swap, swap)\n\
    \    } else {\n        a\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `swap` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpwtbfm8fy.rs:8:22\n  |\n8 |         let swap = a.swap(b);\n\
    \  |                      ^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a\
    \ % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp68jpmxzk.rs:7:13\n  |\n7 |     (a / b).gcd(a % b)\n  | \
    \            ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp1r9b2bnk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    a.gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpotym1juh.rs:7:7\n  |\n7 |     a.gcd(b).unwrap()\n  |   \
    \    ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp8v4vc3bf.rs:7:13\n  |\n7 |     (a / b).gcd(a).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 && a%b == 0 {\n        b /= 2;\n    }\n    b\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpjzjq_25a.rs:8:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n7 |     while b > 0 && a%b == 0 {\n8 |         b /= 2;\n  |       \
    \  ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ div = a;\n    let mut rem = b;\n    while rem != 0 {\n        div = div * 2\
    \ + rem as isize;\n        rem = rem % div;\n    }\n    div\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to multiply with overflow', /tmp/tmp0s53_355.rs:10:15\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ { greatest_common_divisor(b, a) } else { a }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp8g_f7apx.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ > 0 && b > 0);\n    if b == 0 {\n        return a;\n    }\n    if a == 0 {\n\
    \        return b;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: a > 0 && b > 0', /tmp/tmpfjujjejh.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + (b\
    \ - a % b) % b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptlfjg78s.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ > b {\n        a = a - b;\n    }\n\n    while b > a {\n        b = b - a;\n\
    \    }\n\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpvq69s4fn.rs:8:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    7 |     while a > b {\n8 |         a = a - b;\n  |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpvq69s4fn.rs:12:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |         b = b - a;\n   |   \
    \      ^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpw_2x3ly_.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a%b)\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ >= 0 && b >= 0);\n    if b == 0 {\n        return a;\n    }\n\n    if a > b\
    \ {\n        let mut temp = a;\n        a = b;\n        b = temp;\n    }\n\n \
    \   let mut gcd = 1;\n    while b > 0 {\n        gcd = (b % gcd) + a;\n      \
    \  b /= gcd;\n    }\n\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmpsl6r5vca.rs:13:13\n\
    \   |\n13 |         let mut temp = a;\n   |             ----^^^^\n   |       \
    \      |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `a`\n  -->\
    \ /tmp/tmpsl6r5vca.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n   |                            - help: consider making this\
    \ binding mutable: `mut a`\n...\n14 |         a = b;\n   |         ^^^^^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `b`\n  --> /tmp/tmpsl6r5vca.rs:15:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n15 |         b = temp;\n\
    \   |         ^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `b`\n  --> /tmp/tmpsl6r5vca.rs:21:9\n   |\n6  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                          - help: consider making this binding mutable: `mut\
    \ b`\n...\n21 |         b /= gcd;\n   |         ^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ < b);\n\n    let mut x: isize = 1;\n    while a > 0 {\n        debug_assert!(a\
    \ % x == 0);\n        x = x + 1;\n        a = a / x;\n    }\n\n    x\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp9rzd0ibr.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |         a = a / x;\n   |         ^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a as usize\
    \ + b as usize).gcd(|a, b| {\n        std::cmp::gcd(a, b)\n    })\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `gcd` in module `std::cmp`\n --> /tmp/tmpxzthmiok.rs:8:19\n\
    \  |\n8 |         std::cmp::gcd(a, b)\n  |                   ^^^ not found in\
    \ `std::cmp`\n\nerror[E0599]: no method named `gcd` found for type `usize` in\
    \ the current scope\n --> /tmp/tmpxzthmiok.rs:7:31\n  |\n7 |     (a as usize +\
    \ b as usize).gcd(|a, b| {\n  |                               ^^^ method not found\
    \ in `usize`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        a, b = b, a % b;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found `,`\n --> /tmp/tmpbfhyf16s.rs:8:10\n  |\n8 |         a, b = b, a % b;\n\
    \  |          ^ expected one of 8 possible tokens\n\nerror: aborting due to previous\
    \ error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (b as isize).gcd(a as isize)\n    } else {\n        (b as isize).gcd(a\
    \ as isize).gcd(b as isize)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmphkbj9ru1.rs:8:22\n  |\n8 |         (b as isize).gcd(a as\
    \ isize)\n  |                      ^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `gcd` found for type `isize` in the current scope\n  --> /tmp/tmphkbj9ru1.rs:10:22\n\
    \   |\n10 |         (b as isize).gcd(a as isize).gcd(b as isize)\n   |       \
    \               ^^^ method not found in `isize`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    while b != 0 {\n        let mut\
    \ a = a % b;\n        a = a + 1;\n        b = a / b;\n    }\n\n    a\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpfac06k6z.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a / b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > b);\n    debug_assert!(a >= 1);\n    debug_assert!(b >= 1);\n    (a / b).cmp(&(a\
    \ % b))\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp51yv1cus.rs:10:5\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |     (a / b).cmp(&(a % b))\n   |     ^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `std::cmp::Ordering`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    if a == 0 || b == 0 {\n        return 0;\n    }\n    let\
    \ mut num_a = a;\n    let mut num_b = b;\n    let mut common_divisor = 1;\n  \
    \  while num_a >= num_b {\n        common_divisor <<= 1;\n        num_b >>= 1;\n\
    \    }\n    common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp4ozhk0_f.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        0\n    } else {\n        if a < b {\n            greatest_common_divisor(b,\
    \ a % b)\n        } else {\n            greatest_common_divisor(a, (b % a) as\
    \ isize)\n        }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ m = a;\n    let mut n = b;\n    while m > n {\n        m -= 1;\n    }\n    while\
    \ n >= 1 {\n        n -= 1;\n    }\n    m\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmph0dyunml.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd: isize = 1;\n    while a % gcd != 0 || b % gcd != 0 {\n        if a % gcd\
    \ == 0 {\n            gcd = gcd * b;\n        } else {\n            gcd = gcd\
    \ * a;\n        }\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpx12tzrwf.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // a / gcd(a,\
    \ b)\n    a.gcd(b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp0lljlnk5.rs:8:7\n  |\n8 |     a.gcd(b).unwrap()\n  |   \
    \    ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpfj0vg7di.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b > 0, \"the two numbers should be positive numbers\");\n    debug_assert!(a\
    \ < b, \"the two numbers should be different numbers\");\n    debug_assert!(a\
    \ < a, \"the two numbers should be different numbers\");\n    debug_assert!(b\
    \ < b, \"the two numbers should be different numbers\");\n\n    while b != 0 {\n\
    \        let d = a % b;\n        a = b;\n        b = d;\n    }\n\n    a\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpul49jgxz.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpul49jgxz.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = d;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n\n    while b != 0 {\n        let t = a\
    \ / b;\n        a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpznezohf_.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpznezohf_.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let q = a / b;\n        a = b;\n        b = q;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpjgoc3d8o.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpjgoc3d8o.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = q;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n    let mut i = 0;\n    loop {\n       \
    \ if b > a {\n            // a and b are equal\n            i += 1;\n        \
    \    b = a % b;\n            a = b;\n        } else {\n            // b and a\
    \ are equal\n            i += 1;\n            a = b % a;\n            b = a;\n\
    \        }\n        if i == 0 {\n            return a;\n        }\n    }\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp76hdr6uq.rs:14:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |             b = a % b;\n   |             ^^^^^^^^^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `a`\n  --> /tmp/tmp76hdr6uq.rs:15:13\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n15 |             a = b;\n   |   \
    \          ^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `a`\n  --> /tmp/tmp76hdr6uq.rs:19:13\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n19 |             a = b % a;\n   |\
    \             ^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `b`\n  --> /tmp/tmp76hdr6uq.rs:20:13\n   |\n6 \
    \ | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |          \
    \                            - help: consider making this binding mutable: `mut\
    \ b`\n...\n20 |             b = a;\n   |             ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 4 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   if a > b {\n        std::mem::swap(&a, &b);\n    }\n    while b != 0 {\n \
    \       if a > b {\n            std::mem::swap(&a, &b);\n        }\n        a\
    \ %= b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp9cphbwxj.rs:14:24\n   |\n\
    14 |         std::mem::swap(&a, &b);\n   |                        ^^ types differ\
    \ in mutability\n   |\n   = note: expected mutable reference `&mut _`\n      \
    \                found reference `&isize`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9cphbwxj.rs:14:28\n   |\n14 |         std::mem::swap(&a, &b);\n\
    \   |                            ^^ types differ in mutability\n   |\n   = note:\
    \ expected mutable reference `&mut _`\n                      found reference `&isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp9cphbwxj.rs:18:28\n   |\n18 |\
    \             std::mem::swap(&a, &b);\n   |                            ^^ types\
    \ differ in mutability\n   |\n   = note: expected mutable reference `&mut _`\n\
    \                      found reference `&isize`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9cphbwxj.rs:18:32\n   |\n18 |             std::mem::swap(&a, &b);\n\
    \   |                                ^^ types differ in mutability\n   |\n   =\
    \ note: expected mutable reference `&mut _`\n                      found reference\
    \ `&isize`\n\nerror: aborting due to 4 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpwnnkclgj.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r > b {\n        if r > b {\n            r -= b;\n       \
    \ }\n        if r < b {\n            r += a;\n        }\n    }\n    r\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpe_poi_c2.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\n    debug_assert!(a\
    \ > 0, \"a must be greater than 0\");\n    debug_assert!(b > 0, \"b must be greater\
    \ than 0\");\n\n    if a < 2 {\n        return b;\n    }\n\n    let mut dividend\
    \ = a;\n    let mut divisor = b;\n    loop {\n        let tmp = dividend % divisor;\n\
    \        if tmp == 0 {\n            break;\n        }\n        dividend = divisor;\n\
    \        divisor = tmp;\n    }\n    return dividend;\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp3o0a5dll.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp3o0a5dll.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = tmp;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return a;\n    }\n    return greatest_common_divisor_iter(a,\
    \ b, 0);\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_iter` in this\
    \ scope\n  --> /tmp/tmp08lwlj8e.rs:10:12\n   |\n10 |     return greatest_common_divisor_iter(a,\
    \ b, 0);\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv6kzt9yz.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).checked_mul(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp2rbso5nu.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Find\
    \ the smallest common divisor of a and b\n    debug_assert!(a > 0 && b > 0);\n\
    \    let mut gcd = 1;\n    for i in a .. (b + 1) {\n        debug_assert!(i %\
    \ gcd == 0);\n        gcd *= i;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: i % gcd == 0', /tmp/tmpkyj4fkti.rs:11:9\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut gcd = a;\n    let mut div = b;\n\
    \    while div > 0 {\n        gcd = gcd::gcd(gcd, div);\n        div = div / 2;\n\
    \    }\n\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `gcd`\n\
    \  --> /tmp/tmpl0cj20v6.rs:14:15\n   |\n14 |         gcd = gcd::gcd(gcd, div);\n\
    \   |               ^^^ use of undeclared crate or module `gcd`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpapr3l6ao.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Fast\
    \ way to get the smallest number larger than a.\n    let c = a < b ? b : a;\n\
    \    (a % c).checked_mul(b).expect(\"Greatest common divisor is zero\")\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `b`\n\
    \ --> /tmp/tmpb9_p6ukx.rs:8:21\n  |\n8 |     let c = a < b ? b : a;\n  |     \
    \                ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror:\
    \ aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    if a > b {\n        let t = a;\n\
    \        a = b;\n        b = t;\n    }\n\n    // find gcd using a Euclid's algorithm\n\
    \    // http://en.wikipedia.org/wiki/Euclid#Algorithms\n\n    // swap a and b\n\
    \    let swap = a;\n    a = b;\n    b = swap;\n\n    while a != b {\n        //\
    \ repeatedly divide b and reduce modulo the common divisor\n        // while doing\
    \ so, the value of remainder is always greater than 0\n        let r = b % a;\n\
    \        b = a;\n        a = r;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpbb8os6ri.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbb8os6ri.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpbb8os6ri.rs:22:5\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n22 |     a = b;\n   |     ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbb8os6ri.rs:23:5\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n23 |     b = swap;\n   |     ^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbb8os6ri.rs:29:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n29 |         b = a;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpbb8os6ri.rs:30:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n30 |         a = r;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 6 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).min(|x,\
    \ &y| x % y == 0)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1pxnvakw.rs:7:17\n  |\n7 |\
    \     (a / b).min(|x, &y| x % y == 0)\n  |                 ^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found closure\n  |\n  = note: expected type `isize`\n    \
    \      found closure `[closure@/tmp/tmp1pxnvakw.rs:7:17: 7:35]`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0);\n    debug_assert!(b > 0);\n    while a > 0 {\n        debug_assert!(b\
    \ > 0);\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n    debug_assert!(b\
    \ == 1);\n    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp2f7065py.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2f7065py.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = c;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Calculate\
    \ the GCD without overflow\n    let mut gcd: isize = 1;\n    while a > 1 && b\
    \ > 1 && gcd > 1 {\n        if a > b {\n            a -= b;\n        } else {\n\
    \            b -= a;\n        }\n        gcd *= a % b;\n        a /= b;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpajlo09vl.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpajlo09vl.rs:13:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n13 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmpajlo09vl.rs:16:9\n   |\n6  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                - help: consider making this binding mutable: `mut a`\n...\n\
    16 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ res = a;\n\n    while res != 0 {\n        if res > b {\n            res = res;\n\
    \        } else {\n            return res;\n        }\n\n        // Move right\
    \ 1 step\n        res -= 1;\n    }\n\n    res\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpunha_rzd.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 || a <= 1 || b == 1 {\n        return 1;\n    }\n\n    // Compute greatest\
    \ common divisor of two integers a and b\n    let mut gcd: isize = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            a -= b;\n        } else {\n\
    \            b -= a;\n        }\n        gcd = a % gcd;\n        a = b / gcd;\n\
    \        b = a % gcd;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp0bci7qtz.rs:15:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n15 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp0bci7qtz.rs:17:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n17 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmp0bci7qtz.rs:20:9\n   |\n6  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                - help: consider making this binding mutable: `mut a`\n...\n\
    20 |         a = b / gcd;\n   |         ^^^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp0bci7qtz.rs:21:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n21 |         b = a % gcd;\n   |         ^^^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 4 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ != 0 || b != 0);\n    while b != 0 {\n        let mut a = a;\n        let mut\
    \ b = b;\n        while a != 0 {\n            let r = a % b;\n            a =\
    \ b;\n            b = r;\n        }\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpyvw4jx2y.rs:12:21\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let mut common = a & b;\n        a = a ^ common;\n        b =\
    \ common >> 1;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "warning: variable does not need to be mutable\n --> /tmp/tmpy7pi6iua.rs:8:13\n\
    \  |\n8 |         let mut common = a & b;\n  |             ----^^^^^^\n  |   \
    \          |\n  |             help: remove this `mut`\n  |\n  = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `a`\n -->\
    \ /tmp/tmpy7pi6iua.rs:9:9\n  |\n6 | fn greatest_common_divisor(a: isize, b: isize)\
    \ -> isize {\n  |                            - help: consider making this binding\
    \ mutable: `mut a`\n...\n9 |         a = a ^ common;\n  |         ^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmpy7pi6iua.rs:10:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n10 |         b = common\
    \ >> 1;\n   |         ^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to 2 previous errors; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n    if a < b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        a\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpdedopnws.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert_eq!(a,\
    \ b);\n    if a == 0 || b == 0 {\n        return a;\n    }\n    if a > b {\n \
    \       (a, b) = (b, a);\n    }\n    debug_assert!(b > 0);\n    let mut gcd =\
    \ 1;\n    let mut m = 1;\n    while b > 0 {\n        if a % b == 0 {\n       \
    \     gcd = b;\n            break;\n        }\n        m += 1;\n        b /= gcd\
    \ % m;\n    }\n    gcd % m\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpo19eif8y.rs:12:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         (a, b) = (b, a);\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpo19eif8y.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         (a, b) = (b, a);\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpo19eif8y.rs:23:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n23 |         b /= gcd % m;\n   |\
    \         ^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 3 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a % b\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `12`', /tmp/tmpptyvl39k.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxu5qm33t.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + b -\
    \ 1) / 2\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp29_c52pt.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, (b - a) / 2)\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-2`,\n right: `1`', /tmp/tmpskagxmo6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 1;\n    let mut i = 1;\n    while i < b {\n        if a %\
    \ i == 0 {\n            greatest_divisor = i;\n        }\n        i += 1;\n  \
    \  }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpomvd13u1.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // a >=\
    \ b\n    if a < b {\n        (a, b)\n    } else {\n        (b, a)\n    }\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9ia92td5.rs:9:9\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n...\n9 |         (a, b)\n  |         ^^^^^^ expected `isize`, found tuple\n\
    \  |\n  = note: expected type `isize`\n            found tuple `(isize, isize)`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp9ia92td5.rs:11:9\n   |\n6  | fn\
    \ greatest_common_divisor(a: isize, b: isize) -> isize {\n   |               \
    \                                    ----- expected `isize` because of return\
    \ type\n...\n11 |         (b, a)\n   |         ^^^^^^ expected `isize`, found\
    \ tuple\n   |\n   = note: expected type `isize`\n             found tuple `(isize,\
    \ isize)`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    a.gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpi_7njtq0.rs:7:7\n  |\n7 |     a.gcd(b).unwrap()\n  |   \
    \    ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        n += 1;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp00vdvzv9.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp00vdvzv9.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ max_divisor: isize = 1;\n    for divisor in &[isize::min(), a, a..b] {\n   \
    \     if divisor > max_divisor {\n            max_divisor = divisor;\n       \
    \ }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n\
    \   --> /tmp/tmp2rz02t9p.rs:8:22\n    |\n8   |     for divisor in &[isize::min(),\
    \ a, a..b] {\n    |                      ^^^^^^^^^^-- supplied 0 arguments\n \
    \   |                      |\n    |                      expected 2 arguments\n\
    \    |\nnote: associated function defined here\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmp2rz02t9p.rs:8:39\n  |\n8 |     for divisor in &[isize::min(), a,\
    \ a..b] {\n  |                                       ^^^^ expected `isize`, found\
    \ struct `std::ops::Range`\n  |\n  = note: expected type `isize`\n           found\
    \ struct `std::ops::Range<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpzvd4rnno.rs:10:36\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    while a > 0 && b > 0 {\n    \
    \    if a % b == 0 {\n            return b;\n        }\n        b -= a;\n    \
    \    a %= b;\n    }\n    if a > 0 {\n        a\n    } else {\n        b\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpzkoyzsl0.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b -= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpzkoyzsl0.rs:16:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n16 |         a %= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ < b);\n    let mut x = a;\n    let mut y = b;\n    while y != 0 {\n        assert!(x\
    \ != 0 && y != 0);\n        if x <= y {\n            x -= y;\n        } else {\n\
    \            y -= x;\n        }\n    }\n    x\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpvudzzarw.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = a % b;\n    loop {\n        if b == 0 { break }\n        c = c % b;\n  \
    \      b = b / 2;\n    }\n    c\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpqt7v_qgp.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = b / 2;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (a / b).gcd(b).unwrap()\n    } else {\n        (b / a).gcd(a).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp8z0289yj.rs:8:17\n  |\n8 |         (a / b).gcd(b).unwrap()\n\
    \  |                 ^^^ method not found in `isize`\n\nerror[E0599]: no method\
    \ named `gcd` found for type `isize` in the current scope\n  --> /tmp/tmp8z0289yj.rs:10:17\n\
    \   |\n10 |         (b / a).gcd(a).unwrap()\n   |                 ^^^ method not\
    \ found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   let mut div = a;\n    let mut mod = b;\n    while mod != 0 {\n        if mod\
    \ % a == 0 {\n            div += 1;\n            mod /= a;\n        }\n      \
    \  if mod % b == 0 {\n            div += 1;\n            mod /= b;\n        }\n\
    \    }\n    div\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error: expected identifier, found keyword `mod`\n  --> /tmp/tmpor_esjpv.rs:14:13\n\
    \   |\n14 |     let mut mod = b;\n   |             ^^^ expected identifier, found\
    \ keyword\n   |\nhelp: escape `mod` to use it as an identifier\n   |\n14 |   \
    \  let mut r#mod = b;\n   |             ++\n\nerror: expected expression, found\
    \ keyword `mod`\n  --> /tmp/tmpor_esjpv.rs:15:11\n   |\n15 |     while mod !=\
    \ 0 {\n   |     ----- ^^^ expected expression\n   |     |\n   |     while parsing\
    \ the condition of this `while` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b > 0);\n    debug_assert!(a * b >= a);\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    for _ in 0..(b - a) {\n        if greatest_common_divisor\
    \ % a == 0 {\n            return a;\n        }\n        greatest_common_divisor\
    \ /= a;\n    }\n    return greatest_common_divisor;\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm75rdzhx.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).min(a\
    \ / b).max(a / b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpi2it8ubw.rs:7:35\n  |\n7 |     (a / b).min(a / b).max(a\
    \ / b).unwrap()\n  |                                   ^^^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        if a % b == 0 {\n            return b;\n        }\n        a\
    \ /= b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpj21vsuf6.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a\
    \ % b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp5h14juqj.rs:7:13\n  |\n7 |     (a / b).gcd(a % b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + b -\
    \ 1) / b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpqkapfb4i.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > b);\n    (a / b) as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: a > b', /tmp/tmp2jy_wz40.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Greatest\
    \ common divisor algorithm is a polynomial algorithm, it calculates remainder\
    \ \n    // of a division by a constant (greatest common divisor) without using\
    \ division operator. \n    // This algorithm is called \"Pollard's method\".\n\
    \    a.gcd(b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpe2ty8puh.rs:10:7\n   |\n10 |     a.gcd(b).unwrap()\n  \
    \ |       ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        debug_assert!(b >= a);\n        if a % b == 0 {\n           \
    \ return b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    a\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp103tfvnl.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp103tfvnl.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ l = 0;\n    let mut r = a;\n\n    while r != 0 {\n        if r % b == 0 {\n\
    \            l = r;\n        }\n        r = r / b;\n    }\n\n    l\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8msa0dbo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b >= 0);\n    while a != 0 {\n        if a & 1 == 1 {\n            a\
    \ >>= 1;\n            b -= 1;\n        } else {\n            a >>= 1;\n      \
    \  }\n    }\n    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp_8h6744k.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a >>= 1;\n   |             ^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp_8h6744k.rs:11:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n11 |             b -= 1;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmp_8h6744k.rs:13:13\n   |\n6 \
    \ | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |          \
    \                  - help: consider making this binding mutable: `mut a`\n...\n\
    13 |             a >>= 1;\n   |             ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut g = a;\n    let mut c = b;\n  \
    \  while g != 0 {\n        if c % g == 0 {\n            return g;\n        }\n\
    \        g = g / 2;\n    }\n    c\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `7`', /tmp/tmp2uko5rsi.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 1 || b == 1 {\n        return a;\n    }\n\n    if a > b {\n        (a).gcd(b)\n\
    \    } else {\n        (b).gcd(a)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpm2ilofg7.rs:12:13\n   |\n12 |         (a).gcd(b)\n   |\
    \             ^^^ method not found in `isize`\n\nerror[E0599]: no method named\
    \ `gcd` found for type `isize` in the current scope\n  --> /tmp/tmpm2ilofg7.rs:14:13\n\
    \   |\n14 |         (b).gcd(a)\n   |             ^^^ method not found in `isize`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd: isize = a;\n    while gcd >= b {\n        gcd = gcd % b;\n    }\n    gcd\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpw3u0jp_z.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut div = a % b;\n    while div > 0\
    \ {\n        div = a % b;\n        a = b;\n    }\n    a\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpxme39s6s.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ <= b);\n    debug_assert!(a >= 1);\n    debug_assert!(b > 0);\n\n    debug_assert!(b\
    \ >= 1);\n\n    (a & b).iter().filter(|&x| x != 0).next()\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpf_2ocv4x.rs:13:13\n   |\n13 |     (a & b).iter().filter(|&x|\
    \ x != 0).next()\n   |             ^^^^ method not found in `isize`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(b\
    \ > 0);\n    while a > 0 && b > 0 {\n        debug_assert!(a % b == 0);\n    \
    \    a /= b;\n        b /= 2;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpjzjue0ov.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpjzjue0ov.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor_nwise(a, b)\n    } else {\n        greatest_common_divisor_nwise(b,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_nwise` in this\
    \ scope\n --> /tmp/tmpiyyaqtht.rs:8:9\n  |\n8 |         greatest_common_divisor_nwise(a,\
    \ b)\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `greatest_common_divisor_nwise` in this scope\n  --> /tmp/tmpiyyaqtht.rs:10:9\n\
    \   |\n10 |         greatest_common_divisor_nwise(b, a)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ > b {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpxkrwgeu5.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpxkrwgeu5.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = tmp;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let old_b = b;\n        b = a % b;\n        a = old_b;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpgo2ogtwc.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpgo2ogtwc.rs:10:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = old_b;\n   |         ^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    a.checked_mul(b).unwrap().gcd.unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0610]: `isize` is a primitive type and therefore doesn't have fields\n\
    \ --> /tmp/tmpjyherjwg.rs:7:31\n  |\n7 |     a.checked_mul(b).unwrap().gcd.unwrap()\n\
    \  |                               ^^^\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0610`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // let c\
    \ = a.gcd(b) as usize;\n    // if a == c && b == c { 1 }\n    // if a == c { a\
    \ }\n    // if b == c { b }\n    // else { c }\n    let c = a.gcd(b).unwrap();\n\
    \    if a == c && b == c { 1 }\n    if a == c { a }\n    if b == c { b }\n   \
    \ else { c }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpcsmpvvgs.rs:12:15\n   |\n12 |     let c = a.gcd(b).unwrap();\n\
    \   |               ^^^ method not found in `isize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpcsmpvvgs.rs:13:27\n   |\n13 |     if a == c && b == c {\
    \ 1 }\n   |     ----------------------^--\n   |     |                     |\n\
    \   |     |                     expected `()`, found integer\n   |     expected\
    \ this to be `()`\n   |\nhelp: you might have meant to return this value\n   |\n\
    13 |     if a == c && b == c { return 1; }\n   |                           ++++++\
    \  +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcsmpvvgs.rs:14:17\n   |\n\
    14 |     if a == c { a }\n   |     ------------^--\n   |     |           |\n \
    \  |     |           expected `()`, found `isize`\n   |     expected this to be\
    \ `()`\n   |\nhelp: you might have meant to return this value\n   |\n14 |    \
    \ if a == c { return a; }\n   |                 ++++++  +\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpzapch8k5.rs:7:13\n  |\n7 |     (a / b).floor() as usize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ { a, b } = (b, a) }\n    let mut i = 1\n    let mut j = 1\n    while i * j <\
    \ a { i *= i; j += 1; }\n    i /= j\n    i\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error: unexpected closing delimiter: `}`\n  --> /tmp/tmp04ua2_wa.rs:13:1\n\
    \   |\n10 |     while i * j < a { i *= i; j += 1; }\n   |                    \
    \ -                 - ...matches this closing brace\n   |                    \
    \ |\n   |                     this opening brace...\n...\n13 | }\n   | ^ unexpected\
    \ closing delimiter\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ < b);\n    if a == 0 || b == 0 {\n        return 0;\n    }\n    let mut remainder\
    \ = a % b;\n    let mut greatest_common_divisor = remainder;\n    while remainder\
    \ != 0 {\n        remainder = remainder % b;\n        greatest_common_divisor\
    \ += 1;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpepbtkho8.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a | b).checked_div(|x|\
    \ x.checked_mul(x).unwrap()).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n --> /tmp/tmp9941a4rb.rs:7:26\n\
    \  |\n7 |     (a | b).checked_div(|x| x.checked_mul(x).unwrap()).unwrap()\n  |\
    \                          ^ consider giving this closure parameter a type\n \
    \ |\n  = note: type must be known at this point\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ % b != 0 {\n        a /= b;\n    }\n\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpey5j_gai.rs:8:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    7 |     while a % b != 0 {\n8 |         a /= b;\n  |         ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ temp: isize = 1;\n    while a > 1 && b > 1 {\n        if a > b {\n         \
    \   temp = a;\n            a = b;\n            b = temp;\n        }\n        temp\
    \ = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "warning: value assigned to `temp` is never read\n --> /tmp/tmpgp_qijxf.rs:7:13\n\
    \  |\n7 |     let mut temp: isize = 1;\n  |             ^^^^\n  |\n  = note: `#[warn(unused_assignments)]`\
    \ on by default\n  = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `a`\n  --> /tmp/tmpgp_qijxf.rs:11:13\n \
    \  |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |   \
    \                         - help: consider making this binding mutable: `mut a`\n\
    ...\n11 |             a = b;\n   |             ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpgp_qijxf.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |             b = temp;\n   |             ^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpgp_qijxf.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n15 |         b = a % b;\n   |   \
    \      ^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `a`\n  --> /tmp/tmpgp_qijxf.rs:16:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n16 |         a = temp;\n   |    \
    \     ^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 4\
    \ previous errors; 1 warning emitted\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let rat = a / b;\n        a = b;\n        b = rat;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpr1v6sj_t.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpr1v6sj_t.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = rat;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp4bx1hjvm.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        let d = a % b;\n        a = b;\n        b = d;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpccvjfjyi.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpccvjfjyi.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = d;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n\n    if a == 0 || b == 0 {\n        return\
    \ 0;\n    }\n\n    let mut greatest_common_divisor = 0;\n    let mut num_a = a;\n\
    \    let mut num_b = b;\n\n    while num_a % num_b != 0 {\n        greatest_common_divisor\
    \ += num_b;\n        num_a = (num_a / num_b).floor() as isize;\n        num_b\
    \ = (num_b / num_a).floor() as isize;\n    }\n    greatest_common_divisor\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp82qhpj09.rs:20:33\n   |\n20 |         num_a = (num_a /\
    \ num_b).floor() as isize;\n   |                                 ^^^^^ help: there\
    \ is an associated function with a similar name: `div_floor`\n\nerror[E0599]:\
    \ no method named `floor` found for type `isize` in the current scope\n  --> /tmp/tmp82qhpj09.rs:21:33\n\
    \   |\n21 |         num_b = (num_b / num_a).floor() as isize;\n   |          \
    \                       ^^^^^ help: there is an associated function with a similar\
    \ name: `div_floor`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0);\n    debug_assert!(b > a);\n\n    if b == 0 {\n        return\
    \ a;\n    }\n\n    if a < b {\n        let mut min = a;\n        let mut max =\
    \ b;\n\n        while min < max {\n            let mut min_old = min;\n      \
    \      let mut max_old = max;\n\n            min_old += 1;\n            max_old\
    \ -= 1;\n\n            if min_old > max_old {\n                min = min_old;\n\
    \            } else {\n                max = max_old;\n            }\n       \
    \ }\n        return min;\n    } else {\n        let mut min = a;\n        let\
    \ mut max = b;\n\n        while min < max {\n            let mut min_old = min;\n\
    \            let mut max_old = max;\n\n            min_old -= 1;\n           \
    \ max_old += 1;\n\n            if min_old < max_old {\n                min = min_old;\n\
    \            } else {\n                max = max_old;\n            }\n       \
    \ }\n        return min;\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp6fatmwvq.rs:55:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 { 1 }\n    else { greatest_common_divisor_core(a, b) }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `greatest_common_divisor_core` in this\
    \ scope\n --> /tmp/tmpqas_t0dh.rs:8:12\n  |\n8 |     else { greatest_common_divisor_core(a,\
    \ b) }\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 {\n        debug_assert!(a % b == 0);\n        a = b;\n        b = a / b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp0ivu6kxh.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp0ivu6kxh.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a / b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a > b\
    \ {\n        greatest_common_divisor(b, a)\n    } else if b > a {\n        greatest_common_divisor(a,\
    \ a)\n    } else {\n        a\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpbywdp6mj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = 10;\n    while i >= 1 && i >= b {\n        if a % i == 0 && b % i == 0 {\n\
    \            return i;\n        }\n        i /= 10;\n    }\n    1\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp8xw_rozi.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ % b != 0 {\n        a = a / b;\n    }\n    return a;\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp7gserh8l.rs:8:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    7 |     while a % b != 0 {\n8 |         a = a / b;\n  |         ^^^^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let mut c = 0;\n        while a != 0 && b != 0 {\n         \
    \   c += a % b;\n            a /= b;\n            b /= 10;\n        }\n      \
    \  if a > 0 {\n            a *= 10;\n        } else {\n            b *= 10;\n\
    \        }\n        if c == 0 {\n            return b;\n        }\n    }\n   \
    \ a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpy6k_87pn.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a /= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpy6k_87pn.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b /= 10;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmpy6k_87pn.rs:15:13\n   |\n6 \
    \ | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |          \
    \                  - help: consider making this binding mutable: `mut a`\n...\n\
    15 |             a *= 10;\n   |             ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpy6k_87pn.rs:17:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n17 |             b *= 10;\n   |             ^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 4 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        if a < b {\n            greatest_common_divisor(b,\
    \ a)\n        } else {\n            greatest_common_divisor(a, b)\n        }\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   if a == b {\n        return a;\n    }\n\n    if a > b {\n        (a, b) =\
    \ (b, a)\n    }\n\n    // Euclid's algorithm\n    let mut m = 0;\n    let mut\
    \ n = 0;\n    while a != 0 {\n        let q = a / b;\n        let r = a % b;\n\
    \        (a) = b;\n        (b) = r;\n        (m) = q;\n        (n) = m + b;\n\
    \    }\n    n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "warning: value assigned to `m` is never read\n  --> /tmp/tmpm4kxkokv.rs:22:13\n\
    \   |\n22 |     let mut m = 0;\n   |             ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `a`\n  --> /tmp/tmpm4kxkokv.rs:18:10\n \
    \  |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |   \
    \                         - help: consider making this binding mutable: `mut a`\n\
    ...\n18 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpm4kxkokv.rs:18:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n18 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpm4kxkokv.rs:27:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n27 |         (a) = b;\n   |         ^^^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmpm4kxkokv.rs:28:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n28 |         (b) = r;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 4 previous errors; 1 warning emitted\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Use gcd()\
    \ function from library 'num-integers'\n    match num_integers::gcd(&a, &b) {\n\
    \        None => a,\n        Some(gcd_result) => gcd_result,\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `num_integers`\n\
    \ --> /tmp/tmpbjzqbw0d.rs:8:11\n  |\n8 |     match num_integers::gcd(&a, &b) {\n\
    \  |           ^^^^^^^^^^^^ use of undeclared crate or module `num_integers`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpyzd2ssc3.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        let mut a = a % b;\n        b = b >> 1;\n        a = a + b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "warning: value assigned to `a` is never read\n  --> /tmp/tmpe0c9eajh.rs:10:9\n\
    \   |\n10 |         a = a + b;\n   |         ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `b`\n --> /tmp/tmpe0c9eajh.rs:9:9\n  |\n\
    6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |           \
    \                           - help: consider making this binding mutable: `mut\
    \ b`\n...\n9 |         b = b >> 1;\n  |         ^^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < 1\
    \ || b < 1 { 1 }\n    else if b == 0 { a }\n    else { greatest_common_divisor(b,\
    \ (b - a) / b) }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp86hni00y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > 0 && b > 0, \"Both parameters must be positive.\");\n    debug_assert!(a %\
    \ b == 0, \"The divisors must be positive and the remainder must be 0.\");\n \
    \   while a > 0 && b > 0 {\n        if a % b == 0 {\n            return a;\n \
    \       }\n        debug_assert!(a % b != 0);\n        debug_assert!(b % a ==\
    \ 0);\n        b = b - 1;\n        a = a / b;\n    }\n    debug_assert!(b == 1);\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvpeg1_2k.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = b - 1;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvpeg1_2k.rs:16:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n16 |         a = a / b;\n   |         ^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a % b)\n    } else {\n        greatest_common_divisor(a,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmps0mt5jaa.rs:10:36\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ > 0 {\n        let mut b = b;\n        while b > 0 {\n            if a % b ==\
    \ 0 {\n                return b;\n            }\n            b -= 1;\n       \
    \ }\n        a -= 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpzms2asem.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n15 |         a -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpejdbfx8y.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a > b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        let mut n =\
    \ a;\n        while n > b {\n            n -= b;\n        }\n        n\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgbnlqc8f.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ dividend = a;\n    let mut divisor = b;\n    let mut remainder;\n    while dividend\
    \ > 0 {\n        remainder = dividend % divisor;\n        dividend = divisor;\n\
    \        divisor = remainder;\n    }\n    divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmp99m_did2.rs:11:21\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpgltqxsu2.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut greatest_common_divisor = 0;\n\n\
    \    for i in 0..a {\n        if b < i {\n            break;\n        }\n\n  \
    \      greatest_common_divisor = i;\n\n        for i in 0..b {\n            if\
    \ a % i == 0 && b % i == 0 {\n                greatest_common_divisor = i;\n \
    \               break;\n            }\n        }\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpf4f2ogui.rs:21:16\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a | b).gcd(a).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpagyd7c6a.rs:7:13\n  |\n7 |     (a | b).gcd(a).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // Optimized\
    \ to avoid division\n    if a == 1 || b == 1 || a == b {\n        return a;\n\
    \    }\n\n    let mut ans = a;\n    let mut bn = b as f64;\n    let mut i = 0;\n\
    \    while bn % i == 0 {\n        i += 1;\n    }\n\n    while ans % i == 0 &&\
    \ i != 1 {\n        ans += 1;\n    }\n\n    ans as isize\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot mod `f64` by `{integer}`\n  --> /tmp/tmp4b_3glnb.rs:15:14\n\
    \   |\n15 |     while bn % i == 0 {\n   |              ^ no implementation for\
    \ `f64 % {integer}`\n   |\n   = help: the trait `Rem<{integer}>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // We may\
    \ overflow here, but we don't care since our inputs are less than 256\n    let\
    \ mut r = a % b;\n    if r < 0 {\n        r += b;\n    }\n    r\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp4zhr9p0j.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb8rn47yv.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(a\
    \ % b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpwvbs952r.rs:7:13\n  |\n7 |     (a / b).gcd(a % b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b;\n    }\n    if b == 0 {\n        return a;\n    }\n \
    \   \n    if a > b {\n        let tmp = a;\n        a = b;\n        b = tmp;\n\
    \    }\n    \n    let mut c = a;\n    while c % b != 0 {\n        c = c / b;\n\
    \    }\n    return c\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpla96bs_2.rs:16:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n16 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpla96bs_2.rs:17:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n17 |         b = tmp;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ < b);\n\n    let mut c = 0;\n\n    while a != 0 {\n        c += a % b;\n   \
    \     a /= b;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmph_gkdr5q.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 1 {\n        return b;\n    }\n    if b == 1 {\n        return a;\n    }\n \
    \   if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= b);\n\n    if a == 0 {\n        return b;\n    }\n\n    if b == 0 {\n   \
    \     return a;\n    }\n\n    if a > b {\n        greatest_common_divisor(b, a)\n\
    \    } else {\n        greatest_common_divisor(a, -b)\n    }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: a >= b', /tmp/tmp8tcyuh6q.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = 0;\n    let mut d = 1;\n    while a != 0 && b != 0 {\n        if a % d ==\
    \ 0 && b % d == 0 {\n            c = a + b;\n            a /= d;\n           \
    \ b /= d;\n        } else {\n            d = 1;\n        }\n    }\n    c\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpnait89xx.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |             a /= d;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpnait89xx.rs:13:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n13 |             b /= d;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a%b)\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (a / b) as isize\n    } else {\n        (b / a) as isize\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmprg72a9r8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < 0\
    \ {\n        a = -a\n    }\n    if b < 0 {\n        b = -b\n    }\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpffh3k0cw.rs:13:13\n   |\n13 |     (a / b).floor()\n   |\
    \             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < 0\
    \ || b < 0 {\n        panic!(\"Greatest common divisor is not defined for negative\
    \ numbers\");\n    }\n    if a == 0 {\n        return b;\n    }\n    if b == 0\
    \ {\n        return a;\n    }\n    if a > b {\n        let a_minus_b = a - b;\n\
    \        let mut divisor = a;\n        while divisor != 0 {\n            let new_divisor\
    \ = divisor % b;\n            divisor = new_divisor;\n        }\n        return\
    \ divisor;\n    }\n    let b_minus_a = b - a;\n    let mut divisor = b;\n    while\
    \ divisor != 0 {\n        let new_divisor = divisor % a;\n        divisor = new_divisor;\n\
    \    }\n    return divisor;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    for x in 0..a {\n        if a % x == 0 &&\
    \ b / x != b / greatest_common_divisor {\n            greatest_common_divisor\
    \ = x;\n        }\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmps36c4g2g.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        (a, b) = (b, a % b)\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp7lcb0bto.rs:8:10\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    7 |     while b != 0 {\n8 |         (a, b) = (b, a % b)\n  |          ^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `b`\n --> /tmp/tmp7lcb0bto.rs:8:13\n  |\n6 | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n  |                                      - help: consider\
    \ making this binding mutable: `mut b`\n7 |     while b != 0 {\n8 |         (a,\
    \ b) = (b, a % b)\n  |             ^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ > b);\n    (a - (b / a)) * (b / a)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: a > b', /tmp/tmpif4eun2n.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, a)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ res = a;\n    while b > 0 {\n        if res > b {\n            res %= b;\n \
    \       } else {\n            return res;\n        }\n        b /= 2;\n    }\n\
    \    res\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpx06r56fm.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 1 && b >= 1);\n    if a == 0 || b == 0 {\n        return 0;\n    }\n\n  \
    \  // Find the greatest common divisor of [a, b] using Euclid's algorithm.\n \
    \   // http://en.wikipedia.org/wiki/Euclid's algorithm.\n    let mut greatest_common_divisor\
    \ = a;\n    while greatest_common_divisor != 0 {\n        let remainder = a %\
    \ greatest_common_divisor;\n        a = greatest_common_divisor;\n        greatest_common_divisor\
    \ = b;\n        b = remainder;\n    }\n\n    return a;\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpdhehbttu.rs:17:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n17 |         a = greatest_common_divisor;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmpdhehbttu.rs:19:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n19 |         b = remainder;\n\
    \   |         ^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ * b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpupaojp9e.rs:7:13\n  |\n7 |     (a / b).floor() * b\n  |\
    \             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a + b -\
    \ 1) / b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmplkhtiodb.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b).min(a\
    \ / b).max(a / b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpuqg_pc96.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        let mut dividend\
    \ = 0;\n        let mut divisor = 0;\n        while a > b {\n            dividend\
    \ = a % b;\n            divisor = b % a;\n            a /= b;\n            b /=\
    \ a;\n        }\n        divisor\n    }\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "warning: variable `dividend` is assigned to, but never used\n  --> /tmp/tmpxcw0dhko.rs:10:17\n\
    \   |\n10 |         let mut dividend = 0;\n   |                 ^^^^^^^^\n   |\n\
    \   = note: `#[warn(unused_variables)]` on by default\n   = note: consider using\
    \ `_dividend` instead\n\nwarning: value assigned to `dividend` is never read\n\
    \  --> /tmp/tmpxcw0dhko.rs:13:13\n   |\n13 |             dividend = a % b;\n \
    \  |             ^^^^^^^^\n   |\n   = note: `#[warn(unused_assignments)]` on by\
    \ default\n   = help: maybe it is overwritten before being read?\n\nerror[E0384]:\
    \ cannot assign to immutable argument `a`\n  --> /tmp/tmpxcw0dhko.rs:15:13\n \
    \  |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |   \
    \                         - help: consider making this binding mutable: `mut a`\n\
    ...\n15 |             a /= b;\n   |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpxcw0dhko.rs:16:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n16 |             b /= a;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors; 2 warnings\
    \ emitted\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n\n    if a == 0 || b == 0 {\n        return\
    \ 0;\n    }\n\n    debug_assert!(a > b);\n    debug_assert!(b > a);\n\n    if\
    \ a > b {\n        let c = a;\n        a = b;\n        b = c;\n    }\n\n    while\
    \ b != 0 {\n        let t = a % b;\n        a = b;\n        b = t;\n    }\n\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp27wcjw59.rs:19:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n19 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp27wcjw59.rs:20:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n20 |         b = c;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp27wcjw59.rs:25:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n25 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp27wcjw59.rs:26:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n26 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 4 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a\n    while r > b {\n        r -= b\n    }\n    r\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `while`\n --> /tmp/tmpwj1okf65.rs:7:18\n\
    \  |\n7 |     let mut r = a\n  |                  ^ help: add `;` here\n8 |  \
    \   while r > b {\n  |     ----- unexpected token\n\nerror: aborting due to previous\
    \ error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    for i in 0..a.abs() {\n        if a % i ==\
    \ 0 && b % i == 0 {\n            greatest_common_divisor /= i;\n        }\n  \
    \  }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmppzx73smg.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(b\
    \ >= a);\n    debug_assert!(b > 0);\n    if b == 0 {\n        return a;\n    }\n\
    \n    let mut c = a;\n    let mut d = b;\n    while c % d == 0 {\n        c +=\
    \ 1;\n        d -= 1;\n    }\n    d\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpzgxejq83.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b >= 0);\n    if a > b {\n        greatest_common_divisor(b, a)\n  \
    \  } else {\n        a % b\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp778a4u8o.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp_gturegb.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp3cjq4cbu.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpyxx7tec3.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 {\n        return b\n    }\n\n    if b == 0 {\n        return a\n    }\n\n\
    \    (a * greatest_common_divisor(b - 1, a)) % b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp5ly9g14x.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0 && b > 0);\n    (a % b).checked_add(b / a).unwrap()\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmp52skodsd.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    }\n    else if b == 1 {\n    \
    \    a\n    }\n    else {\n        greatest_common_divisor(a, b - 1)\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpvut4mz6i.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ >= 0);\n    debug_assert!(b >= 0);\n    debug_assert!(a % b == 0);\n    let\
    \ mut result = a;\n    while a != b {\n        a = a % b;\n        result = a\
    \ > result ? a : result;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `a`\n\
    \  --> /tmp/tmpvgdb78ks.rs:13:31\n   |\n13 |         result = a > result ? a :\
    \ result;\n   |                               ^ expected one of `.`, `;`, `?`,\
    \ `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut i = a;\n    let mut j =\
    \ b;\n    let mut common = &a;\n    while i != 0 && j != 0 {\n        if i >=\
    \ j {\n            common = &common[..common.length - 1];\n            i /= i;\n\
    \        } else {\n            common = &common[common.length..];\n          \
    \  j /= j;\n        }\n    }\n    common\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0609]: no field `length` on type `&isize`\n  --> /tmp/tmpw1f0gxmp.rs:15:39\n\
    \   |\n15 |             common = &common[..common.length - 1];\n   |         \
    \                              ^^^^^^\n\nerror[E0608]: cannot index into a value\
    \ of type `&isize`\n  --> /tmp/tmpw1f0gxmp.rs:15:23\n   |\n15 |             common\
    \ = &common[..common.length - 1];\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror[E0609]: no field `length` on type `&isize`\n  --> /tmp/tmpw1f0gxmp.rs:18:37\n\
    \   |\n18 |             common = &common[common.length..];\n   |             \
    \                        ^^^^^^\n\nerror[E0608]: cannot index into a value of\
    \ type `&isize`\n  --> /tmp/tmpw1f0gxmp.rs:18:23\n   |\n18 |             common\
    \ = &common[common.length..];\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpw1f0gxmp.rs:22:5\n   |\n6  | fn\
    \ greatest_common_divisor(a: isize, b: isize) -> isize {\n   |               \
    \                                    ----- expected `isize` because of return\
    \ type\n...\n22 |     common\n   |     ^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n22 |     *common\n   | \
    \    +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0608, E0609.\nFor more information about an error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    let mut greatest_common_divisor = a;\n  \
    \  while a % b != 0 {\n        if a > greatest_common_divisor {\n            greatest_common_divisor\
    \ = b;\n        }\n        b -= 1;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp1q32ptsl.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ q: isize = 0;\n    let mut r: isize = 1;\n\n    while r > 0 {\n        let qq\
    \ = q * q;\n        let rr = (r * r) % a;\n\n        if qq > rr {\n          \
    \  q = (q + 1) % a;\n        } else {\n            r = (r + 1) % a;\n        }\n\
    \    }\n\n    r\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmplv9yi7k5.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < 0\
    \ || b < 0 || b == 0 || a == 0 {\n        0\n    } else {\n        (a / b).floor()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpf86u8414.rs:10:17\n   |\n10 |         (a / b).floor()\n\
    \   |                 ^^^^^ help: there is an associated function with a similar\
    \ name: `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpr4tebnkq.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return a;\n    }\n\n    let mut greatest_divisor = a;\n\
    \n    for divisor in 1..b {\n        if a % divisor == 0 && b % divisor == 0 {\n\
    \            greatest_divisor = divisor;\n        }\n    }\n\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ divider = a;\n    while divider < b {\n        divider += a;\n    }\n    divider\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpd9q6r6np.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmp4yshyl1q.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).max(a\
    \ % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpj1wbe7kx.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ <= b);\n    let mut counter = a;\n    while counter > 1 {\n        if b % counter\
    \ == 0 {\n            counter /= b;\n        } else {\n            counter -=\
    \ 1;\n        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmp504r4y2m.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ divisor = 1;\n    while a % divisor != 0 {\n        divisor *= 2;\n    }\n \
    \   divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpjqqpr9l4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ >= 0 && b > 0);\n    assert!(b >= a);\n    if a == b {\n        1\n    } else\
    \ {\n        (a % b).min(std::cmp::min(a, b)).unwrap_or(b)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `unwrap_or` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpmru70o3n.rs:12:42\n   |\n12 |         (a % b).min(std::cmp::min(a,\
    \ b)).unwrap_or(b)\n   |                                          ^^^^^^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a > b {\n        let (ah, bh) = (a, b);\n\
    \        greatest_common_divisor(ah, bh - 1)\n    } else {\n        let (ah, bh)\
    \ = (a, b - 1);\n        greatest_common_divisor(ah - 1, bh)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-4`,\n right: `1`', /tmp/tmpjs9cwfo1.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    a.checked_div(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpyzstuvgn.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ > 0 { a % b += b; }\n    while a > 0 { b % a += a; }\n    a\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0067]: invalid left-hand side of assignment\n --> /tmp/tmp3in7_5it.rs:7:25\n\
    \  |\n7 |     while b > 0 { a % b += b; }\n  |                   ----- ^^\n  |\
    \                   |\n  |                   cannot assign to this expression\n\
    \nerror[E0067]: invalid left-hand side of assignment\n --> /tmp/tmp3in7_5it.rs:8:25\n\
    \  |\n8 |     while a > 0 { b % a += a; }\n  |                   ----- ^^\n  |\
    \                   |\n  |                   cannot assign to this expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0067`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = a;\n    let mut d = b;\n    let mut rem;\n    while n != 0 {\n        rem\
    \ = n % d;\n        n = d;\n        d = rem;\n    }\n    d\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpt9vc473_.rs:11:15\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpxly61g84.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    assert!(a\
    \ >= 0 && b >= 0);\n    loop {\n        // gcd computation\n        if a > b {\n\
    \            a -= b;\n        }\n        if a == 0 {\n            break;\n   \
    \     }\n        b %= a;\n        a = a;\n    }\n    a\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp_nq9veyo.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp_nq9veyo.rs:16:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n16 |         b %= a;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `a`\n  --> /tmp/tmp_nq9veyo.rs:17:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n17 |         a = a;\n   |       \
    \  ^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).min(a\
    \ % b).unwrap_or(b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `unwrap_or` found for type `isize` in the\
    \ current scope\n --> /tmp/tmppslqrp_h.rs:7:24\n  |\n7 |     (a / b).min(a % b).unwrap_or(b)\n\
    \  |                        ^^^^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as usize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_fgk87oe.rs:7:5\n  |\n6 |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |             \
    \                                      ----- expected `isize` because of return\
    \ type\n7 |     (a / b) as usize\n  |     ^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n7 |     ((a / b) as usize).try_into().unwrap()\n\
    \  |     +                +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ b {\n        a\n    } else if a == 0 {\n        b\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpbmp1_2p8.rs:12:36\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // if b\
    \ == 0 then a is also 0\n    if b == 0 {\n        return a;\n    }\n    debug_assert!(b\
    \ > 0);\n    debug_assert!(b % a == 0);\n    let mut d = a;\n    while d != 0\
    \ {\n        debug_assert!(d % b == 0);\n        d = d / b;\n    }\n    d\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: b % a == 0', /tmp/tmpvrzgnp9n.rs:12:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b)\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpr4eds7yd.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= gcd + 1;\n    }\n    gcd\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmp2fnjwl0d.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmppmv14sr8.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ d: isize = 1;\n    while a % b != 0 {\n        a /= b;\n        d *= b;\n  \
    \  }\n    d\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpfhc52fxq.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ * b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpp9lzzqe5.rs:7:13\n  |\n7 |     (a / b).floor() * b\n  |\
    \             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // https://codereview.stackexchange.com/questions/91798/fast-greatest-common-divisor-function-in-c\n\
    \    let mut a = a % b;\n    while a == 0 {\n        a += b;\n        b = a %\
    \ b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpv_kh5hm1.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpc586oe28.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = a;\n    let mut j = b;\n    let mut gcd = 1;\n\n    while i < j {\n    \
    \    if i % j == 0 {\n            gcd = i;\n            break;\n        }\n  \
    \      i += 1;\n        j += 1;\n    }\n\n    gcd\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b +\
    \ b) % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvvr54z6v.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        (a / b).cmp(&(a % b)).unwrap()\n    } else {\n        (a / b).cmp(&(b\
    \ % a)).unwrap()\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `unwrap` found for enum `std::cmp::Ordering`\
    \ in the current scope\n --> /tmp/tmpeqwiw8l2.rs:8:31\n  |\n8 |         (a / b).cmp(&(a\
    \ % b)).unwrap()\n  |                               ^^^^^^ method not found in\
    \ `std::cmp::Ordering`\n\nerror[E0599]: no method named `unwrap` found for enum\
    \ `std::cmp::Ordering` in the current scope\n  --> /tmp/tmpeqwiw8l2.rs:10:31\n\
    \   |\n10 |         (a / b).cmp(&(b % a)).unwrap()\n   |                     \
    \          ^^^^^^ method not found in `std::cmp::Ordering`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while b\
    \ != 0 {\n        (a, b) = (b, a % b);\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp2dtydchv.rs:8:10\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    7 |     while b != 0 {\n8 |         (a, b) = (b, a % b);\n  |          ^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `b`\n --> /tmp/tmp2dtydchv.rs:8:13\n  |\n6 | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n  |                                      - help: consider\
    \ making this binding mutable: `mut b`\n7 |     while b != 0 {\n8 |         (a,\
    \ b) = (b, a % b);\n  |             ^ cannot assign to immutable argument\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpeanucx6q.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    debug_assert!(a\
    \ > b);\n    debug_assert!(b > a);\n\n    while b > a {\n        debug_assert!(b\
    \ % a == 0);\n        b = b / a;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp9txxqb5w.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         b = b / a;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a % b).checked_mul(a\
    \ / b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpte2oib0l.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp2g3rzzbx.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // TODO:\
    \ implement the greatest common divisor algorithm.\n    // It should be the most\
    \ efficient one, since it computes the\n    // GCD modulo the result modulo the\
    \ divisor.\n    (a % b).gcd(a % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpe20dr4bj.rs:10:13\n   |\n10 |     (a % b).gcd(a % b)\n\
    \   |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    \n    if a > b {\n        let mut\
    \ temp = a;\n        a = b;\n        b = temp;\n    }\n\n    while b != 0 {\n\
    \        let t = a % b;\n        a = b;\n        b = t;\n    }\n    \n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmpxg0hye4d.rs:12:13\n\
    \   |\n12 |         let mut temp = a;\n   |             ----^^^^\n   |       \
    \      |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `a`\n  -->\
    \ /tmp/tmpxg0hye4d.rs:13:9\n   |\n6  | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n   |                            - help: consider making this\
    \ binding mutable: `mut a`\n...\n13 |         a = b;\n   |         ^^^^^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `b`\n  --> /tmp/tmpxg0hye4d.rs:14:9\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n14 |         b = temp;\n\
    \   |         ^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `a`\n  --> /tmp/tmpxg0hye4d.rs:19:9\n   |\n6  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                - help: consider making this binding mutable: `mut a`\n...\n\
    19 |         a = b;\n   |         ^^^^^ cannot assign to immutable argument\n\n\
    error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpxg0hye4d.rs:20:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n20 |         b = t;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 4 previous errors; 1 warning emitted\n\n\
    For more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    // This\
    \ loop is excessively faster than the naive version (b/c the\n    // gcd function\
    \ is very fast), but that's not critical to the correctness.\n    let mut a =\
    \ a;\n    let mut b = b;\n    while a % b != 0 {\n        a = b;\n        b =\
    \ a / b;\n    }\n    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp9bu_xchw.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    while a\
    \ != 0 {\n        let tmp = a;\n        a = b / tmp;\n        b = tmp;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmplk8jc8r5.rs:9:9\n\
    \  |\n6 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a = b / tmp;\n  |         ^^^^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmplk8jc8r5.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = tmp;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        1\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmphxqosi_2.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

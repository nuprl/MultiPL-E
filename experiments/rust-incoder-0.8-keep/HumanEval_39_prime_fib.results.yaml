name: HumanEval_39_prime_fib
language: rust
results:
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 1;\n    }\n    prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9dz2dxts.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // use as fibonacci number\n    if\
    \ n < 2 {\n        return n;\n    }\n    // use as prime\n    if n % 2 == 0 {\n\
    \        return n;\n    }\n    // if even, divide by 2\n    return prime_fib(n\
    \ / 2) as isize;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpunxgwu0g.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    fn fib(n: isize) -> isize {\n        if n < 2 {\n            return\
    \ n;\n        }\n        fib(n + 1) + fib(n + 2)\n    }\n    fib(n)\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmplejl72x3.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    while n > 1 {\n        (a,\
    \ b) = (b, a + b);\n        n = (n - 2) / 2;\n    }\n\n    a\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpjlwqqgl8.rs:21:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |         n = (n - 2) / 2;\n \
    \  |         ^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 { return 1; }\n    if n\
    \ % 2 == 0 { return 2; }\n    if n % 3 == 0 { return 3; }\n    let mut i = 5 as\
    \ isize;\n    loop {\n        i += 1;\n        if i == 81 { return n; }\n    \
    \    if n % i == 0 { return i; }\n    }\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4eex5gp1.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    let mut counter = n;\n    while counter > 1 {\n     \
    \   c += 1;\n        if (b == c) {\n            b += 1;\n        }\n        if\
    \ b > c {\n            counter -= 1;\n        }\n        a += 1;\n        if (a\
    \ == c) {\n            a += 1;\n        }\n        if a > c {\n            counter\
    \ -= 1;\n        }\n    }\n    if counter % 2 == 0 {\n        return 2;\n    }\
    \ else {\n        return counter + 1;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpkvjvskfn.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime_fib = n;\n    if n\
    \ == 0 || n == 1 {\n        return n;\n    }\n    for ii in 0..(prime_fib / 2)+1\
    \ {\n        if prime_fib == 0 || prime_fib == 1 {\n            return prime_fib;\n\
    \        }\n        if prime_fib%2 == 0 {\n            if prime_fib > 2 {\n  \
    \              prime_fib += prime_fib % 2;\n            }\n        } else if prime_fib%2\
    \ == 1 {\n            if prime_fib > 2 {\n                prime_fib += prime_fib\
    \ % 2;\n                prime_fib = prime_fib + 2;\n            }\n        }\n\
    \    }\n    return prime_fib;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpkliz29uk.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n);\n    if n < 2 {\n   \
    \     return 1;\n    }\n    if n < 4 {\n        return n;\n    }\n    if n % 2\
    \ == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n    if n\
    \ % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n    }\n   \
    \ let mut f = 3 * prime_fib(n - 3) + prime_fib(n - 2);\n    f += 2;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %= n;\n    f += 1;\n    f %=\
    \ \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: expected expression, found `}`\n   --> /tmp/tmprk97o92z.rs:113:1\n\
    \    |\n113 | }\n    | ^ expected expression\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmprk97o92z.rs:13:5\n   |\n13 |     assert!(n);\n   |     ^^^^^^^^^^\
    \ expected `bool`, found `isize`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n\n    for\
    \ (i, _) in fib.iter_mut().zip(fib.iter()) {\n        if i > n {\n           \
    \ break;\n        }\n\n        if *i != *i + 1 {\n            *i += 1;\n     \
    \   }\n    }\n\n    return fib[n];\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp9o74gp69.rs:16:16\n   |\n\
    16 |         if i > n {\n   |                ^\n   |                |\n   |  \
    \              expected `&mut _`, found `isize`\n   |                help: consider\
    \ mutably borrowing here: `&mut n`\n   |\n   = note: expected mutable reference\
    \ `&mut _`\n                           found type `isize`\n\nerror[E0277]: the\
    \ type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp9o74gp69.rs:25:12\n\
    \   |\n25 |     return fib[n];\n   |            ^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut n1 = 0, n2 = 1;\n    for &i in &[2..n] {\n        n1 = n1\
    \ + i;\n        n2 = n2 - n1;\n    }\n\n    if n2 == 1 {\n        return n1;\n\
    \    }\n\n    prime_fib(n - 2) + prime_fib(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \  --> /tmp/tmpfxf5hgp8.rs:17:19\n   |\n17 |     let mut n1 = 0, n2 = 1;\n   |\
    \                   ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 { return 1 }\n\n    if\
    \ n % 2 == 0 { return prime_fib(n - 1) + prime_fib(n - 2) }\n\n    prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    else {\n        return prime_fib(n - 1) + prime_fib(n - 3);\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1xu56hh_.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    if n == 1 || n == 2 {\n        return 1;\n    }\n    if n % 2 == 0\
    \ {\n        return prime_fib(n - 2) + prime_fib(n - 1);\n    }\n    let mut n_minus_2\
    \ = n - 2;\n    let mut result = prime_fib(n_minus_2) + prime_fib(n_minus_1);\n\
    \    if result == n {\n        return result;\n    }\n    return result;\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `n_minus_1` in this scope\n  --> /tmp/tmpst5ivtn8.rs:23:55\n\
    \   |\n23 |     let mut result = prime_fib(n_minus_2) + prime_fib(n_minus_1);\n\
    \   |                                                       ^^^^^^^^^ help: a\
    \ local variable with a similar name exists: `n_minus_2`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check(n: isize) -> bool {\n  \
    \      if n < 2 || n % 2 == 0 {\n            return false;\n        }\n      \
    \  true\n    }\n\n    if n < 2 || n % 2 == 0 {\n        return 2;\n    }\n\n \
    \   let mut n1: isize = 2;\n    let mut n2: isize = 3;\n\n    while n2 < n {\n\
    \        if check(n2) {\n            n1 = n2;\n        }\n        n2 = n1 + n2;\n\
    \    }\n\n    n1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpcbdkh0y5.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 {\n        return 2;\n\
    \    }\n    if n == 2 {\n        return 3;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n\n    let mut prime_fibs: Vec<isize> = vec![2, 3, 5];\n\n    for\
    \ i in 2..=n {\n        if prime_fibs.iter().all(|&num| *num == i) {\n       \
    \     prime_fibs.push(i);\n        }\n    }\n\n    if prime_fibs.len() == 1 {\n\
    \        return prime_fibs[0];\n    }\n\n    for i in 2..=n {\n        if prime_fibs.iter().any(|&num|\
    \ *num == i) {\n            let mut prime_fib = prime_fibs.iter().find(|&num|\
    \ *num == i).unwrap();\n            prime_fibs.remove(&mut prime_fib);\n     \
    \       return i;\n        }\n    }\n\n    unreachable!();\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmp5w9rpfz7.rs:26:41\n\
    \   |\n26 |         if prime_fibs.iter().all(|&num| *num == i) {\n   |       \
    \                                  ^^^^\n\nerror[E0614]: type `isize` cannot be\
    \ dereferenced\n  --> /tmp/tmp5w9rpfz7.rs:36:41\n   |\n36 |         if prime_fibs.iter().any(|&num|\
    \ *num == i) {\n   |                                         ^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp5w9rpfz7.rs:38:31\n   |\n38 |             prime_fibs.remove(&mut\
    \ prime_fib);\n   |                               ^^^^^^^^^^^^^^ expected `usize`,\
    \ found `&mut &isize`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    let mut\
    \ prime = true;\n    while n != 0 {\n        if n % 2 == 0 {\n            fib\
    \ = fib.iter().rev().collect::<Vec<isize>>();\n            prime = true;\n   \
    \     }\n        n /= 2;\n    }\n    fib[fib.len() - 1]\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `&{integer}`\n    --> /tmp/tmpbz5wwh46.rs:17:36\n    \
    \ |\n17   |             fib = fib.iter().rev().collect::<Vec<isize>>();\n    \
    \ |                                    ^^^^^^^ value of type `Vec<isize>` cannot\
    \ be built from `std::iter::Iterator<Item=&{integer}>`\n     |\n     = help: the\
    \ trait `FromIterator<&{integer}>` is not implemented for `Vec<isize>`\n     =\
    \ help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required\
    \ by a bound in `collect`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpbz5wwh46.rs:17:19\n\
    \   |\n13 |     let mut fib = [0, 1];\n   |                   ------ expected\
    \ due to this value\n...\n17 |             fib = fib.iter().rev().collect::<Vec<isize>>();\n\
    \   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected array\
    \ `[{integer}; 2]`, found struct `Vec`\n   |\n   = note: expected array `[{integer};\
    \ 2]`\n             found struct `Vec<isize>`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1 as isize) * (2 as isize) as isize\n\
    \        + (1 as isize) * (3 as isize) as isize\n        + (1 as isize) * (5 as\
    \ isize) as isize\n        + (1 as isize) * (7 as isize) as isize\n        + (1\
    \ as isize) * (11 as isize) as isize\n        + (1 as isize) * (13 as isize) as\
    \ isize\n        + (1 as isize) * (17 as isize) as isize\n        + (1 as isize)\
    \ * (19 as isize) as isize\n        + (1 as isize) * (23 as isize) as isize\n\
    \        + (1 as isize) * (29 as isize) as isize\n        + (1 as isize) * (37\
    \ as isize) as isize\n        + (1 as isize) * (43 as isize) as isize\n      \
    \  + (1 as isize) * (59 as isize) as isize\n        + (1 as isize) * (73 as isize)\
    \ as isize\n        + (1 as isize) * (107 as isize) as isize\n        + (1 as\
    \ isize) * (131 as isize) as isize\n        + (1 as isize) * (179 as isize) as\
    \ isize\n        + (1 as isize) * (229 as isize) as isize\n        + (1 as isize)\
    \ * (279 as isize) as isize\n        + (1 as isize) * (333 as isize) as isize\n\
    \        + (1 as isize) * (389 as isize) as isize\n        + (1 as isize) * (479\
    \ as isize) as isize\n        + (1 as isize) * (519 as isize) as isize\n     \
    \   + (1 as isize) * (571 as isize) as isize\n        + (1 as isize) * (631 as\
    \ isize) as isize\n        + (1 as isize) * (679 as isize) as isize\n        +\
    \ (1 as isize) * (733 as isize) as isize\n        + (1 as isize) * (797 as isize)\
    \ as isize\n        + (1 as isize) * (837 as isize) as isize\n        + (1 as\
    \ isize) * (893 as isize) as isize\n        + (1 as isize) * (967 as isize) as\
    \ isize\n        + (1 as isize) * (1025 as isize) as isize\n        + (1 as isize)\
    \ * (1087 as isize) as isize\n        + (1 as \n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpiyorf1_i.rs:46:11\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - closing delimiter possibly meant for this\n...\n46 |         + (1 as\
    \ \n   |           ^ unclosed delimiter\n47 | }\n   | ^ mismatched closing delimiter\n\
    \nerror: expected type, found `)`\n  --> /tmp/tmpiyorf1_i.rs:47:1\n   |\n47 |\
    \ }\n   | ^ expected type\n\nerror: aborting due to 2 previous errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1;\n    let mut f2 =\
    \ 1;\n    let mut f3 = 1;\n    while f1 < n {\n        let m1 = f1;\n        let\
    \ m2 = f2;\n        let m3 = f3;\n        f1 = f1 + f2 + f3;\n        f2 = m1;\n\
    \        f3 = m2;\n    }\n    f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_2k0h9ko.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // check n is greater than 0\n  \
    \  if n < 2 {\n        0\n    } else {\n        // check n is equal or larger\
    \ than the square root of 2\n        if n%2 == 0 {\n            let s = prime_fib(n\
    \ as usize) - 1;\n            s + s if !s.is_zero()\n        } else {\n      \
    \      let mut s = n - 2;\n            let mut i = 1;\n            while i <=\
    \ n {\n                let k = 2 * i + 1;\n                if k <= n {\n     \
    \               i += 1;\n                    k = 2 * i + 1;\n                }\n\
    \                s += i;\n                if s % n == 0 {\n                  \
    \  break;\n                }\n                i += 1;\n            }\n       \
    \     s - i\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found keyword `if`\n  --> /tmp/tmpw_zvo973.rs:20:19\n   |\n20 |            \
    \ s + s if !s.is_zero()\n   |                   ^^ expected one of 8 possible\
    \ tokens\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpw_zvo973.rs:19:31\n\
    \   |\n19 |             let s = prime_fib(n as usize) - 1;\n   |             \
    \                  ^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you\
    \ can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n19 |             let s = prime_fib((n as usize).try_into().unwrap())\
    \ - 1;\n   |                               +          +++++++++++++++++++++\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    if n <= 1 {\n        return n;\n    }\n    for i in 2..n {\n        if a\
    \ > b {\n            return b;\n        }\n        (a, b) = (b, a + b) % n;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0369]: cannot mod `(isize, isize)` by `isize`\n  --> /tmp/tmp6o4r7vyu.rs:22:29\n\
    \   |\n22 |         (a, b) = (b, a + b) % n;\n   |                  ----------\
    \ ^ - isize\n   |                  |\n   |                  (isize, isize)\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n    let mut fib_cache = [0, 1];\n    for &x in &fib_cache[1..] {\n\
    \        let mut y = x;\n        y += y;\n        if y % n == 0 {\n          \
    \  return y;\n        }\n        fib_cache.push(y);\n    }\n    if fib_cache[n]\
    \ != n {\n        println!(\"{}\", fib_cache[n]);\n    }\n    if n % 2 == 0 {\n\
    \        return n;\n    }\n    prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `push` found for array `[isize; 2]` in the\
    \ current scope\n  --> /tmp/tmpm4vm1h4n.rs:23:19\n   |\n23 |         fib_cache.push(y);\n\
    \   |                   ^^^^ method not found in `[isize; 2]`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpm4vm1h4n.rs:25:8\n\
    \   |\n25 |     if fib_cache[n] != n {\n   |        ^^^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[isize]`\n\nerror[E0277]: the type `[isize]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmpm4vm1h4n.rs:26:24\n   |\n26 |         println!(\"\
    {}\", fib_cache[n]);\n   |                        ^^^^^^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[isize]`\n\nerror: aborting due to 3 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n\n  \
    \  }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for _ in 1..n {\n      \
    \  let temp = a + b;\n        a = b;\n        b = temp;\n    }\n    b\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpbupxotug.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime_numbers = vec![2, 3,\
    \ 5];\n\n    for &n in prime_numbers.iter() {\n        if n % n == 0 {\n     \
    \       break;\n        }\n    }\n\n    prime_numbers.push(n);\n\n    for &n in\
    \ prime_numbers.iter() {\n        if n % n == 0 {\n            break;\n      \
    \  }\n\n        prime_numbers.push(n);\n    }\n\n    prime_numbers[prime_numbers.len()\
    \ - 1]\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0502]: cannot borrow `prime_numbers` as mutable because it is also\
    \ borrowed as immutable\n  --> /tmp/tmpkupx0u9x.rs:28:9\n   |\n23 |     for &n\
    \ in prime_numbers.iter() {\n   |               --------------------\n   |   \
    \            |\n   |               immutable borrow occurs here\n   |        \
    \       immutable borrow later used here\n...\n28 |         prime_numbers.push(n);\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0502`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 || n % 2 != 0 {\n      \
    \  0\n    } else {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmp08g63jl1.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime_cache: Vec<bool> =\
    \ vec![false; 2usize];\n    if n < 2 {\n        return 1;\n    }\n    if prime_cache[n]\
    \ {\n        return n;\n    }\n    prime_cache[n] = true;\n    for d in 2..(n\
    \ as usize) {\n        if n % d == 0 {\n            prime_cache[n as usize - 1]\
    \ = true;\n        }\n    }\n    n + prime_fib(n + 1)\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the type `[bool]` cannot be indexed by `isize`\n  --> /tmp/tmpvuqtlwcv.rs:17:8\n\
    \   |\n17 |     if prime_cache[n] {\n   |        ^^^^^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[bool]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<bool>`\n\nerror[E0277]: the type `[bool]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpvuqtlwcv.rs:20:5\n   |\n20 |     prime_cache[n]\
    \ = true;\n   |     ^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[bool]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<bool>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpvuqtlwcv.rs:22:16\n\
    \   |\n22 |         if n % d == 0 {\n   |                ^ expected `isize`, found\
    \ `usize`\n\nerror[E0277]: cannot mod `isize` by `usize`\n  --> /tmp/tmpvuqtlwcv.rs:22:14\n\
    \   |\n22 |         if n % d == 0 {\n   |              ^ no implementation for\
    \ `isize % usize`\n   |\n   = help: the trait `Rem<usize>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 2;\n\
    \    while b < n {\n        if n % a == 0 {\n            a += 2;\n        } else\
    \ {\n            b += 2;\n        }\n    }\n    if n % a == 0 {\n        a\n \
    \   } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi9sby8gs.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n    let mut x = 1;\n    let mut y = 1;\n    for i in 2..(n as usize)\
    \ {\n        if n % i == 0 {\n            x = y;\n            y = x + y;\n   \
    \     }\n    }\n    y\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphputtn5m.rs:19:16\n   |\n\
    19 |         if n % i == 0 {\n   |                ^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot mod `isize` by `usize`\n  --> /tmp/tmphputtn5m.rs:19:14\n\
    \   |\n19 |         if n % i == 0 {\n   |              ^ no implementation for\
    \ `isize % usize`\n   |\n   = help: the trait `Rem<usize>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = 1;\n    let mut prime\
    \ = 2;\n\n    for i in 2..n {\n        if prime % i == 0 {\n            fib =\
    \ fib + prime;\n            prime = 2;\n        }\n        else {\n          \
    \  prime += 1;\n        }\n    }\n\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpegxz9n0g.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // https://en.wikipedia.org/wiki/Primality_test#Trial-division\n\
    \    if n < 2 {\n        return n;\n    }\n    let mut m1 = BigInt::new();\n \
    \   let mut m2 = BigInt::new();\n    let mut i = 0;\n    let mut a = BigInt::from_uint(primes[i]);\n\
    \    let mut b = BigInt::from_uint(primes[n]);\n    let mut p = a;\n    let mut\
    \ q = 1;\n    while p.is_prime() && q.is_prime() {\n        m1 = p * b;\n    \
    \    m2 = q * a;\n        if m1 < m2 {\n            p = m2;\n        } else {\n\
    \            q = m1;\n        }\n        i += 1;\n    }\n    return p * b;\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BigInt`\n  -->\
    \ /tmp/tmp94q96inm.rs:17:18\n   |\n17 |     let mut m1 = BigInt::new();\n   |\
    \                  ^^^^^^ use of undeclared type `BigInt`\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `BigInt`\n  --> /tmp/tmp94q96inm.rs:18:18\n\
    \   |\n18 |     let mut m2 = BigInt::new();\n   |                  ^^^^^^ use\
    \ of undeclared type `BigInt`\n\nerror[E0433]: failed to resolve: use of undeclared\
    \ type `BigInt`\n  --> /tmp/tmp94q96inm.rs:20:17\n   |\n20 |     let mut a = BigInt::from_uint(primes[i]);\n\
    \   |                 ^^^^^^ use of undeclared type `BigInt`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `BigInt`\n  --> /tmp/tmp94q96inm.rs:21:17\n\
    \   |\n21 |     let mut b = BigInt::from_uint(primes[n]);\n   |              \
    \   ^^^^^^ use of undeclared type `BigInt`\n\nerror[E0425]: cannot find value\
    \ `primes` in this scope\n  --> /tmp/tmp94q96inm.rs:20:35\n   |\n20 |     let\
    \ mut a = BigInt::from_uint(primes[i]);\n   |                                \
    \   ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `primes`\
    \ in this scope\n  --> /tmp/tmp94q96inm.rs:21:35\n   |\n21 |     let mut b = BigInt::from_uint(primes[n]);\n\
    \   |                                   ^^^^^^ not found in this scope\n\nerror[E0599]:\
    \ no method named `is_prime` found for type `{integer}` in the current scope\n\
    \  --> /tmp/tmp94q96inm.rs:24:29\n   |\n24 |     while p.is_prime() && q.is_prime()\
    \ {\n   |                             ^^^^^^^^ method not found in `{integer}`\n\
    \nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while n > 1 {\n        let mut i = 1;\n        while i <= n {\n         \
    \   let c = a + b;\n            a = b;\n            b = c;\n            i += 1;\n\
    \        }\n        n -= 1;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpe58_6qtz.rs:23:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n23 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // base cases\n    if n <= 2 { 1\
    \ }\n    else if n % 2 == 0 { 2 }\n    else if n % 3 == 0 { 3 }\n\n    // general\
    \ case\n    else {\n        let mut nums = vec![1, 2, 3]; // first two numbers\
    \ are always prime\n        loop {\n            let next = nums.iter().filter_map(|x|\
    \ x.is_prime()).next();\n            if next.is_none() { break }\n           \
    \ nums.push(next.unwrap());\n        }\n        nums[nums.len() - n]\n    }\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `is_prime` found for reference `&{integer}`\
    \ in the current scope\n  --> /tmp/tmpwarnsp67.rs:22:53\n   |\n22 |          \
    \   let next = nums.iter().filter_map(|x| x.is_prime()).next();\n   |        \
    \                                             ^^^^^^^^ method not found in `&{integer}`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpwarnsp67.rs:26:27\n   |\n26 |\
    \         nums[nums.len() - n]\n   |                           ^ expected `usize`,\
    \ found `isize`\n\nerror[E0277]: cannot subtract `isize` from `usize`\n  --> /tmp/tmpwarnsp67.rs:26:25\n\
    \   |\n26 |         nums[nums.len() - n]\n   |                         ^ no implementation\
    \ for `usize - isize`\n   |\n   = help: the trait `Sub<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Sub<Rhs>`:\n\
    \             <&'a f32 as Sub<f32>>\n             <&'a f64 as Sub<f64>>\n    \
    \         <&'a i128 as Sub<i128>>\n             <&'a i16 as Sub<i16>>\n      \
    \       <&'a i32 as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n          \
    \   <&'a i8 as Sub<i8>>\n             <&'a isize as Sub<isize>>\n           and\
    \ 48 others\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 2usize;\n    let mut\
    \ f2 = 1usize;\n    let mut f3 = 1usize;\n    while n > f1 {\n        f1 = f2;\n\
    \        f2 = f3;\n        f3 += 1;\n    }\n    while n > f2 {\n        f1 = f3;\n\
    \        f3 = f1;\n        f2 += 1;\n    }\n    while n > f3 {\n        f1 = f2;\n\
    \        f2 = f1;\n        f1 += 1;\n    }\n    while n > f1 {\n        f1 = f2;\n\
    \        f2 = f3;\n        f3 += 1;\n    }\n    f1\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp0b2at6v5.rs:16:15\n   |\n\
    16 |     while n > f1 {\n   |               ^^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n16 |     while n > f1.try_into().unwrap() {\n   | \
    \                ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp0b2at6v5.rs:21:15\n   |\n21 |     while n > f2 {\n   |             \
    \  ^^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to\
    \ an `isize` and panic if the converted value doesn't fit\n   |\n21 |     while\
    \ n > f2.try_into().unwrap() {\n   |                 ++++++++++++++++++++\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp0b2at6v5.rs:26:15\n   |\n26 |  \
    \   while n > f3 {\n   |               ^^ expected `isize`, found `usize`\n  \
    \ |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n26 |     while n > f3.try_into().unwrap() {\n   | \
    \                ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp0b2at6v5.rs:31:15\n   |\n31 |     while n > f1 {\n   |             \
    \  ^^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to\
    \ an `isize` and panic if the converted value doesn't fit\n   |\n31 |     while\
    \ n > f1.try_into().unwrap() {\n   |                 ++++++++++++++++++++\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp0b2at6v5.rs:36:5\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n36 |     f1\n   |     ^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n36 |     f1.try_into().unwrap()\n\
    \   |       ++++++++++++++++++++\n\nerror: aborting due to 5 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::cmp::Ordering;\n    if n\
    \ == 0 || n == 1 {\n        n\n    } else {\n        prime_fib(n - 2) + prime_fib(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp522l9x9l.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    prime_fib_iter(n).next()\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime_fib_iter` in this scope\n  -->\
    \ /tmp/tmpo7md1smu.rs:13:5\n   |\n13 |     prime_fib_iter(n).next()\n   |    \
    \ ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_fib(number: isize) -> bool\
    \ {\n        number == 1 || number == 2 || number % 3 == 0\n    }\n    if is_fib(n)\
    \ {\n        n\n    } else {\n        prime_fib(n - 1) + prime_fib(n - 2)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_axxq_qg.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    else if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3);\n    }\n    else {\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n    }\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp0jf8sdjt.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 { 1 }\n    else if n <\
    \ 3 { 1 }\n    else if n % 2 == 0 || n % 3 == 0 { prime_fib(n - 1) + prime_fib(n\
    \ - 2) }\n    else { prime_fib(n - 3) + prime_fib(n - 2) }\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2v5k71ip.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut x = 1;\n    let mut y = 1;\n\
    \    let mut f = 1;\n    while x < n {\n        if y < x {\n            f += y;\n\
    \        }\n        if x < n {\n            f += x;\n        }\n        x += 1;\n\
    \        y += 1;\n    }\n    f\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2085vn7d.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib(&mut self) {\n        let\
    \ mut prime = 2 * self.m + 1;\n        self.m = self.m % prime;\n        prime\n\
    \    }\n\n    if n < 2 {\n        return 1;\n    }\n    fn primes(&mut self) {\n\
    \        let mut prime = 2usize;\n        for _ in 0..n + 2 {\n            while\
    \ prime < self.m+1 {\n                if self.prime_check(prime) {\n         \
    \           self.primes[prime as usize] = true;\n                    self.m =\
    \ self.m % prime;\n                    break;\n                }\n           \
    \     prime += 1;\n            }\n        }\n    }\n    if n == 1 {\n        return\
    \ 2;\n    }\n    if n == 2 {\n        return 3;\n    }\n    if n > 2 {\n     \
    \   primes().nth(n - 2).unwrap()\n    }\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: `self` parameter is only allowed in associated functions\n  -->\
    \ /tmp/tmple84yv_9.rs:13:12\n   |\n13 |     fn fib(&mut self) {\n   |        \
    \    ^^^^^^^^^ not semantically valid as function parameter\n   |\n   = note:\
    \ associated functions are those in `impl` or `trait` definitions\n\nerror: `self`\
    \ parameter is only allowed in associated functions\n  --> /tmp/tmple84yv_9.rs:22:15\n\
    \   |\n22 |     fn primes(&mut self) {\n   |               ^^^^^^^^^ not semantically\
    \ valid as function parameter\n   |\n   = note: associated functions are those\
    \ in `impl` or `trait` definitions\n\nerror[E0434]: can't capture dynamic environment\
    \ in a fn item\n  --> /tmp/tmple84yv_9.rs:24:21\n   |\n24 |         for _ in 0..n\
    \ + 2 {\n   |                     ^\n   |\n   = help: use the `|| { ... }` closure\
    \ form instead\n\nerror[E0061]: this function takes 1 argument but 0 arguments\
    \ were supplied\n  --> /tmp/tmple84yv_9.rs:42:9\n   |\n42 |         primes().nth(n\
    \ - 2).unwrap()\n   |         ^^^^^^-- supplied 0 arguments\n   |         |\n\
    \   |         expected 1 argument\n   |\nnote: function defined here\n  --> /tmp/tmple84yv_9.rs:22:8\n\
    \   |\n22 |     fn primes(&mut self) {\n   |        ^^^^^^ ---------\n\nerror[E0599]:\
    \ no method named `nth` found for unit type `()` in the current scope\n  --> /tmp/tmple84yv_9.rs:42:18\n\
    \   |\n42 |         primes().nth(n - 2).unwrap()\n   |                  ^^^ method\
    \ not found in `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmple84yv_9.rs:16:9\n\
    \   |\n13 |     fn fib(&mut self) {\n   |                       - help: try adding\
    \ a return type: `-> i32`\n...\n16 |         prime\n   |         ^^^^^ expected\
    \ `()`, found integer\n\nerror: aborting due to 6 previous errors\n\nSome errors\
    \ have detailed explanations: E0061, E0308, E0434, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // O(n log(n))\n    assert!(n > 3);\n\
    \n    let mut a = 1;\n    let mut b = 1;\n    while b * 2 <= n {\n        let\
    \ c = b * 2;\n        // check if c is a prime\n        let mut i = 1;\n     \
    \   let mut j = n - 1;\n        while j * i <= n {\n            if n % i == 0\
    \ {\n                return i + 1;\n            }\n            i += 1;\n     \
    \       j -= 1;\n        }\n        b = c;\n    }\n    return b + 1;\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n > 3', /tmp/tmp4wpfr2ly.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    for i\
    \ in 1..n+1 {\n        let n = fib.last_mut().unwrap();\n        if *n % 2 ==\
    \ 0 {\n            *n = *n + 1;\n        } else {\n            *n = *n * 3 + *(fib.last_mut().unwrap()-1);\n\
    \        }\n        fib.push(*n);\n    }\n    fib.iter().take_while(|&x| x < n).last()\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0369]: cannot subtract `{integer}` from `&mut {integer}`\n  -->\
    \ /tmp/tmpax44h2ff.rs:19:52\n   |\n19 |             *n = *n * 3 + *(fib.last_mut().unwrap()-1);\n\
    \   |                             -----------------------^- {integer}\n   |  \
    \                           |\n   |                             &mut {integer}\n\
    \   |\nhelp: `-` can be used on `{integer}`, you can dereference `fib.last_mut().unwrap()`\n\
    \   |\n19 |             *n = *n * 3 + *(*fib.last_mut().unwrap()-1);\n   |   \
    \                          +\n\nerror[E0599]: no method named `push` found for\
    \ array `[{integer}; 2]` in the current scope\n  --> /tmp/tmpax44h2ff.rs:21:13\n\
    \   |\n21 |         fib.push(*n);\n   |             ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpax44h2ff.rs:23:36\n   |\n\
    23 |     fib.iter().take_while(|&x| x < n).last()\n   |                      \
    \              ^\n   |                                    |\n   |            \
    \                        expected reference, found `isize`\n   |             \
    \                       help: consider borrowing here: `&n`\n   |\n   = note:\
    \ expected reference `&_`\n                   found type `isize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpax44h2ff.rs:23:5\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                           ----- expected `isize` because\
    \ of return type\n...\n23 |     fib.iter().take_while(|&x| x < n).last()\n   |\
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n\
    \   |\n   = note: expected type `isize`\n              found enum `Option<&{integer}>`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0369, E0599.\nFor more information about an error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n<2 || n==2 || n==3 {\n      \
    \  return n;\n    }\n    let mut sum = 0;\n    for i in 2..(n-1)/2 {\n       \
    \ if n%i == 0 {\n            sum += i;\n            sum += n%i;\n        }\n \
    \   }\n    sum\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9qrnkv1u.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut a = 1;\n    let mut b = 2;\n    loop {\n        let c = a +\
    \ b;\n        if c <= n {\n            return c;\n        }\n        a = b;\n\
    \        b = c;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqmr1ut3z.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut nth_prime: isize = 1;\n \
    \   let mut nth_prime_plus_1: isize = 2;\n    for i in 2..n {\n        if i %\
    \ 2 == 0 {\n            if nth_prime % 2 == 0 {\n                nth_prime +=\
    \ 1;\n            } else {\n                nth_prime -= 1;\n            }\n \
    \       } else {\n            if nth_prime_plus_1 % 2 == 0 {\n               \
    \ nth_prime_plus_1 += 1;\n            } else {\n                nth_prime_plus_1\
    \ -= 1;\n            }\n        }\n    }\n    nth_prime\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwrdo23nd.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    loop {\n        if b > n {\n            break;\n        }\n        let c\
    \ = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n \
    \   let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `13`', /tmp/tmpj9fxzyj4.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 3;\n    }\n    prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpidi4ly4e.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 || n == 2 {\n        return\
    \ 1;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n    }\n\n    let mut a = prime_fib(n - 1);\n    let mut b = prime_fib(n\
    \ - 2);\n\n    while a < b {\n        (a, b) = (b, a + b);\n    }\n\n    a\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpchnfsbga.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 2 {\n        return 1;\n\
    \    }\n    \n    let mut fib: Vec<_> = vec![0, 1];\n    \n    for i in 2..n {\n\
    \        let a = fib[fib.len() - 1];\n        let b = fib[fib.len() - 2];\n  \
    \      fib.push(a + b);\n    }\n    \n    fib\n    .iter()\n    .filter(|x| x.is_prime())\n\
    \    .find(|x| x == n)\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `is_prime` found for reference `&&{integer}`\
    \ in the current scope\n  --> /tmp/tmp3vxnkiyw.rs:27:19\n   |\n27 |     .filter(|x|\
    \ x.is_prime())\n   |                   ^^^^^^^^ method not found in `&&{integer}`\n\
    \nerror[E0277]: can't compare `&&{integer}` with `isize`\n  --> /tmp/tmp3vxnkiyw.rs:28:17\n\
    \   |\n28 |     .find(|x| x == n)\n   |                 ^^ no implementation for\
    \ `&&{integer} == isize`\n   |\n   = help: the trait `PartialEq<isize>` is not\
    \ implemented for `&&{integer}`\n   = help: the following other types implement\
    \ trait `PartialEq<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp3vxnkiyw.rs:25:5\n   |\n12 |   fn prime_fib(n: isize) -> isize {\n \
    \  |                             ----- expected `isize` because of return type\n\
    ...\n25 | /     fib\n26 | |     .iter()\n27 | |     .filter(|x| x.is_prime())\n\
    28 | |     .find(|x| x == n)\n   | |_____________________^ expected `isize`, found\
    \ enum `Option`\n   |\n   = note: expected type `isize`\n              found enum\
    \ `Option<&{integer}>`\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 {\n        n\n    } else\
    \ {\n        let mut a = 3, b = 1, c = 2;\n        loop {\n            assert!(c\
    \ <= n);\n            if n % c == 0 {\n                let t = (a * b) % c;\n\
    \                if t == 1 {\n                    return a;\n                }\
    \ else {\n                    a = b;\n                    b = t;\n           \
    \     }\n            } else {\n                let t = (b * b) % c;\n        \
    \        a = b;\n                b = c;\n                c = t;\n            }\n\
    \        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \  --> /tmp/tmpb__4l0g9.rs:16:22\n   |\n16 |         let mut a = 3, b = 1, c =\
    \ 2;\n   |                      ^ expected one of `.`, `;`, `?`, `else`, or an\
    \ operator\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check(n: isize) -> bool {\n  \
    \      if n < 2 {\n            return true;\n        }\n        if n == 2 {\n\
    \            return true;\n        }\n        if n % 2 == 0 {\n            return\
    \ false;\n        }\n        for &mut i in\n            (0..i).filter(|&i| i %\
    \ n == 0 || prime_fib(n - 2 * i).is_ok())\n        {\n            return false;\n\
    \        }\n        return true;\n    }\n\n    fn count_primes(n: isize) -> isize\
    \ {\n        fn count_primes(n: isize) -> isize {\n            if n < 2 {\n  \
    \              return 0;\n            }\n            if n == 2 {\n           \
    \     return 1;\n            }\n            if n % 2 == 0 {\n                return\
    \ 0;\n            }\n            if prime_fib(n - 1).is_ok() {\n             \
    \   return 1 + count_primes(n - 1);\n            }\n            return count_primes(n\
    \ - 1);\n        }\n\n        count_primes(n)\n    }\n\n    count_primes(n)\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmpcpeq3omo.rs:24:17\n\
    \   |\n24 |             (0..i).filter(|&i| i % n == 0 || prime_fib(n - 2 * i).is_ok())\n\
    \   |                 ^ help: a local variable with a similar name exists: `n`\n\
    \nerror[E0599]: no method named `is_ok` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpcpeq3omo.rs:24:67\n   |\n24 |             (0..i).filter(|&i|\
    \ i % n == 0 || prime_fib(n - 2 * i).is_ok())\n   |                          \
    \                                         ^^^^^ method not found in `isize`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpcpeq3omo.rs:23:13\n   |\n23 |  \
    \       for &mut i in\n   |             ^^^^^^\n   |             |\n   |     \
    \        expected `isize`, found `&mut _`\n   |             help: you can probably\
    \ remove the explicit borrow: `i`\n24 |             (0..i).filter(|&i| i % n ==\
    \ 0 || prime_fib(n - 2 * i).is_ok())\n   |             --------------------------------------------------------------\
    \ this expression has type `Option<isize>`\n   |\n   = note:           expected\
    \ type `isize`\n           found mutable reference `&mut _`\n\nerror[E0599]: no\
    \ method named `is_ok` found for type `isize` in the current scope\n  --> /tmp/tmpcpeq3omo.rs:42:33\n\
    \   |\n42 |             if prime_fib(n - 1).is_ok() {\n   |                  \
    \               ^^^^^ method not found in `isize`\n\nerror: aborting due to 4\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0425, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n\n  \
    \  }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    return prime_fib(n - 1) + prime_fib(n - 3)\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9yakp1ja.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 2;\n    loop {\n    \
    \    if isprime(&mut i) && is_fib(&mut i) && is_prime(&mut i) {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `isprime` in this scope\n  --> /tmp/tmpv1ask7s1.rs:15:12\n\
    \   |\n15 |         if isprime(&mut i) && is_fib(&mut i) && is_prime(&mut i) {\n\
    \   |            ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ function `is_fib` in this scope\n  --> /tmp/tmpv1ask7s1.rs:15:31\n   |\n15 |\
    \         if isprime(&mut i) && is_fib(&mut i) && is_prime(&mut i) {\n   |   \
    \                            ^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `is_prime` in this scope\n  --> /tmp/tmpv1ask7s1.rs:15:49\n  \
    \ |\n15 |         if isprime(&mut i) && is_fib(&mut i) && is_prime(&mut i) {\n\
    \   |                                                 ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 2;\n    while i <= n\
    \ {\n        let a = i;\n        let b = i + 1;\n        if a == b {\n       \
    \     break;\n        } else if a < b {\n            i += 1;\n        } else {\n\
    \            i -= 1;\n        }\n    }\n    i - 1\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpsknysy5s.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // base cases\n    if n == 0 || n\
    \ == 1 {\n        return n;\n    }\n\n    // check for small numbers\n    if n\
    \ < 2 {\n        return n;\n    }\n\n    // check for even numbers\n    if n %\
    \ 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n\n   \
    \ // check if number is prime\n    if primes[n].contains_key(&n) {\n        return\
    \ primes[n].get(&n);\n    }\n\n    // if not prime then it's equal to n!\n   \
    \ let mut fib: Vec<isize> = vec![n];\n    fib.push(1);\n\n    // find the next\
    \ number\n    for i in 2..n {\n        let prev = fib[fib.len() - 1];\n      \
    \  fib.push(prev + prev);\n    }\n\n    // save prime number\n    primes[n].insert(n);\n\
    \    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `primes` in this scope\n  --> /tmp/tmpkeziv9s5.rs:29:8\n\
    \   |\n29 |     if primes[n].contains_key(&n) {\n   |        ^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `primes` in this scope\n  -->\
    \ /tmp/tmpkeziv9s5.rs:30:16\n   |\n30 |         return primes[n].get(&n);\n  \
    \ |                ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `primes` in this scope\n  --> /tmp/tmpkeziv9s5.rs:44:5\n   |\n44 |   \
    \  primes[n].insert(n);\n   |     ^^^^^^ not found in this scope\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpkeziv9s5.rs:45:5\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                           ----- expected `isize` because\
    \ of return type\n...\n45 |     fib\n   |     ^^^ expected `isize`, found struct\
    \ `Vec`\n   |\n   = note: expected type `isize`\n            found struct `Vec<isize>`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    fn is_prime(p: isize) -> bool {\n        let mut i = 2isize;\n   \
    \     while i < p {\n            if i % p == 0 {\n                return false;\n\
    \            }\n            i += p;\n        }\n        return true;\n    }\n\
    \    fn sieve(p: isize) -> Vec<isize> {\n        if p == 1 {\n            return\
    \ vec![];\n        }\n        let mut i = 1isize;\n        let mut primes = vec![];\n\
    \        while i < p {\n            if is_prime(i) {\n                primes.push(i);\n\
    \                i += p;\n            }\n            i += p;\n        }\n    \
    \    return primes;\n    }\n    let primes = sieve(n - 1);\n    let a = primes[n\
    \ - 2];\n    let b = primes[n - 1];\n    let mut i = 0;\n    while i < n {\n \
    \       if a == b {\n            return primes[i];\n        }\n        i += 1;\n\
    \        if i > n - 1 {\n            break;\n        }\n        a = b;\n     \
    \   b = primes[i];\n    }\n    return b;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpsioc5zze.rs:42:13\n\
    \   |\n42 |     let a = primes[n - 2];\n   |             ^^^^^^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpsioc5zze.rs:43:13\n   |\n43 |     let b =\
    \ primes[n - 1];\n   |             ^^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpsioc5zze.rs:47:20\n   |\n47 |            \
    \ return primes[i];\n   |                    ^^^^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpsioc5zze.rs:54:13\n   |\n54 |         b =\
    \ primes[i];\n   |             ^^^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n >= 1);\n\n    if n == 1\
    \ {\n        return 2;\n    }\n\n    if n == 2 {\n        return 3;\n    }\n\n\
    \    if n % 3 == 0 {\n        return 5;\n    }\n\n    if n % 5 == 0 {\n      \
    \  return 13;\n    }\n\n    if n % 7 == 0 {\n        return 89;\n    }\n\n   \
    \ prime_fib(n - 1).iter().find(|&a| a > 0).unwrap()\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp03a2ossv.rs:35:22\n   |\n35 |     prime_fib(n - 1).iter().find(|&a|\
    \ a > 0).unwrap()\n   |                      ^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1 = n;\n    let mut n2 =\
    \ n - 1;\n\n    while n1 != 0 {\n        if n2 % n1 != 0 {\n            n1 +=\
    \ 1;\n        }\n        n2 -= 1;\n    }\n\n    n2\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 2 {\n        return 3;\n\
    \    }\n\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n    }\n\n    let mut primes = vec![1, 2];\n    let mut prime_number = 2;\n\
    \n    while prime_number <= n {\n        if primes.iter().any(|&x| x == prime_number)\
    \ {\n            break;\n        }\n\n        if n % prime_number == 0 {\n   \
    \         primes.push(prime_number);\n        }\n\n        prime_number += 2;\n\
    \    }\n\n    primes[primes.len() - 1]\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp0qzs5sa3.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n % 2 == 0 {\n        return prime_fib(n + 2);\n    }\n\n    if\
    \ n % 3 == 0 {\n        return prime_fib(n + 3);\n    }\n\n    let mut i = 4 *\
    \ (n - 3) + 2;\n\n    // If i is even, it's prime\n    while i % 2 == 0 {\n  \
    \      i += 2;\n    }\n\n    // If i is odd, it's NOT prime\n    i += 1;\n\n \
    \   return i;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmphz0lrk6o.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    let mut a = 1;\n    let mut b = 1;\n    while b < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpepa8hvsn.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // First we check if n is even then\
    \ we check whether n is divisible by 2\n    // or 3 then we check whether n is\
    \ divisible by 5 or 7\n    if n % 2 == 0 {\n        if n % 3 == 0 {\n        \
    \    if n % 7 == 0 {\n                return n;\n            }\n            return\
    \ 5;\n        }\n        return 3;\n    }\n    if n % 5 == 0 {\n        if n %\
    \ 7 == 0 {\n            return n;\n        }\n        return 7;\n    }\n    //\
    \ If n is divisible by 2 then it is prime\n    return 2;\n}\n\nfn main() {\n \
    \   let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp7ciq84r_.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // we already know that n is less\
    \ than 8\n    let mut a: isize = 2;\n    let mut b: isize = 3;\n    let mut c:\
    \ isize = 1;\n\n    while b * c < n {\n        let mut temp_a = a;\n        let\
    \ mut temp_b = b;\n        let mut temp_c = c;\n\n        if temp_b > temp_c *\
    \ 2 {\n            temp_b -= temp_c;\n            temp_c = temp_b + temp_c;\n\
    \        }\n\n        a = temp_a;\n        b = temp_b;\n        c = temp_c;\n\
    \    }\n\n    // return n-th number that is a Fibonacci number and it's also prime.\n\
    \    (n * c) as isize\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpzn1pigm3.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 { 1 } else { prime_fib(n\
    \ - 1) + prime_fib(n - 2) }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprpt3uf79.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 0);\n\n    if n <= 1\
    \ {\n        return n;\n    }\n\n    if n % 2 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n    }\n\n    if n % 3 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n    }\n\n    if n % 5 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n    }\n\n    if n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 7) - 6;\n    }\n\n\
    \    if n % 9 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 9) - 6;\n    }\n\n    if n % 11 == 0 {\n        return prime_fib(n - 1) +\
    \ prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) +\
    \ prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) - 6;\n    }\n\n    if\
    \ n % 13 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7) + prime_fib(n - 8) + prime_fib(n - 11) - 6;\n    }\n\n    if n % 17 ==\
    \ 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) +\
    \ prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) +\
    \ prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n - 12) - 6;\n    }\n\n    if\
    \ n % 19 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n - 10) + prime_fib(n\
    \ - 13) - 6;\n    }\n\n    if n % 21 == 0 {\n        return prime_fib(n - 1) +\
    \ prime_fib(\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmppklmbiqs.rs:71:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n55 |     if n % 21 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n56 |         return\
    \ prime_fib(n - 1) + prime_fib(\n57 | }\n   | - ...as it matches this but it has\
    \ different indentation\n...\n71 | }\n   |   ^\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmppklmbiqs.rs:56:44\n   |\n12 | fn prime_fib(n: isize) -> isize\
    \ {\n   |                                 - closing delimiter possibly meant for\
    \ this\n...\n56 |         return prime_fib(n - 1) + prime_fib(\n   |         \
    \                                   ^ unclosed delimiter\n57 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0061]: this function takes 1 argument but 0 arguments\
    \ were supplied\n  --> /tmp/tmppklmbiqs.rs:56:35\n   |\n56 |           return\
    \ prime_fib(n - 1) + prime_fib(\n   |  ___________________________________^^^^^^^^^-\n\
    \   | |                                   |\n   | |                          \
    \         expected 1 argument\n57 | | }\n   | |_- supplied 0 arguments\n   |\n\
    note: function defined here\n  --> /tmp/tmppklmbiqs.rs:12:4\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |    ^^^^^^^^^ --------\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmppklmbiqs.rs:12:27\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |    ---------              ^^^^^ expected `isize`, found `()`\n   |    |\n\
    \   |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0061, E0308.\nFor more information about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return 1;\n\
    \    }\n\n    if n % 2 == 0 {\n        return 2;\n    }\n\n    let mut m = 3;\
    \ // m = sqrt(n)\n    while m > 2 {\n        if n % m == 0 {\n            return\
    \ m;\n        }\n\n        m += 1;\n    }\n\n    n + 1\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpt5bj1gru.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 {\n        return n;\n\
    \    }\n\n    let mut product = 2;\n    let mut fib_sum = 1;\n    while fib_sum\
    \ + product <= n {\n        fib_sum += product;\n        product += 1;\n    }\n\
    \n    while fib_sum - product > 0 {\n        product -= 1;\n        fib_sum -=\
    \ product;\n    }\n\n    if n%product == 0 {\n        return fib_sum;\n    } else\
    \ {\n        return n;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpo_m3mlj3.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut p = 3;\n    let mut r = 1;\n\
    \n    while p < n {\n        if n % p == 0 {\n            r += p;\n        }\n\
    \n        p++;\n    }\n\n    r\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmp7itisnwl.rs:21:10\n\
    \   |\n21 |         p++;\n   |          ^^ not a valid postfix operator\n   |\n\
    help: use `+= 1` instead\n   |\n21 |         { let tmp = p; p += 1; tmp };\n \
    \  |         +++++++++++  ~~~~~~~~~~~~~~~\n21 -         p++;\n21 +         p +=\
    \ 1;\n   | \n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = 0;\n    let mut\
    \ b: isize = 1;\n    while b < n {\n        if a < b {\n            a += b;\n\
    \        } else {\n            b += a;\n        }\n    }\n    a\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpwfqn2iyq.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n    if n < 3 {\n        return prime_fib(n - 1) + 1;\n    }\n    if n\
    \ < 6 {\n        return prime_fib(n - 2) + 1;\n    }\n    if n % 2 == 0 {\n  \
    \      return prime_fib(n - 3) + prime_fib(n - 2);\n    }\n    if n % 3 == 0 {\n\
    \        return prime_fib(n - 5) + prime_fib(n - 4);\n    }\n    if n % 5 == 0\
    \ {\n        return prime_fib(n - 7) + prime_fib(n - 6);\n    }\n    if n % 7\
    \ == 0 {\n        return prime_fib(n - 9) + prime_fib(n - 8);\n    }\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1ijzuglf.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n: usize = n as usize;\n\
    \    if n == 1 || n == 2 {\n        return 1;\n    }\n\n    for p in primes()\
    \ {\n        if n % p == 0 {\n            n = n / p;\n            return p;\n\
    \        }\n    }\n\n    // TODO: return -1 or error if n not a prime\n    n\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `primes` in this scope\n  --> /tmp/tmpth_693tf.rs:18:14\n\
    \   |\n18 |     for p in primes() {\n   |              ^^^^^^ not found in this\
    \ scope\n\nerror[E0277]: cannot mod `usize` by `isize`\n  --> /tmp/tmpth_693tf.rs:19:14\n\
    \   |\n19 |         if n % p == 0 {\n   |              ^ no implementation for\
    \ `usize % isize`\n   |\n   = help: the trait `Rem<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Rem<Rhs>`:\n\
    \             <&'a f32 as Rem<f32>>\n             <&'a f64 as Rem<f64>>\n    \
    \         <&'a i128 as Rem<i128>>\n             <&'a i16 as Rem<i16>>\n      \
    \       <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n          \
    \   <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n           and\
    \ 54 others\n\nerror[E0277]: cannot divide `usize` by `isize`\n  --> /tmp/tmpth_693tf.rs:20:19\n\
    \   |\n20 |             n = n / p;\n   |                   ^ no implementation\
    \ for `usize / isize`\n   |\n   = help: the trait `Div<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpth_693tf.rs:26:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n26 |     n\n   |     ^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n26 |     n.try_into().unwrap()\n\
    \   |      ++++++++++++++++++++\n\nerror: aborting due to 4 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 0);\n    assert!(n *\
    \ 2 <= ::std::isize::MAX);\n    if n == 1 {\n        return 2;\n    }\n    if\
    \ n == 2 {\n        return 3;\n    }\n    if n == 3 {\n        return 5;\n   \
    \ }\n\n    let mut n = n - 2;\n    let mut f = 0;\n    let mut i = 0;\n    while\
    \ i <= n {\n        let f = f + i;\n        i = i + 1;\n    }\n\n    f\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `13`', /tmp/tmpwoyv19kc.rs:41:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // prime number from 2 to n\n   \
    \ for num in 2..n {\n        if !prime_checker(num) {\n            return num;\n\
    \        }\n    }\n    // n is larger than the fibonacci number\n    -1\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime_checker` in this scope\n  -->\
    \ /tmp/tmp9fekd8jm.rs:15:13\n   |\n15 |         if !prime_checker(num) {\n   |\
    \             ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn fib(n: isize) -> isize {\n   \
    \     if n < 2 {\n            return 1;\n        }\n        fib(n - 1) + fib(n\
    \ - 2)\n    }\n    fib(n).sqrt()\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `sqrt` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpfpqritni.rs:19:12\n   |\n19 |     fib(n).sqrt()\n   | \
    \           ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n\n    let mut f1 = prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n    let mut f2 = prime_fib(n - 2);\n\n    for _ in\
    \ 0..n {\n        let f1 = f1 + f2;\n        let f2 = f1 - f2;\n    }\n\n    return\
    \ f1;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpl1egehb5.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f = 0isize;\n    let mut\
    \ n = 1isize;\n    let mut fib = 1isize;\n\n    while fib < n {\n        if n\
    \ % fib == 0 {\n            if f+1 < n {\n                fib += 1;\n        \
    \        f += 1;\n            } else {\n                n += 1;\n            }\n\
    \        } else {\n            fib += 1;\n            f += 1;\n        }\n   \
    \ }\n\n    n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpuoisnx4p.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1usize;\n    let mut\
    \ f2 = 2usize;\n\n    while f2 < n {\n        f1 += f2;\n        f2 += f1;\n \
    \   }\n\n    return f2\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxicqie2m.rs:16:16\n   |\n\
    16 |     while f2 < n {\n   |                ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n16 |     while f2 < n.try_into().unwrap() {\n   | \
    \                ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpxicqie2m.rs:21:12\n   |\n12 | fn prime_fib(n: isize) -> isize {\n  \
    \ |                           ----- expected `isize` because of return type\n\
    ...\n21 |     return f2\n   |            ^^ expected `isize`, found `usize`\n\
    \   |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n21 |     return f2.try_into().unwrap()\n   |      \
    \        ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n < 2 {\n        true\n   \
    \     | _ => n,\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpsvf2itdv.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..=n).filter(|&x| is_prime(x)).nth(0)\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpd57_sg1n.rs:13:25\n\
    \   |\n13 |     (1..=n).filter(|&x| is_prime(x)).nth(0)\n   |                \
    \         ^^^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpd57_sg1n.rs:13:5\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |                           ----- expected `isize` because of return type\n\
    13 |     (1..=n).filter(|&x| is_prime(x)).nth(0)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n\
    \              found enum `Option<isize>`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n    }\n\n    return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpe5wuwehr.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // fibonacci sequence: 0, 1, 1, 2,\
    \ 3, 5, 8, 13, 21, 34, 55...\n    if n < 2 {\n        return n\n    }\n    else\
    \ if n == 2 {\n        return 1;\n    }\n    else {\n        let mut fib = 1\n\
    \            + prime_fib(n - 2)\n            + prime_fib(n - 1)\n            +\
    \ 1;\n\n        if fib > n {\n            fib = n;\n        }\n\n        return\
    \ fib;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmnkqz7tz.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // return fib_nth_prime(n);\n   \
    \ prime_fib_2(n)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime_fib_2` in this scope\n  --> /tmp/tmpkl53jvdf.rs:14:5\n\
    \   |\n14 |     prime_fib_2(n)\n   |     ^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (0..n).rev().next().unwrap()\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpwcfe2xjd.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    loop {\n        if n % 5 == 0 {\n\
    \            n += 2;\n        }\n        else {\n            return n;\n     \
    \   }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpi4wbo2jk.rs:15:13\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |             n += 2;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_n = 0;\n    let mut prime\
    \ = true;\n    for i in 0..n {\n        if prime {\n            fib_n += 1;\n\
    \            if fib_n == i {\n                prime = false;\n            }\n\
    \        } else {\n            fib_n += 2;\n        }\n    }\n    fib_n\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpds7_mp_v.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        0\n    } else\
    \ if n < 13 {\n        1\n    } else {\n        let mut c = 1;\n        let mut\
    \ b = 0;\n        for _ in 0..(n-2) {\n            c += b;\n            b %= c;\n\
    \        }\n        if b == 0 {\n            c\n        } else {\n           \
    \ c+b\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpyu7pcret.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut ret = 0;\n    let mut p1\
    \ = 1;\n    let mut p2 = 1;\n    for i in 1..n {\n        if i % 2 == 0 {\n  \
    \          ret = p2;\n            p1 = p2;\n            p2 = ret += p1;\n    \
    \    }\n        else {\n            p2 = p1 + p2;\n        }\n    }\n    ret\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp929qqjrc.rs:20:18\n   |\n\
    15 |     let mut p2 = 1;\n   |                  - expected due to this value\n\
    ...\n20 |             p2 = ret += p1;\n   |                  ^^^^^^^^^ expected\
    \ integer, found `()`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n\
    \        if n <= 2 {\n            return true;\n        }\n        // check for\
    \ odd divisors\n        if n % 2 == 0 {\n            return false;\n        }\n\
    \        // check all odd divisors up to sqrt(n)\n        for i in 3..(n * n -\
    \ 1) as isize {\n            if n % i == 0 {\n                return false;\n\
    \            }\n        }\n        // if there are odd divisors, they are prime\n\
    \        return true;\n    }\n\n    // check if n is a Fibonacci number\n    if\
    \ is_prime(n) {\n        return n;\n    }\n    // check if n is prime.\n    for\
    \ i in 2..n {\n        if is_prime(i) {\n            return i;\n        }\n  \
    \  }\n    // if it is not prime.\n    return 0;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpdh_p6eh3.rs:47:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n == 2 || n == 3 || n ==\
    \ 5);\n    // primes up to sqrt(5^2)\n    const MAX_INT = isize::MAX;\n    let\
    \ mut primes = vec![];\n    for &n in &primes {\n        if n >= MAX_INT {\n \
    \           break;\n        }\n        let mut i = 1;\n        while i <= n {\n\
    \            if n % i == 0 {\n                break;\n            }\n        \
    \    i += 1;\n        }\n        if i == n {\n            primes.push(i);\n  \
    \      }\n    }\n    primes[primes.len()-1]\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: missing type for `const` item\n  --> /tmp/tmp1a07td7y.rs:15:11\n\
    \   |\n15 |     const MAX_INT = isize::MAX;\n   |           ^^^^^^^ help: provide\
    \ a type for the constant: `MAX_INT: isize`\n\nerror: aborting due to previous\
    \ error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 { 1 }\n    else\
    \ if n % 2 == 0 {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    } else {\n\
    \        prime_fib(n / 2) + prime_fib(3 * n / 2)\n    }\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpr_52k194.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 {\n        return n;\n \
    \   }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    let mut i = 2;\n    while i <= n {\n        let tmp = prime_fib(i);\n\
    \        if tmp == 2 {\n            return i;\n        }\n        i += tmp;\n\
    \    }\n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_vdo_lc7.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 {\n        return n;\n\
    \    }\n    let mut i = 2;\n    let mut j = 2;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            break;\n        }\n        i += j;\n        j += i;\n\
    \    }\n    return i;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprz2eatjb.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_n = n;\n    let mut sum\
    \ = 0;\n\n    while fib_n > 2 {\n        sum += fib_n & 1;\n        fib_n = fib_n\
    \ >> 1;\n    }\n\n    if fib_n == 2 {\n        return 2;\n    }\n\n    if fib_n\
    \ == 1 {\n        return 1;\n    }\n\n    fib_n\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwun8ukol.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 { return 2 }\n    if n ==\
    \ 2 { return 3 }\n    if n == 3 { return 5 }\n    let mut f = 2;\n    while f\
    \ < n {\n        let mut f2 = f;\n        while f2 * f < n {\n            f2 +=\
    \ 1;\n        }\n        if f2 != f1 {\n            return f2;\n        }\n  \
    \      f += 2;\n    }\n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `f1` in this scope\n  --> /tmp/tmp962e4d5k.rs:22:18\n\
    \   |\n22 |         if f2 != f1 {\n   |                  ^^ help: a local variable\
    \ with a similar name exists: `f`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    return prime_fib(n - 3) + prime_fib(n - 5);\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmppezmb4df.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 0;\n    let mut f2 =\
    \ 1;\n\n    for _ in 0..n {\n        let mut next = f1 + f2;\n        f1 = f2;\n\
    \        f2 = next;\n    }\n\n    next\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `next` in this scope\n  --> /tmp/tmpb2cku059.rs:22:5\n\
    \   |\n22 |     next\n   |     ^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 { 1 }\n    else if n %\
    \ 2 == 0 { prime_fib(n - 1) + prime_fib(n - 2) }\n    else {\n        let mut\
    \ n_prime = (n - 1) / 2;\n        while n_prime < n {\n            n_prime +=\
    \ 2;\n        }\n        n_prime * prime_fib(n_prime - 1) + prime_fib(n_prime)\n\
    \    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1g7gtapc.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n<2 { return 1 }\n    let mut\
    \ i = 0;\n    let mut j = 1;\n    while i*j<n {\n        i += 1;\n        j +=\
    \ 1;\n    }\n    while i*j>n {\n        j -= 1;\n    }\n    return (i*j) - n;\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp04kjbqtt.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut cur_n = 1usize;\n    for i in 2..=n {\n        if prime(i)\
    \ {\n            if cur_n != i {\n                cur_n = i;\n            }\n\
    \        }\n    }\n    cur_n\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime` in this scope\n  --> /tmp/tmpy8xwdu7c.rs:18:12\n\
    \   |\n18 |         if prime(i) {\n   |            ^^^^^ not found in this scope\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpy8xwdu7c.rs:19:25\n   |\n19 |\
    \             if cur_n != i {\n   |                         ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n19 |             if cur_n != i.try_into().unwrap()\
    \ {\n   |                          ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpy8xwdu7c.rs:20:25\n   |\n16 |     let mut cur_n = 1usize;\n\
    \   |                     ------ expected due to this value\n...\n20 |       \
    \          cur_n = i;\n   |                         ^ expected `usize`, found\
    \ `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy8xwdu7c.rs:24:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n24 |     cur_n\n   |   \
    \  ^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n24 |     cur_n.try_into().unwrap()\n\
    \   |          ++++++++++++++++++++\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::mem;\n\n    let mut a: Vec<isize>\
    \ = vec![0; n + 1];\n    a[0] = 2;\n    a[1] = 3;\n    for i in 2..n+1 {\n   \
    \     let k = a[i - 1];\n        a[i] = k + k;\n    }\n    a[a.len() - 1]\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "warning: unused import: `std::mem`\n  --> /tmp/tmp2qjk3_so.rs:13:9\n  \
    \ |\n13 |     use std::mem;\n   |         ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]`\
    \ on by default\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2qjk3_so.rs:15:37\n\
    \   |\n15 |     let mut a: Vec<isize> = vec![0; n + 1];\n   |                \
    \                     ^^^^^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n15 |     let mut a: Vec<isize> = vec![0; (n + 1).try_into().unwrap()];\n\
    \   |                                     +     +++++++++++++++++++++\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmp2qjk3_so.rs:19:17\n\
    \   |\n19 |         let k = a[i - 1];\n   |                 ^^^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmp2qjk3_so.rs:20:9\n   |\n20 |         a[i]\
    \ = k + k;\n   |         ^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\
    \nerror: aborting due to 3 previous errors; 1 warning emitted\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_cache: Vec<isize> = (0..(n\
    \ + 1)).collect();\n    fib_cache[0] = fib_cache[1] = 1;\n    for i in 2..n {\n\
    \        fib_cache[i] = fib_cache[i - 1] + fib_cache[i - 2];\n    }\n    fib_cache[n]\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpmnidqz2_.rs:14:20\n   |\n\
    14 |     fib_cache[0] = fib_cache[1] = 1;\n   |     ------------   ^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `()`\n   |     |\n   |     expected due to the type\
    \ of this binding\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n\
    \  --> /tmp/tmpmnidqz2_.rs:16:9\n   |\n16 |         fib_cache[i] = fib_cache[i\
    \ - 1] + fib_cache[i - 2];\n   |         ^^^^^^^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpmnidqz2_.rs:16:24\n   |\n16 |         fib_cache[i]\
    \ = fib_cache[i - 1] + fib_cache[i - 2];\n   |                        ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[isize]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpmnidqz2_.rs:16:43\n\
    \   |\n16 |         fib_cache[i] = fib_cache[i - 1] + fib_cache[i - 2];\n   |\
    \                                           ^^^^^^^^^^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmpmnidqz2_.rs:18:5\n   |\n18 |     fib_cache[n]\n\
    \   |     ^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the t"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    n <= 0 ? 0 : (2i32 + prime_fib(n\
    \ - 1) as isize) / n as isize\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `0`\n\
    \  --> /tmp/tmpy_c83gjd.rs:13:14\n   |\n13 |     n <= 0 ? 0 : (2i32 + prime_fib(n\
    \ - 1) as isize) / n as isize\n   |              ^ expected one of `.`, `;`, `?`,\
    \ `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n1: isize = n - 2;\n    let\
    \ mut n2: isize = n - 1;\n    while n2 < 0 {\n        n2 = n1 + 1;\n        n1\
    \ += 1;\n    }\n\n    while n2 < n1 {\n        n2 += 1;\n    }\n    n2\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpl7o9psr2.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return 1;\n\
    \    }\n\n    let mut current = 1;\n    let mut next = 2;\n\n    let mut result\
    \ = current;\n\n    for i in 2..n {\n        if result % i == 0 {\n          \
    \  current = next;\n            next = (current + next) % i;\n        }\n\n  \
    \      result = next;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpk40uwrom.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // https://en.wikipedia.org/wiki/Primality_test\n\
    \    if n <= 2 {\n        return 2;\n    }\n    \n    let mut sum_of_fib_nums:\
    \ isize = 0;\n    \n    if n % 2 == 0 {\n        sum_of_fib_nums += prime_fib(n\
    \ / 2);\n    }\n    \n    for i in 1..n {\n        if n % i == 0 {\n         \
    \   sum_of_fib_nums += i;\n            break;\n        }\n    }\n    \n    sum_of_fib_nums\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpbgs6mwlu.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // The Fermat factorization method\
    \ does not work for some inputs. \n    if n < 2 {\n        return n;\n    }\n\
    \    // We are using n to calculate the value of Fermat's number, and n-1 \n \
    \   // to calculate the value of Fermat's n+1th Fibonacci number.\n    // The\
    \ value of Fermat number is n-1 / n. \n    // The value of Fermat's n+1th Fibonacci\
    \ number is (n - 1) / n. \n    let fibonacci_number = n / 2;\n    let fibonacci_number1\
    \ = fibonacci_number - 1;\n    // The value of Fermat's number modulo n is 1.\n\
    \    // So Fermat's n+1th Fibonacci number modulo n is fibonacci_number1.\n  \
    \  // The value of Fermat's number modulo n is 1.\n    // The value of Fermat's\
    \ n+1th Fibonacci number modulo n is fibonacci_number1.\n    if n == fibonacci_number\
    \ {\n        return fibonacci_number1;\n    }\n    // The value of Fermat's n+1th\
    \ Fibonacci number modulo n is fibonacci_number.\n    // The value of Fermat's\
    \ number modulo n is n.\n    // The value of Fermat's n+1th Fibonacci number modulo\
    \ n is fibonacci_number1.\n    if n == fibonacci_number1 {\n        return fibonacci_number;\n\
    \    }\n    // The value of Fermat's number modulo n is 1.\n    // So Fermat's\
    \ n+1th Fibonacci number modulo n is fibonacci_number.\n    // The value of Fermat's\
    \ number modulo n is n.\n    // The value of Fermat's n+1th Fibonacci number modulo\
    \ n is fibonacci_number.\n    if n == fibonacci_number + 1 {\n        return fibonacci_number;\n\
    \    }\n    // The value of Fermat's number modulo n is 1.\n    // So Fermat's\
    \ n+1th Fibonacci number modulo n is fibonacci_number1.\n    // The value of Fermat's\
    \ number modulo n is n.\n    // The value of Fermat's n+1th Fibonacci number modulo\
    \ n is fibonacci_number1.\n    if n == fibonacci_number1 + 1 {\n        return\
    \ fibonacci_number1;\n    }\n    // The value of Fermat's \n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0317]: `if` may be missing an `else` clause\n  --> /tmp/tmpz8pl0_0s.rs:47:5\n\
    \   |\n12 |   fn prime_fib(n: isize) -> isize {\n   |                        \
    \     ----- expected `isize` because of this return type\n...\n47 | /     if n\
    \ == fibonacci_number1 + 1 {\n48 | |         return fibonacci_number1;\n49 | |\
    \     }\n   | |_____^ expected `isize`, found `()`\n   |\n   = note: `if` expressions\
    \ without `else` evaluate to `()`\n   = help: consider adding an `else` block\
    \ that evaluates to the expected type\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0317`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    (1..n).filter(|&i| i % 2 != 0).fold(1,\
    \ |x, y| x + y)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpc_xtfdin.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for _ in 0..n {\n        let mut temp = a + b;\n        a = b;\n        b\
    \ = temp;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmp9ua3enbh.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 1 {\n        return 2;\n\
    \    }\n    if n == 2 {\n        return 3;\n    }\n    let mut f1 = 1;\n    let\
    \ mut f2 = 1;\n    let mut f3 = 1;\n    while n > 2 {\n        let mut tmp = f1;\n\
    \        f1 = f2;\n        f2 = f3;\n        f3 = tmp;\n        n -= 1;\n    }\n\
    \    f3\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmpx244l5oz.rs:23:13\n\
    \   |\n23 |         let mut tmp = f1;\n   |             ----^^^\n   |        \
    \     |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `n`\n  -->\
    \ /tmp/tmpx244l5oz.rs:27:9\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |\
    \              - help: consider making this binding mutable: `mut n`\n...\n27\
    \ |         n -= 1;\n   |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn prime(n: isize) -> bool {\n  \
    \      let mut f = true;\n        for i in 1..n {\n            if !f{\n      \
    \          if n % i == 0 {\n                    f = false;\n                }\
    \ else {\n                    break;\n                }\n            }\n     \
    \   }\n        f\n    }\n\n    let mut f = true;\n    if n <= 2 {\n        return\
    \ 2;\n    }\n    for i in 2..n {\n        if prime(i) {\n            f = false;\n\
    \        }\n    }\n    if f {\n        return n + 1;\n    } else {\n        return\
    \ n + 2;\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmp4beyda4l.rs:46:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut fibs = [0, 1];\n    for i in 1..n-1 {\n        fibs.push(fibs[i-1]\
    \ + fibs[i-2]);\n    }\n    if fibs[n-1] % 2 == 0 {\n        fibs[n-1] += 1;\n\
    \    }\n    fibs[n]\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpapxikh0b.rs:18:14\n   |\n18 |         fibs.push(fibs[i-1]\
    \ + fibs[i-2]);\n   |              ^^^^ method not found in `[{integer}; 2]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpapxikh0b.rs:18:19\n\
    \   |\n18 |         fibs.push(fibs[i-1] + fibs[i-2]);\n   |                  \
    \ ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   =\
    \ help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n \
    \  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpapxikh0b.rs:18:31\n\
    \   |\n18 |         fibs.push(fibs[i-1] + fibs[i-2]);\n   |                  \
    \             ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpapxikh0b.rs:20:8\n\
    \   |\n20 |     if fibs[n-1] % 2 == 0 {\n   |        ^^^^^^^^^ slice indices are\
    \ of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpapxikh0b.rs:21:9\n   |\n21 |         fibs[n-1]\
    \ += 1;\n   |         ^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: requi"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    let mut fib = [1, 2];\n    for i in 2..=n {\n        fib.push(fib[fib.len()\
    \ - 1] + fib[fib.len() - 2]);\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmp0eh7uuz8.rs:18:13\n   |\n18 |         fib.push(fib[fib.len()\
    \ - 1] + fib[fib.len() - 2]);\n   |             ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0eh7uuz8.rs:20:5\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n20 |     fib\n   |     ^^^ expected `isize`,\
    \ found array `[{integer}; 2]`\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while b < n {\n        (a, b) = (b, a + b);\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3uteuhh2.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // base case\n    if n == 1 {\n \
    \       return 1;\n    }\n\n    // Recursion \n    if n % 2 == 0 {\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n    }\n    else {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3);\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwzdkyxgv.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut primes_upto: Vec<_> = (1..n).filter(|&x|\
    \ x <= 57).collect();\n    primes_upto.push(primes_upto[n - 1] + primes_upto[n\
    \ - 2]);\n    primes_upto.push(primes_upto[n - 3] + primes_upto[n - 4]);\n   \
    \ primes_upto.push(primes_upto[n - 5] + primes_upto[n - 6]);\n    primes_upto.push(primes_upto[n\
    \ - 7] + primes_upto[n - 8]);\n\n    primes_upto.remove(&primes_upto.nth(n - 1));\n\
    \    primes_upto.remove(&primes_upto.nth(n - 2));\n    primes_upto.remove(&primes_upto.nth(n\
    \ - 3));\n    primes_upto.remove(&primes_upto.nth(n - 4));\n    primes_upto.remove(&primes_upto.nth(n\
    \ - 5));\n    primes_upto.remove(&primes_upto.nth(n - 6));\n    primes_upto.remove(&primes_upto.nth(n\
    \ - 7));\n\n    primes_upto\n        .iter()\n        .take_while(|&x| x <= 57)\n\
    \        .sum()\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmptnqsxcbh.rs:14:22\n\
    \   |\n14 |     primes_upto.push(primes_upto[n - 1] + primes_upto[n - 2]);\n \
    \  |                      ^^^^^^^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmptnqsxcbh.rs:14:43\n   |\n14 |     primes_upto.push(primes_upto[n\
    \ - 1] + primes_upto[n - 2]);\n   |                                          \
    \ ^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmptnqsxcbh.rs:15:22\n\
    \   |\n15 |     primes_upto.push(primes_upto[n - 3] + primes_upto[n - 4]);\n \
    \  |                      ^^^^^^^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be\
    \ indexed by `isize`\n  --> /tmp/tmptnqsxcbh.rs:15:43\n   |\n15 |     primes_upto.push(primes_upto[n\
    \ - 3] + primes_upto[n - 4]);\n   |                                          \
    \ ^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n;\n\
    \    }\n    let mut f1 = 1;\n    let mut f2 = 1;\n    for i in 2..=n {\n     \
    \   let mut p = i;\n        while p*p <= f1 {\n            p += 1;\n        }\n\
    \        f1 = f2;\n        f2 = p;\n    }\n    (n + f1 as isize)\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpsz_kkwdq.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut fib_cache = [0, 1];\n\n    for i in 2..=n {\n        if fib_cache[i]\
    \ == 0 {\n            fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n      \
    \  }\n    }\n\n    fib_cache[n]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmpwd__tkj7.rs:20:12\n   |\n20 |         if fib_cache[i] == 0 {\n   | \
    \           ^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpwd__tkj7.rs:21:13\n\
    \   |\n21 |             fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n   |\
    \             ^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpwd__tkj7.rs:21:28\n\
    \   |\n21 |             fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n   |\
    \                            ^^^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpwd__tkj7.rs:21:45\n   |\n21 |         \
    \    fib_cache[i] = fib_cache[i-2] + fib_cache[i-1];\n   |                   \
    \                          ^^^^^^^^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integ"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i1 = 1;\n    let mut i2 =\
    \ 1;\n\n    while i1 < n {\n        if i1 == n || i2 == n {\n            return\
    \ i1;\n        }\n\n        let mut c = i2;\n        i2 = i1;\n        i1 = i1\
    \ + c;\n    }\n\n    i1\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpnyzti_rk.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _ in 0..n {\n       \
    \ let c = a + b;\n        a = b;\n        b = c;\n    }\n    a\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3ejy4ncd.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    // The Fibonacci sequence is defined as:\n    // F(n) = (n - 1) +\
    \ F(n - 2)\n    //\n    // Where F(0) = 0 and F(1) = 1\n    // F(k) = (k + F(k\
    \ - 2)) / F(k - 1)\n    //\n    // Therefore we first need to find a F(n) which\
    \ we can do by considering\n    // F(n-1)\n    let mut f1 = prime_fib(n - 1);\n\
    \n    // We now need to find F(n-2) for this we need to take the first term\n\
    \    // of F(n-1) and find F(k) for it using linear recursion.\n    let mut f2\
    \ = f1;\n\n    for _ in 0..(n-2){\n        // Calculate F(k) for F(n-1) using\
    \ linear recursion\n        let mut fk = f1;\n\n        for _ in 0..(n-2){\n \
    \           // Calculate F(k) for F(k-1) using linear recursion\n            fk\
    \ = fk + f2;\n        }\n\n        f1 = f2;\n        f2 = fk;\n    }\n\n    //\
    \ We now need to find F(n-1) for this we need to take the first term\n    // of\
    \ F(n-2) and find F(k) for it using linear recursion.\n    let mut f3 = f2;\n\n\
    \    for _ in 0..(n-1){\n        // Calculate F(k) for F(n-2) using linear recursion\n\
    \        let mut fk = f2;\n\n        for _ in 0..(n-1){\n            // Calculate\
    \ F(k) for F(k-2) using linear recursion\n            fk = fk + f3;\n        }\n\
    \n        f2 = f3;\n        f3 = fk;\n    }\n\n    // We have found F(n) for the\
    \ above Fibonacci sequence.\n    return f3;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprc_cteg3.rs:67:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut a = 1;\n    let mut b = 1;\n    loop {\n        let c = a +\
    \ b;\n        if prime(c) {\n            return c;\n        }\n        let r =\
    \ a - b;\n        a = b;\n        b = r;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime` in this scope\n  --> /tmp/tmpbnmabn2k.rs:20:12\n\
    \   |\n20 |         if prime(c) {\n   |            ^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 { return 1 }\n    if n\
    \ == 2 { return 1 }\n    prime_fib(n + 1).min(n - 1).unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `unwrap` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpn837go24.rs:15:33\n   |\n15 |     prime_fib(n + 1).min(n\
    \ - 1).unwrap()\n   |                                 ^^^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: [usize; 2] = [0, 2];\n\
    \    for i in 1..n {\n        fib[0] = fib[1]\n            + ((2 * fib[0]) % &primes)\n\
    \            + i;\n        fib[1] = (fib[0] + fib[1]) % &primes;\n    }\n    fib[0]\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `primes` in this scope\n  --> /tmp/tmp0ic894j5.rs:16:32\n\
    \   |\n16 |             + ((2 * fib[0]) % &primes)\n   |                     \
    \           ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `primes` in this scope\n  --> /tmp/tmp0ic894j5.rs:18:39\n   |\n18 |        \
    \ fib[1] = (fib[0] + fib[1]) % &primes;\n   |                                \
    \       ^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp0ic894j5.rs:17:15\n   |\n17 |             + i;\n   |               ^\
    \ expected `usize`, found `isize`\n\nerror[E0277]: cannot add `isize` to `usize`\n\
    \  --> /tmp/tmp0ic894j5.rs:17:13\n   |\n17 |             + i;\n   |          \
    \   ^ no implementation for `usize + isize`\n   |\n   = help: the trait `Add<isize>`\
    \ is not implemented for `usize`\n   = help: the following other types implement\
    \ trait `Add<Rhs>`:\n             <&'a f32 as Add<f32>>\n             <&'a f64\
    \ as Add<f64>>\n             <&'a i128 as Add<i128>>\n             <&'a i16 as\
    \ Add<i16>>\n             <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n\
    \             <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n  \
    \         and 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0ic894j5.rs:20:5\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \ ----- expected `isize` because of return type\n...\n20 |     fib[0]\n   |  \
    \   ^^^^^^ expected `isize`, found `usize`\n\nerror: aborting due to 5 previous\
    \ errors\n\nSome errors have detailed explanations: E0277, E0308, E0425.\nFor\
    \ more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // n is 0 or a negative integer\n\
    \    if n <= 0 {\n        return 0;\n    }\n    // n is 1\n    if n == 1 {\n \
    \       return 2;\n    }\n    // n is 2\n    if n == 2 {\n        return 3;\n\
    \    }\n\n    // calculate f(n) and f(n+2)\n    let f: isize = (n - 1) / 2 + 1;\n\
    \n    // f(n) is Fibonacci number and\n    // f(n+2) is a prime number\n    return\
    \ if n % f == 0 {\n        f + n\n    } else {\n        f + prime_fib(n - f)\n\
    \    };\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmp9c4i0s2g.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 { return n; }\n\
    \    prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp6mazj14j.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut m = 1;\n    let mut sum =\
    \ 0;\n    for i in 0..n {\n        sum += 2 * i;\n        if ((sum + m) % i ==\
    \ 0) {\n            m = i + 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpr7seaejh.rs:17:13\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while b.is_odd() {\n        let next = b.add(&a).unwrap();\n        if next\
    \ < n {\n            a = b;\n            b = next;\n        } else {\n       \
    \     return next;\n        }\n    }\n    b.add(&a).unwrap()\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `is_odd` found for type `{integer}` in the\
    \ current scope\n  --> /tmp/tmptg13ye9u.rs:15:13\n   |\n15 |     while b.is_odd()\
    \ {\n   |             ^^^^^^ method not found in `{integer}`\n\nerror[E0689]:\
    \ can't call method `add` on ambiguous numeric type `{integer}`\n  --> /tmp/tmptg13ye9u.rs:16:22\n\
    \   |\n16 |         let next = b.add(&a).unwrap();\n   |                     \
    \ ^^^\n   |\nhelp: you must specify a type for this binding, like `i32`\n   |\n\
    14 |     let mut b: i32 = 1;\n   |         ~~~~~~~~~~\n\nerror[E0599]: no method\
    \ named `add` found for type `isize` in the current scope\n   --> /tmp/tmptg13ye9u.rs:24:7\n\
    \    |\n24  |     b.add(&a).unwrap()\n    |       ^^^ method not found in `isize`\n\
    \    |\n    = help: items from traits can only be used if the trait is in scope\n\
    help: the following trait is implemented but not in scope; perhaps add a `use`\
    \ for it:\n    |\n1   | use std::ops::Add;\n    |\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0599, E0689.\nFor\
    \ more information about an error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut f: isize = n;\n    fn check(n: isize) -> isize {\n        if\
    \ n == 0 || n == 1 {\n            return 1;\n        }\n        if n % 2 == 0\
    \ {\n            return check(n + 1) + check(n + 2);\n        }\n        if n\
    \ % 3 == 0 {\n            return check(n + 1) + check(n + 2) + check(n + 3);\n\
    \        }\n        if n % 5 == 0 {\n            return check(n + 1) + check(n\
    \ + 2) + check(n + 3) + check(n + 5);\n        }\n        return n;\n    }\n \
    \   f = check(f);\n    f + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpbv5wnkvt.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        n\n    } else\
    \ {\n        if n % 2 == 0 {\n            prime_fib(n - 1) + prime_fib(n - 2)\n\
    \        } else {\n            prime_fib(n - 1) + prime_fib(n) // fibonacci of\
    \ n\n        }\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpgw5t08o4.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // return if n is 0 or 1\n    if\
    \ n < 2 {\n        return n;\n    }\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n\
    \    }\n    return a;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpnzsge4i3.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // calculate all fibonacci numbers\n\
    \    let mut fibs: Vec<i32> = (0..n).map(|i| {\n        fib(i as i32).unwrap()\n\
    \    }).collect();\n\n    // filter out primes\n    fibs = fibs.iter().filter(|&i|\
    \ i % 2 != 0).collect();\n\n    // take the fibonacci number which is closest\
    \ to n\n    fibs.iter().position(|&i| i <= n).unwrap()\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `fib` in this scope\n  --> /tmp/tmpj_e7fte8.rs:15:9\n\
    \   |\n15 |         fib(i as i32).unwrap()\n   |         ^^^ not found in this\
    \ scope\n\nerror[E0277]: a value of type `Vec<i32>` cannot be built from an iterator\
    \ over elements of type `&i32`\n    --> /tmp/tmpj_e7fte8.rs:19:48\n     |\n19\
    \   |     fibs = fibs.iter().filter(|&i| i % 2 != 0).collect();\n     |      \
    \                                          ^^^^^^^ value of type `Vec<i32>` cannot\
    \ be built from `std::iter::Iterator<Item=&i32>`\n     |\n     = help: the trait\
    \ `FromIterator<&i32>` is not implemented for `Vec<i32>`\n     = help: the trait\
    \ `FromIterator<T>` is implemented for `Vec<T>`\nnote: required by a bound in\
    \ `collect`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpj_e7fte8.rs:22:36\n\
    \   |\n22 |     fibs.iter().position(|&i| i <= n).unwrap()\n   |             \
    \                       ^ expected `i32`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to an `i32` and panic if the converted value doesn't fit\n   |\n\
    22 |     fibs.iter().position(|&i| i <= n.try_into().unwrap()).unwrap()\n   |\
    \                                     ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpj_e7fte8.rs:22:5\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |                           ----- expected `isize` because of return\
    \ type\n...\n22 |     fibs.iter().position(|&i| i <= n).unwrap()\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n22 |     fibs.iter().position(|&i|\
    \ i <= n).unwrap().try_into().unwrap()\n   |                                 \
    \              ++++++++++++++++++++\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = n;\n\
    \    while i < j {\n        if j % 2 == 0 {\n            i += 1;\n        }\n\
    \        j -= 1;\n    }\n    j\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpkrgze0so.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        0\n    } else\
    \ {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpf31183ia.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn prime_fib_inner(n: isize) -> isize\
    \ {\n        if n == 1 {\n            return 2;\n        } else if n % 2 == 0\
    \ {\n            return prime_fib_inner(n-1) + 1;\n        } else {\n        \
    \    return prime_fib_inner(n-2) + 1;\n        }\n    }\n\n    return prime_fib_inner(n);\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpuqm6eobm.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 3 {\n        return 3;\n\
    \    }\n\n    let mut n1 = 1, n2 = 2;\n    while n1 < n {\n        if n2 % n1\
    \ == 0 {\n            return n2;\n        }\n        n1 += 1;\n        n2 += 1;\n\
    \    }\n    return n2;\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `,`\n\
    \  --> /tmp/tmpmytx3cd6.rs:17:19\n   |\n17 |     let mut n1 = 1, n2 = 2;\n   |\
    \                   ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\n\
    error: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fibs = Vec::new();\n    fibs.push(1);\n\
    \    fibs.push(1);\n    for &i in 2..n {\n        fibs.push(fibs[i - 1] + fibs[i\
    \ - 2]);\n    }\n    fibs[0]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp17ilfk6o.rs:16:9\n   |\n\
    16 |     for &i in 2..n {\n   |         ^^    ---- this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `i`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // The algorithm is taken from http://rosettacode.org/wiki/Prime_numbers#Rust\n\
    \    // with slight modifications\n    if n <= 2 {\n        return n\n    }\n\
    \    if n % 2 != 0 {\n        return prime_fib(n + 1)\n    }\n    prime_fib(n\
    \ + 3) / 2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp5zhsyyve.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check_fib(&mut self) -> bool {\n\
    \        if n < self.0 {\n            self.0 = n + 1\n        }\n        let mut\
    \ n = self.0.clone();\n        let mut i = self.1;\n        while i < n {\n  \
    \          self.0 = i;\n            if self.1 < i {\n                self.1 =\
    \ self.1;\n            }\n            if n % i == 0 {\n                n = i as\
    \ isize;\n            } else {\n                i += 1;\n            }\n     \
    \   }\n        if n == self.0 {\n            return true;\n        }\n       \
    \ false\n    }\n\n    if check_fib() {\n        return n;\n    } else {\n    \
    \    0\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: `self` parameter is only allowed in associated functions\n  -->\
    \ /tmp/tmpqhcwdw27.rs:13:18\n   |\n13 |     fn check_fib(&mut self) -> bool {\n\
    \   |                  ^^^^^^^^^ not semantically valid as function parameter\n\
    \   |\n   = note: associated functions are those in `impl` or `trait` definitions\n\
    \nerror[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmpqhcwdw27.rs:14:12\n\
    \   |\n14 |         if n < self.0 {\n   |            ^\n   |\n   = help: use the\
    \ `|| { ... }` closure form instead\n\nerror[E0434]: can't capture dynamic environment\
    \ in a fn item\n  --> /tmp/tmpqhcwdw27.rs:15:22\n   |\n15 |             self.0\
    \ = n + 1\n   |                      ^\n   |\n   = help: use the `|| { ... }`\
    \ closure form instead\n\nerror[E0061]: this function takes 1 argument but 0 arguments\
    \ were supplied\n  --> /tmp/tmpqhcwdw27.rs:36:8\n   |\n36 |     if check_fib()\
    \ {\n   |        ^^^^^^^^^-- supplied 0 arguments\n   |        |\n   |       \
    \ expected 1 argument\n   |\nnote: function defined here\n  --> /tmp/tmpqhcwdw27.rs:13:8\n\
    \   |\n13 |     fn check_fib(&mut self) -> bool {\n   |        ^^^^^^^^^ ---------\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0061, E0434.\nFor more information about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 2;\n    let mut b = 3;\n\
    \    while b <= n {\n        if a * b > n {\n            break;\n        }\n \
    \       a = b;\n        b += a;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `2`', /tmp/tmpvowos1fz.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check(a: isize, acc: isize) ->\
    \ isize {\n        if a == 1 {\n            acc\n        } else {\n          \
    \  check(a * a, acc)\n        }\n    }\n\n    check(n, 2)\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to multiply with overflow', /tmp/tmp_e478pje.rs:17:19\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = vec![0, 1, 1, 2];\n\
    \    fib.push((&fib[..]).clone());\n    for i in 1..n {\n        let idx = fib[fib.len()\
    \ - i].len() - 1;\n        fib[idx] += fib[fib.len() - i - 2];\n    }\n    fib.pop();\n\
    \    fib[fib.len() - 1]\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpws7wtv3s.rs:14:14\n   |\n\
    14 |     fib.push((&fib[..]).clone());\n   |              ^^^^^^^^^^^^^^^^^^ expected\
    \ integer, found `&[{integer}]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpws7wtv3s.rs:16:35\n\
    \   |\n16 |         let idx = fib[fib.len() - i].len() - 1;\n   |            \
    \                       ^ expected `usize`, found `isize`\n\nerror[E0277]: cannot\
    \ subtract `isize` from `usize`\n  --> /tmp/tmpws7wtv3s.rs:16:33\n   |\n16 | \
    \        let idx = fib[fib.len() - i].len() - 1;\n   |                       \
    \          ^ no implementation for `usize - isize`\n   |\n   = help: the trait\
    \ `Sub<isize>` is not implemented for `usize`\n   = help: the following other\
    \ types implement trait `Sub<Rhs>`:\n             <&'a f32 as Sub<f32>>\n    \
    \         <&'a f64 as Sub<f64>>\n             <&'a i128 as Sub<i128>>\n      \
    \       <&'a i16 as Sub<i16>>\n             <&'a i32 as Sub<i32>>\n          \
    \   <&'a i64 as Sub<i64>>\n             <&'a i8 as Sub<i8>>\n             <&'a\
    \ isize as Sub<isize>>\n           and 48 others\n\nerror[E0689]: can't call method\
    \ `len` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpws7wtv3s.rs:16:38\n\
    \   |\n16 |         let idx = fib[fib.len() - i].len() - 1;\n   |            \
    \                          ^^^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpws7wtv3s.rs:17:37\n\
    \   |\n17 |         fib[idx] += fib[fib.len() - i - 2];\n   |                \
    \                     ^ expected `usize`, found `isize`\n\nerror[E0277]: cannot\
    \ subtract `isize` from `usize`\n  --> /tmp/tmpws7wtv3s.rs:17:35\n   |\n17 | \
    \        fib[idx] += fib[fib.len() - i - 2];\n   |                           \
    \        ^ no implementation for `usize - isize`\n   |\n   = help: the trait `Sub<isize>`\
    \ is not implemented for `usize`\n   = help: the following other types implement\
    \ trait `Sub<Rhs>`:\n             <&'a f32 as Sub<f32>>\n             <&'a f64\
    \ as Sub<f64>>\n             <&'a i128 as Sub<i128>>\n             <&'a i16 as\
    \ Sub<i16>>\n             <&'a i32 as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n\
    \             <&'a i8 as Sub<i8>>\n    "
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    while\
    \ (b * b <= n) {\n        (a, b) = (b, a + c);\n        (c, b) = (c, c - a);\n\
    \    }\n\n    if b > n {\n        return b;\n    }\n\n    let mut p = b;\n   \
    \ while p < n {\n        let q = p + (p / 2);\n        if q * q == p {\n     \
    \       return q;\n        }\n        p = q;\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpn33wr34o.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    debug_assert!((1..n).contains(|i|\
    \ i.is_prime_fast()));\n    fn isprime(n: isize) -> bool {\n        let mut i:\
    \ isize = 1;\n        loop {\n            if n % i == 0 {\n                return\
    \ false;\n            }\n            i += 1;\n            if i == n {\n      \
    \          return true;\n            }\n        }\n    }\n    if n == 0 {\n  \
    \      return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if n ==\
    \ 2 {\n        return 1;\n    }\n    \n    let mut i = 2;\n    loop {\n      \
    \  if isprime(i) {\n            return i;\n        }\n        i += 1;\n    }\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmp8zdkl_r3.rs:13:36\n\
    \   |\n13 |     debug_assert!((1..n).contains(|i| i.is_prime_fast()));\n   | \
    \                                   ^ consider giving this closure parameter a\
    \ type\n   |\n   = note: type must be known at this point\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1, 1];\n    let\
    \ mut prime = 0;\n    for i in 0..n {\n        fib[i] = fib[i] + fib[i - 1];\n\
    \        prime = fib[i] % i;\n    }\n    fib[n] = prime;\n    return fib[n]\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmp5byoebo_.rs:16:9\n   |\n16 |         fib[i] = fib[i] + fib[i - 1];\n\
    \   |         ^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp5byoebo_.rs:16:18\n\
    \   |\n16 |         fib[i] = fib[i] + fib[i - 1];\n   |                  ^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp5byoebo_.rs:16:27\n\
    \   |\n16 |         fib[i] = fib[i] + fib[i - 1];\n   |                      \
    \     ^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmp5byoebo_.rs:17:17\n\
    \   |\n17 |         prime = fib[i] % i;\n   |                 ^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>`\
    \ is not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmp5byoebo_.rs:19:5\n   |\n19 |     fib[n]\
    \ = prime;\n   |     ^^^^^^ slice ind"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    use std::cmp::Ordering;\n\n    const\
    \ N: usize = 1000;\n    fn fib_iter(a: isize, b: isize) -> isize {\n        if\
    \ b < 2 {\n            return b;\n        }\n        fib_iter(a+b, b-1)\n    }\n\
    \n    match n % 2 {\n        0 => fib_iter(N, 2),\n        1 => fib_iter(N, 1),\n\
    \        _ => fib_iter(N, fib_iter(N, 2)),\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "warning: unused import: `std::cmp::Ordering`\n  --> /tmp/tmpxlofwmia.rs:13:9\n\
    \   |\n13 |     use std::cmp::Ordering;\n   |         ^^^^^^^^^^^^^^^^^^\n   |\n\
    \   = note: `#[warn(unused_imports)]` on by default\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpxlofwmia.rs:24:23\n   |\n24 |         0 => fib_iter(N,\
    \ 2),\n   |                       ^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n24 |         0 => fib_iter(N.try_into().unwrap(), 2),\n   |     \
    \                   ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmpxlofwmia.rs:25:23\n   |\n25 |         1 => fib_iter(N, 1),\n   |\
    \                       ^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n25 |         1 => fib_iter(N.try_into().unwrap(), 1),\n   |           \
    \             ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxlofwmia.rs:26:23\n\
    \   |\n26 |         _ => fib_iter(N, fib_iter(N, 2)),\n   |                  \
    \     ^ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n26 |     \
    \    _ => fib_iter(N.try_into().unwrap(), fib_iter(N, 2)),\n   |             \
    \           ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxlofwmia.rs:26:35\n\
    \   |\n26 |         _ => fib_iter(N, fib_iter(N, 2)),\n   |                  \
    \                 ^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    26 |         _ => fib_iter(N, fib_iter(N.try_into().unwrap(), 2)),\n   |     \
    \                               ++++++++++++++++++++\n\nerror: aborting due to\
    \ 4 previous errors; 1 warning emitted\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn sum_primes(a: isize, i: isize)\
    \ -> isize {\n        if i <= 1 {\n            return i\n        }\n        let\
    \ mut j = a + i\n        for j in &mut [2..] {\n            if &j == i {\n   \
    \             break\n            }\n            let mut k = j + 1\n          \
    \  while k < j + i {\n                if &(k + i) == i {\n                   \
    \ return k\n                }\n                k += j\n            }\n       \
    \ }\n        j\n    }\n\n    let mut a: isize = n;\n    let mut i: isize = 2;\n\
    \    while sum_primes(a, i) > n {\n        a += i;\n        i += 1;\n    }\n \
    \   a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `for`\n  --> /tmp/tmpd0sabc4g.rs:17:26\n\
    \   |\n17 |         let mut j = a + i\n   |                          ^ help: add\
    \ `;` here\n18 |         for j in &mut [2..] {\n   |         --- unexpected token\n\
    \nerror: expected `;`, found keyword `while`\n  --> /tmp/tmpd0sabc4g.rs:22:30\n\
    \   |\n22 |             let mut k = j + 1\n   |                              ^\
    \ help: add `;` here\n23 |             while k < j + i {\n   |             -----\
    \ unexpected token\n\nerror[E0277]: can't compare `&&mut RangeFrom<{integer}>`\
    \ with `isize`\n  --> /tmp/tmpd0sabc4g.rs:19:19\n   |\n19 |             if &j\
    \ == i {\n   |                   ^^ no implementation for `&&mut RangeFrom<{integer}>\
    \ == isize`\n   |\n   = help: the trait `PartialEq<isize>` is not implemented\
    \ for `&&mut RangeFrom<{integer}>`\n   = help: the trait `PartialEq` is implemented\
    \ for `RangeFrom<Idx>`\n\nerror[E0369]: cannot add `{integer}` to `&mut RangeFrom<{integer}>`\n\
    \  --> /tmp/tmpd0sabc4g.rs:22:27\n   |\n22 |             let mut k = j + 1\n \
    \  |                         - ^ - {integer}\n   |                         |\n\
    \   |                         &mut RangeFrom<{integer}>\n\nerror[E0369]: cannot\
    \ add `isize` to `&mut RangeFrom<{integer}>`\n  --> /tmp/tmpd0sabc4g.rs:23:25\n\
    \   |\n23 |             while k < j + i {\n   |                       - ^ - isize\n\
    \   |                       |\n   |                       &mut RangeFrom<{integer}>\n\
    \nerror[E0277]: can't compare `&_` with `isize`\n  --> /tmp/tmpd0sabc4g.rs:24:29\n\
    \   |\n24 |                 if &(k + i) == i {\n   |                         \
    \    ^^ no implementation for `&_ == isize`\n   |\n   = help: the trait `PartialEq<isize>`\
    \ is not implemented for `&_`\n\nerror[E0277]: cannot add-assign `&mut RangeFrom<{integer}>`\
    \ to `isize`\n  --> /tmp/tmpd0sabc4g.rs:27:19\n   |\n27 |                 k +=\
    \ j\n   |                   ^^ no implementation for `isize += &mut RangeFrom<{integer}>`\n\
    \   |\n   = help: the trait `AddAssign<&mut RangeFrom<{integer}>>` is not implemented\
    \ for `isize`\n   = help: the following other types implement trait `AddAssign<Rh"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    let mut count = 0;\n    loop {\n        count += 1;\n        let mut c =\
    \ a;\n        a = b;\n        b = c;\n        if n % b == 0 { break; }\n    }\n\
    \n    if count == n { a } else { a }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpy7_59bw3.rs:21:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Initialize array `a` to store\
    \ first n-1 Fibonacci numbers\n    let mut a: [usize; n - 1] = init_fib_array();\n\
    \n    for i in 0..n - 1 {\n        // Compute nth Fibonacci number\n        let\
    \ fib: usize = a[i] - a[i] - a[i + 1];\n        // Update array `a`\n        a[i\
    \ + 1] = a[i];\n        // Store Fibonacci number in `a`\n        a[i] = fib;\n\
    \    }\n    // Store last Fibonacci number\n    a[i] = a[i];\n    // Return last\
    \ Fibonacci number\n    a[i]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0435]: attempt to use a non-constant value in a constant\n  -->\
    \ /tmp/tmphvz2kg55.rs:14:24\n   |\n12 | fn prime_fib(n: isize) -> isize {\n  \
    \ |              - this would need to be a `const`\n13 |     // Initialize array\
    \ `a` to store first n-1 Fibonacci numbers\n14 |     let mut a: [usize; n - 1]\
    \ = init_fib_array();\n   |                        ^\n\nerror[E0425]: cannot find\
    \ function `init_fib_array` in this scope\n  --> /tmp/tmphvz2kg55.rs:14:33\n \
    \  |\n14 |     let mut a: [usize; n - 1] = init_fib_array();\n   |           \
    \                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `i` in this scope\n  --> /tmp/tmphvz2kg55.rs:25:7\n   |\n\
    25 |     a[i] = a[i];\n   |       ^ help: a local variable with a similar name\
    \ exists: `a`\n\nerror[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmphvz2kg55.rs:25:14\n\
    \   |\n25 |     a[i] = a[i];\n   |              ^ help: a local variable with\
    \ a similar name exists: `a`\n\nerror[E0425]: cannot find value `i` in this scope\n\
    \  --> /tmp/tmphvz2kg55.rs:27:7\n   |\n27 |     a[i]\n   |       ^ help: a local\
    \ variable with a similar name exists: `a`\n\nerror: aborting due to 5 previous\
    \ errors\n\nSome errors have detailed explanations: E0425, E0435.\nFor more information\
    \ about an error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut x = 1;\n    let mut y = 2;\n    for _ in 0..n {\n       \
    \ let p = x + y;\n        x = y;\n        y = p;\n    }\n    x + 1\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmr4xn48k.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime = 1i32;\n    let mut\
    \ fib = 2i32;\n    for _ in 0..n {\n        let next = prime;\n        prime +=\
    \ fib;\n        fib = next;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp78ml0ft5.rs:20:5\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n20 |     fib\n   |     ^^^ expected `isize`,\
    \ found `i32`\n   |\nhelp: you can convert an `i32` to an `isize` and panic if\
    \ the converted value doesn't fit\n   |\n20 |     fib.try_into().unwrap()\n  \
    \ |        ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut cur = 1;\n    let mut ans\
    \ = 0;\n    while cur < n {\n        cur = cur + cur;\n        ans = ans + 1;\n\
    \    }\n    ans\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmphw9ikwcq.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut a = 1;\n    let mut b = 2;\n    while a < n {\n        let\
    \ tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n    if a < n {\n    \
    \    a\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate =\
    \ prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n\
    \    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5),\
    \ 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n\
    \    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp76_uhiof.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    let mut sum = 0;\n    while a < n {\n        let t = a + b;\n        sum\
    \ += t;\n        a = b;\n        b = t;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpb7uv4hu3.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn next_fib(mut b: isize) -> isize\
    \ {\n        while b < 2 {\n            b += b + 1;\n        }\n        b\n  \
    \  }\n    fn prime_check(mut b: isize) -> bool {\n        b += b + 1;\n      \
    \  b < 2 || b > 100\n    }\n    let mut b: isize = next_fib(1);\n    while prime_check(b)\
    \ {\n        b = next_fib(b);\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `2`', /tmp/tmprl4r7oct.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n2 = n;\n    while n2 > 1\
    \ {\n        n2 = n2 + n2;\n    }\n    if n2 < 2 {\n        n2 = 2;\n    }\n \
    \   while n2 % 2 == 0 {\n        n2 = n2 - 2;\n    }\n    n2\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn g(max: usize, mut acc: usize)\
    \ -> usize {\n        if acc > max {\n            return acc;\n        }\n   \
    \     if acc % 3 == 0 || acc % 5 == 0 {\n            return g(max * 2, acc * 2);\n\
    \        }\n        g(max * 3, acc * 3)\n    }\n    g(n, 2)\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpinl_tjq5.rs:22:7\n   |\n\
    22 |     g(n, 2)\n   |       ^ expected `usize`, found `isize`\n   |\nhelp: you\
    \ can convert an `isize` to a `usize` and panic if the converted value doesn't\
    \ fit\n   |\n22 |     g(n.try_into().unwrap(), 2)\n   |        ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpinl_tjq5.rs:22:5\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n22 |     g(n, 2)\n   |     ^^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n22 |     g(n, 2).try_into().unwrap()\n\
    \   |            ++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    let mut\
    \ i = 1;\n    while fib[i] < n {\n        fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        i += 1;\n    }\n    fib[i]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpt1rgp8at.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ 1;\n    }\n\n    let mut nth_root = n;\n    let mut prime_flag = false;\n  \
    \  let mut a = 1;\n    let mut b = 1;\n\n    while !prime_flag {\n        nth_root\
    \ += 1;\n\n        if nth_root % 2 == 0:\n            continue;\n        }\n\n\
    \        if nth_root == 3 {\n            prime_flag = true;\n        } else {\n\
    \            a = b;\n            b = nth_root + b;\n        }\n    }\n\n    a\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: unexpected closing delimiter: `}`\n  --> /tmp/tmpmp5ly_q3.rs:38:1\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - this opening brace...\n...\n35 |     }\n   |     - ...matches this closing\
    \ brace\n...\n38 | }\n   | ^ unexpected closing delimiter\n\nerror: aborting due\
    \ to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // prime numbers are greater than\
    \ 2\n    if n < 2 {\n        return n;\n    }\n    // primes are less than or\
    \ equal to square root of n\n    let mut prime = n as isize;\n    for _ in 0..n\
    \ {\n        let mut i = 4;\n        while i*i <= n {\n            if n % i ==\
    \ 0 {\n                prime = i;\n                break;\n            }\n   \
    \         i += 1;\n        }\n        if i == n {\n            return prime;\n\
    \        }\n    }\n    // if we reach here, no prime is found\n    -1\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpht5lrnk7.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f1 = 1usize;\n    let mut\
    \ f2 = 1usize;\n\n    for i in 1..n {\n        let mut next = (f1 + f2) % 100;\n\
    \        if next == 0 {\n            break;\n        }\n        f1 = f2;\n   \
    \     f2 = next;\n    }\n    next\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `next` in this scope\n  --> /tmp/tmpjcvy3p5r.rs:24:5\n\
    \   |\n24 |     next\n   |     ^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return n\n \
    \   }\n    prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwt8kk1a7.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut sum = 0;\n    while a < n {\n        let c = a + b;\n        a =\
    \ b;\n        b = c;\n        sum += b;\n    }\n    if sum == n {\n        return\
    \ n\n    }\n    return a\n}\n\nfn main() {\n    let candidate = prime_fib;\n \
    \   assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_dmuk_ch.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    assert!(n > 1);\n    if n == 1 {\n\
    \        return 2;\n    }\n    let mut i = 3;\n    while i <= n {\n        if\
    \ i % 2 == 0 {\n            return i;\n        }\n        i += 4;\n    }\n   \
    \ i\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n > 1', /tmp/tmp2d2we0ml.rs:13:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1usize;\n    let mut\
    \ b = 2usize;\n    for _ in 0..n {\n        let mut c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgz53q5_y.rs:20:5\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |                           ----- expected\
    \ `isize` because of return type\n...\n20 |     b\n   |     ^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n20 |     b.try_into().unwrap()\n \
    \  |      ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // If n is prime then return it directly\n\
    \    if n == 1 {\n        return 1;\n    }\n    // If n is divisible by 2 then\
    \ return 2 directly\n    if n % 2 == 0 {\n        return 2;\n    }\n    // If\
    \ n is divisible by 3 then return 3 directly\n    if n % 3 == 0 {\n        return\
    \ 3;\n    }\n    // Divisible by 6 then return the sum of its factors\n    if\
    \ n % 6 == 0 {\n        let mut sum = 1;\n        for i in 2..n / 6 {\n      \
    \      if n % i == 0 {\n                sum += i;\n            }\n        }\n\
    \        return sum;\n    }\n    // Divisible by 5 then return the sum of its\
    \ factors\n    if n % 5 == 0 {\n        let mut sum = 1;\n        for i in 2..n\
    \ / 5 {\n            if n % i == 0 {\n                sum += i;\n            }\n\
    \        }\n        return sum;\n    }\n    // Divisible by 4 then return the\
    \ sum of its factors\n    if n % 4 == 0 {\n        let mut sum = 1;\n        for\
    \ i in 2..n / 4 {\n            if n % i == 0 {\n                sum += i;\n  \
    \          }\n        }\n        return sum;\n    }\n    // If n is not divisible\
    \ by any number then return the sum of its factors\n    let mut sum = 1;\n   \
    \ for i in 2..n / 2 {\n        if n % i == 0 {\n            sum += i;\n      \
    \  }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxq6myrf5.rs:67:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n\n    }\n\n    fn fib(n: isize) -> isize {\n        if n == 0 || n == 1 {\n\
    \            return n\n        }\n\n        let a = fib(n-1);\n        let b =\
    \ fib(n-2);\n\n        a + b\n    }\n\n    fib(n) as isize\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpslenvc_a.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib_max = n;\n    fib_max\
    \ += 1;\n\n    let mut fib1 = 1;\n    let mut fib2 = 1;\n\n    let mut prime:\
    \ usize = 0;\n\n    loop {\n        prime += 1;\n        if fib_max % prime ==\
    \ 0 {\n            break;\n        }\n        let mut new_fib1 = fib1;\n     \
    \   let mut new_fib2 = fib2;\n        let mut new_fib_max = fib_max;\n\n     \
    \   for i in 2..new_fib_max / 2 {\n            let mut new_fib3 = new_fib1 + new_fib2;\n\
    \            new_fib2 = new_fib1;\n            new_fib1 = new_fib3;\n        }\n\
    \n        let mut fib_new_max = new_fib_max;\n        if fib_new_max % prime ==\
    \ 0 {\n            fib_new_max += 1;\n        }\n\n        if fib_new_max < new_fib_max\
    \ {\n            break;\n        }\n\n        fib_max = fib_new_max;\n    }\n\n\
    \    fib2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptx7mmduv.rs:23:22\n   |\n\
    23 |         if fib_max % prime == 0 {\n   |                      ^^^^^ expected\
    \ `isize`, found `usize`\n\nerror[E0277]: cannot mod `isize` by `usize`\n  -->\
    \ /tmp/tmptx7mmduv.rs:23:20\n   |\n23 |         if fib_max % prime == 0 {\n  \
    \ |                    ^ no implementation for `isize % usize`\n   |\n   = help:\
    \ the trait `Rem<usize>` is not implemented for `isize`\n   = help: the following\
    \ other types implement trait `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n\
    \             <&'a f64 as Rem<f64>>\n             <&'a i128 as Rem<i128>>\n  \
    \           <&'a i16 as Rem<i16>>\n             <&'a i32 as Rem<i32>>\n      \
    \       <&'a i64 as Rem<i64>>\n             <&'a i8 as Rem<i8>>\n            \
    \ <&'a isize as Rem<isize>>\n           and 54 others\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmptx7mmduv.rs:37:26\n   |\n37 |         if fib_new_max %\
    \ prime == 0 {\n   |                          ^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot mod `isize` by `usize`\n  --> /tmp/tmptx7mmduv.rs:37:24\n\
    \   |\n37 |         if fib_new_max % prime == 0 {\n   |                      \
    \  ^ no implementation for `isize % usize`\n   |\n   = help: the trait `Rem<usize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n             <&'a f64\
    \ as Rem<f64>>\n             <&'a i128 as Rem<i128>>\n             <&'a i16 as\
    \ Rem<i16>>\n             <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n\
    \             <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n  \
    \         and 54 others\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    prime_fib_core(n - 1, prime_fib_core(n\
    \ - 2, n))\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `prime_fib_core` in this scope\n  -->\
    \ /tmp/tmp837vknjj.rs:13:5\n   |\n13 |     prime_fib_core(n - 1, prime_fib_core(n\
    \ - 2, n))\n   |     ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `prime_fib_core` in this scope\n  --> /tmp/tmp837vknjj.rs:13:27\n\
    \   |\n13 |     prime_fib_core(n - 1, prime_fib_core(n - 2, n))\n   |        \
    \                   ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // Use a lookup table to find the\
    \ nth Fibonacci number instead of recursion\n    // to avoid wasting stack space.\n\
    \    let mut fibs = [0, 1];\n    for i in 2..=n {\n        fibs.push(fibs[i -\
    \ 1] + fibs[i - 2]);\n    }\n\n    // Find the nth number by looking up fibs[n]\
    \ in the lookup table\n    fibs[n]\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpoy662cca.rs:17:14\n   |\n17 |         fibs.push(fibs[i\
    \ - 1] + fibs[i - 2]);\n   |              ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n \
    \ --> /tmp/tmpoy662cca.rs:17:19\n   |\n17 |         fibs.push(fibs[i - 1] + fibs[i\
    \ - 2]);\n   |                   ^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is\
    \ not implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot\
    \ be indexed by `isize`\n  --> /tmp/tmpoy662cca.rs:17:33\n   |\n17 |         fibs.push(fibs[i\
    \ - 1] + fibs[i - 2]);\n   |                                 ^^^^^^^^^^^ slice\
    \ indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait\
    \ `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the trait\
    \ `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because of\
    \ the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]:\
    \ the type `[{integer}]` cannot be indexed by `isize`\n  --> /tmp/tmpoy662cca.rs:21:5\n\
    \   |\n21 |     fibs[n]\n   |     ^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not\
    \ implemented for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<isize>` for `[{integer}]`\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 2;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n\n    if n % 4 == 1 {\n     \
    \   return prime_fib(n - 2) + 1;\n    }\n\n    let mut f1 = 1;\n    let mut f2\
    \ = 1;\n    let mut counter = 0;\n    let mut prime: isize = 2;\n\n    while counter\
    \ < n {\n        if f1 == f2 {\n            counter = counter + 1;\n        }\
    \ else {\n            if f1 > f2 {\n                f1 = f2 + 1;\n           \
    \ } else {\n                f2 = f1 + 1;\n            }\n        }\n\n       \
    \ if counter % 4 == 0 {\n            prime = prime;\n        } else {\n      \
    \      prime += 1;\n        }\n    }\n\n    prime\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpig2fkj08.rs:53:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a1 = 1;\n    let mut a2 =\
    \ 1;\n    let mut b = 2;\n    while b <= n {\n        if b == n {\n          \
    \  return b;\n        }\n        let mut c = a1;\n        a1 = a2;\n        a2\
    \ = b;\n        b = c * 2 + 1;\n    }\n    panic!(\"{} is not an Fibonacci number\"\
    , n);\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at '1 is not an Fibonacci number', /tmp/tmpe10q2_qs.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        0\n    } else\
    \ if n == 2 {\n        1\n    } else {\n        let mut fib = 1;\n        let\
    \ mut prime = 2;\n\n        while prime <= n {\n            if n % prime == 0\
    \ {\n                fib = fib(fib, prime);\n                prime += 2;\n   \
    \         } else {\n                prime += 1;\n            }\n        }\n\n\
    \        fib\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0618]: expected function, found `{integer}`\n  --> /tmp/tmpfqzpe3ax.rs:23:23\n\
    \   |\n18 |         let mut fib = 1;\n   |             ------- `fib` has type\
    \ `{integer}`\n...\n23 |                 fib = fib(fib, prime);\n   |        \
    \               ^^^------------\n   |                       |\n   |          \
    \             call expression requires function\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0618`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut num: isize = 0;\n    for\
    \ x in 2..(n + 1) {\n        if x % 2 == 0 {\n            num += 2;\n        }\n\
    \        else {\n            num += 1;\n        }\n        if num > n {\n    \
    \        break;\n        }\n    }\n    return num;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpdpb3jw8d.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n\
    \        n < 2 || n % 2 == 0 || n % 3 == 0\n    }\n    (0..n).fold(1, |res, x|\
    \ {\n        if is_prime(x) {\n            res + x\n        } else {\n       \
    \     res\n        }\n    })\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpdij2nte0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while b < n {\n        if n % b == 0 {\n            b += 1;\n        } else\
    \ {\n            a += 1;\n            b = 1;\n        }\n    }\n    a\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpez1zyio3.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut s = 1;\n    let mut fibonacci\
    \ = [1, 2, 3];\n    for i in 0..(n + 1) {\n        s += fibonacci[n - 1];\n  \
    \      fibonacci.push(fibonacci[n - 1] + fibonacci[n - 2]);\n    }\n    s\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n  -->\
    \ /tmp/tmphtzvwa4o.rs:16:14\n   |\n16 |         s += fibonacci[n - 1];\n   | \
    \             ^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror[E0599]: no method named `push` found for array `[{integer};\
    \ 3]` in the current scope\n  --> /tmp/tmphtzvwa4o.rs:17:19\n   |\n17 |      \
    \   fibonacci.push(fibonacci[n - 1] + fibonacci[n - 2]);\n   |               \
    \    ^^^^ method not found in `[{integer}; 3]`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmphtzvwa4o.rs:17:24\n   |\n17 |  \
    \       fibonacci.push(fibonacci[n - 1] + fibonacci[n - 2]);\n   |           \
    \             ^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmphtzvwa4o.rs:17:43\n   |\n17 |         fibonacci.push(fibonacci[n\
    \ - 1] + fibonacci[n - 2]);\n   |                                           ^^^^^^^^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n   = help: the\
    \ trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required because\
    \ of the requirements on the impl of `Index<isize>` for `[{integer}]`\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a: isize = 1;\n    let mut\
    \ b: isize = 1;\n\n    for _ in 0..n {\n        let c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `13`', /tmp/tmpnzvql423.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 || n % 2 == 0 {\n      \
    \  n\n    } else {\n        prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpm9czp_yx.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // the second variable is for the\
    \ number returned by the recursive function\n    // the third variable is for\
    \ the base case\n    if n == 0 || n == 1 {\n        return n;\n    }\n\n    //\
    \ we calculate the next Fibonacci number by adding previous two\n    // Fibonacci\
    \ numbers\n    let next_fib = fib(n) + fib(n + 2);\n\n    // if it is prime we\
    \ return it else we return the previous one\n    if next_fib % 2 == 0 {\n    \
    \    return next_fib;\n    } else {\n        return n - 1;\n    }\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `fib` in this scope\n  --> /tmp/tmpaxgz5hjb.rs:21:20\n\
    \   |\n21 |     let next_fib = fib(n) + fib(n + 2);\n   |                    ^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `fib` in this\
    \ scope\n  --> /tmp/tmpaxgz5hjb.rs:21:29\n   |\n21 |     let next_fib = fib(n)\
    \ + fib(n + 2);\n   |                             ^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime_numbers = vec![];\n\
    \n    // check if n is even or is prime\n    if n % 2 == 0 || is_prime(&n, prime_numbers)\
    \ {\n        return n;\n    }\n\n    // find largest multiple of 3 <= n\n    let\
    \ mut max_three_multiple: usize = (2 * n) / 2;\n    while max_three_multiple <\
    \ n {\n        max_three_multiple *= 3;\n    }\n\n    // find largest multiple\
    \ of 5 <= n\n    let mut max_five_multiple: usize = n / 5;\n    while max_five_multiple\
    \ < n {\n        max_five_multiple *= 5;\n    }\n\n    // now divide n by largest\
    \ five and largest three multiples\n    if max_five_multiple < n / 3 {\n     \
    \   max_five_multiple /= 3;\n    }\n\n    // find primes in these multiples (the\
    \ largest is n, so there is\n    // no need to test more multiples)\n    for i\
    \ in 2..(max_five_multiple + 1) {\n        if is_prime(&i, prime_numbers) {\n\
    \            continue;\n        }\n\n        // found a prime\n        return\
    \ i;\n    }\n\n    // couldn't find a prime\n    n\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdmzqih5i.rs:16:22\n\
    \   |\n16 |     if n % 2 == 0 || is_prime(&n, prime_numbers) {\n   |         \
    \             ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `is_prime` in this scope\n  --> /tmp/tmpdmzqih5i.rs:40:12\n   |\n40 |      \
    \   if is_prime(&i, prime_numbers) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdmzqih5i.rs:21:41\n \
    \  |\n21 |     let mut max_three_multiple: usize = (2 * n) / 2;\n   |        \
    \                         -----   ^^^^^^^^^^^ expected `usize`, found `isize`\n\
    \   |                                 |\n   |                                \
    \ expected due to this\n   |\nhelp: you can convert an `isize` to a `usize` and\
    \ panic if the converted value doesn't fit\n   |\n21 |     let mut max_three_multiple:\
    \ usize = ((2 * n) / 2).try_into().unwrap();\n   |                           \
    \              +           +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpdmzqih5i.rs:22:32\n   |\n22 |     while max_three_multiple < n\
    \ {\n   |                                ^ expected `usize`, found `isize`\n \
    \  |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n22 |     while max_three_multiple < n.try_into().unwrap()\
    \ {\n   |                                 ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpdmzqih5i.rs:27:40\n   |\n27 |     let mut max_five_multiple:\
    \ usize = n / 5;\n   |                                -----   ^^^^^ expected `usize`,\
    \ found `isize`\n   |                                |\n   |                 \
    \               expected due to this\n   |\nhelp: you can convert an `isize` to\
    \ a `usize` and panic if the converted value doesn't fit\n   |\n27 |     let mut\
    \ max_five_multiple: usize = (n / 5).try_into().unwrap();\n   |              \
    \                          +     +++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpdmzqih5i.rs:28:31\n   |\n28 |     while max_five_multiple\
    \ < n {\n   |                 "
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = vec![1, 1, 2];\n  \
    \  fib.iter().nth(n).unwrap();\n    if n < 1 || fib[0] == 1 {\n        return\
    \ 1;\n    }\n    for d in &fib[1..] {\n        if d % 2 == 0 {\n            return\
    \ d;\n        }\n    }\n    return fib[0];\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp7_33e8tu.rs:14:20\n   |\n\
    14 |     fib.iter().nth(n).unwrap();\n   |                    ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n14 |     fib.iter().nth(n.try_into().unwrap()).unwrap();\n\
    \   |                     ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp7_33e8tu.rs:20:20\n   |\n20 |             return d;\n   |     \
    \               ^ expected `isize`, found `&{integer}`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n20 |             return *d;\n   |                    +\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n % 5 {\n        0 => 2,\n\
    \        1 => 3,\n        2 => 5,\n        3 => 8,\n        _ => prime_fib(n -\
    \ 1) + prime_fib(n - 2),\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `2`', /tmp/tmpe_oioi22.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = (2..=10).nth(n as usize).fold(1..);\n\
    \    let mut b = 2..=n;\n    while b.any(|&x| x > a as usize) {\n        swap(&mut\
    \ a, &mut b, &mut b);\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp4mrazt5h.rs:16:9\n\
    \   |\n16 |         swap(&mut a, &mut b, &mut b);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0599]: `Option<{integer}>`\
    \ is not an iterator\n   --> /tmp/tmp4mrazt5h.rs:13:42\n    |\n13  |       let\
    \ mut a = (2..=10).nth(n as usize).fold(1..);\n    |                         \
    \                   ^^^^ `Option<{integer}>` is not an iterator\n    |\n    =\
    \ note: the following trait bounds were not satisfied:\n            `Option<{integer}>:\
    \ Iterator`\n            which is required by `&mut Option<{integer}>: Iterator`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp4mrazt5h.rs:15:18\n   |\n15 |\
    \     while b.any(|&x| x > a as usize) {\n   |                  ^--\n   |    \
    \              ||\n   |                  |expected due to this\n   |         \
    \         expected `isize`, found reference\n   |                  help: did you\
    \ mean `x`: `&isize`\n   |\n   = note:   expected type `isize`\n           found\
    \ reference `&_`\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0308, E0425, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut counter = if n == 0 || n\
    \ == 1 { 1 } else { 2 };\n    let mut x = 1;\n    while counter < n {\n      \
    \  x = x + 1;\n        counter += x;\n    }\n    x\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpr5dy35ky.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a =\
    \ 1;\n    let mut b = 1;\n    for _ in 0..n {\n        if a < b {\n          \
    \  sum += a;\n            a += b;\n        } else {\n            sum += b;\n \
    \           b += a;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmps_yvo77g.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n\
    \    }\n    if n == 1 {\n        return 1;\n    }\n    if n % 2 == 0 {\n     \
    \   return prime_fib(n / 2) as isize;\n    }\n    prime_fib(n - 3) as isize +\
    \ prime_fib(n - 5) as isize\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxxha1387.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut n = n as isize;\n    if n\
    \ < 2 {\n        return n;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n    }\n    let mut n1 = prime_fib(n - 1);\n    if\
    \ n1 > (n + 1) / 2 {\n        n1 += 2;\n    }\n    while (n1 % 2 == 0) {\n   \
    \     n1 += 2;\n    }\n    (n1 + n) as isize\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfkpq31ux.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    match n {\n        2 => 3,\n    \
    \    _ => n,\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmphxrw1gcc.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut f: u64 = 1;\n    while n\
    \ <= 33 {\n        f = 2 * f + 1;\n        if f > u64::MAX {\n            break;\n\
    \        }\n        n = n + 1;\n    }\n    if n <= 31 {\n        return n - 1;\n\
    \    }\n    return n - 37;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpf6jmahwx.rs:19:9\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n19 |         n = n + 1;\n   |   \
    \      ^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c: isize = 2;\n\n    while c <= n {\n        a = b;\n        b =\
    \ c;\n        c += 1;\n    }\n\n    if b > n {\n        b\n    } else {\n    \
    \    a\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpi28c4pbk.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 1 {\n        return 1;\n\
    \    }\n    if n == 2 {\n        return 2;\n    }\n    if n % 2 == 0 {\n     \
    \   return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n    else {\n        return\
    \ prime_fib(n / 2) + prime_fib(3 * n - 2);\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfu0t4yj5.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 2 {\n        return 1;\n\
    \    }\n    if n == 1 {\n        return 2;\n    }\n    fn fib(n: isize) -> isize\
    \ {\n        if n == 0 || n == 1 {\n            return 1;\n        }\n       \
    \ fib(n - 1) + fib(n - 2)\n    }\n    fib(n);\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpa_096rcs.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n25 |     fib(n);\n   |           -\
    \ help: remove this semicolon\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    // n is Fibonacci number and returns\
    \ n-th number\n    if n == 0 || n == 1 {\n        return n;\n    }\n\n    // n\
    \ is prime and returns n-th number\n    if n%2 == 0 {\n        return prime_fib(n-1)\
    \ + prime_fib(n-2);\n    }\n\n    // n is prime and returns n-th number\n    if\
    \ n%3 == 0 {\n        return prime_fib(n-1) + prime_fib(n-2);\n    }\n\n    //\
    \ n is prime and returns n-th number\n    if n%5 == 0 {\n        return prime_fib(n-1)\
    \ + prime_fib(n-2);\n    }\n\n    // n is prime and returns n-th number\n    if\
    \ n%7 == 0 {\n        return prime_fib(n-1) + prime_fib(n-2);\n    }\n\n    //\
    \ n is prime and returns n-th number\n    prime_fib(n-1) + prime_fib(n-2)\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvpldqs1p.rs:44:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fibs = Vec::new();\n    fibs.push(0);\n\
    \    fibs.push(1);\n    for _ in 0..n {\n        fibs.push(fibs.last().unwrap()\
    \ + fibs.last().unwrap_or(1));\n    }\n    fibs[n - 1]\n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp71ik0rqp.rs:17:64\n   |\n\
    17 |         fibs.push(fibs.last().unwrap() + fibs.last().unwrap_or(1));\n   |\
    \                                                                ^\n   |     \
    \                                                           |\n   |          \
    \                                                      expected `&{integer}`,\
    \ found integer\n   |                                                        \
    \        help: consider borrowing here: `&1`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmp71ik0rqp.rs:19:5\n   |\n19 |   \
    \  fibs[n - 1]\n   |     ^^^^^^^^^^^ slice indices are of type `usize` or ranges\
    \ of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented\
    \ for `isize`\n   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    fn check(n: isize, prime: isize,\
    \ fib: isize) -> bool {\n        prime < fib && prime % fib == 0 && (n % fib ==\
    \ 0 || check(n, prime + 1, fib + 1))\n    }\n\n    if n < 2 {\n        return\
    \ n;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if check(n, 3, 6)\
    \ {\n        return n;\n    }\n    if n < 7 {\n        return prime_fib(n + 1)\
    \ + prime_fib(n);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n * 7\
    \ + 1) + prime_fib(n / 7);\n    }\n    if check(n, 4, 7) {\n        return n;\n\
    \    }\n    if check(n, 5, 12) {\n        return n;\n    }\n    if check(n, 6,\
    \ 17) {\n        return n;\n    }\n    if check(n, 7, 35) {\n        return n;\n\
    \    }\n    if n % 13 == 0 {\n        return prime_fib(n * 13 + 1) + prime_fib(n\
    \ / 13);\n    }\n    if check(n, 8, 59) {\n        return n;\n    }\n    if check(n,\
    \ 9, 111) {\n        return n;\n    }\n    if check(n, 10, 171) {\n        return\
    \ n;\n    }\n    if check(n, 11, 231) {\n        return n;\n    }\n    if check(n,\
    \ 12, 289) {\n        return n;\n    }\n    if check(n, 13, 337) {\n        return\
    \ n;\n    }\n    if check(n, 14, 397) {\n        return n;\n    }\n    if n %\
    \ 17 == 0 {\n        return prime_fib(n * 17 + 1) + prime_fib(n / 17);\n    }\n\
    \    if check(n, 15, 907) {\n        return n;\n    }\n    if check(n, 16, 1815)\
    \ {\n        return n;\n    }\n    if check(n, 17, 2831) {\n        return n;\n\
    \    }\n    if check(n, 18, 3659) {\n        return n;\n    }\n    if check(n,\
    \ 19, 4251) {\n        return n;\n    }\n    if check(n, 20, 5071) {\n       \
    \ return n;\n    }\n    if n % 19 == 0 {\n        return prime_fib(n * 19 + 1)\
    \ + prime_fib(n / 19);\n    }\n    if check(n, 21, 6019) {\n        return n;\n\
    \    }\n    if check(n, 22, 7057) {\n        return n;\n    }\n    if check(n,\
    \ 23, 7109) {\n        return n;\n    }\n    if check(n, 24, 8141) {\n       \
    \ return n;\n    }\n    if check(n, 25, 9227) {\n        return n;\n    }\n  \
    \  if n % 23 == 0 {\n        return prime_fib(n * 23 + 1) + prime_fib(n / 23);\n\
    \    }\n    if check(n, 26, 10233) {\n        return n;\n    }\n    if check(n,\
    \ \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpuvfv1jrb.rs:114:1\n    |\n\
    113 |     if check(n, \n    |     -- this `if` expression has a condition, but\
    \ no block\n114 | }\n    | ^ expected `{`\n\nerror: mismatched closing delimiter:\
    \ `}`\n   --> /tmp/tmpuvfv1jrb.rs:113:13\n    |\n12  | fn prime_fib(n: isize)\
    \ -> isize {\n    |                                 - closing delimiter possibly\
    \ meant for this\n...\n113 |     if check(n, \n    |             ^ unclosed delimiter\n\
    114 | }\n    | ^ mismatched closing delimiter\n\nerror: aborting due to 2 previous\
    \ errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 1; \n    while i <= n\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    i;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmphg357vnw.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n20 |     i;\n   |      - help: remove\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 3 {\n        1\n    } else\
    \ {\n        if n % 2 == 0 {\n            prime_fib(n + 2)\n        } else {\n\
    \            prime_fib(n - 3) + prime_fib(n - 2)\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2hsb_bu9.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    if n < 9 {\n        return\
    \ prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if n < 18 {\n        return\
    \ prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n < 35 {\n        return\
    \ prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n < 55 {\n        return\
    \ prime_fib(n - 11) + prime_fib(n - 23);\n    }\n    if n < 89 {\n        return\
    \ prime_fib(n - 23) + prime_fib(n - 39);\n    }\n    if n < 1443 {\n        return\
    \ prime_fib(n - 39) + prime_fib(n - 53);\n    }\n    if n < 21279 {\n        return\
    \ prime_fib(n - 53) + prime_fib(n - 77);\n    }\n    if n < 29595 {\n        return\
    \ prime_fib(n - 77) + prime_fib(n - 103);\n    }\n    if n < 40563  {\n      \
    \  return prime_fib(n - 103) + prime_fib(n - 131);\n    }\n    if n < 55151 {\n\
    \        return prime_fib(n - 131) + prime_fib(n - 163);\n    }\n    if n < 89723\
    \ {\n        return prime_fib(n - 163) + prime_fib(n - 195);\n    }\n    if n\
    \ < 144169 {\n        return prime_fib(n - 195) + prime_fib(n - 231);\n    }\n\
    \    if n < 205799 {\n        return prime_fib(n - 231) + prime_fib(n - 293);\n\
    \    }\n    if n < 292438 {\n        return prime_fib(n - 293) + prime_fib(n -\
    \ 361);\n    }\n    if n < 359154 {\n        return prime_fib(n - 361) + prime_fib(n\
    \ - 423);\n    }\n    if n < 429131 {\n        return prime_fib(n - 423) + prime_fib(n\
    \ - 477);\n    }\n    if n < 479073 {\n        return prime_fib(n - 477) + prime_fib(n\
    \ - 527);\n    }\n    if n < 594879 {\n        return prime_fib(n - 527) + prime_fib(n\
    \ - 593);\n    }\n    if n < 624375 {\n        return prime_fib(n - 593) + prime_fib(n\
    \ - 647);\n    }\n    if n < 696913 {\n        return prime_fib(n - 647) + prime_fib(n\
    \ - 733);\n    }\n    if n < 733587 {\n        return \n}\n\nfn main() {\n   \
    \ let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmppqr0pc8f.rs:95:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n79 |     if n < 733587 {\n   |            \
    \       - this delimiter might not be properly closed...\n80 |         return\
    \ \n81 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    95 | }\n   |   ^\n\nerror[E0069]: `return;` in a function whose return type is\
    \ not `()`\n  --> /tmp/tmppqr0pc8f.rs:80:9\n   |\n12 | fn prime_fib(n: isize)\
    \ -> isize {\n   |                           ----- expected `isize` because of\
    \ this return type\n...\n80 |         return \n   |         ^^^^^^ return type\
    \ is not `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmppqr0pc8f.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0069, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0069`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut prime = 1;\n    let mut fib1\
    \ = 0;\n    let mut fib2 = 1;\n    while fib1 < n {\n        fib1 += fib2;\n \
    \       prime = fib1 + prime;\n        fib2 = prime;\n    }\n    fib2\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `3`', /tmp/tmpwi0l8q19.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 1;\n\
    \    while i <= n {\n        let tmp = i;\n        i += j;\n        j = tmp;\n\
    \    }\n    i\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `13`', /tmp/tmp0qckc50w.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n <= 2 {\n        2\n    } else\
    \ if n % 2 == 0 {\n        prime_fib(n - 1)\n    } else {\n        prime_fib(n\
    \ - 3) + prime_fib(n - 2)\n    }\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpr1dm194h.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

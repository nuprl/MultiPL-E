name: HumanEval_150_x_or_y
language: rust
results:
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\n\
    \    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp947djbpr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpjg9hhvyo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp89owiik8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && is_prime(n) {\n       \
    \ return y;\n    } else {\n        return x;\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmphfyv_ohb.rs:7:22\n\
    \  |\n7 |     if n % 2 == 0 && is_prime(n) {\n  |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n <= x && n <= y {\n        n\n    }\
    \ else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n  \
    \  assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `34`', /tmp/tmpcf7ssc52.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpayeohr7o.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp84oq7kcy.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => y,\n       \
    \ 1 => x,\n        _ => x_or_y(n / 2, x, y)\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp1_r4ms8y.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp6sgv8hwe.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut result = x;\n    match n % 2 {\n\
    \        1 => result = y,\n        0 => result = x,\n        _ => (),\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqg6tig9t.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n < 3 || n % 2 == 1 {\n        return\
    \ y;\n    }\n\n    let mut i = n - 3;\n    while i >= 2 {\n        if n % i ==\
    \ 0 {\n            return y;\n        }\n\n        i -= 2;\n    }\n    \n    return\
    \ x;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpybg09r67.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmptmcnm4op.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpmv5mjyfd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && is_prime(n) {\n       \
    \ x\n    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpz3eboc70.rs:7:22\n\
    \  |\n7 |     if n % 2 == 0 && is_prime(n) {\n  |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpkd63pdp1.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpa0clonlk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        x \n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpujskc5hb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4svhj19v.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 || x == 0 || y == 0 {\n      \
    \  0\n    } else {\n        if n == 2 && (y == 0 || x == y - 1) {\n          \
    \  x\n        } else {\n            y\n        }\n    }\n}\n\nfn main() {\n  \
    \  let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpr_hoagq4.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpptvzs2u1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 || n == x || n == y || n % 2 ==\
    \ 0 {\n        return y;\n    }\n    else {\n        return x;\n    }\n}\n\nfn\
    \ main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpem43bj1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut n = n as isize;\n    while n < 63\
    \ {\n        if n % 2 == 0 {\n            return y;\n        }\n        n /= 2;\n\
    \    }\n    if n == 63 {\n        return y\n    } else {\n        return x\n \
    \   }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqnvlg4kz.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 && n % y == 0 {\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprsd1fb5h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        return x\n    }\n\
    \    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphn54fel7.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp6af8sk_m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n >= 2 && n % 2 == 0 {\n        x\n \
    \   } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4lu72iiw.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut result: isize = (x % n) + ((y %\
    \ n) > 0 ? 1 : 0);\n    if result == 0 || result == n {\n        result\n    }\
    \ else {\n        result\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `1`\n\
    \ --> /tmp/tmpv9atnvtg.rs:7:54\n  |\n7 |     let mut result: isize = (x % n) +\
    \ ((y % n) > 0 ? 1 : 0);\n  |                                                \
    \      ^ expected one of `)`, `,`, `.`, `?`, or an operator\n\nerror: expected\
    \ one of `!`, `&&`, `&`, `(`, `)`, `*`, `...`, `.`, `;`, `<`, `?`, `[`, `_`, `async`,\
    \ `const`, `dyn`, `else`, `extern`, `fn`, `for`, `impl`, `unsafe`, `~`, an operator,\
    \ lifetime, or path, found `0`\n --> /tmp/tmpv9atnvtg.rs:7:58\n  |\n7 |     let\
    \ mut result: isize = (x % n) + ((y % n) > 0 ? 1 : 0);\n  |                  \
    \                                        ^ expected one of 26 possible tokens\n\
    \nerror: aborting due to 2 previous errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let rem = n % x;\n    match rem {\n    \
    \    0 => y,\n        _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp2fsajnvc.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { x }\n    else { y }\n}\n\
    \nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqiixz9s6.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { // n is even\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4_pj7y97.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        if n % x == 0 {\n\
    \            return y\n        } else {\n            return x\n        }\n   \
    \ } else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3_zjfjfz.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n <= 2 {\n        return x;\n    } else\
    \ {\n        x - y + 1\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `23`,\n right: `34`', /tmp/tmp5fh8pdzj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match x_or_y_check(n, x, y) {\n        Some(y)\
    \ => y,\n        None => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `x_or_y_check` in this scope\n --> /tmp/tmp1laq11fl.rs:7:11\n\
    \  |\n7 |     match x_or_y_check(n, x, y) {\n  |           ^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp97nuwc4v.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (n % x, n % y) {\n        (None, None)\
    \ => (n % x),\n        (Some(x), None) => (x % y),\n        (None, Some(y)) =>\
    \ (x % y),\n        _ => (n % x)\n    }\n}\n\nfn main() {\n    let candidate =\
    \ x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp11s4cu71.rs:8:10\n  |\n7 |\
    \     match (n % x, n % y) {\n  |           -------------- this expression has\
    \ type `(isize, isize)`\n8 |         (None, None) => (n % x),\n  |          ^^^^\
    \ expected `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n\
    \             found enum `Option<_>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp11s4cu71.rs:8:16\n\
    \  |\n7 |     match (n % x, n % y) {\n  |           -------------- this expression\
    \ has type `(isize, isize)`\n8 |         (None, None) => (n % x),\n  |       \
    \         ^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp11s4cu71.rs:9:10\n  |\n7 |     match (n % x, n % y) {\n\
    \  |           -------------- this expression has type `(isize, isize)`\n8 | \
    \        (None, None) => (n % x),\n9 |         (Some(x), None) => (x % y),\n \
    \ |          ^^^^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp11s4cu71.rs:9:19\n  |\n7 |     match (n % x, n % y) {\n\
    \  |           -------------- this expression has type `(isize, isize)`\n8 | \
    \        (None, None) => (n % x),\n9 |         (Some(x), None) => (x % y),\n \
    \ |                   ^^^^ expected `isize`, found enum `Option`\n  |\n  = note:\
    \ expected type `isize`\n             found enum `Option<_>`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp11s4cu71.rs:10:10\n   |\n7  |     match (n %\
    \ x, n % y) {\n   |           -------------- this expression has type `(isize,\
    \ isize)`\n...\n10 |         (None, Some(y)) => (x % y),\n   |          ^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp11s4cu71.rs:10:16\n\
    \   |\n7  |     match (n % x, n % y) {\n   |           -------------- this expression\
    \ has type `(isize, isize)`\n...\n10 |         (None, Some(y)) => (x % y),\n \
    \  |                ^^^^^^^ expected `isize`, found"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpgx0rbmr6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpbkk_h4aj.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n != 1 {\n        return y;\n    }\n\n\
    \    if n % 2 == 0 {\n        return x;\n    }\n\n    if n % 3 == 0 {\n      \
    \  return x * y;\n    }\n\n    if n % 5 == 0 {\n        return x * y * y;\n  \
    \  }\n\n    if n % 7 == 0 {\n        return x * y * y * y;\n    }\n\n    return\
    \ x * x * x * x * y * y;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphk96ip9j.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 || n == 3 || n == 5 || n == 7\
    \ || n == 11\n        || n == 2 && x == 0 || n == 3 && x == 0 || n == 5 && x ==\
    \ 0\n        || n == 2 && y == 0 || n == 3 && y == 0 || n == 5 && y == 0\n   \
    \     || n < 3 || n < 5 || n < 7 || n < 11\n        || n == n+1 && x == 0 || n\
    \ == x+1 && y == 0\n    {\n        x\n    } else {\n        y\n    }\n}\n\nfn\
    \ main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `52`,\n right: `3`', /tmp/tmpjzgw8oty.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if is_prime(n) {\n        x\n    } else\
    \ {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpjazje28f.rs:7:8\n\
    \  |\n7 |     if is_prime(n) {\n  |        ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 && n % y == 0 {\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkwk7jncy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 { x }\n    else { y }\n}\n\
    \nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9q8gmztt.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (is_prime(n), is_prime(x), is_prime(y))\
    \ {\n        (true, true, true) => y,\n        (true, false, true) => x,\n   \
    \     (false, true, true) => x,\n        (false, false, true) => y,\n        _\
    \ => 0,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmplr29ihuk.rs:7:12\n\
    \  |\n7 |     match (is_prime(n), is_prime(x), is_prime(y)) {\n  |           \
    \ ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_prime`\
    \ in this scope\n --> /tmp/tmplr29ihuk.rs:7:25\n  |\n7 |     match (is_prime(n),\
    \ is_prime(x), is_prime(y)) {\n  |                         ^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `is_prime` in this scope\n\
    \ --> /tmp/tmplr29ihuk.rs:7:38\n  |\n7 |     match (is_prime(n), is_prime(x),\
    \ is_prime(y)) {\n  |                                      ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x \n    } else\
    \ {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvgddjjms.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpfftz0z01.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        return x\n    }\n\n\
    \    if n % 2 != 0 {\n        return y\n    }\n\n    for _ in 0..(n - 1) {\n \
    \       let m = n / 2\n        if m != 1 {\n            return y\n        }\n\
    \        n = m\n    }\n\n    return x\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `if`\n  --> /tmp/tmpvsossahs.rs:16:22\n\
    \   |\n16 |         let m = n / 2\n   |                      ^ help: add `;` here\n\
    17 |         if m != 1 {\n   |         -- unexpected token\n\nerror: aborting\
    \ due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpz7n5_cy9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnpdix80o.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 || n == 3 || n == 5 || n == 7\
    \ || n == 9 || n == 11 \n        || n == 13 || n == 17 || n == 19 || n == 23 ||\
    \ n == 29 || \n        n %3 == 0\n    {\n        return y;\n    } else {\n   \
    \     return x;\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp2dkshl_9.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 3 {\n        0 => y,\n       \
    \ 1 => x,\n        2 => y,\n        _ => x,\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5212`,\n right: `33`', /tmp/tmpzapnc4vm.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 || n % 3 == 0 { return y }\n\
    \    if n % 5 == 0 || n % 7 == 0 { return x }\n    return y\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5212`,\n right: `33`', /tmp/tmp1wkegpyt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpsa37h9iu.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp2byiqiyj.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpa9hhmh77.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        return x\n    }\
    \ else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpl17m0cxm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut result = x;\n    if n % 2 == 0 {\n\
    \        result = y;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpdz0p3z2h.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4ikm5wf7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match is_prime(n) {\n        true => x,\n\
    \        false => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n \
    \   assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp4sp7si7a.rs:7:11\n\
    \  |\n7 |     match is_prime(n) {\n  |           ^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpojjb6_h7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { x }\n    else { y }\n}\n\
    \nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpfpkvjuhe.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 { x } else { y }\n}\n\nfn\
    \ main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp56yv5hvp.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpuqp676yf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (x_is_prime(n), y_is_prime(x)) {\n\
    \        (true, true) => y,\n        (true, false) => x,\n        (false, true)\
    \ => x,\n        (false, false) => n,\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `x_is_prime` in this scope\n --> /tmp/tmpizm5ufno.rs:7:12\n\
    \  |\n7 |     match (x_is_prime(n), y_is_prime(x)) {\n  |            ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `y_is_prime` in\
    \ this scope\n --> /tmp/tmpizm5ufno.rs:7:27\n  |\n7 |     match (x_is_prime(n),\
    \ y_is_prime(x)) {\n  |                           ^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpi_fbqfob.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 && n % y == 0 {\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpu3hji8kp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        2 => x,\n        3 |\
    \ 5 => y,\n        _ => ()\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp1tmr3o5l.rs:10:14\n\
    \   |\n7  | /     match n {\n8  | |         2 => x,\n   | |              - this\
    \ is found to be of type `isize`\n9  | |         3 | 5 => y,\n   | |         \
    \         - this is found to be of type `isize`\n10 | |         _ => ()\n   |\
    \ |              ^^ expected `isize`, found `()`\n11 | |     }\n   | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        2 => y,\n        3 =>\
    \ x,\n        _ => n,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `34`', /tmp/tmplxjfs179.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 {\n        return y;\n    }\n\
    \    if n % 2 == 0 {\n        return x_or_y(n - 1, x, y + 1);\n    }\n    return\
    \ x_or_y(n - 1, x, y - 1);\n}\n\nfn main() {\n    let candidate = x_or_y;\n  \
    \  assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `34`', /tmp/tmpe8sourio.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    // First condition\n    if n % 2 == 0 {\n\
    \        return y;\n    }\n    // Second condition\n    if n % x == 0 {\n    \
    \    return y;\n    }\n    // Third condition\n    return x;\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpxvxicsba.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => x,\n       \
    \ _ => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp60dm13xb.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n / 2 {\n        0 => y,\n       \
    \ 1 => x,\n        _ => x_or_y(n - 1, x, y),\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpi1_qviu4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => x,\n       \
    \ 1 => y,\n        _ => panic!(\"{}\", n),\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpga6brzsn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut i = 0;\n    while i < n && i !=\
    \ x && i != y {\n        if n % i == 0 {\n            return i;\n        }\n \
    \       i += 1;\n    }\n    return y;\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpu3j7y0ba.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (n % x, n % y) {\n        (Some(x),\
    \ Some(y)) => x,\n        (Some(x), None) => y,\n        (None, Some(y)) => x,\n\
    \        (None, None) => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvc1rmp7n.rs:8:10\n  |\n7 |\
    \     match (n % x, n % y) {\n  |           -------------- this expression has\
    \ type `(isize, isize)`\n8 |         (Some(x), Some(y)) => x,\n  |          ^^^^^^^\
    \ expected `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n\
    \             found enum `Option<_>`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvc1rmp7n.rs:8:19\n\
    \  |\n7 |     match (n % x, n % y) {\n  |           -------------- this expression\
    \ has type `(isize, isize)`\n8 |         (Some(x), Some(y)) => x,\n  |       \
    \            ^^^^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpvc1rmp7n.rs:9:10\n  |\n7 |     match (n % x, n % y) {\n\
    \  |           -------------- this expression has type `(isize, isize)`\n8 | \
    \        (Some(x), Some(y)) => x,\n9 |         (Some(x), None) => y,\n  |    \
    \      ^^^^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpvc1rmp7n.rs:9:19\n  |\n7 |     match (n % x, n % y) {\n\
    \  |           -------------- this expression has type `(isize, isize)`\n8 | \
    \        (Some(x), Some(y)) => x,\n9 |         (Some(x), None) => y,\n  |    \
    \               ^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<_>`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpvc1rmp7n.rs:10:10\n   |\n7  |     match (n % x, n % y)\
    \ {\n   |           -------------- this expression has type `(isize, isize)`\n\
    ...\n10 |         (None, Some(y)) => x,\n   |          ^^^^ expected `isize`,\
    \ found enum `Option`\n   |\n   = note: expected type `isize`\n              found\
    \ enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpvc1rmp7n.rs:10:16\n\
    \   |\n7  |     match (n % x, n % y) {\n   |           -------------- this expression\
    \ has type `(isize, isize)`\n...\n10 |         (None, Some(y)) => x,\n   |   \
    \             ^^^^^^^ expected `isize`, found enum `Option`\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        return x;\n    }\n\
    \    else if n == 0 {\n        return y;\n    }\n    let mut result = x;\n   \
    \ while n != 0 {\n        n >>= 1;\n        result += y;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34,\
    \ 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp7ifbro6u.rs:15:9\n\
    \   |\n6  | fn x_or_y(n: isize, x: isize, y: isize) -> isize {\n   |         \
    \  - help: consider making this binding mutable: `mut n`\n...\n15 |         n\
    \ >>= 1;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 || n % y == 0 {\n        return\
    \ x;\n    } else {\n        return y;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd12gci_m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpt1gce68r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpzym4jptt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2==1 {\n        return y\n    } else\
    \ {\n        return x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpoomfibcx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpdyk0g3dq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 && n % y == 0 {\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmptwey0p4n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 && n % 3 == 0 {\n        x\n\
    \    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpwe4l2306.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && n != x && n != y {\n  \
    \      n\n    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp98r4o_1t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd8qqojvo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n\
    \        if n % i == 0 {\n            sum += i;\n        }\n    }\n    if sum\
    \ == x {\n        sum\n    } else {\n        sum + y\n    }\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmp5wog5xtl.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match x_or_y_by_factor(n, x, y) {\n    \
    \    (Some(x), Some(y)) => x,\n        (Some(x), None) => x,\n        (None, Some(y))\
    \ => y,\n        (None, None) => panic!(\"x_or_y expects prime arguments\"),\n\
    \    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `x_or_y_by_factor` in this scope\n -->\
    \ /tmp/tmp5pobbqhj.rs:7:11\n  |\n7 |     match x_or_y_by_factor(n, x, y) {\n \
    \ |           ^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n%2 == 0 { y } else { x }\n}\n\nfn main()\
    \ {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n\
    \    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212),\
    \ 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpqnugg545.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        2 | 3 | 5 | 7 => x,\n\
    \        n => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `52`,\n right: `3`', /tmp/tmpultwunn4.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ x if x == 0 || x <= y => x_or_y(n, x + (y % x), y),\n        _ => x_or_y(n,\
    \ x, y + (x % y)),\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n   \
    \ assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n\
    \    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259, 3,\
    \ 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpa7g850a5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 5 {\n        1 => x,\n       \
    \ 3 => y,\n        5 => x,\n        _ => y,\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp5c_nd0n3.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    // TODO: implement function\n    println!(\"\
    not implemented\");\n    0\n}\n\nfn main() {\n    let candidate = x_or_y;\n  \
    \  assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: "not implemented\n"
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `34`', /tmp/tmpncxit5be.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprdswmtzp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 {\n        x\n    }\n    else\
    \ {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpq8a5frz6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n%x==0 || n%y==0 {\n        x\n    }\
    \ else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n  \
    \  assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpa5941gjj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpaetegfgh.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 && n % y == 0 {\n        return\
    \ n\n    }\n    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpg82ktoz1.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 4 == 0 {\n        true => y,\n\
    \        false => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n \
    \   assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpavzvtvoi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { \n        return y\n   \
    \ }\n    return x \n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmprgzrihsv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp67dq_3io.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3ecoyfc2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\n\
    \    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3m_r06qr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 || n == 1 {\n        return y;\n\
    \    }\n    if x == 1 || y == 1 {\n        return x;\n    }\n    if n != 2 &&\
    \ (n % x == 0 || n % y == 0) {\n        return 1;\n    }\n    // n is a prime\
    \ number\n    primes.iter().find(|&p| n % p == 0).unwrap_or(&n)\n}\n\nfn main()\
    \ {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n\
    \    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212),\
    \ 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `primes` in this scope\n  --> /tmp/tmpscakw06l.rs:17:5\n\
    \   |\n17 |     primes.iter().find(|&p| n % p == 0).unwrap_or(&n)\n   |     ^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut i = 3n;\n    while i <= n {\n  \
    \      if i % n == 0 && n % x == 0 && n % y == 0 {\n            return i;\n  \
    \      }\n        i += 4n;\n    }\n    return y;\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error: invalid suffix `n` for number literal\n --> /tmp/tmpaqfivthb.rs:7:17\n\
    \  |\n7 |     let mut i = 3n;\n  |                 ^^ invalid suffix `n`\n  |\n\
    \  = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`,\
    \ etc.)\n\nerror: invalid suffix `n` for number literal\n  --> /tmp/tmpaqfivthb.rs:12:14\n\
    \   |\n12 |         i += 4n;\n   |              ^^ invalid suffix `n`\n   |\n\
    \   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`,\
    \ etc.)\n\nerror: aborting due to 2 previous errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp7bjt_bcc.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmptf3x6p2r.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n%2 == 0 && y%2 == 0 {\n        return\
    \ x\n    } else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8zbip52e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphywq3l5p.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9qkxfg4e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxp6i230u.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n  if n < 2 || n % 2 == 0 {\n    y\n  } else\
    \ {\n    x\n  }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpl011xtmm.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpb9rdhaec.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\
    \ else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp833y__kf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 || (n % 2 == 0 && n < 11) {\n\
    \        return x;\n    } else {\n        return y;\n    }\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpr3uowp5l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut i = n;\n    while i > 1 && !is_prime(i)\
    \ {\n        i -= 2;\n    }\n    if i > 1 {\n        x\n    } else {\n       \
    \ y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp5c0ecl28.rs:8:21\n\
    \  |\n8 |     while i > 1 && !is_prime(i) {\n  |                     ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxpjxxo9c.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % y {\n        0 => x,\n       \
    \ _ => y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_wme96u6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        y\n    }\n    else\
    \ {\n        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpstepmtpz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\n\
    \    else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprfmtgk88.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 3 || n % 2 == 0 {\n        x\n \
    \   } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmps3kn8hsd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && n != 1 && x % n == 0 {\n\
    \        x\n    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpywvgllq8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        1 => y,\n        _ =>\
    \ {\n            if n % 2 == 1 {\n                x_or_y(n / 2, x, (x + y) / 2)\n\
    \            } else {\n                x_or_y(n / 2, y, (x + y) / 2)\n       \
    \     }\n        }\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n   \
    \ assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n\
    \    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259, 3,\
    \ 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `28`,\n right: `34`', /tmp/tmp9auw5q_4.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ n => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpbos6sbgj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n  if n < y { // n is not a prime\n    x\n  }\
    \ else { // n is a prime\n    y\n  }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `52`,\n right: `3`', /tmp/tmp9vio987_.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => x,\n       \
    \ _ => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp10mvykr3.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % x {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpmmwbdebp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let mut result = x;\n    if n % 2 == 0 {\n\
    \        result = y;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp3ba4chzx.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        return x;\n   \
    \ }\n    if n % 3 == 1 {\n        return y;\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpdz601m0h.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\n\
    \    else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd9croukd.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { // n is even\n        if\
    \ x == y { // n is prime\n            return x\n        }\n        return y\n\
    \    }\n    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp938e78w7.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpp16dqks6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkorgavl5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpi55b7wdh.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && n % y == 0 {\n        return\
    \ x;\n    }\n    return y;\n}\n\nfn main() {\n    let candidate = x_or_y;\n  \
    \  assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpg14c4_aa.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n  if n % x == 0 {\n    x\n  } else {\n    y\n\
    \  }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphbopkwb3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpv4xs05ei.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        return y\n    }\n\
    \    return x \n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpn08u93gh.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && (n % x == 0 && (n % y ==\
    \ 0)) {\n        return x\n    } else {\n        return y\n    }\n}\n\nfn main()\
    \ {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n\
    \    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212),\
    \ 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp44ya4shn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 || (n % 2 == 0 && n != x)\n  \
    \      || (n % 3 == 0 && n != y && n != x)\n    {\n        n\n    } else {\n \
    \       x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `5`', /tmp/tmpx1nyaqyg.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    fn is_prime(n: isize) -> bool {\n      \
    \  if n == 1 {\n            return true\n        }\n        for i in 2..n / 2\
    \ {\n            if n % i == 0 {\n                return false;\n            }\n\
    \        }\n        true\n    }\n\n    if is_prime(n) {\n        x\n    } else\
    \ {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmpmer79yoc.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp5gjaf5bb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 {\n        return x\n    }\n \
    \   if n == 1 {\n        return y\n    }\n    let result = x_or_y(n - 1, x, y)\n\
    \    if n % 2 == 0 {\n        return result\n    } else {\n        return y\n\
    \    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `if`\n  --> /tmp/tmpzzaf5nk4.rs:13:37\n\
    \   |\n13 |     let result = x_or_y(n - 1, x, y)\n   |                       \
    \              ^ help: add `;` here\n14 |     if n % 2 == 0 {\n   |     -- unexpected\
    \ token\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => y,\n       \
    \ 1 => x,\n        _ => return x,\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpaqnmcnk4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        return y;\n   \
    \ }\n    return x;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkbyb0xe6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (x_is_prime(n), y_is_prime(y)) {\n\
    \        (false, (true, false)) => y,\n        (true, (false, false)) => x,\n\
    \        (true, true) => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `x_is_prime` in this scope\n --> /tmp/tmpyqv6aqps.rs:7:12\n\
    \  |\n7 |     match (x_is_prime(n), y_is_prime(y)) {\n  |            ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `y_is_prime` in\
    \ this scope\n --> /tmp/tmpyqv6aqps.rs:7:27\n  |\n7 |     match (x_is_prime(n),\
    \ y_is_prime(y)) {\n  |                           ^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        2 => x,\n        _ =>\
    \ y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_319m2dt.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        return y\n    }\n\
    \    return x\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpae23tu2t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n {\n        2 | 3 | 5 | 7 | 11 |\
    \ 13 | 17 | 19 | 23 | 29 | 31 => {\n            return y;\n        }\n       \
    \ _ => {\n            return x;\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpdoxfzq5v.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpul5paeb8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n < x {\n        return x;\n    }\n \
    \   \n    if n < y {\n        return y;\n    }\n    \n    return n;\n}\n\nfn main()\
    \ {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n\
    \    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212),\
    \ 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `5`', /tmp/tmpzuwf52ip.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    (n as f64 % x) + ((n as f64 % y) as isize)\
    \ as isize\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot mod `f64` by `isize`\n --> /tmp/tmp8wu40u_b.rs:7:15\n\
    \  |\n7 |     (n as f64 % x) + ((n as f64 % y) as isize) as isize\n  |       \
    \        ^ no implementation for `f64 % isize`\n  |\n  = help: the trait `Rem<isize>`\
    \ is not implemented for `f64`\n  = help: the following other types implement\
    \ trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n            <&'a f64 as\
    \ Rem<f64>>\n            <&'a i128 as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n\
    \            <&'a i32 as Rem<i32>>\n            <&'a i64 as Rem<i64>>\n      \
    \      <&'a i8 as Rem<i8>>\n            <&'a isize as Rem<isize>>\n          and\
    \ 54 others\n\nerror[E0277]: cannot mod `f64` by `isize`\n --> /tmp/tmp8wu40u_b.rs:7:33\n\
    \  |\n7 |     (n as f64 % x) + ((n as f64 % y) as isize) as isize\n  |       \
    \                          ^ no implementation for `f64 % isize`\n  |\n  = help:\
    \ the trait `Rem<isize>` is not implemented for `f64`\n  = help: the following\
    \ other types implement trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n\
    \            <&'a f64 as Rem<f64>>\n            <&'a i128 as Rem<i128>>\n    \
    \        <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n          \
    \  <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n            <&'a isize\
    \ as Rem<isize>>\n          and 54 others\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => y,\n       \
    \ _ => x,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpawyr6hev.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 0 {\n        x\n    } else {\n \
    \       y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpmnajevm0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x;\n   \
    \ }\n    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp6qvouozm.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpsi9mog96.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 && is_prime(n) {\n       \
    \ x\n    } else {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp1763iur_.rs:7:22\n\
    \  |\n7 |     if n % 2 == 0 && is_prime(n) {\n  |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x;\n   \
    \ } else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqfonume7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => x,\n       \
    \ _ => y,\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpi3noj88s.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        return y\n    }\n\
    \    return x\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpsjpu0gqt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpc3ycp137.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpho_jfqou.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n  if n % x == 0 && n % y == 0 {\n    return\
    \ x\n  } else {\n    return y\n  }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpsw4ltla8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 is 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "error: expected `{`, found `is`\n --> /tmp/tmp8qew15u2.rs:7:14\n  |\n7\
    \ |     if n % 2 is 0 {\n  |     --       ^^ expected `{`\n  |     |\n  |    \
    \ this `if` expression has a condition, but no block\n\nerror: aborting due to\
    \ previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3ej3qmdi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return y\n    }\n\
    \n    return x\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpxcpmpae6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    }\n    else\
    \ {\n        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp90qglyo7.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return y;\n   \
    \ }\n    return x;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpj4t7cyvs.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp5wjafgb0.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        1 => y,\n       \
    \ 0 => x,\n        _ => x_or_y(n / 2, y, x),\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9j87b0ii.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        return x\n    }\n\
    \    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkw7np1_b.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match (n <= 1 && n % x == 0) || (n > 1 &&\
    \ n % y == 0) {\n        (false) => y,\n        (true) => x,\n    }\n}\n\nfn main()\
    \ {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n\
    \    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212),\
    \ 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpcipkyjh6.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => x,\n       \
    \ 1 => y,\n        _ => x_or_y(n / 2, y, x)\n    }\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnrknhzo8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x + y\n    } else\
    \ {\n        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpa0ykqk_b.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { \n        if x % n == 0\
    \ { \n            y\n        } else { \n            x\n        }\n    } else {\
    \ \n        if y % n == 0 { \n            x\n        } else { \n            y\n\
    \        }\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpibp206z8.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpajb29lqk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 {\n        if n == x || n\
    \ == y {\n            x\n        } else {\n            y\n        }\n    } else\
    \ {\n        if n == x || n == y {\n            y\n        } else {\n        \
    \    x\n        }\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpn35nfjig.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 { \n        return y;\n  \
    \  }\n    return x;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpxzevet3j.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 && x == 1 && y == 1 {\n      \
    \  return x;\n    }\n    else if n % 2 == 0 {\n        if x == 1 && y == 1 {\n\
    \            return x;\n        }\n        \n        return y\n    }\n    else\
    \ {\n        if x == 1 && y == 1 {\n            return x;\n        }\n       \
    \ \n        return x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n \
    \   assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpd5bwm09l.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n <= 1 { 1 } else if n % 2 == 0 {\n \
    \       x_or_y(n - 1, x, y)\n    } else {\n        x_or_y(n - 2, x, y + 1)\n \
    \   }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `34`', /tmp/tmpbbsd0hwd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpizo0o2ux.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprihg1hqd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return x\n    }\
    \ else {\n        return y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp76j99bjj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return y;\n   \
    \ } else {\n        return x;\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n\
    \    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5),\
    \ 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp30uxfzff.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpucca5ife.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % x == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_cacdsat.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        1 => x,\n       \
    \ _ => y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp_1tjojom.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 { // n is even\n        x\
    \ \n    }\n    else {\n        y\n    }\n}\n\nfn main() {\n    let candidate =\
    \ x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpwqcmosut.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    let p = &n as *const isize as *const isize;\n\
    \    if p == &x {\n        x\n    } else {\n        y\n    }\n}\n\nfn main() {\n\
    \    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9lgwx419.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    match n % 2 {\n        0 => y,\n       \
    \ _ => x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpi11mg_d1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        return x\n    }\n \
    \   if n % 2 == 0 {\n        return y\n    }\n    x\n}\n\nfn main() {\n    let\
    \ candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12), 34);\n    assert_eq!(candidate(15,\
    \ 8, 5), 5);\n    assert_eq!(candidate(3, 33, 5212), 33);\n    assert_eq!(candidate(1259,\
    \ 3, 52), 3);\n    assert_eq!(candidate(7919, -1, 12), -1);\n    assert_eq!(candidate(3609,\
    \ 1245, 583), 583);\n    assert_eq!(candidate(91, 56, 129), 129);\n    assert_eq!(candidate(6,\
    \ 34, 1234), 1234);\n    assert_eq!(candidate(1, 2, 0), 0);\n    assert_eq!(candidate(2,\
    \ 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp_0k8j5ep.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 2 || n == 3 || n == 5 || n == 7\
    \ || n == 11 || n == 9 || n == 13\n        || n == 17 || n == 19 || n == 23 ||\
    \ n == 29 || n == 31 \n    {\n        return y;\n    }\n    return x;\n}\n\nfn\
    \ main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7, 34, 12),\
    \ 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3, 33,\
    \ 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp26yhyq13.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpnff2uk0i.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        y\n    } else {\n \
    \       x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmp6raioh8_.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n\tif n % 2 == 0 {\n\t\treturn x\n\t} else {\n\
    \t\treturn y\n\t}\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpywp9a4qg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 != 0 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8b2sp1oj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n\tif n == 2 && x == y || n == 3 && x == y ||\
    \ n % 2 == 0 && y == 1 \n\t\t|| n % 3 == 0 && y == 1 {\n\t\treturn x;\n\t}\n\t\
    return y\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpsvmto4ek.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n == 1 {\n        y\n    } else {\n \
    \       x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpb1ov0k5s.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 1 {\n        y\n    } else {\n\
    \        x\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpzam7zjbg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpw9q2qtkg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        return y;\n   \
    \ }\n    return x;\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `5`', /tmp/tmpdl4wsa4p.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

name: HumanEval_60_sum_to_n
language: rust
results:
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    while n > 0 {\n        result += n;\n      \
    \  n -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp49gk07we.rs:16:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum().unwrap()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmppkvv7ox_.rs:13:12\n\
    \   |\n13 |     (1..n).sum().unwrap()\n   |            ^^^ cannot infer type for\
    \ type parameter `S` declared on the associated function `sum`\n   |\n   = note:\
    \ type must be known at this point\nhelp: consider specifying the type argument\
    \ in the method call\n   |\n13 |     (1..n).sum::<S>().unwrap()\n   |        \
    \       +++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for i in 1..=n {\n        result = result +\
    \ i;\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp981lu83e.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for (i, val) in n.iter().enumerate() {\n   \
    \     result *= val;\n        if i < n / 2 {\n            result += 1;\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpqpj9n1ry.rs:14:23\n   |\n14 |     for (i, val) in n.iter().enumerate()\
    \ {\n   |                       ^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_mz6s0ww.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum_so_far = 1;\n    for i in 1..n {\n        sum_so_far = sum_so_far\
    \ + i;\n    }\n    sum_so_far\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmp88g8holt.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    if n < 1 {\n        return 1;\n    }\n   \
    \ match n % 2 {\n        0 => sum_to_n(n/2),\n        1 => 1 + sum_to_n(n/2),\n\
    \        _ => sum_to_n(n/2) + 1,\n    }\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n > 0', /tmp/tmp9m0c_rid.rs:13:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    return sum;\n}\n\nfn main() {\n \
    \   let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp671haj01.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum\
    \ += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgg8h8kyg.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as usize\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpb9kz1qlp.rs:13:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     n as usize\n   |     ^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n13 |     (n as usize).try_into().unwrap()\n\
    \   |     +          +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqa__9xrh.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpec8pcaj4.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut acc = n;\n    loop {\n        if acc < 0 {\n            return\
    \ acc;\n        }\n        acc += 1;\n    }\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    match n {\n        0 => 1,\n        _ => n,\n    }\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpzcpa7rc3.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut num = 0;\n    for i in 1..n {\n        num = num + i;\n    }\n\
    \    num\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpaw3xz8zo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    let\
    \ mut i = 0;\n    while i < n {\n        sum += i;\n        i += 1;\n    }\n \
    \   sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `21`', /tmp/tmpwd1ww_9h.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    let mut sums: Vec<isize> = vec![];\n    for i in\
    \ 1..n {\n        sum += i;\n        sums.push(i);\n    }\n    let mut n = n -\
    \ 1;\n    while n >= 1 {\n        let n = n - 1;\n        sum += sums[sums.len()\
    \ - n];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp3rm1uczb.rs:22:34\n   |\n\
    22 |         sum += sums[sums.len() - n];\n   |                              \
    \    ^ expected `usize`, found `isize`\n\nerror[E0277]: cannot subtract `isize`\
    \ from `usize`\n  --> /tmp/tmp3rm1uczb.rs:22:32\n   |\n22 |         sum += sums[sums.len()\
    \ - n];\n   |                                ^ no implementation for `usize -\
    \ isize`\n   |\n   = help: the trait `Sub<isize>` is not implemented for `usize`\n\
    \   = help: the following other types implement trait `Sub<Rhs>`:\n          \
    \   <&'a f32 as Sub<f32>>\n             <&'a f64 as Sub<f64>>\n             <&'a\
    \ i128 as Sub<i128>>\n             <&'a i16 as Sub<i16>>\n             <&'a i32\
    \ as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n             <&'a i8 as Sub<i8>>\n\
    \             <&'a isize as Sub<isize>>\n           and 48 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s: isize = 0;\n    for _ in 0..n {\n        s += 1;\n    }\n\
    \    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp4dzmxhuo.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, n| sum + n)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpioiqlczs.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|x| x * x).sum::<isize>()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp4g09cal4.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1i3934e9.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        1\n    } else {\n        (1..n).sum(|x| x * x).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \    --> /tmp/tmpd5_tt7c7.rs:16:16\n     |\n16   |         (1..n).sum(|x| x *\
    \ x).unwrap()\n     |                ^^^ --------- supplied 1 argument\n     |\
    \                |\n     |                expected 0 arguments\n     |\nnote:\
    \ associated function defined here\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n.checked_add(1, |i| i * i)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 1 argument but 2 arguments were supplied\n\
    \   --> /tmp/tmptk5g530u.rs:13:7\n    |\n13  |     n.checked_add(1, |i| i * i)\n\
    \    |       ^^^^^^^^^^^ -  --------- supplied 2 arguments\n    |       |\n  \
    \  |       expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmptk5g530u.rs:13:5\n   |\n12 | fn sum_to_n(n: isize) -> isize {\n\
    \   |                          ----- expected `isize` because of return type\n\
    13 |     n.checked_add(1, |i| i * i)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut acc = 0;\n    for _ in 0..n {\n        acc += 1;\n    }\n   \
    \ acc\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmphpjjkhp9.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n <= 1 {\n            return n;\n        }\n     \
    \   n -= 1;\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwsxvdpsr.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, n| sum + n)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjy8ojnel.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 2 {\n        n\n    } else {\n        (n - 1).to_owned() + sum_to_n((n\
    \ - 2).to_owned())\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `21`', /tmp/tmpdb5j2epy.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    1.checked_add((1..n).sum())\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0689]: can't call method `checked_add` on ambiguous numeric type\
    \ `{integer}`\n  --> /tmp/tmps9raehbl.rs:13:7\n   |\n13 |     1.checked_add((1..n).sum())\n\
    \   |       ^^^^^^^^^^^\n   |\nhelp: you must specify a concrete type for this\
    \ numeric value, like `i32`\n   |\n13 |     1_i32.checked_add((1..n).sum())\n\
    \   |     ~~~~~\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0689`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp0typm9cs.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    1 + n*(n+1)/2\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpopaj5qf3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpx5q_lf6f.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgme5hkbk.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for i in 1..n {\n        result *= i;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `120`,\n right: `21`', /tmp/tmpt28j51ce.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    debug_assert!(n <= std::i32::MAX as isize);\n\
    \    if n == 1 {\n        return 1;\n    }\n\n    if n <= 3 {\n        return\
    \ 1;\n    }\n\n    n / 3 + 1\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `21`', /tmp/tmpiahtywdk.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    assert!(n >= 1);\n    let mut n = 0;\n    while n <= n {\n        n +=\
    \ 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        let mut n1 = n + 1;\n        if n1 < 0 {\n          \
    \  break;\n        }\n        let mut m = n1 / 2;\n        if m > n1 {\n     \
    \       break;\n        }\n        let m2 = m - 1;\n        let mut n2 = n + 1\
    \ - m;\n        if n2 < 0 {\n            n2 = n1;\n        }\n        let n3 =\
    \ n1 + n2 - m;\n        if n3 < 0 {\n            n3 = n2;\n        }\n       \
    \ let n4 = n2 + n3 - m;\n        if n4 < 0 {\n            n4 = n3;\n        }\n\
    \        n4 += n2;\n        n4 += n3;\n        n4 += n1;\n        n4 += n;\n \
    \       n4\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp74w1b5kd.rs:16:13\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n...\n16 |             break;\n   |         \
    \    ^^^^^\n   |             |\n   |             expected `isize`, found `()`\n\
    \   |             help: give it a value of the expected type: `break 42`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp74w1b5kd.rs:39:9\n   |\n39 |         n4\n  \
    \ |         ^^ expected `()`, found `isize`\n   |\nhelp: you might have meant\
    \ to return this value\n   |\n39 |         return n4;\n   |         ++++++   +\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut acc = 0;\n    while\
    \ n != 0 {\n        if n % 2 == 0 {\n            acc += n;\n        }\n      \
    \  n /= 2;\n    }\n    acc\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpogjg1bms.rs:21:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |         n /= 2;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum(|x| x).unwrap()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \    --> /tmp/tmpps_y1_g1.rs:13:12\n     |\n13   |     (1..n).sum(|x| x).unwrap()\n\
    \     |            ^^^ ----- supplied 1 argument\n     |            |\n     |\
    \            expected 0 arguments\n     |\nnote: associated function defined here\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum().unwrap()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmphe5tw5nt.rs:13:12\n\
    \   |\n13 |     (1..n).sum().unwrap()\n   |            ^^^ cannot infer type for\
    \ type parameter `S` declared on the associated function `sum`\n   |\n   = note:\
    \ type must be known at this point\nhelp: consider specifying the type argument\
    \ in the method call\n   |\n13 |     (1..n).sum::<S>().unwrap()\n   |        \
    \       +++++\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n() argument must be positive\");\n\
    \    }\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp8rh0rzkh.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    match n {\n        0 => 0,\n        _ => 1 + sum_to_n(n - 1),\n    }\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp0d6dsq2c.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpofhyjk8c.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n only works with positive numbers\"\
    )\n    }\n    let mut nsum = n;\n    while nsum > 0 {\n        nsum -= 1;\n  \
    \  }\n    nsum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9cxucxvt.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpp3uo87xo.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        0\n    }\n    let mut sum = 0isize;\n    let mut\
    \ cur = 1;\n    while cur < n {\n        sum += cur;\n        cur += 1;\n    }\n\
    \    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkn3r_26s.rs:14:9\n   |\n\
    13 | /     if n <= 0 {\n14 | |         0\n   | |         ^ expected `()`, found\
    \ integer\n15 | |     }\n   | |_____- expected this to be `()`\n   |\nhelp: you\
    \ might have meant to return this value\n   |\n14 |         return 0;\n   |  \
    \       ++++++  +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    Ordering::Less => {\n        let mut sum\
    \ = 0;\n        for i in 1..n {\n            sum += i;\n        }\n        sum\n\
    \    }\n    Ordering::Greater => {\n        let mut sum = 1;\n        for i in\
    \ 2..n {\n            sum += i;\n        }\n        sum\n    }\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found `=>`\n  --> /tmp/tmpe83w10m0.rs:14:20\n   |\n14 |     Ordering::Less =>\
    \ {\n   |                    ^^ expected one of 8 possible tokens\n\nwarning:\
    \ unused import: `std::cmp::Ordering`\n  --> /tmp/tmpe83w10m0.rs:13:9\n   |\n\
    13 |     use std::cmp::Ordering;\n   |         ^^^^^^^^^^^^^^^^^^\n   |\n   =\
    \ note: `#[warn(unused_imports)]` on by default\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0;\n    for i in 1..n {\n        s += i;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpirr57pae.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n - 1\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp6blxmhzf.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n\n    let mut sum_pre = n;\n \
    \   let mut sum = 0;\n    while n > 0 {\n        sum += sum_pre;\n        sum_pre\
    \ *= n;\n        n -= 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpp04yxqle.rs:22:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n22 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn sum(n: isize) -> isize {\n        if n == 0 {\n            return\
    \ 0;\n        }\n        (n * n + n) / 2 + n\n    }\n    sum(n) + 1\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpp3ri2dm0.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 { 1 } else { n * sum_to_n(n - 1) }\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpx9s6sfe3.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp15twyum4.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 1;\n    }\n    if n < 10 {\n        return\
    \ n;\n    }\n    if n < 100 {\n        return n * (n - 1) / 2;\n    }\n    if\
    \ n < 1000 {\n        return n * (n + 1) / 2;\n    }\n    if n < 10000 {\n   \
    \     return n * (n - 1) + n;\n    }\n    if n < 100000 {\n        return n *\
    \ (n - 1) + n / 2;\n    }\n    if n < 1000000 {\n        return n * (n - 1) +\
    \ n / 3;\n    }\n    if n < 10000000 {\n        return n * (n - 1) + n / 4;\n\
    \    }\n    if n < 100000000 {\n        return n * (n - 1) + n / 5;\n    }\n \
    \   if n < 1000000000 {\n        return n * (n - 1) + n / 6;\n    }\n    if n\
    \ < 10000000000 {\n        return n * (n - 1) + n / 7;\n    }\n    if n < 100000000000\
    \ {\n        return n * (n - 1) + n / 8;\n    }\n    if n < 1000000000000 {\n\
    \        return n * (n - 1) + n / 9;\n    }\n    if n < 10000000000000 {\n   \
    \     return n * (n - 1) + n / 10;\n    }\n    if n < 100000000000000 {\n    \
    \    return n * (n - 1) + n / 11;\n    }\n    if n < 1000000000000000 {\n    \
    \    return n * (n - 1) + n / 12;\n    }\n    if n < 10000000000000000 {\n   \
    \     return n * (n - 1) + n / 13;\n    }\n    if n < 100000000000000000 {\n \
    \       return n * (n - 1) + n / 14;\n    }\n    if n < 10000000000000000 {\n\
    \        return n * (n - 1) + n / 15;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 16;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 17;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 18;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 19;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 20;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 21;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 22;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 23;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 24;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 25;\n    }\n    if n < 100000000000000000 {\n\
    \        return n * (n - 1) + n / 26;\n    }\n\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0317]: `if` may be missing an `else` clause\n   --> /tmp/tmp5nfgi1zf.rs:100:5\n\
    \    |\n12  |   fn sum_to_n(n: isize) -> isize {\n    |                      \
    \      ----- expected `isize` because of this return type\n...\n100 | /     if\
    \ n < 100000000000000000 {\n101 | |         return n * (n - 1) + n / 26;\n102\
    \ | |     }\n    | |_____^ expected `isize`, found `()`\n    |\n    = note: `if`\
    \ expressions without `else` evaluate to `()`\n    = help: consider adding an\
    \ `else` block that evaluates to the expected type\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0317`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    let mut s = 1;\n    for _\
    \ in 0..(n - 1) {\n        s += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpflpjddp_.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn sum(x: usize) -> usize {\n        (1usize << x) + x + 1\n    }\n \
    \   let mut acc = 1usize;\n    for i in 1..n {\n        acc += sum(i);\n    }\n\
    \    acc\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptzfcwtog.rs:18:20\n   |\n\
    18 |         acc += sum(i);\n   |                    ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n18 |         acc += sum(i.try_into().unwrap());\n\
    \   |                     ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmptzfcwtog.rs:20:5\n   |\n12 | fn sum_to_n(n: isize) -> isize {\n\
    \   |                          ----- expected `isize` because of return type\n\
    ...\n20 |     acc\n   |     ^^^ expected `isize`, found `usize`\n   |\nhelp: you\
    \ can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n20 |     acc.try_into().unwrap()\n   |        ++++++++++++++++++++\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ return sum;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp3flycqvh.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |sum, x| sum + x)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8n9ic2wx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    let mut sum = 0;\n    for _ in 0..n {\n\
    \        sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpkqasa213.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 1;\n    for x in 1..n {\n        total = total * x;\n\
    \    }\n    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `120`,\n right: `21`', /tmp/tmp_11qprom.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut result = n;\n    let\
    \ mut sum: isize = n / 2;\n    while sum != 0 {\n        result = sum + result;\n\
    \        sum += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    return 1 + sum_to_n(n - 1)\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp2mxshb9w.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        let n = n.checked_add(1);\n        match n {\n      \
    \      Ok(n) => return n,\n            Err(..) => n,\n        }\n    }\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2r28aeoz.rs:16:13\n   |\n\
    15 |         match n {\n   |               - this expression has type `Option<isize>`\n\
    16 |             Ok(n) => return n,\n   |             ^^^^^ expected enum `Option`,\
    \ found enum `Result`\n   |\n   = note: expected enum `Option<isize>`\n      \
    \        found enum `Result<_, _>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2r28aeoz.rs:17:13\n\
    \   |\n15 |         match n {\n   |               - this expression has type `Option<isize>`\n\
    16 |             Ok(n) => return n,\n17 |             Err(..) => n,\n   |    \
    \         ^^^^^^^ expected enum `Option`, found enum `Result`\n   |\n   = note:\
    \ expected enum `Option<isize>`\n              found enum `Result<_, _>`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp2r28aeoz.rs:17:24\n   |\n17 |             Err(..)\
    \ => n,\n   |                        ^ expected `()`, found enum `Option`\n18\
    \ |         }\n   |          - help: consider using a semicolon here: `;`\n  \
    \ |\n   = note: expected unit type `()`\n                   found enum `Option<isize>`\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n    let mut s: isize = 0;\n  \
    \  for i in 1..n {\n        let tmp = s;\n        s += i;\n    }\n    s\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `15`,\n right: `21`', /tmp/tmpt8oc0_jo.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1jt4pe46.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpkd0_xg_t.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut running_sum = 0;\n\n    for _ in 1..n {\n        running_sum\
    \ += 1;\n    }\n\n    running_sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp965asjyw.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut res = 0;\n    for i in 1..n {\n        res += i;\n    }\n   \
    \ res\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpykv3uqaz.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut x = 0;\n    for _ in 0..n {\n        x += 1;\n    }\n    x\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp2ka75xz9.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n == 1 {\n            return 1;\n        }\n     \
    \   if n % 2 == 0 {\n            n = n / 2;\n        }\n        else {\n     \
    \       n = n * 3 + 1;\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpc_f1q5o4.rs:18:13\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |             n = n / 2;\n   |\
    \             ^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpc_f1q5o4.rs:21:13\n   |\n12\
    \ | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider making\
    \ this binding mutable: `mut n`\n...\n21 |             n = n * 3 + 1;\n   |  \
    \           ^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).fold(1, |mut sum, num| sum + num)\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp5xyhfr8j.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    sum_to_n_internal(n, n as usize)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `sum_to_n_internal` in this scope\n\
    \  --> /tmp/tmpinkqj8dg.rs:13:5\n   |\n13 |     sum_to_n_internal(n, n as usize)\n\
    \   |     ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpfi24is0h.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    if n == 1 {\n        return\
    \ 1;\n    }\n\n    1 + sum_to_n(n - 1)\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpbm6j0_oo.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 { return 1; }\n    if n == 0 { return 0; }\n    return n *\
    \ sum_to_n(n - 1);\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpfdo0udo4.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut accum = 0;\n    while n != 0 {\n        if n % 2 == 1 {\n   \
    \         accum += n;\n            n /= 2;\n        }\n        else {\n      \
    \      accum *= n;\n            n /= 2;\n        }\n    }\n    accum + 1\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpdwqdtn0y.rs:17:13\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |             n /= 2;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpdwqdtn0y.rs:21:13\n   |\n12\
    \ | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider making\
    \ this binding mutable: `mut n`\n...\n21 |             n /= 2;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 2 {\n        1\n    } else if n < 4 {\n        2 * n + 1\n   \
    \ } else {\n        sum_to_n(n - 3) + n + 1\n    }\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `14`,\n right: `21`', /tmp/tmp86_m4l4l.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1;\n    for _ in 0..n {\n        result += 1;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmppaukp6uj.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n    let mut s = n;\n    for _\
    \ in 0..s {\n        s += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `21`', /tmp/tmpfbkh_a8d.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0;\n    let mut i = 0;\n    while i < n {\n        s = s\
    \ * 10 + i;\n        i += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_pa0rubb.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpvd16o2m8.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use core::cmp::Ordering;\n\n    Ordering::Greater => {\n        let mut\
    \ s: isize = 0;\n        for _ in 0..n {\n            s += 1;\n        }\n   \
    \     s\n    }\n    Ordering::Less => {\n        let mut s: isize = 0;\n     \
    \   for _ in 0..(n + 1) {\n            s += 1;\n        }\n        s\n    }\n\
    \    Ordering::Equal => {\n        let mut s: isize = 0;\n        for _ in 0..(n\
    \ + 1) {\n            s += 1;\n        }\n        s\n    }\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found `=>`\n  --> /tmp/tmpp5_rf040.rs:15:23\n   |\n15 |     Ordering::Greater\
    \ => {\n   |                       ^^ expected one of 8 possible tokens\n\nerror[E0433]:\
    \ failed to resolve: maybe a missing crate `core`?\n  --> /tmp/tmpp5_rf040.rs:13:9\n\
    \   |\n13 |     use core::cmp::Ordering;\n   |         ^^^^ maybe a missing crate\
    \ `core`?\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n    let mut sum: isize = 1;\n\
    \    for i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpx7mpl9we.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmprc5we4bb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 0;\n    for i in 0..n {\n        result += i;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp1zkwv1vo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut accum = 0 as isize;\n    for i in 1..n {\n        accum = accum\
    \ + i;\n    }\n    accum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpmoetzxrf.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmprk4ptrmo.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    while n > 0 {\n        sum += n;\n        n -=\
    \ 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpkg00v5pq.rs:16:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::cmp::Ordering::{Greater,\
    \ Less};\n    use std::cmp;\n\n    if n < 1 { return 0; }\n    let mut n = 0;\n\
    \    let mut total = 0;\n    while n < n {\n        total += n;\n        n +=\
    \ 1;\n    }\n    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpvnrrq4_a.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpxm1no4nv.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpyulikje3.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).sum::<isize>()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold1(|a, b| a + b) as isize\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `fold1` found for struct `std::ops::Range`\
    \ in the current scope\n  --> /tmp/tmpr81tcalv.rs:13:12\n   |\n13 |     (1..n).fold1(|a,\
    \ b| a + b) as isize\n   |            ^^^^^ method not found in `std::ops::Range<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n: {} must be >= 0\", n);\n    }\n\
    \    let mut s = 0.;\n    for i in 1..n {\n        s += i;\n    }\n    s\n}\n\n\
    fn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot add-assign `isize` to `{float}`\n  --> /tmp/tmp1ju2xv9l.rs:18:11\n\
    \   |\n18 |         s += i;\n   |           ^^ no implementation for `{float}\
    \ += isize`\n   |\n   = help: the trait `AddAssign<isize>` is not implemented\
    \ for `{float}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1ju2xv9l.rs:20:5\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |                          -----\
    \ expected `isize` because of return type\n...\n20 |     s\n   |     ^ expected\
    \ `isize`, found floating-point number\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n    let mut sum = 0;\n    for\
    \ _ in 0..n {\n        sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpjkuuh4yt.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // We only want to call the function with a number greater than zero.\n\
    \    let mut result = n;\n    if n > 0 {\n        result = sum_to_n(n - 1) + n;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0;\n    for _ in 0..n {\n        s += 1;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp5h6rsh0o.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n == 0 { break }\n        n -= 1\n    }\n    n + 1\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpf2cbkfwc.rs:15:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n15 |         n -= 1\n   |       \
    \  ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n\n    if n == 0 {\n        return 1;\n    }\n\n\
    \    let mut sum = 1;\n\n    for i in 1..n {\n        sum += i;\n    }\n\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmp_mi0shdj.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n as usize + n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpz0nxhi37.rs:13:18\n   |\n\
    13 |     n as usize + n\n   |                  ^ expected `usize`, found `isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpz0nxhi37.rs:13:5\n   |\n12 | fn\
    \ sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     n as usize + n\n   |     ^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n13 |     (n as usize\
    \ + n).try_into().unwrap()\n   |     +              +++++++++++++++++++++\n\n\
    error[E0277]: cannot add `isize` to `usize`\n  --> /tmp/tmpz0nxhi37.rs:13:16\n\
    \   |\n13 |     n as usize + n\n   |                ^ no implementation for `usize\
    \ + isize`\n   |\n   = help: the trait `Add<isize>` is not implemented for `usize`\n\
    \   = help: the following other types implement trait `Add<Rhs>`:\n          \
    \   <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n             <&'a\
    \ i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n             <&'a i32\
    \ as Add<i32>>\n             <&'a i64 as Add<i64>>\n             <&'a i8 as Add<i8>>\n\
    \             <&'a isize as Add<isize>>\n           and 48 others\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        let mut res = 0;\n        for i in 1..n {\n         \
    \   res += i;\n        }\n        if res == n {\n            return n;\n     \
    \   }\n        n = res;\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpxd468x1l.rs:21:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |         n = res;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        1\n    }\n\n    let mut sum = 0;\n    for _ in 0..n\
    \ {\n        sum += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1rwy_tyo.rs:14:9\n   |\n\
    13 | /     if n < 1 {\n14 | |         1\n   | |         ^ expected `()`, found\
    \ integer\n15 | |     }\n   | |_____- expected this to be `()`\n   |\nhelp: you\
    \ might have meant to return this value\n   |\n14 |         return 1;\n   |  \
    \       ++++++  +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n >= 1);\n    let mut s = 0.0;\n    for i in 1..n {\n \
    \       s += i;\n    }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: cannot add-assign `isize` to `{float}`\n  --> /tmp/tmpicbyptk4.rs:16:11\n\
    \   |\n16 |         s += i;\n   |           ^^ no implementation for `{float}\
    \ += isize`\n   |\n   = help: the trait `AddAssign<isize>` is not implemented\
    \ for `{float}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpicbyptk4.rs:18:5\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |                          -----\
    \ expected `isize` because of return type\n...\n18 |     s\n   |     ^ expected\
    \ `isize`, found floating-point number\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn sum_to_n(n: isize) -> isize {\n        if n <= 0 {\n            return\
    \ 1;\n        }\n        let mut sum: isize = 0;\n        for _ in 0..n {\n  \
    \          sum += 1;\n        }\n        sum\n    }\n    sum_to_n(n)\n}\n\nfn\
    \ main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp9fja5z1f.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n\n    (1..n).sum().cmp(&Ordering::Less)\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmprm7uqtz6.rs:15:12\n\
    \   |\n15 |     (1..n).sum().cmp(&Ordering::Less)\n   |            ^^^ cannot\
    \ infer type for type parameter `S` declared on the associated function `sum`\n\
    \   |\n   = note: type must be known at this point\nhelp: consider specifying\
    \ the type argument in the method call\n   |\n15 |     (1..n).sum::<S>().cmp(&Ordering::Less)\n\
    \   |               +++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 1 {\n        return n;\n    }\n    let mut running_total: isize\
    \ = 0;\n    let mut i = 31;\n    while i / 2 > 0 {\n        running_total += i;\n\
    \        i += 2;\n    }\n    running_total += i;\n    return running_total;\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n\n    Ordering::Less\n        .max_by(|a, b|\
    \ a.partial_cmp(b).unwrap())\n        .unwrap_or(n) + n\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0599]: `std::cmp::Ordering` is not an iterator\n   --> /tmp/tmpf_ntgmyt.rs:16:10\n\
    \    |\n16  |           .max_by(|a, b| a.partial_cmp(b).unwrap())\n    |     \
    \       ^^^^^^ `std::cmp::Ordering` is not an iterator\n    |\n    = note: the\
    \ following trait bounds were not satisfied:\n            `std::cmp::Ordering:\
    \ Iterator`\n            which is required by `&mut std::cmp::Ordering: Iterator`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: isize = 0;\n\n    for _ in 1..n {\n        sum += 1;\n \
    \   }\n\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqwjqi11f.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(0, |accum, _| accum + _)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error: in expressions, `_` can only be used on the left-hand side of an\
    \ assignment\n  --> /tmp/tmp76nqusso.rs:13:39\n   |\n13 |     (1..n).fold(0, |accum,\
    \ _| accum + _)\n   |                                       ^ `_` not allowed\
    \ here\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp5gfoujee.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    let mut s = n;\n    while s > 0 {\n      \
    \  s += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n = 1u64;\n    while n <= n {\n        n *= 2u64;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpq3daap_e.rs:17:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n...\n17 |     n\n   |     ^ expected `isize`,\
    \ found `u64`\n   |\nhelp: you can convert a `u64` to an `isize` and panic if\
    \ the converted value doesn't fit\n   |\n17 |     n.try_into().unwrap()\n   |\
    \      ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n\n    let mut total = 0;\n    for num in 1..n\
    \ {\n        total += num;\n    }\n    return total;\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_qj0a56c.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut ret: usize = 1;\n\n    for i in 1..=n {\n        ret = ret +\
    \ i;\n    }\n\n    ret\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2l59wz4s.rs:16:21\n   |\n\
    16 |         ret = ret + i;\n   |                     ^ expected `usize`, found\
    \ `isize`\n\nerror[E0277]: cannot add `isize` to `usize`\n  --> /tmp/tmp2l59wz4s.rs:16:19\n\
    \   |\n16 |         ret = ret + i;\n   |                   ^ no implementation\
    \ for `usize + isize`\n   |\n   = help: the trait `Add<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2l59wz4s.rs:19:5\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |                          -----\
    \ expected `isize` because of return type\n...\n19 |     ret\n   |     ^^^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n19 |     ret.try_into().unwrap()\n\
    \   |        ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        0\n    } else {\n        if n == 1 {\n          \
    \  1\n        } else {\n            *(*(n - 1) + 1)\n        }\n    }\n}\n\nfn\
    \ main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmp_a0p61c7.rs:19:15\n\
    \   |\n19 |             *(*(n - 1) + 1)\n   |               ^^^^^^^^\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0614`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    n.checked_add(1, |x| x * x).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 1 argument but 2 arguments were supplied\n\
    \   --> /tmp/tmpvq_90044.rs:13:7\n    |\n13  |     n.checked_add(1, |x| x * x).unwrap()\n\
    \    |       ^^^^^^^^^^^ -  --------- supplied 2 arguments\n    |       |\n  \
    \  |       expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut n1: isize = 1;\n\
    \    let mut n2: isize = 0;\n    for _ in 0..n {\n        n1 += 1;\n        n2\
    \ += n1;\n    }\n\n    n2\n}\n\nfn main() {\n    let candidate = sum_to_n;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpe6nmasw5.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ n in 1..=n {\n        sum += n;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 0;\n    for _ in 0..n {\n        result += 1;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmp8kr9s8fj.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpeubvvgu4.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n > 0);\n    let mut sum = 0;\n    for i in 1..n {\n  \
    \      sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9zy55ddj.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    match n as usize {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpeslpg7ze.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum();\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwnah3w17.rs:12:26\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |    --------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n13 |     (1..n).sum();\n   |           \
    \      - help: remove this semicolon\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum(|&x| x as isize)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 0 arguments but 1 argument was supplied\n\
    \    --> /tmp/tmplinbuz1t.rs:13:12\n     |\n13   |     (1..n).sum(|&x| x as isize)\n\
    \     |            ^^^ --------------- supplied 1 argument\n     |           \
    \ |\n     |            expected 0 arguments\n     |\nnote: associated function\
    \ defined here\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    assert!(n >= 1);\n    let mut acc: isize = 0;\n    while n != 0 {\n \
    \       acc += n;\n        n -= 1;\n    }\n    acc\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp7dd1ghw8.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return n;\n    }\n\n    loop {\n        let mut\
    \ sum = 0;\n        for _ in 0..n {\n            sum += 1;\n        }\n\n    \
    \    if sum == n {\n            return sum;\n        }\n\n        n *= 2;\n  \
    \  }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp9w0e_hj8.rs:27:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n27 |         n *= 2;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 1 {\n        return n;\n    }\n\n    let mut sum = 1;\n    for\
    \ _ in 0..n {\n        sum += 1;\n    }\n\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `21`', /tmp/tmpn9ctg6ww.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 2 {\n        return 1;\n    }\n    if n > 100 {\n        return\
    \ n;\n    }\n    return n*n + sum_to_n(n - 1);\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `91`,\n right: `21`', /tmp/tmp8070j73w.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0isize;\n    for i in 1..n {\n        s += i;\n    }\n  \
    \  s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpasqjxztl.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum = 1;\n    for\
    \ (i, val) in (&n, &1)..=(1, n).rev() {\n        sum += val;\n    }\n\n    sum\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: `({integer}, isize)` is not an iterator\n  --> /tmp/tmp3js6njqj.rs:18:39\n\
    \   |\n18 |     for (i, val) in (&n, &1)..=(1, n).rev() {\n   |              \
    \                         ^^^ `({integer}, isize)` is not an iterator\n   |\n\
    \   = note: the following trait bounds were not satisfied:\n           `({integer},\
    \ isize): Iterator`\n           which is required by `&mut ({integer}, isize):\
    \ Iterator`\n\nerror[E0277]: the trait bound `(&isize, &{integer}): Step` is not\
    \ satisfied\n  --> /tmp/tmp3js6njqj.rs:18:21\n   |\n18 |     for (i, val) in (&n,\
    \ &1)..=(1, n).rev() {\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^ the trait\
    \ `Step` is not implemented for `(&isize, &{integer})`\n   |\n   = help: the following\
    \ other types implement trait `Step`:\n             char\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n             u128\n           and 5 others\n   = note: required\
    \ because of the requirements on the impl of `Iterator` for `RangeInclusive<(&isize,\
    \ &{integer})>`\n   = note: required because of the requirements on the impl of\
    \ `IntoIterator` for `RangeInclusive<(&isize, &{integer})>`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0599.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 1 {\n        return n;\n    }\n\n    fn sum_to_n_aux(i: isize)\
    \ -> isize {\n        if i == 1 {\n            return i;\n        }\n        return\
    \ i * sum_to_n_aux(i - 1);\n    }\n    return sum_to_n_aux(n);\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpubaezjtw.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s: isize = 0;\n    for i in 1..=n {\n        s = s + i;\n   \
    \ }\n    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = n;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 1; // assume n is >= 0\n    let mut power = 1;\n\n \
    \   while n != 0 {\n        if n % 2 == 0 {\n            result *= power;\n  \
    \      }\n        power = power * 2;\n        n /= 2;\n    }\n\n    result\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp274m8vls.rs:21:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |         n /= 2;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..=n).fold(0, |sum, i| sum + i)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 1 {\n        1\n    } else {\n        n % 2 == 0 ? sum_to_n(n\
    \ - 1) + 1 : sum_to_n(n - 1) + 0\n    }\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `sum_to_n`\n\
    \  --> /tmp/tmpszt_9s0_.rs:16:22\n   |\n16 |         n % 2 == 0 ? sum_to_n(n -\
    \ 1) + 1 : sum_to_n(n - 1) + 0\n   |                      ^^^^^^^^ expected one\
    \ of `.`, `;`, `?`, `}`, or an operator\n\nerror: aborting due to previous error\n\
    \n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // Sum from the largest to the smallest value\n    (1..n).fold(0, |sum,\
    \ num| sum + num)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptvblgh50.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"sum_to_n: n must be positive\")\n    }\n\
    \    n.checked_add_checked(1).expect(\"n must be positive\")\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `checked_add_checked` found for type `isize`\
    \ in the current scope\n  --> /tmp/tmp26f_wu6r.rs:16:7\n   |\n16 |     n.checked_add_checked(1).expect(\"\
    n must be positive\")\n   |       ^^^^^^^^^^^^^^^^^^^ help: there is an associated\
    \ function with a similar name: `checked_add`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 { return 1; }\n    let mut total: isize = 0;\n    for i in 1..n\
    \ {\n        total += i;\n    }\n    return total;\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgzo_zh9t.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n    if n < 2 {\n        return\
    \ n;\n    }\n    let mut sum_so_far = 0;\n    for _ in 0..n {\n        sum_so_far\
    \ += 1;\n    }\n    return sum_so_far;\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpwwcxo75q.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).reduce(|x, _| x + 1)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpa6h1_vsv.rs:13:5\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |                          ----- expected\
    \ `isize` because of return type\n13 |     (1..n).reduce(|x, _| x + 1)\n   | \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n   |\n\
    \   = note: expected type `isize`\n              found enum `Option<isize>`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        0\n    } else {\n        (1..n).sum()\n    }\n}\n\
    \nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpx75cibch.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(1, |acc, _| acc + _)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error: in expressions, `_` can only be used on the left-hand side of an\
    \ assignment\n  --> /tmp/tmpenyymh13.rs:13:35\n   |\n13 |     (1..n).fold(1, |acc,\
    \ _| acc + _)\n   |                                   ^ `_` not allowed here\n\
    \nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n\n    (n + 1).partial_cmp(&n.partial_cmp())\
    \ as Ordering\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \    --> /tmp/tmpys_ozxj8.rs:15:28\n     |\n15   |     (n + 1).partial_cmp(&n.partial_cmp())\
    \ as Ordering\n     |                            ^^^^^^^^^^^- supplied 0 arguments\n\
    \     |                            |\n     |                            expected\
    \ 1 argument\n     |\nnote: associated function defined here\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpys_ozxj8.rs:15:25\n   |\n15 |     (n + 1).partial_cmp(&n.partial_cmp())\
    \ as Ordering\n   |                         ^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n   |\n   = note: expected reference `&isize`\n        \
    \      found reference `&Option<std::cmp::Ordering>`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpys_ozxj8.rs:15:5\n   |\n12 | fn sum_to_n(n: isize) -> isize\
    \ {\n   |                          ----- expected `isize` because of return type\n\
    ...\n15 |     (n + 1).partial_cmp(&n.partial_cmp()) as Ordering\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `std::cmp::Ordering`\n\nerror[E0605]: non-primitive\
    \ cast: `Option<std::cmp::Ordering>` as `std::cmp::Ordering`\n  --> /tmp/tmpys_ozxj8.rs:15:5\n\
    \   |\n15 |     (n + 1).partial_cmp(&n.partial_cmp()) as Ordering\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ an `as` expression can only be used to convert between primitive types or to\
    \ coerce to a specific trait object\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308, E0605.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 0;\n    }\n    let mut sum = 0;\n    for x\
    \ in 1..n {\n        sum += x;\n    }\n    return sum;\n}\n\nfn main() {\n   \
    \ let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpibrjj4er.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut acc = 0;\n    for _ in 1..n {\n        acc += 1;\n    }\n   \
    \ acc\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwnlrar74.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        1\n    } else {\n        (1..n).sum().unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n  --> /tmp/tmpp4xeaevi.rs:16:16\n\
    \   |\n16 |         (1..n).sum().unwrap()\n   |                ^^^ cannot infer\
    \ type for type parameter `S` declared on the associated function `sum`\n   |\n\
    \   = note: type must be known at this point\nhelp: consider specifying the type\
    \ argument in the method call\n   |\n16 |         (1..n).sum::<S>().unwrap()\n\
    \   |                   +++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp6x16lprp.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut n1: isize = 0;\n    while n1 < n {\n        n1 += 1;\n    }\n\
    \    return n1;\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpkud0snzg.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total = 1;\n    for i in (1..n).rev() {\n        total += i;\n\
    \    }\n    total\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpuwq2mry5.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = vec![0; n];\n    let mut sum = 0;\n    for i in 0..n {\n\
    \        s.push(i as isize);\n        sum += i as isize;\n    }\n    while !s.is_empty()\
    \ {\n        let x = s.remove(0);\n        sum += x;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30),\
    \ 465);\n    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp4lihd39_.rs:13:25\n   |\n\
    13 |     let mut s = vec![0; n];\n   |                         ^ expected `usize`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |     let mut s = vec![0; n.try_into().unwrap()];\n\
    \   |                          ++++++++++++++++++++\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (n * (n + 1)) / 2\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    let mut acc = 0;\n    for\
    \ i in 1..n {\n        acc += i;\n    }\n    acc\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpt75o7txm.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 0;\n    for x in 1..=n {\n        result += x;\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpk4p3srkg.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut s = 0;\n    for i in 1..n {\n        s += i;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp194l2gbv.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    \n    if n % 2 != 0 {\n        let mut sum = 0;\n        let mut\
    \ num = n;\n        while num > 1 {\n            sum += num % 2;\n           \
    \ num /= 2;\n        }\n        return sum + 1;\n    }\n    \n    let mut sum\
    \ = 0;\n    let mut num = n;\n    while num > 1 {\n        sum += num % 2;\n \
    \       num /= 2;\n    }\n    return sum + 1;\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `21`', /tmp/tmp2md44urq.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum: isize = 0;\n    for i in 1..n {\n        sum += i;\n   \
    \ }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8v_dgzzo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for\
    \ n in 1..=n {\n        sum += n;\n    }\n\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdvzx7oq8.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgikflrpr.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    match (0..i).sum() {\n        (i, 0) => 1,\n        (i, x) => i * x +\
    \ sum_to_n(x),\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmpahgx1wh4.rs:13:15\n\
    \   |\n13 |     match (0..i).sum() {\n   |               ^ help: a local variable\
    \ with a similar name exists: `n`\n\nerror[E0277]: the trait bound `(_, _): Sum<{integer}>`\
    \ is not satisfied\n    --> /tmp/tmpahgx1wh4.rs:13:18\n     |\n13   |     match\
    \ (0..i).sum() {\n     |                  ^^^ the trait `Sum<{integer}>` is not\
    \ implemented for `(_, _)`\n     |\n     = help: the following other types implement\
    \ trait `Sum<A>`:\n               <Duration as Sum<&'a Duration>>\n          \
    \     <Duration as Sum>\n               <Option<T> as Sum<Option<U>>>\n      \
    \         <Result<T, E> as Sum<Result<U, E>>>\n               <Simd<f32, LANES>\
    \ as Sum<&'a Simd<f32, LANES>>>\n               <Simd<f32, LANES> as Sum>\n  \
    \             <Simd<f64, LANES> as Sum<&'a Simd<f64, LANES>>>\n              \
    \ <Simd<f64, LANES> as Sum>\n             and 72 others\nnote: required by a bound\
    \ in `std::iter::Iterator::sum`\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0425.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = 0;\n    for i in 0..n {\n        result += i;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpd_l1lifz.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for (num) in &[isize::from(1)..n] {\n        sum\
    \ += num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "warning: unnecessary parentheses around pattern\n  --> /tmp/tmp42lxioem.rs:14:9\n\
    \   |\n14 |     for (num) in &[isize::from(1)..n] {\n   |         ^   ^\n   |\n\
    \   = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n\
    \   |\n14 -     for (num) in &[isize::from(1)..n] {\n14 +     for num in &[isize::from(1)..n]\
    \ {\n   | \n\nerror[E0277]: cannot add-assign `&std::ops::Range<isize>` to `{integer}`\n\
    \  --> /tmp/tmp42lxioem.rs:15:13\n   |\n15 |         sum += num;\n   |       \
    \      ^^ no implementation for `{integer} += &std::ops::Range<isize>`\n   |\n\
    \   = help: the trait `AddAssign<&std::ops::Range<isize>>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut sum: isize = 0;\n\
    \    for _ in 0..n {\n        sum += 1;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpcpj0pb30.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    use std::cmp::Ordering;\n    let mut result = 1;\n    let mut ordering\
    \ = Ordering::Greater;\n    let mut cur = 0;\n    while n > 0 {\n        n -=\
    \ 1;\n        cur += 1;\n        if n == 1 {\n            ordering = Ordering::Equal;\n\
    \        }\n        result = cur + result * (ordering as Ordering);\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: cannot multiply `{integer}` by `std::cmp::Ordering`\n  -->\
    \ /tmp/tmp999_7wee.rs:23:31\n   |\n23 |         result = cur + result * (ordering\
    \ as Ordering);\n   |                               ^ no implementation for `{integer}\
    \ * std::cmp::Ordering`\n   |\n   = help: the trait `Mul<std::cmp::Ordering>`\
    \ is not implemented for `{integer}`\n   = help: the following other types implement\
    \ trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64\
    \ as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as\
    \ Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n\
    \             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n  \
    \         and 49 others\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).map(|i| i * i).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp6ohn5uux.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 1 {\n        0\n    } else {\n        1 + n * sum_to_n(n - 1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1237`,\n right: `21`', /tmp/tmppw1opn0r.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1\n    }\n    let mut sum: isize = 0;\n \
    \   for i in 1..n {\n        sum += i;\n    }\n    return sum\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpcr2_jl80.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpldidtzyc.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpl_4217qc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut running_total = 0;\n    let mut running_sum = 0;\n    for _ in\
    \ 0..n {\n        running_total += 1;\n        running_sum += 1;\n    }\n    running_total\
    \ += 1;\n    running_sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpb5mkfqbc.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 { 1 }\n    else { n * sum_to_n(n - 1) }\n}\n\nfn main() {\n\
    \    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `720`,\n right: `21`', /tmp/tmpxscbmk6s.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8fn6p7em.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpac6f1k5i.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return\
    \ 1;\n    }\n    let mut s = 1;\n    for i in 1..n {\n        s += i;\n    }\n\
    \    s\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpc1w3_sif.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 1 {\n        return 1;\n    }\n    if n == 0 {\n        return\
    \ 0;\n    }\n    (n - 1).checked_add((n - 1).checked_mul(2).unwrap()).unwrap();\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjg9uua6m.rs:12:26\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |    --------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n...\n19 |     (n - 1).checked_add((n - 1).checked_mul(2).unwrap()).unwrap();\n\
    \   |                                                                  - help:\
    \ remove this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!((0..n).any(|i| i >= 0));\n    (1..n).filter(|i| i >= 1).sum()\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp47v9giiq.rs:14:28\n   |\n\
    14 |     (1..n).filter(|i| i >= 1).sum()\n   |                            ^\n\
    \   |                            |\n   |                            expected `&isize`,\
    \ found integer\n   |                            help: consider borrowing here:\
    \ `&1`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    loop {\n        if n < 1 {\n            return n;\n        }\n      \
    \  n -= 1;\n    }\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5xupwr1k.rs:17:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n17 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).fold(1, |sum, item| sum + item)\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `21`', /tmp/tmpx3k5_j7z.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (n * n).ceil() as isize\n}\n\nfn main() {\n    let candidate = sum_to_n;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11),\
    \ 66);\n    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpr7p8fsrn.rs:13:13\n   |\n13 |     (n * n).ceil() as isize\n\
    \   |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\n            \"Invalid value for parameter:\
    \ n = {:?}, must be >=0\",\n            n\n        );\n    }\n    let mut acc\
    \ = n;\n    for i in 1..=n {\n        acc += i;\n    }\n    acc\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp663mux2w.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for\
    \ i in 1..n {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpj4z48h63.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    fn inner(i: isize) -> isize {\n        if i < n {\n            return\
    \ i + inner(i + 1);\n        } else {\n            return i;\n        }\n    }\n\
    \    inner(0);\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0434]: can't capture dynamic environment in a fn item\n  --> /tmp/tmpb9tv8z8g.rs:14:16\n\
    \   |\n14 |         if i < n {\n   |                ^\n   |\n   = help: use the\
    \ `|| { ... }` closure form instead\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpb9tv8z8g.rs:12:26\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |    --------              ^^^^^\
    \ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as\
    \ its body has no tail or `return` expression\n...\n20 |     inner(0);\n   | \
    \            - help: remove this semicolon\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0434.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut total: isize = 0;\n    let mut num: usize = 1;\n    while num\
    \ < n {\n        total += num;\n        num += 1;\n    }\n    total\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6oadwfnb.rs:15:17\n   |\n\
    15 |     while num < n {\n   |                 ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n15 |     while num < n.try_into().unwrap() {\n   |\
    \                  ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp6oadwfnb.rs:16:18\n   |\n16 |         total += num;\n   |          \
    \        ^^^ expected `isize`, found `usize`\n\nerror[E0277]: cannot add-assign\
    \ `usize` to `isize`\n  --> /tmp/tmp6oadwfnb.rs:16:15\n   |\n16 |         total\
    \ += num;\n   |               ^^ no implementation for `isize += usize`\n   |\n\
    \   = help: the trait `AddAssign<usize>` is not implemented for `isize`\n   =\
    \ help: the following other types implement trait `AddAssign<Rhs>`:\n        \
    \     <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n            \
    \ <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n             <i128\
    \ as AddAssign<&i128>>\n             <i128 as AddAssign>\n             <i16 as\
    \ AddAssign<&i16>>\n             <i16 as AddAssign>\n           and 20 others\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp6v228z0n.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut result = n;\n    if n <= 0 {\n        return result;\n    }\n\
    \    while n > 0 {\n        n -= 1;\n        result += n;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp2nekakfv.rs:18:9\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n -= 1;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 1;\n    }\n    let mut s = 1;\n    let mut\
    \ i = 0;\n    while i < n {\n        s *= i;\n        i += 1;\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpusrd3kv3.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    loop {\n        match n %\
    \ 3 {\n            0 => return n,\n            1 => return n + 1,\n          \
    \  2 => return n + 2,\n            _ => n -= 3\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6),\
    \ 21);\n    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n\
    \    assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp2kyw0ldx.rs:21:18\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n21 |             _ => n -= 3\n  \
    \ |                  ^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n <= 0 {\n        return 1;\n    }\n    if n == 1 {\n        return\
    \ 1;\n    }\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n  \
    \  }\n    sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmpjkf7g7nx.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n < 0 {\n        panic!(\"invalid number: {:?}\", n);\n    }\n   \
    \ if n == 0 {\n        return 0;\n    }\n    if n < 10 {\n        return n + 1;\n\
    \    }\n\n    let mut sum = 0;\n    let mut max_to_n = n;\n    while n >= 10 {\n\
    \        sum += n / 10;\n        n %= 10;\n    }\n\n    let mut max_to_n = n -\
    \ sum;\n    while max_to_n >= 10 {\n        sum += max_to_n / 10;\n        max_to_n\
    \ %= 10;\n    }\n\n    return sum + 1;\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: "warning: unused variable: `max_to_n`\n  --> /tmp/tmpfp9f2j82.rs:24:13\n\
    \   |\n24 |     let mut max_to_n = n;\n   |             ^^^^^^^^ help: if this\
    \ is intentional, prefix it with an underscore: `_max_to_n`\n   |\n   = note:\
    \ `#[warn(unused_variables)]` on by default\n\nwarning: variable does not need\
    \ to be mutable\n  --> /tmp/tmpfp9f2j82.rs:24:9\n   |\n24 |     let mut max_to_n\
    \ = n;\n   |         ----^^^^^^^^\n   |         |\n   |         help: remove this\
    \ `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmpfp9f2j82.rs:27:9\n  \
    \ |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n27 |         n %= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error; 2 warnings emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    if n == 0 {\n        return 0;\n    }\n    n += 1;\n\n    (1..n).map(|i|\
    \ i * i).sum()\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpx_khmmos.rs:16:5\n\
    \   |\n12 | fn sum_to_n(n: isize) -> isize {\n   |             - help: consider\
    \ making this binding mutable: `mut n`\n...\n16 |     n += 1;\n   |     ^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    (1..n).sum();\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_m5_ug39.rs:12:26\n   |\n\
    12 | fn sum_to_n(n: isize) -> isize {\n   |    --------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n13 |     (1..n).sum();\n   |           \
    \      - help: remove this semicolon\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += 1;\n    }\n   \
    \ sum\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `21`', /tmp/tmph5l6g3nz.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    let mut sum_: isize = 0;\n    for i in 1..n {\n        sum_ += i;\n \
    \   }\n    sum_\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpua14vvio.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    debug_assert!(n == 0 || n > 0);\n    let mut sum = 0;\n    for i in 1..=n\
    \ {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate =\
    \ sum_to_n;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(6), 21);\n\
    \    assert_eq!(candidate(11), 66);\n    assert_eq!(candidate(30), 465);\n   \
    \ assert_eq!(candidate(100), 5050);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfn sum_to_n(n: isize) -> isize\
    \ {\n    // sum function from Rust library sum\n    (1..n).fold(0, |mut sum, i|\
    \ sum + i)\n}\n\nfn main() {\n    let candidate = sum_to_n;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(6), 21);\n    assert_eq!(candidate(11), 66);\n\
    \    assert_eq!(candidate(30), 465);\n    assert_eq!(candidate(100), 5050);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptrp8p5f8.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

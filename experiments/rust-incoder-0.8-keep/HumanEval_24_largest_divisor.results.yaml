name: HumanEval_24_largest_divisor
language: rust
results:
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 0;\n    let mut max_div_divisor = 0;\n   \
    \ let mut max_div_divisor_squared = 0;\n\n    for i in 1..=n {\n        let mut\
    \ divisor = 1;\n        let mut divisor_squared = 1;\n        for j in 0..=i {\n\
    \            if i % j == 0 {\n                divisor += 1;\n                divisor_squared\
    \ += j;\n                if divisor_squared > max_div_divisor {\n            \
    \        max_div_divisor = divisor_squared;\n                    max_div_divisor_squared\
    \ = divisor;\n                }\n            }\n        }\n        if divisor\
    \ > max_div {\n            max_div = divisor;\n        }\n    }\n\n    if max_div_divisor\
    \ == max_div {\n        max_div_divisor_squared\n    } else {\n        max_div_divisor\n\
    \    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpmza9yd7_.rs:13:16\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (n as isize) / isize_factors(n).iter().max().unwrap()\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `isize_factors` in this scope\n -->\
    \ /tmp/tmp0yuryev0.rs:5:20\n  |\n5 |     (n as isize) / isize_factors(n).iter().max().unwrap()\n\
    \  |                    ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max: isize = 1;\n    let mut i = 1; // starting from\
    \ 2, since 1 is evenly divisible by 2\n    while i <= n {\n        if n % i ==\
    \ 0 {\n            max = i;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: isize = 1;\n    let mut n: isize = n;\n\n    while\
    \ i * i < n {\n        i += 1;\n    }\n\n    for j in 1..i {\n        if n % j\
    \ == 0 {\n            n = n / j;\n        }\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkbbepg9y.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = 1;\n    while (res <= n) {\n        res = (res\
    \ + n) / 2;\n    }\n    res\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n\n    // find the smallest divisor\
    \ of n that is evenly divisible by 2\n    for i in 2..((n / 2) + 1) as usize {\n\
    \        if n % i == 0 {\n            return i;\n        }\n    }\n\n    n\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp79wxikbw.rs:9:16\n  |\n9 |\
    \         if n % i == 0 {\n  |                ^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot mod `isize` by `usize`\n --> /tmp/tmp79wxikbw.rs:9:14\n\
    \  |\n9 |         if n % i == 0 {\n  |              ^ no implementation for `isize\
    \ % usize`\n  |\n  = help: the trait `Rem<usize>` is not implemented for `isize`\n\
    \  = help: the following other types implement trait `Rem<Rhs>`:\n           \
    \ <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n            <&'a i128\
    \ as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n\
    \            <&'a i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n        \
    \    <&'a isize as Rem<isize>>\n          and 54 others\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp79wxikbw.rs:10:20\n   |\n10 |             return i;\n \
    \  |                    ^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n10 |             return i.try_into().unwrap();\n   |                  \
    \   ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 10 {\n        return 1;\n    }\n    let mut largest_divisor:\
    \ isize = 1;\n    let mut square: isize = n;\n    while square >= 2 {\n      \
    \  square = square / 2;\n        largest_divisor = largest_divisor + 1;\n    }\n\
    \    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmpczgevqvi.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = n;\n    let mut largest_divisor = 1;\n    while\
    \ i * largest_divisor <= n {\n        largest_divisor += 1;\n        i -= 1;\n\
    \    }\n    i\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpg9z37z1t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: isize = 1;\n    let mut m = 1;\n    while i <= n\
    \ {\n        if n % i == 0 {\n            m = i;\n        }\n        i += 1;\n\
    \    }\n    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp0st2n0gm.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).reverse().fold(1, |acc, &x| {\n        acc.checked_add(&x).ok()\n\
    \    });\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `reverse` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmp1bmwoi20.rs:5:13\n  |\n5 |     (1..=n).reverse().fold(1,\
    \ |acc, &x| {\n  |             ^^^^^^^ method not found in `RangeInclusive<isize>`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmp1bmwoi20.rs:4:33\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpk5wur4em.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Start with a non-negative number as the largest divisor\n\
    \    let mut largest_divisor = n as isize;\n    let mut num_divisors: isize =\
    \ 0;\n    // Loop while num_divisors < n\n    while num_divisors <= n {\n    \
    \    // Find the divisor of the form n * (n/num_divisors)\n        let divisor\
    \ = n / num_divisors;\n        // If the divisor is greater than n, then the smallest\
    \ divisor of n is\n        // the divisor, otherwise its greater than the largest\
    \ divisor\n        if divisor > n {\n            largest_divisor = divisor;\n\
    \        } else {\n            largest_divisor = n;\n            break;\n    \
    \    }\n        // Add 1 to the number of divisors\n        num_divisors += 1;\n\
    \    }\n    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to divide by zero', /tmp/tmp1lawadud.rs:11:23\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 0;\n    let mut current_number = 1;\n\
    \n    // loops until current_number is larger than n\n    loop {\n        if n\
    \ % current_number == 0 {\n            largest_divisor = current_number;\n   \
    \     }\n        current_number += 1;\n        if current_number > n {\n     \
    \       break;\n        }\n    }\n\n    return largest_divisor;\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqr_wbu4r.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    fn gcd(a: isize, b: isize) -> isize {\n        if b == 0 {\n\
    \            return a\n        }\n        gcd(b, a % b)\n    }\n\n    if n <=\
    \ 1 {\n        return n\n    }\n\n    let mut cur = 0 as isize;\n    let mut min_div\
    \ = 1;\n    let mut max_div = n as isize;\n\n    for x in 1..n / 2 {\n       \
    \ let div = gcd(x, n);\n\n        if x < n / div {\n            min_div = x;\n\
    \            max_div = div;\n        }\n    }\n\n    if n / max_div > max_div\
    \ {\n        max_div = n / max_div;\n    }\n\n    while max_div > 1 {\n      \
    \  let div = max_div;\n\n        for _ in 0..div {\n            if n % div ==\
    \ 0 {\n                break;\n            }\n\n            div -= 1;\n      \
    \  }\n\n        if div > min_div {\n            break;\n        }\n\n        max_div\
    \ -= 1;\n    }\n\n    max_div\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "warning: unused variable: `cur`\n  --> /tmp/tmp4rb1h_ht.rs:16:13\n   |\n\
    16 |     let mut cur = 0 as isize;\n   |             ^^^ help: if this is intentional,\
    \ prefix it with an underscore: `_cur`\n   |\n   = note: `#[warn(unused_variables)]`\
    \ on by default\n\nwarning: variable does not need to be mutable\n  --> /tmp/tmp4rb1h_ht.rs:16:9\n\
    \   |\n16 |     let mut cur = 0 as isize;\n   |         ----^^^\n   |        \
    \ |\n   |         help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign twice to immutable variable `div`\n\
    \  --> /tmp/tmp4rb1h_ht.rs:41:13\n   |\n34 |         let div = max_div;\n   |\
    \             ---\n   |             |\n   |             first assignment to `div`\n\
    \   |             help: consider making this binding mutable: `mut div`\n...\n\
    41 |             div -= 1;\n   |             ^^^^^^^^ cannot assign twice to immutable\
    \ variable\n\nerror: aborting due to previous error; 2 warnings emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut num: isize = 1; // The largest integer smaller than\
    \ n\n    while num * num <= n {\n        num += 1; // Number that divides n evenly\n\
    \    }\n    num\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp15y8wzbv.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut l = n;\n    for _ in 0..10 {\n \
    \       let mut m = m - 1;\n        for _ in 0..m {\n            if n % m == 0\
    \ {\n                l = l;\n            } else {\n                break;\n  \
    \          }\n        }\n    }\n    l\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmphusul_zm.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return 1;\n    }\n    let mut i = 0;\n \
    \   let mut j = n;\n    let mut largest_divisor: isize = 0;\n    let mut num_divs:\
    \ isize = 0;\n    while i < j {\n        if j % i == 0 {\n            i += 1;\n\
    \            num_divs += 1;\n        } else {\n            i += 1;\n         \
    \   if num_divs > largest_divisor {\n                largest_divisor = num_divs;\n\
    \            }\n            num_divs = 0;\n        }\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpu1iwe7f_.rs:13:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (**n).min(|a, b| a % b == 0)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpz2z_9cep.rs:5:7\n\
    \  |\n5 |     (**n).min(|a, b| a % b == 0)\n  |       ^^\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0614`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 1);\n    debug_assert!((n & (n - 1)) == 0);\n\
    \    let mut n1 = n / 2;\n    while n1 % 2 != 0 {\n        n1 /= 2;\n    }\n \
    \   while n != n1 {\n        n = n1;\n        n1 = n / 2;\n    }\n    n\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp_ideoh9u.rs:12:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n = n1;\n\
    \   |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n\n    while max_divisor * max_divisor\
    \ <= n {\n        max_divisor += 1;\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmokc32u_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).filter(|&d| n % d == 0).max().unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpaallau31.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (0..n).fold(0, |acc, n|\n        if n % acc == 0 {\n       \
    \     acc\n        } else {\n            acc\n        }\n    )\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmp6n1a3vs4.rs:6:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n\n    let mut max = (n - 1) / 2;\n\
    \    while max % 2 == 0 {\n        max /= 2;\n    }\n\n    max\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 2 == 0', /tmp/tmpfipssjr4.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max_by_key(|i| {\n        i / i\n    })\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpta8csgm_.rs:5:5\n  |\n4 |\
    \   fn largest_divisor(n: isize) -> isize {\n  |                             \
    \      ----- expected `isize` because of return type\n5 | /     (1..n).max_by_key(|i|\
    \ {\n6 | |         i / i\n7 | |     })\n  | |______^ expected `isize`, found enum\
    \ `Option`\n  |\n  = note: expected type `isize`\n             found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut highest: isize = 0;\n    let mut divisor: isize = 0;\n\
    \n    for i in 1..n {\n        if n % i == 0 {\n            highest = i;\n   \
    \         divisor = i;\n        } else {\n            divisor *= i;\n        }\n\
    \    }\n\n    highest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to multiply with overflow', /tmp/tmpiw0ugbui.rs:13:13\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        if n % 2 == 0 {\n            n /= 2;\n     \
    \   } else {\n            break;\n        }\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpgbuz68ey.rs:7:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |             n /= 2;\n\
    \  |             ^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut factor = 1;\n    while m % factor\
    \ == 0 {\n        m = m / factor;\n        factor *= 2;\n    }\n    m\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpw3vin3ts.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Compute the first few powers of 2\n    let mut power_twos\
    \ = vec![1usize; (1 << 1).. ];\n    // For each power of two, find all divisors\
    \ less than that power of two\n    // We use some algebraic tricks to make this\
    \ fast, by computing all divisors up to sqrt(n)\n    // Then we simply take the\
    \ largest.\n    for power_two in power_twos.iter_mut() {\n        // Keep track\
    \ of divisors less than the given power of two\n        let mut divisors = vec![0;\
    \ n];\n        // Do this in reverse to compute the divisors up to sqrt(n)\n \
    \       for divisor in divisors.iter_mut().rev() {\n            if divisor > (1\
    \ << power_two) - 1 {\n                continue;\n            }\n            //\
    \ If this divisor divides n evenly, then\n            // the remaining divisors\
    \ divide n evenly\n            if n % divisor == 0 {\n                // Then\
    \ we add it to the vector of divisors less than\n                // this power\
    \ of two\n                divisors.push(divisor);\n                break;\n  \
    \          }\n        }\n        // Keep track of the largest divisor less than\
    \ this power of two\n        if divisors.len() > 0 {\n            *power_two =\
    \ divisors.iter().max().unwrap();\n        } else {\n            *power_two =\
    \ 1 << power_two;\n        }\n    }\n\n    // Return the largest number that divides\
    \ n evenly, smaller than n\n    *power_twos\n        .iter()\n        .filter_map(|power_two|\
    \ {\n            if *power_two < (1 << n) - 1 {\n                Some(power_two)\n\
    \            } else {\n                None\n            }\n        })\n     \
    \   .max()\n        .unwrap()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp62zd07q4.rs:6:39\n  |\n6 |\
    \     let mut power_twos = vec![1usize; (1 << 1).. ];\n  |                   \
    \                    ^^^^^^^^^^ expected `usize`, found struct `RangeFrom`\n \
    \ |\n  = note: expected type `usize`\n           found struct `RangeFrom<{integer}>`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp62zd07q4.rs:12:36\n   |\n12 |\
    \         let mut divisors = vec![0; n];\n   |                               \
    \     ^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n   |\n12 |      \
    \   let mut divisors = vec![0; n.try_into().unwrap()];\n   |                 \
    \                    ++++++++++++++++++++\n\nerror[E0277]: no implementation for\
    \ `{integer} << &mut usize`\n  --> /tmp/tmp62zd07q4.rs:15:29\n   |\n15 |     \
    \        if divisor > (1 << power_two) - 1 {\n   |                           \
    \  ^^ no implementation for `{integer} << &mut usize`\n   |\n   = help: the trait\
    \ `Shl<&mut usize>` is not implemented for `{integer}`\n   = help: the following\
    \ other types implement trait `Shl<Rhs>`:\n             <&'a i128 as Shl<i128>>\n\
    \             <&'a i128 as Shl<i16>>\n             <&'a i128 as Shl<i32>>\n  \
    \           <&'a i128 as Shl<i64>>\n             <&'a i128 as Shl<i8>>\n     \
    \        <&'a i128 as Shl<isize>>\n             <&'a i128 as Shl<u128>>\n    \
    \         <&'a i128 as Shl<u16>>\n           and 568 others\n\nerror[E0277]: cannot\
    \ mod `isize` by `&mut {integer}`\n  --> /tmp/tmp62zd07q4.rs:20:18\n   |\n20 |\
    \             if n % divisor == 0 {\n   |                  ^ no implementation\
    \ for `isize % &mut {integer}`\n   |\n   = help: the trait `Rem<&mut {integer}>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `Rem<Rhs>`:\n             <&'a f32 as Rem<f32>>\n             <&'a f64\
    \ as Rem<f64>>\n             <&'a i128 as Rem<i128>>\n             <&'a i16 as\
    \ Rem<i16>>\n             <&'a i32 as Rem<i32>>\n             <&'a i64 as Rem<i64>>\n\
    \             <&'a i8 as Rem<i8>>\n             <&'a isize as Rem<isize>>\n  \
    \     "
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).filter(|&x| n%x == 0).max()\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6oh4xp5y.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..=n).filter(|&x|\
    \ n%x == 0).max()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n  |\n  = note: expected type `isize`\n             found\
    \ enum `Option<isize>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor: isize = 0;\n    let mut max_divisor_num:\
    \ isize = 0;\n    for divisor in 1..=n {\n        if n%divisor == 0 {\n      \
    \      if divisor > max_divisor {\n                max_divisor = divisor;\n  \
    \              max_divisor_num = 1;\n            }\n            elsif divisor\
    \ == max_divisor {\n                max_divisor_num += 1;\n            }\n   \
    \     }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator,\
    \ found `divisor`\n  --> /tmp/tmpk1c_at1f.rs:13:19\n   |\n13 |             elsif\
    \ divisor == max_divisor {\n   |                   ^^^^^^^ expected one of 8 possible\
    \ tokens\n\nerror: aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = isize::MAX;\n\n    for i in 1 .. n {\n   \
    \     if n % i == 0 {\n            let mut j = i;\n            while j > 0 &&\
    \ n % j == 0 {\n                j -= 1;\n            }\n            if j > 0 {\n\
    \                largest = i;\n            }\n        }\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9223372036854775807`,\n right: `1`', /tmp/tmpwakaa_2g.rs:24:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 1..=n / 2 {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpu8nk6y6i.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n\n    let mut i: isize = 1;\n    let\
    \ mut largest: isize = 1;\n\n    for i in 1..n {\n        if n % i == 0 {\n  \
    \          largest = i;\n            if largest > n {\n                break;\n\
    \            }\n        } else {\n            i = i + 1;\n        }\n    }\n\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmppsjw7oph.rs:5:9\n\
    \  |\n5 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused variable:\
    \ `i`\n --> /tmp/tmppsjw7oph.rs:7:13\n  |\n7 |     let mut i: isize = 1;\n  |\
    \             ^ help: if this is intentional, prefix it with an underscore: `_i`\n\
    \  |\n  = note: `#[warn(unused_variables)]` on by default\n\nwarning: value assigned\
    \ to `i` is never read\n  --> /tmp/tmppsjw7oph.rs:17:13\n   |\n17 |          \
    \   i = i + 1;\n   |             ^\n   |\n   = note: `#[warn(unused_assignments)]`\
    \ on by default\n   = help: maybe it is overwritten before being read?\n\nwarning:\
    \ variable does not need to be mutable\n --> /tmp/tmppsjw7oph.rs:7:9\n  |\n7 |\
    \     let mut i: isize = 1;\n  |         ----^\n  |         |\n  |         help:\
    \ remove this `mut`\n  |\n  = note: `#[warn(unused_mut)]` on by default\n\nerror[E0384]:\
    \ cannot assign twice to immutable variable `i`\n  --> /tmp/tmppsjw7oph.rs:17:13\n\
    \   |\n10 |     for i in 1..n {\n   |         -\n   |         |\n   |        \
    \ first assignment to `i`\n   |         help: consider making this binding mutable:\
    \ `mut i`\n...\n17 |             i = i + 1;\n   |             ^^^^^^^^^ cannot\
    \ assign twice to immutable variable\n\nerror: aborting due to previous error;\
    \ 4 warnings emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut nmax = n;\n    loop {\n        if n % 2 == 0 {\n   \
    \         n = n / 2;\n        } else {\n            n /= 2;\n            nmax\
    \ = n as isize;\n        }\n        if n == 1 {\n            break;\n        }\n\
    \    }\n    nmax\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp50mwi7m_.rs:8:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |             n = n /\
    \ 2;\n  |             ^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n  --> /tmp/tmp50mwi7m_.rs:10:13\n \
    \  |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ /= 2;\n   |             ^^^^^^ cannot assign to immutable argument\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n / 2\n    } else {\n        largest_divisor(n\
    \ - 1) / 2\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpwaw9ys_i.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n\n    }\n    let mut largest = &n;\n\
    \    let mut max_divisor = 1;\n    for i in 1..=n {\n        if n % i == 0 {\n\
    \            if max < i {\n                largest = &i;\n            }\n    \
    \        max_divisor = i;\n        }\n    }\n    largest\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `max` in this scope\n  --> /tmp/tmpnl7k4t42.rs:12:16\n\
    \   |\n12 |             if max < i {\n   |                ^^^ not found in this\
    \ scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n\
    \   |\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpnl7k4t42.rs:18:5\n   |\n\
    4  | fn largest_divisor(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n18 |     largest\n\
    \   |     ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n18 |     *largest\n   |     +\n\nerror: aborting due to 2\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n\n    for divisor in 2..=n/2 {\n \
    \       if n % divisor == 0 {\n            max_divisor = divisor;\n        }\n\
    \    }\n\n    if max_divisor <= n {\n        max_divisor\n    } else {\n     \
    \   n\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).max()\n        .map(|d| n % d)\n        .unwrap_or(n)\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp99m3fcb0.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = n; // Initialize result with n\n    let mut mod_mod_div\
    \ = 1;\n    let mut remainder = n % 2; // Initializing remainder with n's modulo\
    \ value\n    while remainder != 0 {\n        remainder /= 2; // Initializing remainder\
    \ with n's divided by 2\n        mod_mod_div += 1;\n    }\n    while mod_mod_div\
    \ != 0 {\n        if res % mod_mod_div == 0 {\n            res = (res % mod_mod_div)\
    \ / mod_mod_div;\n        } else {\n            mod_mod_div -= 1;\n        }\n\
    \    }\n    if res > n { res } else { res }\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n as isize;\n    let mut max_divisor = 0;\n\
    \    for i in 1..(n/2) {\n        if n%i == 0 {\n            largest = i;\n  \
    \          max_divisor = i;\n        }\n    }\n    for i in max_divisor+1..(n/2)\
    \ {\n        if n%i == 0 {\n            largest = i;\n        }\n    }\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpe07k9vdf.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Find the highest divisor, by dividing n by all primes up\
    \ to 10\n    // >>> largest_divisor(15)\n    // 7\n    let mut primes = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    for &prime in &primes {\n        let divisor\
    \ = n / prime;\n        if divisor == 0 {\n            return prime;\n       \
    \ }\n    }\n    panic!(\"largest_divisor failed to find the largest divisor\"\
    );\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmp1l04d_ca.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut largest_divisor\
    \ = 1isize;\n    let mut next_divisor = 1isize;\n    while next_divisor <= n {\n\
    \        if n % next_divisor == 0 {\n            largest_divisor = next_divisor;\n\
    \        }\n        next_divisor *= 2;\n    }\n    largest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpj35j45u9.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest: isize = 1;\n    let mut n_div = &n;\n    while\
    \ *n_div > 1 {\n        n_div = &(*n_div).sqrt();\n        largest = if largest\
    \ < n_div { *n_div }\n        else {\n            largest\n        };\n    }\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `sqrt` found for type `isize` in the current\
    \ scope\n --> /tmp/tmppj4k9h5h.rs:8:27\n  |\n8 |         n_div = &(*n_div).sqrt();\n\
    \  |                           ^^^^ method not found in `isize`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmppj4k9h5h.rs:9:32\n  |\n9 |         largest =\
    \ if largest < n_div { *n_div }\n  |                                ^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    9 |         largest = if largest < *n_div { *n_div }\n  |                    \
    \            +\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0308, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = 2;\n    let mut result = 1;\n    while divisor\
    \ < n {\n        if n % divisor == 0 {\n            result += divisor;\n     \
    \   }\n        divisor += 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpt04f7uik.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 3 {\n        return 1;\n    }\n\n    let mut n = n as\
    \ usize;\n    let mut max_divisor = 1;\n\n    for d in divisors(n) {\n       \
    \ if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n  --> /tmp/tmp7d4w662o.rs:12:14\n\
    \   |\n12 |     for d in divisors(n) {\n   |              ^^^^^^^^ not found in\
    \ this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7d4w662o.rs:19:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n19 |     max_divisor\n\
    \   |     ^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    19 |     max_divisor.try_into().unwrap()\n   |                ++++++++++++++++++++\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n > 1);\n    let mut result = 1;\n    for i in\
    \ 1..n {\n        if n % i == 0 {\n            if result > i {\n             \
    \   result = i;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp8eyhlq12.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).rfold(i, |x, y| if x % y == 0 { y } else { *i })\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `i` in this scope\n --> /tmp/tmp3x_hna8v.rs:5:19\n\
    \  |\n5 |     (1..=n).rfold(i, |x, y| if x % y == 0 { y } else { *i })\n  |  \
    \                 ^ help: a local variable with a similar name exists: `n`\n\n\
    error[E0425]: cannot find value `i` in this scope\n --> /tmp/tmp3x_hna8v.rs:5:57\n\
    \  |\n5 |     (1..=n).rfold(i, |x, y| if x % y == 0 { y } else { *i })\n  |  \
    \                                                       ^ help: a local variable\
    \ with a similar name exists: `n`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor: isize = 1;\n    let mut max_divisor2: isize\
    \ = 1;\n\n    for divisor in 2..n {\n        if n % divisor == 0 {\n         \
    \   if divisor > max_divisor {\n                max_divisor = divisor;\n     \
    \       }\n            if divisor > max_divisor2 {\n                max_divisor2\
    \ = divisor;\n            }\n        }\n    }\n\n    if max_divisor > max_divisor2\
    \ {\n        max_divisor\n    } else {\n        max_divisor2\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut v: Vec<isize> = vec![0isize; 10];\n\n    for i in v.iter()\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n    }\n\n    return\
    \ v;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi5bfrjv1.rs:9:20\n  |\n9 |\
    \             return i;\n  |                    ^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |             return *i;\n\
    \  |                    +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        n if n % 2 == 0 => n,\n\
    \        n => n,\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnpwassa_.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    while n > 0 {\n        if n % 2 ==\
    \ 0 {\n            n /= 2;\n        } else {\n            largest = n;\n     \
    \       break;\n        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpdu09hwq5.rs:8:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |             n /= 2;\n\
    \  |             ^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).max_by_key(|i| {\n        i % 2 == 0 && i / 2 % n ==\
    \ 0\n    }).unwrap()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmk3zwhao.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = 0;\n    let mut divisor = 1;\n    while divisor\
    \ < n {\n        if n % divisor == 0 {\n            divisor *= 2;\n          \
    \  largest = divisor;\n        }\n        divisor += 1;\n    }\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpypf8iz2r.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n    (n + (n - 1) / 2)\n        .try_into()\n\
    \        .unwrap()\n        .pow(2)\n        .partial_cmp(&n)\n        .unwrap()\n\
    \        .partial_cmp(&n / 2)\n        .unwrap()\n        .partial_cmp(&(n / 4))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 6))\n        .unwrap()\n      \
    \  .partial_cmp(&(n / 8))\n        .unwrap()\n        .partial_cmp(&(n / 10))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 12))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 14))\n        .unwrap()\n        .partial_cmp(&(n / 16))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 18))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 20))\n        .unwrap()\n        .partial_cmp(&(n / 22))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 24))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 26))\n        .unwrap()\n        .partial_cmp(&(n / 28))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 30))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 32))\n        .unwrap()\n        .partial_cmp(&(n / 34))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 36))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 38))\n        .unwrap()\n        .partial_cmp(&(n / 40))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 42))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 44))\n        .unwrap()\n        .partial_cmp(&(n / 46))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 48))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 50))\n        .unwrap()\n        .partial_cmp(&(n / 52))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 54))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 56))\n        .unwrap()\n        .partial_cmp(&(n / 58))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 60))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 62))\n        .unwrap()\n        .partial_cmp(&(n / 64))\n\
    \        .unwrap()\n        .partial_cmp(&(n / 66))\n        .unwrap()\n     \
    \   .partial_cmp(&(n / 68))\n        .unwrap()\n        .partial_cmp(&(\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpyav4p5rj.rs:80:23\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \                   - closing delimiter possibly meant for this\n...\n80 |   \
    \      .partial_cmp(&(\n   |                       ^ unclosed delimiter\n81 |\
    \ }\n   | ^ mismatched closing delimiter\n\nwarning: unused import: `std::cmp::Ordering`\n\
    \ --> /tmp/tmpyav4p5rj.rs:5:9\n  |\n5 |     use std::cmp::Ordering;\n  |     \
    \    ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\
    \nerror[E0599]: no method named `try_into` found for type `isize` in the current\
    \ scope\n   --> /tmp/tmpyav4p5rj.rs:7:10\n    |\n7   |         .try_into()\n \
    \   |          ^^^^^^^^ method not found in `isize`\n    |\n    = help: items\
    \ from traits can only be used if the trait is in scope\n    = note: 'std::convert::TryInto'\
    \ is included in the prelude starting in Edition 2021\nhelp: the following trait\
    \ is implemented but not in scope; perhaps add a `use` for it:\n    |\n1   | use\
    \ std::convert::TryInto;\n    |\n\nerror: aborting due to 2 previous errors; 1\
    \ warning emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1;\n    let mut max_divisor = 1;\n\
    \n    for d in 1..n {\n        if d % largest_divisor == 0 {\n            max_divisor\
    \ = d;\n        } else {\n            if largest_divisor == n {\n            \
    \    return max_divisor;\n            }\n            largest_divisor = d;\n  \
    \      }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp4b039byf.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n / 2;\n    while max_divisor % 2 == 0\
    \ {\n        max_divisor /= 2;\n    }\n    max_divisor\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpng9m5w8o.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n / isize::from(2..=n)\n        .iter()\n        .max() // Find\
    \ the max\n        .unwrap_or(-1) // If that's not possible (n is 0, -1, or something\
    \ else) return the max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: the trait bound `isize: From<RangeInclusive<isize>>` is not\
    \ satisfied\n --> /tmp/tmpgz1r80ne.rs:5:21\n  |\n5 |     n / isize::from(2..=n)\n\
    \  |         ----------- ^^^^^ the trait `From<RangeInclusive<isize>>` is not\
    \ implemented for `isize`\n  |         |\n  |         required by a bound introduced\
    \ by this call\n  |\n  = help: the following other types implement trait `From<T>`:\n\
    \            <f32 as From<i16>>\n            <f32 as From<i8>>\n            <f32\
    \ as From<u16>>\n            <f32 as From<u8>>\n            <f64 as From<f32>>\n\
    \            <f64 as From<i16>>\n            <f64 as From<i32>>\n            <f64\
    \ as From<i8>>\n          and 67 others\n\nerror[E0599]: no method named `iter`\
    \ found for type `isize` in the current scope\n --> /tmp/tmpgz1r80ne.rs:6:10\n\
    \  |\n6 |         .iter()\n  |          ^^^^ method not found in `isize`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor: isize = 0;\n    let mut largest_divisor_size:\
    \ isize = n;\n    let mut largest_divisor_factor: isize = 1;\n\n    for divisor\
    \ in &[1..] {\n        let mut divisor_size: isize = 0;\n\n        while divisor_size\
    \ < largest_divisor_size {\n            divisor_size += divisor * largest_divisor_factor;\n\
    \            largest_divisor_factor += 2;\n        }\n\n        if divisor_size\
    \ < largest_divisor_size {\n            largest_divisor_factor = divisor_size;\n\
    \            largest_divisor_size = divisor;\n        }\n    }\n\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot multiply `&RangeFrom<{integer}>` by `isize`\n  -->\
    \ /tmp/tmp7iy1nof3.rs:13:37\n   |\n13 |             divisor_size += divisor *\
    \ largest_divisor_factor;\n   |                             ------- ^ ----------------------\
    \ isize\n   |                             |\n   |                            \
    \ &RangeFrom<{integer}>\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7iy1nof3.rs:19:36\n\
    \   |\n6  |     let mut largest_divisor_size: isize = n;\n   |               \
    \                    ----- expected due to this type\n...\n19 |             largest_divisor_size\
    \ = divisor;\n   |                                    ^^^^^^^ expected `isize`,\
    \ found reference\n   |\n   = note:   expected type `isize`\n           found\
    \ reference `&RangeFrom<{integer}>`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0369.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        return n;\n    }\n    for i in 2..(n/2)\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n    }\n    return\
    \ n;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmi0hi2rl.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut result = n;\n    while result % 2 != 0 && result % 3\
    \ != 0 && result % 5 != 0 {\n        result = result / 2;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9j_z14b2.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (n + (n - 1) / 2) / (n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpn4vmusfo.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_remainder\
    \ = n;\n    while max_divisor_remainder % 2 == 0 {\n        max_divisor_remainder\
    \ /= 2;\n        max_divisor += 1;\n    }\n    max_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpqjpzqobz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    match n % 2 {\n        0 => 1,\n        1 => n,\n        _ =>\
    \ n,\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpr34p1549.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor: isize = 1;\n\n    for i in 2..=n {\n\
    \        if n % i == 0 {\n            if largest_divisor == 1 {\n            \
    \    largest_divisor = i;\n            } else {\n                largest_divisor\
    \ = if largest_divisor < i { largest_divisor } else { i };\n            }\n  \
    \      }\n    }\n\n    largest_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmprv77zu34.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (n - 1) / 2 + 1\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpf90w2b03.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_sub(1).checked_mul( isize::from(2).sqrt()).unwrap().unwrap()\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `checked_mul` found for enum `Option` in\
    \ the current scope\n --> /tmp/tmpkhrk2w21.rs:5:22\n  |\n5 |     n.checked_sub(1).checked_mul(\
    \ isize::from(2).sqrt()).unwrap().unwrap()\n  |                      ^^^^^^^^^^^\
    \ method not found in `Option<isize>`\n\nerror[E0599]: no method named `sqrt`\
    \ found for type `isize` in the current scope\n --> /tmp/tmpkhrk2w21.rs:5:50\n\
    \  |\n5 |     n.checked_sub(1).checked_mul( isize::from(2).sqrt()).unwrap().unwrap()\n\
    \  |                                                  ^^^^ method not found in\
    \ `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n as isize;\n    for i in 1..=max_divisor\
    \ {\n        if n % i == 0 {\n            max_divisor = i;\n        }\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpuyxwgn77.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n    let mut smallest_divisor =\
    \ n - 1;\n    let mut greatest_divisor = n - 1;\n\n    while smallest_divisor\
    \ >= 0 {\n        if n % smallest_divisor == 0 {\n            greatest_divisor\
    \ = smallest_divisor;\n            smallest_divisor -= 1;\n        }\n       \
    \ else {\n            smallest_divisor -= 1;\n        }\n    }\n\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpe62lols8.rs:10:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // n is guaranteed to be positive\n    // since it is guaranteed\
    \ to be even\n    // since it is guaranteed to be less than or equal to sqrt(n)\
    \ (i.e., sqrt(n) divides n)\n    // since n is guaranteed to be even, n divides\
    \ evenly into sqrt(n) evenly (since sqrt(n) divides n)\n    match n % _ {\n  \
    \      0 => 0,\n        x | x == 0 => x,\n        _ => (n / x)\n    }\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: expected one of `=>`, `@`, `if`, or `|`, found `==`\n  --> /tmp/tmptjsznfb9.rs:11:15\n\
    \   |\n11 |         x | x == 0 => x,\n   |               ^^ expected one of `=>`,\
    \ `@`, `if`, or `|`\n\nerror: in expressions, `_` can only be used on the left-hand\
    \ side of an assignment\n --> /tmp/tmptjsznfb9.rs:9:15\n  |\n9 |     match n %\
    \ _ {\n  |               ^ `_` not allowed here\n\nerror: aborting due to 2 previous\
    \ errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut factor = 1;\n    loop {\n        factor *= n;\n    \
    \    if factor <= n {\n            return factor;\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp4mpig07b.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n: isize = n;\n    let mut max_divisor = 0;\n    while\
    \ n > 1 {\n        max_divisor = n / 2;\n        n = max_divisor;\n    }\n   \
    \ max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp4qnums1p.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 0 {\n        return 0;\n    }\n\n    let mut ni = n;\n\
    \    let mut d = 0;\n    while ni / d < ni {\n        d = d << 1;\n    }\n   \
    \ d = d + 1;\n    while ni % d == 0 {\n        d = d << 1;\n    }\n    d\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to divide by zero', /tmp/tmp8ll4n335.rs:11:11\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 1;\n    while i <= n {\n        if n % i == 0 {\n\
    \            return i;\n        }\n        i += 1;\n    }\n    n\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp0617ws6u.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut primes = vec![n];\n    let mut max = 0;\n    for _ in\
    \ 0..=n {\n        let mut max_divisor = 1;\n        for _ in 0..=n {\n      \
    \      if primes.len() > 0 {\n                let prime = primes.pop();\n    \
    \            if prime > 1 {\n                    let mut divisor = 1;\n      \
    \              for p in &prime {\n                        if !primes.contains(&p)\
    \ { divisor *= p };\n                    }\n                    if divisor > max_divisor\
    \ { max_divisor = divisor };\n                }\n            }\n        }\n  \
    \      primes.push(max_divisor);\n        max = max > max_divisor ? max : max_divisor;\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `max`\n\
    \  --> /tmp/tmplbfycavr.rs:22:35\n   |\n22 |         max = max > max_divisor ?\
    \ max : max_divisor;\n   |                                   ^^^ expected one\
    \ of `.`, `;`, `?`, `}`, or an operator\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmplbfycavr.rs:12:28\n   |\n12 |                 if prime > 1 {\n   | \
    \                           ^ expected enum `Option`, found integer\n   |\n  \
    \ = note: expected enum `Option<isize>`\n              found type `{integer}`\n\
    help: try wrapping the expression in `Some`\n   |\n12 |                 if prime\
    \ > Some(1) {\n   |                            +++++ +\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = u64::max_value();\n    for i in 0..n {\n\
    \        if n % i == 0 {\n            if !max_divisor.checked_add(i).is_ok() {\n\
    \                max_divisor = i;\n            }\n        }\n    }\n    match\
    \ max_divisor {\n        0 => panic!(\"n must be positive\"),\n        n => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp95bor5io.rs:8:41\n  |\n8 |\
    \             if !max_divisor.checked_add(i).is_ok() {\n  |                  \
    \                       ^ expected `u64`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u64` and panic if the converted value doesn't fit\n  |\n8 |\
    \             if !max_divisor.checked_add(i.try_into().unwrap()).is_ok() {\n \
    \ |                                          ++++++++++++++++++++\n\nerror[E0599]:\
    \ no method named `is_ok` found for enum `Option` in the current scope\n --> /tmp/tmp95bor5io.rs:8:44\n\
    \  |\n8 |             if !max_divisor.checked_add(i).is_ok() {\n  |          \
    \                                  ^^^^^ method not found in `Option<u64>`\n\n\
    error[E0308]: mismatched types\n --> /tmp/tmp95bor5io.rs:9:31\n  |\n5 |     let\
    \ mut max_divisor = u64::max_value();\n  |                           ----------------\
    \ expected due to this value\n...\n9 |                 max_divisor = i;\n  | \
    \                              ^ expected `u64`, found `isize`\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmp95bor5io.rs:15:14\n   |\n\
    13 | /     match max_divisor {\n14 | |         0 => panic!(\"n must be positive\"\
    ),\n   | |              ---------------------------- this is found to be of type\
    \ `isize`\n15 | |         n => n,\n   | |              ^ expected `isize`, found\
    \ `u64`\n16 | |     }\n   | |_____- `match` arms have incompatible types\n   |\n\
    help: you can convert a `u64` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n15 |         n => n.try_into().unwrap(),\n   |               ++++++++++++++++++++\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor: isize = n;\n    let mut factor: isize =\
    \ 1;\n    while n % factor == 0 {\n        factor *= 2;\n        max_divisor =\
    \ max_divisor / factor;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmps_zms108.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max = 0;\n    let mut div = 1;\n    while div <= n {\n\
    \        if n % div == 0 {\n            max = div;\n            div += 1;\n  \
    \      }\n        div += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjk8nx928.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n)\n        .iter()\n        .filter_map(|factor| {\n \
    \           if !(n % factor) {\n                Some(factor)\n            } else\
    \ {\n                None\n            }\n        })\n        .max()\n       \
    \ .unwrap_or(1)\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmpm9xm4_lm.rs:6:10\n  |\n6 |         .iter()\n\
    \  |          ^^^^ method not found in `RangeInclusive<isize>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n    let mut max_div =\
    \ 1;\n    let mut max_divs = vec![];\n    for div in n.iter().rev() {\n      \
    \  if div % 2 != 0 {\n            continue;\n        }\n        if div > max_div\
    \ {\n            max_div = div;\n        }\n    }\n    max_divs.push(max_div);\n\
    \    for i in (1..=max_div).rev() {\n        if max_divs[i] * 2 > n {\n      \
    \      return max_divs[i];\n        }\n    }\n    max_div\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmprnppik4i.rs:10:18\n   |\n10 |     for div in n.iter().rev()\
    \ {\n   |                  ^^^^ method not found in `isize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmprnppik4i.rs:20:30\n   |\n20 |         if max_divs[i] *\
    \ 2 > n {\n   |                              ^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n20 |         if max_divs[i] * 2 > n.try_into().unwrap()\
    \ {\n   |                               ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmprnppik4i.rs:21:20\n   |\n21 |             return\
    \ max_divs[i];\n   |                    ^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmprnppik4i.rs:24:5\n   |\n4  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n24 |     max_div\n   |     ^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n24 |     max_div.try_into().unwrap()\n\
    \   |            ++++++++++++++++++++\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        n /= 2\n        if n % 2 == 0 {\n          \
    \  return n\n        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `if`\n --> /tmp/tmpd60a42i7.rs:6:15\n\
    \  |\n6 |         n /= 2\n  |               ^ help: add `;` here\n7 |        \
    \ if n % 2 == 0 {\n  |         -- unexpected token\n\nerror: aborting due to previous\
    \ error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).filter(_ % 2 == 0).max()\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: in expressions, `_` can only be used on the left-hand side of an\
    \ assignment\n --> /tmp/tmp8y2jb8r6.rs:5:20\n  |\n5 |     (1..=n).filter(_ % 2\
    \ == 0).max()\n  |                    ^ `_` not allowed here\n\nerror[E0277]:\
    \ expected a `FnMut<(&isize,)>` closure, found `bool`\n   --> /tmp/tmp8y2jb8r6.rs:5:20\n\
    \    |\n5   |     (1..=n).filter(_ % 2 == 0).max()\n    |             ------ ^^^^^^^^^^\
    \ expected an `FnMut<(&isize,)>` closure, found `bool`\n    |             |\n\
    \    |             required by a bound introduced by this call\n    |\n    = help:\
    \ the trait `for<'r> FnMut<(&'r isize,)>` is not implemented for `bool`\nnote:\
    \ required by a bound in `filter`\n\nerror[E0599]: the method `max` exists for\
    \ struct `Filter<RangeInclusive<isize>, bool>`, but its trait bounds were not\
    \ satisfied\n  --> /tmp/tmp8y2jb8r6.rs:5:32\n   |\n5  |       (1..=n).filter(_\
    \ % 2 == 0).max()\n   |                                  ^^^ method cannot be\
    \ called on `Filter<RangeInclusive<isize>, bool>` due to unsatisfied trait bounds\n\
    \   |\n   = note: the following trait bounds were not satisfied:\n           `<bool\
    \ as FnOnce<(&isize,)>>::Output = bool`\n           which is required by `Filter<RangeInclusive<isize>,\
    \ bool>: Iterator`\n           `bool: FnMut<(&isize,)>`\n           which is required\
    \ by `Filter<RangeInclusive<isize>, bool>: Iterator`\n           `Filter<RangeInclusive<isize>,\
    \ bool>: Ord`\n           which is required by `&Filter<RangeInclusive<isize>,\
    \ bool>: Ord`\n           `Filter<RangeInclusive<isize>, bool>: Ord`\n       \
    \    which is required by `&mut Filter<RangeInclusive<isize>, bool>: Ord`\n  \
    \         `Filter<RangeInclusive<isize>, bool>: Iterator`\n           which is\
    \ required by `&mut Filter<RangeInclusive<isize>, bool>: Iterator`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0599.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut next_divisor = 1;\n    while\
    \ largest%next_divisor != 0 {\n        largest += next_divisor;\n        next_divisor\
    \ *= 2;\n    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp6f6ajvly.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).map(|x| x / n).max()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpmukgkvrm.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..=n).map(|x| x /\
    \ n).max()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum\
    \ `Option`\n  |\n  = note: expected type `isize`\n             found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).find_max()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `find_max` found for struct `RangeInclusive`\
    \ in the current scope\n --> /tmp/tmptk7fu0ox.rs:5:13\n  |\n5 |     (1..=n).find_max()\n\
    \  |             ^^^^^^^^ method not found in `RangeInclusive<isize>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = if n % 2 == 0 { n / 2 } else { (n / 2) + 1\
    \ };\n    for i in 2..largest.min(largest) {\n        if n % i == 0 {\n      \
    \      largest = i;\n        }\n    }\n    largest\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmphi3zynyd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest: isize = 1;\n    let mut current_divisor: isize\
    \ = 2;\n    while current_divisor <= n {\n        if n % current_divisor == 0\
    \ {\n            largest = current_divisor;\n        }\n        current_divisor\
    \ += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpzul6xshz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1;\n    let mut smallest_divisor =\
    \ n;\n    for d in 2..=smallest_divisor {\n        if n % d == 0 {\n         \
    \   largest_divisor = d;\n            if d < smallest_divisor {\n            \
    \    smallest_divisor = d;\n            }\n        }\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8vts1dhr.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut ns: Vec<isize> = vec![n];\n    for d in 1..=n%ns {\n\
    \        if ns/d > n {\n            return ns/d;\n        }\n        ns.push(d\
    \ / n);\n    }\n    ns[1..].iter().max().unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot mod `isize` by `Vec<isize>`\n --> /tmp/tmp7a35qfqj.rs:6:19\n\
    \  |\n6 |     for d in 1..=n%ns {\n  |                   ^ no implementation for\
    \ `isize % Vec<isize>`\n  |\n  = help: the trait `Rem<Vec<isize>>` is not implemented\
    \ for `isize`\n  = help: the following other types implement trait `Rem<Rhs>`:\n\
    \            <&'a f32 as Rem<f32>>\n            <&'a f64 as Rem<f64>>\n      \
    \      <&'a i128 as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n          \
    \  <&'a i32 as Rem<i32>>\n            <&'a i64 as Rem<i64>>\n            <&'a\
    \ i8 as Rem<i8>>\n            <&'a isize as Rem<isize>>\n          and 54 others\n\
    \nerror[E0369]: cannot divide `Vec<isize>` by `{integer}`\n --> /tmp/tmp7a35qfqj.rs:7:14\n\
    \  |\n7 |         if ns/d > n {\n  |            --^- {integer}\n  |          \
    \  |\n  |            Vec<isize>\n\nerror[E0369]: cannot divide `Vec<isize>` by\
    \ `{integer}`\n --> /tmp/tmp7a35qfqj.rs:8:22\n  |\n8 |             return ns/d;\n\
    \  |                    --^- {integer}\n  |                    |\n  |        \
    \            Vec<isize>\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7a35qfqj.rs:12:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n12 |     ns[1..].iter().max().unwrap()\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n12 |     *ns[1..].iter().max().unwrap()\n\
    \   |     +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308, E0369.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n%2 == 0);\n    let mut max_divisor = 2;\n   \
    \ for divisor in 2..n {\n        if n%divisor == 0 {\n            n = n / divisor;\n\
    \            max_divisor = divisor;\n        }\n    }\n    n\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "warning: variable `max_divisor` is assigned to, but never used\n --> /tmp/tmpxtiuzywq.rs:6:13\n\
    \  |\n6 |     let mut max_divisor = 2;\n  |             ^^^^^^^^^^^\n  |\n  =\
    \ note: `#[warn(unused_variables)]` on by default\n  = note: consider using `_max_divisor`\
    \ instead\n\nwarning: value assigned to `max_divisor` is never read\n  --> /tmp/tmpxtiuzywq.rs:10:13\n\
    \   |\n10 |             max_divisor = divisor;\n   |             ^^^^^^^^^^^\n\
    \   |\n   = note: `#[warn(unused_assignments)]` on by default\n   = help: maybe\
    \ it is overwritten before being read?\n\nerror[E0384]: cannot assign to immutable\
    \ argument `n`\n --> /tmp/tmpxtiuzywq.rs:9:13\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |                    - help: consider making this binding\
    \ mutable: `mut n`\n...\n9 |             n = n / divisor;\n  |             ^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to previous error;\
    \ 2 warnings emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    largest_divisor_iter(n).max()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `largest_divisor_iter` in this scope\n\
    \ --> /tmp/tmp3ht6ga2u.rs:5:5\n  |\n5 |     largest_divisor_iter(n).max()\n  |\
    \     ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = 1;\n    let mut max_num = n;\n    while max_num\
    \ > 2 {\n        max_num = max_num / 2;\n        max_div += 1;\n    }\n    max_div\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpp1lbxfvg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor: usize = 1;\n    let mut min_divisor = 1;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n            }\n   \
    \         if divisor < min_divisor {\n                min_divisor = divisor;\n\
    \            }\n        }\n    }\n\n    // return the biggest divisor\n    match\
    \ max_divisor {\n        1 => min_divisor,\n        _ => max_divisor\n    }\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmppjz9plwz.rs:9:26\n  |\n9 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n  |\n9 |             if\
    \ divisor > max_divisor.try_into().unwrap() {\n  |                           \
    \          ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmppjz9plwz.rs:10:31\n\
    \   |\n5  |     let mut max_divisor: usize = 1;\n   |                        \
    \  ----- expected due to this type\n...\n10 |                 max_divisor = divisor;\n\
    \   |                               ^^^^^^^ expected `usize`, found `isize`\n\n\
    error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmppjz9plwz.rs:21:14\n\
    \   |\n19 | /     match max_divisor {\n20 | |         1 => min_divisor,\n   |\
    \ |              ----------- this is found to be of type `isize`\n21 | |     \
    \    _ => max_divisor\n   | |              ^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n22 | |     }\n   | |_____- `match` arms have incompatible types\n \
    \  |\nhelp: you can convert a `usize` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n21 |         _ => max_divisor.try_into().unwrap()\n\
    \   |                         ++++++++++++++++++++\n\nerror: aborting due to 3\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 { return 1; }\n    if n % 2 == 0 { return 2; }\n \
    \   let mut max_divider = 2;\n    let mut max_divisor = 1;\n    while max_divider\
    \ < n {\n        max_divisor *= max_divider;\n        max_divider += 1;\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpugis5820.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = isize::MAX;\n    let mut rem = n;\n\n    while\
    \ rem != 0 {\n        if rem % 2 == 0 {\n            res -= 1;\n            rem\
    \ /= 2;\n        } else {\n            rem /= 2;\n        }\n    }\n\n    res\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9223372036854775807`,\n right: `1`', /tmp/tmpse84sxak.rs:22:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(n as usize)\n        .unwrap()\n        .checked_mul(n\
    \ as usize).unwrap()\n        .checked_div(n as usize).unwrap()\n        .unwrap_or(1)\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3dlwpsls.rs:5:19\n  |\n5 |\
    \     n.checked_div(n as usize)\n  |                   ^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n  |\n5 |     n.checked_div((n as usize).try_into().unwrap())\n\
    \  |                   +          +++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp3dlwpsls.rs:7:22\n  |\n7 |         .checked_mul(n as usize).unwrap()\n\
    \  |                      ^^^^^^^^^^ expected `isize`, found `usize`\n  |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n  |\n7 |         .checked_mul((n as usize).try_into().unwrap()).unwrap()\n\
    \  |                      +          +++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp3dlwpsls.rs:8:22\n  |\n8 |         .checked_div(n as usize).unwrap()\n\
    \  |                      ^^^^^^^^^^ expected `isize`, found `usize`\n  |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n  |\n8 |         .checked_div((n as usize).try_into().unwrap()).unwrap()\n\
    \  |                      +          +++++++++++++++++++++\n\nerror[E0599]: no\
    \ method named `unwrap_or` found for type `isize` in the current scope\n --> /tmp/tmp3dlwpsls.rs:9:10\n\
    \  |\n9 |         .unwrap_or(1)\n  |          ^^^^^^^^^ method not found in `isize`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    for _ in 0..n {\n        if n % m == 0 {\n\
    \            m = m / 2;\n        } else {\n            break;\n        }\n   \
    \ }\n    m\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmp8ii3h_zc.rs:7:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = n as isize;\n    while n % 2 == 0 {\n        n /=\
    \ 2;\n    }\n    while n % 3 == 0 {\n        n /= 3;\n    }\n    if n != 1 {\n\
    \        n\n    } else {\n        std::i64::MAX as isize\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9223372036854775807`,\n right: `1`', /tmp/tmp2g9l5ph7.rs:21:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    while n % 2 == 0 {\n        n /= 2;\n    }\n    while n % 3\
    \ == 0 {\n        n /= 3;\n    }\n    n\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp5ob08h5m.rs:6:9\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n5 |     while n % 2 == 0 {\n\
    6 |         n /= 2;\n  |         ^^^^^^ cannot assign to immutable argument\n\n\
    error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp5ob08h5m.rs:9:9\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 3;\n  |\
    \         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Base Case\n    if n < 2 { 1 }\n\n    // Middle Case\n   \
    \ let mut divisor = 1; // Initialize dividend\n    let mut num_divisors = 1;\n\
    \    for d in 2..=n {\n        if n % d == 0 {\n            divisor = d;\n   \
    \         num_divisors += 1;\n        }\n    }\n\n    if num_divisors == 1 {\n\
    \        return divisor;\n    }\n\n    // Handle the case of multiple divisors\n\
    \    let mut largest_divisor = divisor;\n    let mut largest_divisors = num_divisors;\n\
    \    for d in divisor..=n {\n        if n % d == 0 {\n            let remainder\
    \ = n % d;\n            if remainder == 0 {\n                largest_divisor =\
    \ d;\n                largest_divisors = num_divisors + 1;\n            }\n  \
    \      }\n    }\n\n    if largest_divisors > largest_divisor {\n        largest_divisor\n\
    \    } else {\n        largest_divisors\n    }\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpop9mch7d.rs:6:16\n  |\n6 |\
    \     if n < 2 { 1 }\n  |     -----------^--\n  |     |          |\n  |     |\
    \          expected `()`, found integer\n  |     expected this to be `()`\n  |\n\
    help: you might have meant to return this value\n  |\n6 |     if n < 2 { return\
    \ 1; }\n  |                ++++++  +\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut res = n;\n\n    while res >= 2 {\n        res -= 2;\n\
    \    }\n\n    res\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmp8srxfp8d.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Compute the largest divisor less than n\n    // The smallest\
    \ divisor less than n will be evenly divisible by n\n    loop {\n        if n\
    \ % 2 == 0 {\n            n /= 2;\n        }\n        else {\n            n =\
    \ n - 1;\n        }\n        if n == 0 || n % 2 == 0 {\n            return n;\n\
    \        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpvr5pf0iv.rs:9:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |             n /= 2;\n\
    \  |             ^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpvr5pf0iv.rs:12:13\n   |\n4 \
    \ | fn largest_divisor(n: isize) -> isize {\n   |                    - help: consider\
    \ making this binding mutable: `mut n`\n...\n12 |             n = n - 1;\n   |\
    \             ^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8t9zrn4q.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).fold(n, |a, b| if a % b == 0 { a } else { b })\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpez2ufwgb.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // Sieve of Eratosthenes\n    let mut primes = vec![n];\n\n\
    \    for p in 2..=n {\n        if p > n {\n            break;\n        }\n   \
    \     for j in 2..p * p {\n            if j % p == 0 {\n                primes.push(j);\n\
    \            }\n        }\n    }\n\n    let mut max_divisor = 0;\n\n    for prime\
    \ in &primes[..] {\n        for divisor in 2..=n {\n            if divisor % prime\
    \ == 0 {\n                let divisor = divisor * divisor;\n\n               \
    \ if divisor > max_divisor {\n                    max_divisor = divisor;\n   \
    \             }\n            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpq0uli5mp.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 1;\n    let mut m = 0;\n    while i * i <= n {\n\
    \        if n % i == 0 {\n            m = i;\n        }\n        i += 1;\n   \
    \ }\n    i\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp1mmy17u0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut s = n;\n    s.checked_sub(1).unwrap();\n    loop {\n\
    \        s = s.checked_sub(2).unwrap();\n        if s % 2 == 0 {\n           \
    \ return s;\n        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: isize = n;\n    let mut j: isize = n;\n    let mut\
    \ k: isize = n;\n    while i < j {\n        loop {\n            if i % k == 0\
    \ {\n                i += 1;\n                if i == n {\n                  \
    \  break;\n                }\n                k += 1;\n            } else {\n\
    \                j += 1;\n                if j == n {\n                    break;\n\
    \                }\n                k -= 1;\n            }\n        }\n    }\n\
    \    j\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmph2x4978j.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = 1u64;\n    loop {\n        match n % n {\n     \
    \       0 => return n,\n            _ => n += 1,\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfdv6iu6t.rs:8:25\n  |\n8 |\
    \             0 => return n,\n  |                         ^ expected `isize`,\
    \ found `u64`\n  |\nhelp: you can convert a `u64` to an `isize` and panic if the\
    \ converted value doesn't fit\n  |\n8 |             0 => return n.try_into().unwrap(),\n\
    \  |                          ++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisors = Vec::new();\n\
    \    while n % max_divisor != 0 {\n        max_divisor = max_divisor + 1;\n  \
    \  }\n    max_divisors.push(max_divisor);\n    let mut max_divisor_index = 0;\n\
    \    for (i, max_divisor) in max_divisors.into_iter().enumerate() {\n        if\
    \ n % max_divisor == 0 {\n            max_divisor_index = i;\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptmuvnmxg.rs:17:5\n   |\n\
    4  | fn largest_divisor(n: isize) -> isize {\n   |                           \
    \      ----- expected `isize` because of return type\n...\n17 |     max_divisor_index\n\
    \   |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n17 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut divisor = 1;\n\n    while\
    \ divisor < max_divisor {\n        if n % divisor == 0 {\n            max_divisor\
    \ = divisor;\n        }\n        divisor += 1;\n    }\n    max_divisor\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpbsdr8h3o.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n    let mut max_divisor = 1;\n \
    \   let mut max_divisor_square = max_divisor * max_divisor;\n    let mut i = 0;\n\
    \    while i < n {\n        if n % max_divisor == 0 {\n            max_divisor_square\
    \ = max_divisor * max_divisor;\n            if max_divisor > n {\n           \
    \     break;\n            }\n            max_divisor = max_divisor + 1;\n    \
    \    }\n        i += 1;\n    }\n    max_divisor_square\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 2 == 0', /tmp/tmpj2f_07z6.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 1..n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpoz6bpvtl.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        1\n    }\n    let mut max_divisor = 1;\n\
    \    let mut last_divisor = 2;\n    while last_divisor < n {\n        let divisor\
    \ = last_divisor + 1;\n        if n % divisor == 0 {\n            max_divisor\
    \ = divisor;\n        }\n        last_divisor = divisor;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7sjeq8h9.rs:6:9\n  |\n5 |\
    \ /     if n <= 0 {\n6 | |         1\n  | |         ^ expected `()`, found integer\n\
    7 | |     }\n  | |_____- expected this to be `()`\n  |\nhelp: you might have meant\
    \ to return this value\n  |\n6 |         return 1;\n  |         ++++++  +\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n    let mut i = 1isize;\n    while\
    \ i <= n / 2 {\n        if n % i == 0 {\n            return i;\n        }\n  \
    \      i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 2 == 0', /tmp/tmp25izzlnv.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = n;\n    let mut m = 0;\n\n    while n > 2 {\n  \
    \      n /= 2;\n        m += 1;\n    }\n    if m > n {\n        return n;\n  \
    \  }\n    return m;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpey8ctp8c.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max_by(|&i| i).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0593]: closure is expected to take 2 arguments, but it takes 1 argument\n\
    \ --> /tmp/tmpwm_ecklw.rs:5:12\n  |\n5 |     (1..n).max_by(|&i| i).unwrap()\n\
    \  |            ^^^^^^ ---- takes 1 argument\n  |            |\n  |          \
    \  expected closure that takes 2 arguments\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0593`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_num = n;\n    let\
    \ mut max_power = 1;\n    while max_num > 1 {\n        max_power = (max_num as\
    \ ipow) / 2;\n        if max_power % 2 == 0 {\n            max_num = max_power\
    \ as usize;\n        } else {\n            max_divisor = max_power;\n        }\n\
    \    }\n    if max_num > n {\n        max_num = n\n    }\n    if max_num > 1 {\n\
    \        max_num *= 2;\n    }\n    if max_power == 2 {\n        max_num\n    }\
    \ else {\n        max_divisor\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `ipow` in this scope\n --> /tmp/tmpo38jiher.rs:9:33\n\
    \  |\n9 |         max_power = (max_num as ipow) / 2;\n  |                    \
    \             ^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpo38jiher.rs:11:23\n   |\n6  |     let mut max_num = n;\n   |  \
    \                     - expected due to this value\n...\n11 |             max_num\
    \ = max_power as usize;\n   |                       ^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n\nerror: aborting due to 2 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0412.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (n as isize).iter().rev().take_while(|&x| x % 2 == 0).rev().count()\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp222njf0f.rs:5:18\n  |\n5 |     (n as isize).iter().rev().take_while(|&x|\
    \ x % 2 == 0).rev().count()\n  |                  ^^^^ method not found in `isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest: isize = 1;\n    for divisor in 2..=n {\n  \
    \      if n % divisor == 0 {\n            largest = divisor;\n        }\n    }\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7_w6udg9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return 1;\n    }\n    let mut max_divisor\
    \ = 0;\n    let mut curr_divisor = 1;\n    while curr_divisor < n {\n        let\
    \ mut num_divisor = 0;\n        while n % curr_divisor == 0 {\n            curr_divisor\
    \ *= 2;\n            num_divisor += 1;\n        }\n        max_divisor = if num_divisor\
    \ > max_divisor { num_divisor } else { max_divisor };\n        curr_divisor *=\
    \ 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmp9vlq8pm3.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut divisor_found = false;\n\
    \    for i in 1..=n {\n        if i%max_divisor == 0 {\n            divisor_found\
    \ = true;\n        } else {\n            if divisor_found {\n                max_divisor\
    \ = i;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmplmkonw83.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        if n % 2 == 0 {\n            n = n / 2\n   \
    \     } else {\n            n = n * 3 + 1\n        }\n        if n == 4 || n ==\
    \ 9 || n == 16 || n == 25 {\n            return n\n        }\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpsr5dg16i.rs:7:13\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |             n = n /\
    \ 2\n  |             ^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]:\
    \ cannot assign to immutable argument `n`\n --> /tmp/tmpsr5dg16i.rs:9:13\n  |\n\
    4 | fn largest_divisor(n: isize) -> isize {\n  |                    - help: consider\
    \ making this binding mutable: `mut n`\n...\n9 |             n = n * 3 + 1\n \
    \ |             ^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    for divisor in &[2..=n as usize]\
    \ {\n        if n % divisor == 0 {\n            max_divisor = divisor;\n     \
    \   }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0277]: cannot mod `isize` by `&RangeInclusive<usize>`\n --> /tmp/tmpfd9u8k33.rs:7:14\n\
    \  |\n7 |         if n % divisor == 0 {\n  |              ^ no implementation\
    \ for `isize % &RangeInclusive<usize>`\n  |\n  = help: the trait `Rem<&RangeInclusive<usize>>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n            <&'a f64 as\
    \ Rem<f64>>\n            <&'a i128 as Rem<i128>>\n            <&'a i16 as Rem<i16>>\n\
    \            <&'a i32 as Rem<i32>>\n            <&'a i64 as Rem<i64>>\n      \
    \      <&'a i8 as Rem<i8>>\n            <&'a isize as Rem<isize>>\n          and\
    \ 54 others\n\nerror[E0308]: mismatched types\n --> /tmp/tmpfd9u8k33.rs:8:27\n\
    \  |\n5 |     let mut max_divisor = 0;\n  |                           - expected\
    \ due to this value\n...\n8 |             max_divisor = divisor;\n  |        \
    \                   ^^^^^^^ expected integer, found reference\n  |\n  = note:\
    \   expected type `{integer}`\n          found reference `&RangeInclusive<usize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 == 0);\n    let mut max: isize = 0;\n  \
    \  let mut remain = n / 2;\n    while remain > 0 {\n        let div = n / remain;\n\
    \        if div > max {\n            max = div;\n        }\n        remain = remain\
    \ % 2;\n    }\n    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 2 == 0', /tmp/tmp6j7w8r57.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n\n    } else {\n        largest_divisor(n\
    \ / 2)\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpbyjqipvu.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_remainder\
    \ = 1;\n    for &d in &[1, 3, 7, 17, 31, 73, 107, 131, 173, 197, 239, 297, 377,\
    \ 455, 591, 769] {\n        if n % d == 0 {\n            max_divisor = d;\n  \
    \          max_divisor_remainder = n % d;\n        }\n    }\n    max_divisor_remainder\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_231e1pn.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    match n%2 {\n        0 => n,\n        _ => largest_divisor(n/2)\n\
    \    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpk7inyn0o.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return n;\n    }\n    let mut s = 1;\n\
    \    while s < n {\n        if n % s == 0 {\n            return s;\n        }\n\
    \        s += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmphf1mwrwy.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n / 2\n        .div_mod(2, n)\n        .expect(\"should return\
    \ at least 2\")\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `div_mod` found for type `{integer}` in the\
    \ current scope\n --> /tmp/tmpxnzqzc74.rs:6:10\n  |\n6 |         .div_mod(2, n)\n\
    \  |          ^^^^^^^ method not found in `{integer}`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut i = 31;\n\n    while i\
    \ > 0 {\n        if n % i == 0 {\n            if max_divisor > i {\n         \
    \       max_divisor = i;\n            }\n        }\n        i += 1;\n    }\n \
    \   max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut last_div = 0;\n    for d in\
    \ range(1, &mut largest) {\n        if n % d == 0 {\n            last_div = d;\n\
    \        } else {\n            if last_div > d {\n                largest = last_div;\n\
    \            } else {\n                break;\n            }\n        }\n    }\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `range` in this scope\n --> /tmp/tmpumnfd5y9.rs:7:14\n\
    \  |\n7 |     for d in range(1, &mut largest) {\n  |              ^^^^^ not found\
    \ in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::slice::range;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    largest_factorization(n)\n        .iter()\n        .fold(n,\
    \ |a, b| if a.checked_mul(b).is_zero() then b else a)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: expected `{`, found `then`\n --> /tmp/tmpxmqnn324.rs:7:55\n  |\n\
    7 |         .fold(n, |a, b| if a.checked_mul(b).is_zero() then b else a)\n  |\
    \                         --                            ^^^^ expected `{`\n  |\
    \                         |\n  |                         this `if` expression\
    \ has a condition, but no block\n  |\nhelp: try placing this code inside a block\n\
    \  |\n7 |         .fold(n, |a, b| if a.checked_mul(b).is_zero() { then } b else\
    \ a)\n  |                                                       +      +\n\nerror:\
    \ aborting due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = 1isize;\n    let mut largest_divisor = 0isize;\n\
    \    while divisor < n {\n        divisor += 1;\n        if n % divisor == 0 {\n\
    \            largest_divisor = divisor;\n        }\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqkarfolq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div: isize = 1;\n    let mut max_div: isize = 1;\n\
    \n    for i in 1..n {\n        if n % i == 0 {\n            if max_div > i {\n\
    \                max_div = i;\n            }\n        }\n    }\n\n    if max_div\
    \ == 1 {\n        return n;\n    } else {\n        return max_div;\n    }\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9kw5deaa.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n % 2 != 0);\n    for i in 2..n / 2 {\n      \
    \  if n % i == 0 {\n            return i;\n        }\n    }\n    n\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8fg_p3cm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 0;\n    }\n\n    if n % 2 == 0 {\n\
    \        return 2;\n    }\n\n    if n % 3 == 0 {\n        return 3;\n    }\n\n\
    \    if n % 5 == 0 {\n        return 5;\n    }\n\n    if n % 7 == 0 {\n      \
    \  return 7;\n    }\n\n    if n % 11 == 0 {\n        return 11;\n    }\n\n   \
    \ if n % 13 == 0 {\n        return 13;\n    }\n\n    if n % 17 == 0 {\n      \
    \  return 17;\n    }\n\n    if n % 19 == 0 {\n        return 19;\n    }\n\n  \
    \  if n % 23 == 0 {\n        return 23;\n    }\n\n    if n % 29 == 0 {\n     \
    \   return 29;\n    }\n\n    if n % 31 == 0 {\n        return 31;\n    }\n\n \
    \   if n % 37 == 0 {\n        return 37;\n    }\n\n    if n % 41 == 0 {\n    \
    \    return 41;\n    }\n\n    if n % 43 == 0 {\n        return 43;\n    }\n\n\
    \    if n % 47 == 0 {\n        return 47;\n    }\n\n    if n % 53 == 0 {\n   \
    \     return 53;\n    }\n\n    if n % 59 == 0 {\n        return 59;\n    }\n\n\
    \    if n % 61 == 0 {\n        return 61;\n    }\n\n    if n % 67 == 0 {\n   \
    \     return 67;\n    }\n\n    if n % 71 == 71 {\n        return 71;\n    }\n\n\
    \    if n % 73 == 73 {\n        return 73;\n    }\n\n    if n % 79 == 79 {\n \
    \       return 79;\n    }\n\n    if n % 81 == 81 {\n        return 81;\n    }\n\
    \n    if n % 83 == 83{\n        return 83;\n    }\n\n    if n % 89 == 89 {\n \
    \       return 89;\n    }\n\n    if n % 97 == 97 {\n        return 97;\n    }\n\
    \n    if n % 105 == 105 {\n        return 105;\n    }\n\n    if n % 111 == 111\
    \ {\n        return 111;\n    }\n\n    if n % 127 == 127 {\n        return 127;\n\
    \    }\n\n    if n % 131 == 131 {\n        return 131;\n    }\n\n    if n % 137\
    \ == 137 {\n        return 137;\n    }\n\n    if n % 147 == 147 {\n        return\
    \ 147;\n    }\n\n    if n % 151 == 151 {\n        return 151;\n    }\n\n    if\
    \ n % 157 == 157 {\n        return 157;\n    }\n\n    if n % 163 == 163 {\n  \
    \      return 163;\n    }\n\n    if n % 169 == 169 {\n        return 169;\n  \
    \  }\n\n    if n % 173 == 173 {\n        return 173;\n    }\n\n    if n % 179\
    \ == 179 {\n        return 179;\n    }\n\n    if n % 181 == 181 {\n        return\
    \ 181;\n    }\n\n    if n % 185 == 185 {\n        return 185;\n    }\n\n    if\
    \ n % 187 == 187 {\n        return 187;\n    }\n\n\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0317]: `if` may be missing an `else` clause\n   --> /tmp/tmppf7m8fo0.rs:169:5\n\
    \    |\n4   |   fn largest_divisor(n: isize) -> isize {\n    |               \
    \                    ----- expected `isize` because of this return type\n...\n\
    169 | /     if n % 187 == 187 {\n170 | |         return 187;\n171 | |     }\n\
    \    | |_____^ expected `isize`, found `()`\n    |\n    = note: `if` expressions\
    \ without `else` evaluate to `()`\n    = help: consider adding an `else` block\
    \ that evaluates to the expected type\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0317`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_ind = 1;\n\
    \    let mut largest_divisor = n;\n    while largest_divisor > 1 {\n        largest_divisor\
    \ -= 1;\n        if n % largest_divisor == 0 {\n            if max_divisor ==\
    \ largest_divisor {\n                max_divisor_ind += 1;\n            } else\
    \ {\n                max_divisor = largest_divisor;\n                max_divisor_ind\
    \ = 1;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp57fznaz2.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n\n    } else {\n        largest_divisor(n\
    \ / 2)\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp41bjnysh.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).rev().next().unwrap().expect(\"n must be positive\")\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `expect` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbkxv4fl3.rs:5:34\n  |\n5 |     (1..n).rev().next().unwrap().expect(\"\
    n must be positive\")\n  |                                  ^^^^^^ method not\
    \ found in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (0..n).fold(1, |acc, n| if n % acc == 0 { n } else { acc })\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmppti13uly.rs:5:32\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        largest_divisor(n / 2)\n    } else\
    \ {\n        largest_divisor(n * 3 + 1)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n\n    loop {\n        let mut\
    \ a = n;\n        let mut b = n;\n        let mut c = n;\n        let mut d =\
    \ n;\n\n        for _ in 0..100 {\n            if a > b {\n                d =\
    \ a;\n                a = b;\n                b = c;\n                c = d;\n\
    \            }\n            if b > c {\n                d = b;\n             \
    \   b = c;\n                c = d;\n            }\n            if c > d {\n  \
    \              d = c;\n            }\n        }\n        largest_divisor = std::cmp::max(largest_divisor,\
    \ d);\n    }\n    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert!(n <= 2isize, \"Only positive numbers are supported\"\
    );\n    let mut max_factor = 1;\n    let mut max_divisor = 1;\n    for i in 1..=n\
    \ {\n        if n % i == 0 {\n            if max_factor < i {\n              \
    \  max_factor  = i;\n                max_divisor = n / i;\n            }\n   \
    \     }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'Only positive numbers are supported', /tmp/tmppizjxn9f.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n;\n    let mut counter = 0;\n   \
    \ while largest_divisor % 2 == 0 {\n        largest_divisor /= 2;\n        counter\
    \ += 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp4wmo35b3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let mut divisor = n as isize;\n        if n\
    \ % divisor == 0 {\n            divisor = divisor * 2;\n            if divisor\
    \ < n {\n                divisor = n / 2;\n            }\n        }\n        n\
    \ /= divisor;\n        if n == 1 {\n            return divisor;\n        }\n \
    \   }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpv8y2snvk.rs:13:9\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n13 |         n /=\
    \ divisor;\n   |         ^^^^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).rfold(0, |res, &i| {\n        res.checked_add(i).expect(\"\
    Overflow\");\n        res\n    })\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp74nivqds.rs:5:28\n  |\n5 |\
    \     (1..=n).rfold(0, |res, &i| {\n  |                            ^--\n  |  \
    \                          ||\n  |                            |expected due to\
    \ this\n  |                            expected `isize`, found reference\n  |\
    \                            help: did you mean `i`: `&isize`\n  |\n  = note:\
    \   expected type `isize`\n          found reference `&_`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1;\n    let mut largest_divisor_prime\
    \ = 2;\n    let mut largest_divisor_prime_prime = 3;\n\n    let mut primes: Vec<isize>\
    \ = Vec::new();\n    primes.push(2);\n\n    while primes.len() != n {\n      \
    \  let index = primes.iter().position(|&p| *p > largest_divisor);\n        let\
    \ prime = primes[index].clone(); // borrow it\n        let index = primes.iter().position(|&p|\
    \ *p > largest_divisor_prime);\n        let prime_prime = primes[index].clone();\
    \ // borrow it\n        index = primes.iter().position(|&p| *p > largest_divisor_prime_prime);\n\
    \        let prime_prime_prime = primes[index].clone(); // borrow it\n\n     \
    \   if prime > largest_divisor {\n            largest_divisor = prime;\n     \
    \   }\n\n        if prime_prime > largest_divisor_prime {\n            largest_divisor_prime\
    \ = prime_prime;\n        }\n\n        if prime_prime_prime > largest_divisor_prime_prime\
    \ {\n            largest_divisor_prime_prime = prime_prime_prime;\n        }\n\
    \n        primes.push(prime);\n        primes.push(prime_prime);\n        primes.push(prime_prime_prime);\n\
    \    }\n\n    largest_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1sxlh074.rs:12:27\n   |\n\
    12 |     while primes.len() != n {\n   |                           ^ expected\
    \ `usize`, found `isize`\n   |\nhelp: you can convert an `isize` to a `usize`\
    \ and panic if the converted value doesn't fit\n   |\n12 |     while primes.len()\
    \ != n.try_into().unwrap() {\n   |                            ++++++++++++++++++++\n\
    \nerror[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmp1sxlh074.rs:13:49\n\
    \   |\n13 |         let index = primes.iter().position(|&p| *p > largest_divisor);\n\
    \   |                                                 ^^\n\nerror[E0277]: the\
    \ type `[isize]` cannot be indexed by `Option<usize>`\n  --> /tmp/tmp1sxlh074.rs:14:21\n\
    \   |\n14 |         let prime = primes[index].clone(); // borrow it\n   |    \
    \                 ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of\
    \ `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented\
    \ for `Option<usize>`\n   = note: required because of the requirements on the\
    \ impl of `Index<Option<usize>>` for `Vec<isize>`\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmp1sxlh074.rs:15:49\n   |\n15 |        \
    \ let index = primes.iter().position(|&p| *p > largest_divisor_prime);\n   | \
    \                                                ^^\n\nerror[E0277]: the type\
    \ `[isize]` cannot be indexed by `Option<usize>`\n  --> /tmp/tmp1sxlh074.rs:16:27\n\
    \   |\n16 |         let prime_prime = primes[index].clone(); // borrow it\n  \
    \ |                           ^^^^^^^^^^^^^ slice indices are of type `usize`\
    \ or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>` is not\
    \ implemented for `Option<usize>`\n   = note: required because of the requirements\
    \ on the impl of `Index<Option<usize>>` for `Vec<isize>`\n\nerror[E0614]: type\
    \ `isize` cannot be dereferenced\n  --> /tmp/tmp1sxlh074.rs:17:45\n   |\n17 |\
    \         index = primes.iter().position(|&p| *p > largest_divisor_prime_prime);\n\
    \   |                                             ^^\n\nerror[E0277]: the type\
    \ `[isize]` cannot be indexed by `Option<usize>`\n  --> /tmp/t"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    for i in 2..(max_divisor / 2 +\
    \ 1) {\n        if n % i == 0 {\n            max_divisor = i;\n        }\n   \
    \ }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmprct61uh8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 1..n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpfpjjo7cd.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut counter = 1;\n    while counter\
    \ <= n {\n        if n % counter == 0 {\n            largest = counter;\n    \
    \    }\n        counter += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2qwgbgus.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = 0;\n    while n != 1 {\n        if n % i == 0 {\n\
    \            i += 1;\n        } else {\n            n = n / i;\n        }\n  \
    \  }\n    i\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp1v54y62b.rs:10:13\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |             n\
    \ = n / i;\n   |             ^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_mul(|x| x.checked_add((n + 1) / 2 - 1).unwrap()).unwrap()\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0282]: type annotations needed\n --> /tmp/tmpvwlfp1f4.rs:5:20\n\
    \  |\n5 |     n.checked_mul(|x| x.checked_add((n + 1) / 2 - 1).unwrap()).unwrap()\n\
    \  |                    ^ consider giving this closure parameter a type\n  |\n\
    \  = note: type must be known at this point\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0282`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..).rev().fold(n, |a, b| {\n        if a % b == 0 {\n    \
    \        b\n        } else {\n            a\n        }\n    })\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the trait bound `RangeFrom<{integer}>: DoubleEndedIterator`\
    \ is not satisfied\n    --> /tmp/tmp4u05d1j0.rs:5:11\n     |\n5    |     (1..).rev().fold(n,\
    \ |a, b| {\n     |           ^^^ the trait `DoubleEndedIterator` is not implemented\
    \ for `RangeFrom<{integer}>`\n     |\nnote: required by a bound in `rev`\n\nerror[E0599]:\
    \ the method `fold` exists for struct `Rev<RangeFrom<{integer}>>`, but its trait\
    \ bounds were not satisfied\n   --> /tmp/tmp4u05d1j0.rs:5:17\n    |\n5   |   \
    \    (1..).rev().fold(n, |a, b| {\n    |                   ^^^^ method cannot\
    \ be called on `Rev<RangeFrom<{integer}>>` due to unsatisfied trait bounds\n \
    \   |\n    = note: the following trait bounds were not satisfied:\n          \
    \  `RangeFrom<{integer}>: DoubleEndedIterator`\n            which is required\
    \ by `Rev<RangeFrom<{integer}>>: Iterator`\n            `Rev<RangeFrom<{integer}>>:\
    \ Iterator`\n            which is required by `&mut Rev<RangeFrom<{integer}>>:\
    \ Iterator`\nhelp: one of the expressions' fields has a method of the same name\n\
    \    |\n5   |     (1..).rev().iter.fold(n, |a, b| {\n    |                 +++++\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n % 2 == 0 {\n        n\n    } else {\n        largest_divisor(n\
    \ / 2)\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpmzwx65ke.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n - 1;\n    let mut smallest = n - 1;\n\n\
    \    for i in 0..n / 2 {\n        if n % i == 0 {\n            if largest < i\
    \ {\n                largest = i;\n            }\n            if smallest > i\
    \ {\n                smallest = i;\n            }\n        }\n    }\n\n    largest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpqawq9ven.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut s = Vec::new();\n\n    let mut r = n;\n\n    while r\
    \ % 2 == 0 {\n        s.push(r);\n        r /= 2;\n    }\n\n    s.push(r);\n\n\
    \    loop {\n        if s.len() == 1 {\n            return s[0];\n        }\n\n\
    \        let mut r = s.len() - 1;\n\n        while r >= 0 {\n            let mut\
    \ c = s[r];\n\n            while c % 2 == 0 {\n                c /= 2;\n     \
    \           s.push(c);\n            }\n\n            s.push(c);\n            r\
    \ -= 1;\n        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppwvmg25w.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n; // Initialization\n    let mut max_divisor\
    \ = largest;\n\n    for i in 1..n {\n        if n % i == 0 {\n            largest\
    \ /= i;\n            if largest != 1 {\n                max_divisor = largest;\n\
    \            }\n        }\n    }\n\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpizs83yr0.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_div = i;\n    let mut max_div_prime = i;\n    for\
    \ i in 2..=n {\n        if n % i == 0 {\n            max_div = i;\n          \
    \  max_div_prime = n;\n        }\n        if max_div_prime % i == 0 {\n      \
    \      max_div_prime = i;\n        }\n    }\n    max_div_prime\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `i` in this scope\n --> /tmp/tmpmayfj2z7.rs:5:23\n\
    \  |\n5 |     let mut max_div = i;\n  |                       ^ help: a local\
    \ variable with a similar name exists: `n`\n\nerror[E0425]: cannot find value\
    \ `i` in this scope\n --> /tmp/tmpmayfj2z7.rs:6:29\n  |\n6 |     let mut max_div_prime\
    \ = i;\n  |                             ^ help: a local variable with a similar\
    \ name exists: `n`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n;\n    let mut last_i = 1;\n    loop {\n      \
    \  last_i = last_i * 2;\n        if m % last_i == 0 {\n            m = m / last_i;\n\
    \        }\n        if m == 1 {\n            break;\n        }\n    }\n    m\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to multiply with overflow', /tmp/tmpnachd6tc.rs:8:18\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut dividend = n;\n    let mut largest_divisor = 0;\n\n\
    \    while dividend % 2 == 0 {\n        dividend /= 2;\n        largest_divisor\
    \ += 1;\n    }\n\n    while dividend % 3 == 0 {\n        dividend /= 3;\n    \
    \    largest_divisor += 1;\n    }\n\n    while dividend % 5 == 0 {\n        dividend\
    \ /= 5;\n        largest_divisor += 1;\n    }\n\n    dividend\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpfce57d73.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    debug_assert_eq!(n % 2, 0, \"n must be an even number\")\n\n\
    \    for i in 1..n / 2 {\n        if n % i == 0 {\n            return i;\n   \
    \     }\n    }\n\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `for`\n --> /tmp/tmpxfggecwi.rs:5:59\n\
    \  |\n5 |     debug_assert_eq!(n % 2, 0, \"n must be an even number\")\n  |  \
    \                                                         ^ help: add `;` here\n\
    6 | \n7 |     for i in 1..n / 2 {\n  |     --- unexpected token\n\nerror: aborting\
    \ due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).max_by(|a, b| n % b == 0).unwrap()\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8miztkgv.rs:5:27\n  |\n5 |\
    \     (1..=n).max_by(|a, b| n % b == 0).unwrap()\n  |                        \
    \   ^^^^^^^^^^ expected enum `std::cmp::Ordering`, found `bool`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut divisor_count = 0;\n \
    \   for divisor in divisors(n) {\n        if divisor > n {\n            continue;\n\
    \        }\n        divisor_count += 1;\n        max_divisor = divisor;\n    }\n\
    \    if divisor_count == 0 {\n        return max_divisor;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp5ubrninr.rs:7:20\n\
    \  |\n7 |     for divisor in divisors(n) {\n  |                    ^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 { 1 } else { largest_divisor(n/2) }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpuo8dimb4.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = n;\n    loop {\n        if n % i == 0 {\n      \
    \      return i;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp53zjmig7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n: isize = n;\n    let mut d: isize = 1;\n\n    while\
    \ n % d == 0 {\n        n /= d;\n        d *= 2;\n    }\n\n    n += 1;\n\n   \
    \ d\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp7276rm65.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = n as isize;\n    let mut divisor =\
    \ 2;\n    while divisor < n {\n        if n % divisor == 0 {\n            largest_divisor\
    \ = divisor;\n        }\n        divisor += 1;\n    }\n    largest_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpzlxu9d2a.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut min_divisor = n;\n   \
    \ while min_divisor > 0 {\n        let divisor = min_divisor / 2;\n        if\
    \ n % divisor == 0 {\n            max_divisor = divisor;\n            min_divisor\
    \ = divisor;\n        } else {\n            min_divisor = divisor;\n        }\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpoeor7cch.rs:9:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i: usize = n;\n    loop {\n        if i%2 == 0 {\n \
    \           i += 2;\n        } else {\n            i -= 1;\n        }\n      \
    \  if i == n {\n            break;\n        }\n    }\n    i\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps0nwkwtk.rs:5:24\n  |\n5 |\
    \     let mut i: usize = n;\n  |                -----   ^ expected `usize`, found\
    \ `isize`\n  |                |\n  |                expected due to this\n  |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n  |\n5 |     let mut i: usize = n.try_into().unwrap();\n  |   \
    \                      ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmps0nwkwtk.rs:12:17\n   |\n12 |         if i == n {\n   |       \
    \          ^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n   |\n12 |      \
    \   if i == n.try_into().unwrap() {\n   |                  ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmps0nwkwtk.rs:16:5\n   |\n4  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n16 |     i\n   |     ^ expected\
    \ `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an `isize`\
    \ and panic if the converted value doesn't fit\n   |\n16 |     i.try_into().unwrap()\n\
    \   |      ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut is_prime = true;\n\n    for\
    \ factor in 1..=n {\n        if n % factor == 0 {\n            is_prime = false;\n\
    \        }\n\n        if is_prime {\n            largest = factor;\n        }\n\
    \    }\n\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppxs_w04m.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 1 {\n        n\n    } else {\n        // binary search\
    \ for the largest divisor\n        for i in 1..(n/2) {\n            if n % i ==\
    \ 0 {\n                n = n/i;\n                break;\n            }\n     \
    \   }\n        n\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpmxr3ffsl.rs:11:17\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |             \
    \    n = n/i;\n   |                 ^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_remainder\
    \ = n;\n    while max_divisor_remainder != 0 {\n        if max_divisor_remainder\
    \ % 2 == 0 {\n            max_divisor *= 2;\n        } else {\n            max_divisor\
    \ /= 2;\n        }\n        max_divisor_remainder /= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpn9gu3x2u.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    use std::cmp::Ordering;\n\n    fn gcd(x: isize, y: isize) ->\
    \ isize {\n        while y != 0 {\n            (x, y) = (y, x % y);\n        }\n\
    \        x\n    }\n\n    if n == 1 { return 1; }\n\n    if n == 2 { return 2;\
    \ }\n\n    if n % 2 == 0 { return n; }\n\n    if n % 3 == 0 { return n; }\n\n\
    \    let mut gcd = n; // greatest common divisor\n\n    for d in (3..n).rev()\
    \ {\n        if n % d == 0 {\n            gcd = d;\n        }\n    }\n\n    if\
    \ gcd == n { return n; }\n\n    if gcd(n, gcd) == n {\n        gcd + (n / gcd)\n\
    \    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmp0n63nx99.rs:5:9\n\
    \  |\n5 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nerror[E0618]: expected function,\
    \ found `isize`\n  --> /tmp/tmp0n63nx99.rs:32:8\n   |\n22 |     let mut gcd =\
    \ n; // greatest common divisor\n   |         ------- `gcd` has type `isize`\n\
    ...\n32 |     if gcd(n, gcd) == n {\n   |        ^^^--------\n   |        |\n\
    \   |        call expression requires function\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0618`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_factor = 1;\n    let mut max_div = n;\n    for factor\
    \ in &[3, 5] {\n        while n % factor == 0 {\n            max_div = factor;\n\
    \            n /= factor;\n        }\n        if n == 1 {\n            return\
    \ max_div;\n        }\n        max_div = max_factor;\n        max_factor = factor;\n\
    \    }\n    max_div\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj3p6wt3p.rs:9:23\n  |\n6 |\
    \     let mut max_div = n;\n  |                       - expected due to this value\n\
    ...\n9 |             max_div = factor;\n  |                       ^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    9 |             max_div = *factor;\n  |                       +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpj3p6wt3p.rs:16:22\n   |\n5  |     let mut max_factor\
    \ = 1;\n   |                          - expected due to this value\n...\n16 |\
    \         max_factor = factor;\n   |                      ^^^^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n16 |  \
    \       max_factor = *factor;\n   |                      +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(2).unwrap_or(1)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3ris_eiv.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n == 1 { 1 } else { largest_divisor(n - 1) % n }\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp6bi24n84.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // We use a set to avoid finding twice a number that divides\
    \ n evenly\n    let mut primes = HashSet::new();\n    primes.insert(n);\n    while\
    \ let Some(prime) = primes.pop() {\n        if prime % 2 == 0 {\n            continue;\n\
    \        }\n        let mut factors: Vec<isize> = Vec::new();\n        for divisor\
    \ in 2..=prime {\n            if primes.contains(divisor) {\n                continue;\n\
    \            }\n            factors.push(divisor);\n        }\n        if factors.iter().all(|&x|\
    \ x % prime == 0) {\n            return prime;\n        }\n    }\n    -1\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp15xhtfdw.rs:6:22\n  |\n6 |     let mut primes = HashSet::new();\n  |\
    \                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).find(|&d| n % d == 0)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpe6v83udq.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..=n).find(|&d| n\
    \ % d == 0)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found enum\
    \ `Option`\n  |\n  = note: expected type `isize`\n             found enum `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max_by_key(|n| {\n        n.checked_div(2).ok_or(format!(\"\
    divisor is too large: {}\", n))\n    }).unwrap_or(n)\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpk2ur9l24.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.iter()\n        .take_while(|&i| i % 2 == 0)\n        .max()\n\
    \        .unwrap()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n \
    \   assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp9mop5mbf.rs:5:7\n  |\n5 |     n.iter()\n  |       ^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut smaller: isize = n;\n    let\
    \ mut smaller_div: isize = 1;\n    while smallest % smaller_div != 0 {\n     \
    \   smallest /= smaller_div;\n        if smallest == 1 {\n            return 1;\n\
    \        }\n    }\n    while largest % smaller_div != 0 {\n        largest /=\
    \ smaller_div;\n        if largest == 1 {\n            return 1;\n        }\n\
    \    }\n    while largest != 1 {\n        if largest % 2 != 0 {\n            smaller_div\
    \ += 1;\n            largest_divisor(smaller_div)\n        } else {\n        \
    \    largest = smaller;\n            smaller = smaller_div;\n        }\n    }\n\
    \    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `smallest` in this scope\n --> /tmp/tmp6msngutk.rs:8:11\n\
    \  |\n8 |     while smallest % smaller_div != 0 {\n  |           ^^^^^^^^ help:\
    \ a local variable with a similar name exists: `smaller`\n\nerror[E0425]: cannot\
    \ find value `smallest` in this scope\n --> /tmp/tmp6msngutk.rs:9:9\n  |\n9 |\
    \         smallest /= smaller_div;\n  |         ^^^^^^^^ help: a local variable\
    \ with a similar name exists: `smaller`\n\nerror[E0425]: cannot find value `smallest`\
    \ in this scope\n  --> /tmp/tmp6msngutk.rs:10:12\n   |\n10 |         if smallest\
    \ == 1 {\n   |            ^^^^^^^^ help: a local variable with a similar name\
    \ exists: `smaller`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6msngutk.rs:23:13\n\
    \   |\n21 | /         if largest % 2 != 0 {\n22 | |             smaller_div +=\
    \ 1;\n23 | |             largest_divisor(smaller_div)\n   | |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `()`, found `isize`\n24 | |         } else {\n25 | |             largest\
    \ = smaller;\n26 | |             smaller = smaller_div;\n27 | |         }\n  \
    \ | |_________- expected this to be `()`\n   |\nhelp: consider using a semicolon\
    \ here\n   |\n23 |             largest_divisor(smaller_div);\n   |           \
    \                              +\nhelp: consider using a semicolon here\n   |\n\
    27 |         };\n   |          +\nhelp: you might have meant to return this value\n\
    \   |\n23 |             return largest_divisor(smaller_div);\n   |           \
    \  ++++++                             +\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut smallest: isize = 0;\n    let mut largest = n;\n   \
    \ while largest % 2 == 0 {\n        if largest < n {\n            smallest = largest;\n\
    \            largest = n / 2;\n        } else {\n            largest = n / 2;\n\
    \        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpiv7zd9kk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut d: isize = 1;\n    while d < n {\n        d += 1;\n\
    \    }\n    d\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmwo2nxkh.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n\n    for d in 1..=n / 2 {\n     \
    \   if n % d == 0 {\n            let mut new_divisor = d+1;\n            while\
    \ n % new_divisor == 0 {\n                new_divisor += 1;\n            }\n\n\
    \            if new_divisor > max_divisor {\n                max_divisor = new_divisor;\n\
    \            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpf5cok_rm.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut v: Vec<isize> = (1..n).collect();\n    v.reverse();\n\
    \    let mut cur = v.iter().fold(0, |a, n| {\n        if n % a == 0 {\n      \
    \      a\n        } else {\n            n\n        }\n    });\n    loop {\n  \
    \      cur = if cur % 2 == 0 {\n            cur / 2\n        } else {\n      \
    \      cur / 2 + 1\n        };\n        if cur > n {\n            break;\n   \
    \     }\n    }\n    cur\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpcmn7zrwk.rs:11:13\n   |\n\
    11 |             n\n   |             ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |             *n\n   |     \
    \        +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    loop {\n        let mut i = 1;\n        while i * i <= n {\n\
    \            if n % i == 0 {\n                return i;\n            }\n     \
    \       i += 1;\n        }\n    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpl6m5zfyi.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut smallest: isize = n;\n    let mut largest: isize = n;\n\
    \    for i in 1..n {\n        if n % i == 0 {\n            if largest < i {\n\
    \                largest = i;\n            }\n            if smallest > i {\n\
    \                smallest = i;\n            }\n        }\n    }\n    smallest\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp_cjavzrr.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n\n    for divisor in 0..n {\n    \
    \    if n % divisor == 0 {\n            max_divisor = divisor;\n        }\n  \
    \  }\n\n    return max_divisor;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmptfr9p5h_.rs:8:12\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut n = n.clone();\n    let mut high = n;\n    let mut low\
    \ = 1;\n    while n > 2 {\n        let m = (high + low) / 2;\n        let d =\
    \ n % m;\n        if d > 0 {\n            n = d;\n        } else {\n         \
    \   high = m;\n            low = m;\n        }\n    }\n    high\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpe1_haeff.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max_by_key(|i| i % &i).unwrap()\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot mod `&isize` by `&&isize`\n --> /tmp/tmpo8fl6jnn.rs:5:29\n\
    \  |\n5 |     (1..n).max_by_key(|i| i % &i).unwrap()\n  |                    \
    \         ^ no implementation for `&isize % &&isize`\n  |\n  = help: the trait\
    \ `Rem<&&isize>` is not implemented for `&isize`\n  = help: the following other\
    \ types implement trait `Rem<Rhs>`:\n            <&'a f32 as Rem<f32>>\n     \
    \       <&'a f64 as Rem<f64>>\n            <&'a i128 as Rem<i128>>\n         \
    \   <&'a i16 as Rem<i16>>\n            <&'a i32 as Rem<i32>>\n            <&'a\
    \ i64 as Rem<i64>>\n            <&'a i8 as Rem<i8>>\n            <&'a isize as\
    \ Rem<isize>>\n          and 54 others\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.iter().filter(|&i| i % 2 == 0).max()\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `iter` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp7g6owfg_.rs:5:7\n  |\n5 |     n.iter().filter(|&i| i % 2\
    \ == 0).max()\n  |       ^^^^ method not found in `isize`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in 2..n/2 {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmph7p75mdi.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    fn largest_divisor_internal(n: isize) -> isize {\n        fn\
    \ divisor(n: isize) -> isize {\n            match n % n % { 0 => 1, n => n }\n\
    \        }\n\n        match n / divisor(n) {\n            Some(_) => n,\n    \
    \        None => 1,\n        }\n    }\n\n    largest_divisor_internal(n)\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `=>`\n\
    \ --> /tmp/tmpevnriy6f.rs:7:31\n  |\n7 |             match n % n % { 0 => 1, n\
    \ => n }\n  |                               ^^ expected one of `.`, `;`, `?`,\
    \ `}`, or an operator\n\nerror: expected one of `.`, `?`, `{`, or an operator,\
    \ found `}`\n --> /tmp/tmpevnriy6f.rs:8:9\n  |\n7 |             match n % n %\
    \ { 0 => 1, n => n }\n  |             -----                           - expected\
    \ one of `.`, `?`, `{`, or an operator\n  |             |\n  |             while\
    \ parsing this `match` expression\n8 |         }\n  |         ^ unexpected token\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpevnriy6f.rs:11:13\n   |\n10 |\
    \         match n / divisor(n) {\n   |               -------------- this expression\
    \ has type `isize`\n11 |             Some(_) => n,\n   |             ^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<_>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpevnriy6f.rs:12:13\n\
    \   |\n10 |         match n / divisor(n) {\n   |               --------------\
    \ this expression has type `isize`\n11 |             Some(_) => n,\n12 |     \
    \        None => 1,\n   |             ^^^^ expected `isize`, found enum `Option`\n\
    \   |\n   = note: expected type `isize`\n              found enum `Option<_>`\n\
    \nerror: aborting due to 4 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).max().unwrap_or(n)\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpl9duqlpf.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n / 2\n        .iter()\n        .skip(1)\n        .fold(1, |a,\
    \ b| {\n            if ((b % a) == 0) {\n                a\n            } else\
    \ {\n                b\n            }\n        })\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "warning: unnecessary parentheses around `if` condition\n --> /tmp/tmppteccrt5.rs:9:16\n\
    \  |\n9 |             if ((b % a) == 0) {\n  |                ^            ^\n\
    \  |\n  = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n\
    \  |\n9 -             if ((b % a) == 0) {\n9 +             if (b % a) == 0 {\n\
    \  | \n\nerror[E0599]: no method named `iter` found for type `{integer}` in the\
    \ current scope\n --> /tmp/tmppteccrt5.rs:6:10\n  |\n6 |         .iter()\n  |\
    \          ^^^^ method not found in `{integer}`\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..=n).filter(|&i| i % 2 != 0).max()\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6dhf2v24.rs:5:5\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n5 |     (1..=n).filter(|&i|\
    \ i % 2 != 0).max()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `Option`\n  |\n  = note: expected type `isize`\n             found\
    \ enum `Option<isize>`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    n.checked_div(n.checked_mul(2).unwrap()).expect(\"Input must\
    \ be even\")\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp8kdy971t.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    (1..n).rev().fold(n, |acc, &x| acc + x / 2)\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi19m2wq8.rs:5:32\n  |\n5 |\
    \     (1..n).rev().fold(n, |acc, &x| acc + x / 2)\n  |                       \
    \         ^--\n  |                                ||\n  |                    \
    \            |expected due to this\n  |                                expected\
    \ `isize`, found reference\n  |                                help: did you mean\
    \ `x`: `&isize`\n  |\n  = note:   expected type `isize`\n          found reference\
    \ `&_`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut max = 0i32;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if max\
    \ < divisor {\n                max = divisor;\n            }\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpq7ni6bmg.rs:11:22\n   |\n\
    11 |             if max < divisor {\n   |                      ^^^^^^^ expected\
    \ `i32`, found `isize`\n   |\nhelp: you can convert an `isize` to an `i32` and\
    \ panic if the converted value doesn't fit\n   |\n11 |             if max < divisor.try_into().unwrap()\
    \ {\n   |                             ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpq7ni6bmg.rs:12:23\n   |\n8  |     let mut max = 0i32;\n\
    \   |                   ---- expected due to this value\n...\n12 |           \
    \      max = divisor;\n   |                       ^^^^^^^ expected `i32`, found\
    \ `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpq7ni6bmg.rs:16:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n16 |     max\n\
    \   |     ^^^ expected `isize`, found `i32`\n   |\nhelp: you can convert an `i32`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n16 |     max.try_into().unwrap()\n\
    \   |        ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n < 3 { return n; }\n    \n    let mut max_div = 0;\n   \
    \ let mut max_num = 1;\n    \n    for i in 2..=n {\n        if n % i == 0 {\n\
    \            if max_div < i {\n                max_div = i;\n                max_num\
    \ = 1;\n            } else {\n                max_num = i + 1;\n            }\n\
    \        }\n    }\n    \n    max_div + max_num\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp14yt6a9r.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

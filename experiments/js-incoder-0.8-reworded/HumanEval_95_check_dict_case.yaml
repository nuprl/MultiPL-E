name: HumanEval_95_check_dict_case
language: js
prompt: "//Given an object, return true if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return false.\n// The function should\
  \ return false is the given object is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = check_dict_case;\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"b\"\
  : \"banana\"}),true);\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"A\"\
  : \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"p\":\
  \ \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["\tfor (var key in dict)\n\t\tif (typeof dict[key] != 'string')\n\t\t\
    \treturn false;\n\treturn true;\n}\n", "\tvar is_dict = true;\n\tvar key_list\
    \ = Object.keys(dict);\n\tif(key_list.length == 0){\n\t\treturn false;\n\t}\n\t\
    for(var i = 0; i < key_list.length; i++){\n\t\tif(typeof dict[key_list[i]] ==\
    \ \"string\"){\n\t\t\tis_dict = (is_dict) ? false : true;\n\t\t}else{\n\t\t\t\
    is_dict = (is_dict) ? true : false;\n\t\t}\n\t}\n\treturn is_dict;\n}\n", "  \
    \  return typeof dict == 'object' && Object.keys(dict).every(function(key){\n\
    \        return typeof key == 'string' && key.toLowerCase() != key && key.toUpperCase()\
    \ != key;\n    });\n}\n", "    var result = false;\n    if(Object.keys(dict).length\
    \ == 0){\n        return true;\n    }\n    else{\n        for(var key in dict){\n\
    \            if(typeof dict[key] != 'string'){\n                return false;\n\
    \            }\n            else if(dict[key].toUpperCase() == dict[key]){\n \
    \               result = true;\n                break;\n            }\n      \
    \      else if(dict[key].toLowerCase() == dict[key]){\n                result\
    \ = true;\n                break;\n            }\n        }\n    }\n    return\
    \ result;\n}", "    if (dict){\n        for (let key in dict){\n            if\
    \ (typeof key === 'string'){\n                if (key.length >= 1 && key.length\
    \ <= 12){\n                    if (!(dict.hasOwnProperty(key))){\n           \
    \             return false;\n                    }\n                }else{\n \
    \                   if (!(dict.hasOwnProperty(key))){\n                      \
    \  return false;\n                    }\n                }\n            }else{\n\
    \                if (!(dict.hasOwnProperty(key))){\n                    return\
    \ false;\n                }\n            }\n        }\n        return true;\n\
    \    }else{\n        return false;\n    }\n}\n", "    for(var key in dict){\n\
    \        if(typeof dict[key] === 'string'){\n            if(dict[key].toLowerCase()\
    \ === dict[key].toUpperCase()){\n                return true;\n            }\n\
    \        }else if(typeof dict[key] === 'number'){\n            if(dict[key] ===\
    \ dict[key] === parseInt(dict[key])){\n                return true;\n        \
    \    }\n        }else{\n            return false;\n        }\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a tags=json,javascript,sorting |>\n<| c |>\nThe function\
    \ returns false if the keys are not strings.\n<|/ c |>\n<| a dscore=1 tags=json,javascript,sorting\
    \ |>\n<code>", "\tfor(var key in dict){\n\t\tif((typeof dict[key] == 'string')\
    \ && (dict[key].toUpperCase() == dict[key]))\n\t\t\treturn true;\n\t\telse if((typeof\
    \ dict[key] == 'string') && (dict[key].toLowerCase() == dict[key]))\n\t\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n", "\tvar keys = Object.keys(dict);\n\tvar len\
    \ = keys.length;\n\t\n\tfor(var i=0; i<len; i++){\n\t\tif(!is_string(keys[i])){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n", "\tlet check_keys =\
    \ {}\n\tlet check_values = {}\n\tfor (let k in dict){\n\t\tcheck_keys[k] = typeof\
    \ k === \"string\"\n\t\tcheck_values[k] = typeof dict[k] === \"string\"\n\t}\n\
    \treturn (Object.keys(check_keys).length === Object.keys(check_values).length)\n\
    }\n", "    // return false if the given object is empty\n    if(dict.length ===\
    \ 0){\n        return false;\n    }\n    // iterate through the keys and check\
    \ if they are strings in both upper or lower case.\n    for(key in dict){\n  \
    \      if(typeof key !== 'string' || typeof dict[key] !== 'string'){\n       \
    \     return false;\n        }\n        if(key.toUpperCase() === key){\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a |>\n\
    <| a tags=json,typescript,javascript,node.js |>\n<code>", "    if (Object.keys(dict).length\
    \ == 0){\n        return false;\n    }\n    for (var k in dict){\n        if (typeof\
    \ dict[k] !== \"string\"){\n            return false;\n        }\n        var\
    \ strK = k.toLowerCase();\n        var strV = dict[k].toLowerCase();\n       \
    \ if (strK !== strV){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if(Object.keys(dict).length == 0){\n        return false;\n\
    \    }\n    Object.keys(dict).forEach(function(key){\n        if(typeof(dict[key])\
    \ === \"string\"){\n            if((dict[key].charCodeAt(0) > 65 && dict[key].charCodeAt(0)\
    \ < 90)||(dict[key].charCodeAt(0) > 97 && dict[key].charCodeAt(0) < 122)){\n \
    \               return false;\n            }else{\n                return true;\n\
    \            }\n        }else{\n            return false;\n        }\n    })\n\
    }\n", "   for(var key in dict){\n      if(typeof dict[key] === \"string\"){\n\
    \         if(dict[key].toLowerCase() !== dict[key].toUpperCase())\n          \
    \  return false;\n      }\n      else\n         return false;\n   }\n   return\
    \ true;\n}\n", "    if(dict.constructor !== Object)return false\n    for(key in\
    \ dict)\n        if(!(key in [\"length\", \"name\", \"arguments\", \"caller\"\
    , \"prototype\"]))\n            if(!typeof(key) === typeof dict[key])return false\n\
    \    return true\n}\n", "    if(Object.keys(dict).length == 0){\n        return\
    \ false;\n    }\n    let keys = Object.keys(dict);\n    keys.sort();\n    for\
    \ (let i=0; i<keys.length; i++){\n        if(keys[i].toUpperCase() == keys[i]){\n\
    \            continue;\n        }\n        return false;\n    }\n    return true;\n\
    }\n", "\tfor(var key in dict){\n\t\tif(!dict_checker(key, dict[key])) return false;\n\
    \t}\n\treturn true;\n}\n", "    let str_dict = {};\n    for (let key in dict){\n\
    \        let value = dict[key];\n        if (typeof value === 'string'){\n   \
    \         str_dict[key] = value.toLowerCase();\n        }\n        else if (!isNaN(value)){\n\
    \            str_dict[key] = value.toUpperCase();\n        }\n        else{\n\
    \            return false;\n        }\n    }\n    return Object.keys(str_dict).length\
    \ === Object.keys(dict).length;\n}\n", "  var lower = false;\n  var upper = false;\n\
    \  var keys = Object.keys(dict);\n  for(var i=0;i<keys.length;i++){\n    var key\
    \ = dict[keys[i]];\n    \n    if(typeof(key) == \"string\"){\n      lower = true;\n\
    \    }\n    \n    if(typeof(key) == \"string\" && key.toUpperCase){\n      upper\
    \ = true;\n    }\n  }\n  \n  if(lower && upper){\n    return true;\n  }\n  \n\
    \  return false;\n}\n", "\tfor(var key in dict){\n\t\tif(!(is_string_key(key)\
    \ || is_string_lower(key) || is_string_upper(key))){\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}", "    return true; //to be implemented\n}\n", "\tif\
    \ (is_empty(obj)) return false;\n\tvar keys = Object.keys(dict);\n\tfor (var i\
    \ = 0; i < keys.length; i++){\n\t\tvar value = dict[keys[i]];\n\t\tif (typeof(value)\
    \ === 'string'){\n\t\t\tif (value.toLowerCase() === value){ //in lower case\n\t\
    \t\t\tcontinue;\n\t\t\t}\n\t\t\tif (value.toUpperCase() === value){ //in upper\
    \ case\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n\
    }\n", "  \n  for(var key in dict){\n    if(typeof dict[key] == \"string\"){\n\
    \      if(dict[key].toLowerCase() == dict[key].toUpperCase()){\n        continue;\n\
    \      }\n      else return false;\n    }\n    else return false;\n  }\n  \n \
    \ return true;\n  \n}\n\n", "\tfor(var key in dict){\n\t\tif(typeof dict[key]\
    \ === \"string\"){\n\t\t\tif(dict[key].toLowerCase() === dict[key].toUpperCase()){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "\tvar str_keys = Object.keys(dict)\n\tvar is_str_keys = str_keys.every(function(key){\n\
    \t\tif(typeof(dict[key]) == 'string'){\n\t\t\treturn true\n\t\t} else {\n\t\t\t\
    return false\n\t\t}\n\t})\n\treturn is_str_keys\n}\n", "    if(dict===null ||\
    \ dict===undefined){\n        return false;\n    }\n    var keys=Object.keys(dict);\n\
    \    var len=keys.length;\n    if(len===0){\n        return false;\n    }\n  \
    \  for(var i=0; i<len; i++){\n        if(typeof dict[keys[i]]===\"string\"){\n\
    \            for(var j=0; j<keys.length; j++){\n                if(keys[j] ===\
    \ keys[i].toUpperCase()){\n                    return false;\n               \
    \ }\n            }\n        }\n        else if(typeof dict[keys[i]]===\"number\"\
    ){\n            for(var j=0; j<keys.length; j++){\n                if(keys[j]\
    \ === keys[i].toUpperCase()){\n                    return false;\n           \
    \     }\n            }\n        }\n        else if(typeof dict[keys[i]]===\"boolean\"\
    ){\n            for(var j=0; j<keys.length; j++){\n                if(keys[j]\
    \ === keys[i].toUpperCase()){\n                    return false;\n           \
    \     }\n            }\n        }\n    }\n    return true;\n}\n", "\tif (!dict\
    \ || typeof dict != \"object\"){\n\t\treturn false;\n\t}\n\t\n\tfor (var key in\
    \ dict){\n\t\tvar keyStr = key.toString().toLowerCase();\n\t\tvar value = dict[key];\n\
    \t\tif (typeof value != \"string\"){\n\t\t\treturn false;\n\t\t}\n\t\tif (keyStr\
    \ !== value.toLowerCase()){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n\
    }\n", "  \n  if(dict){\n    var keys = []\n    for(var key in dict){\n      if(typeof\
    \ key == \"string\"){\n        keys.push(key);\n      }\n    }\n    \n    if(keys.length\
    \ == 0){\n      return true\n    }\n    \n    keys = keys.sort();\n    var keyCounter\
    \ = 0;\n    for(var key in dict){\n      if(typeof key == \"string\"){\n     \
    \   if(keys[keyCounter] == key){\n          keyCounter++;\n        }\n       \
    \ else{\n          return false\n        }\n      }\n    }\n    \n    if(keyCounter\
    \ == keys.length){\n      return true\n    }\n    else{\n      return false\n\
    \    }\n  }\n  else{\n    return false\n  }\n}\n", "\tvar result = false;\n\t\
    if(dict == undefined || dict == null || typeof dict != \"object\"){\n\t\treturn\
    \ result;\n\t}\n\tvar keys = Object.keys(dict);\n\tfor(var i=0; i<keys.length;\
    \ i++){\n\t\tvar key = keys[i];\n\t\tif(typeof dict[key] == \"string\"){\n\t\t\
    \tif(keys[i].toLowerCase() == keys[i]){\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t\
    }else if(typeof dict[key] == \"number\"){\n\t\t\tif(!isNaN(dict[key])){\n\t\t\t\
    \tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n", "    var ret\
    \ = true;\n    for(var i in dict){\n        if(typeof i == 'string'){\n      \
    \      if(i.charAt(0) == i.charAt(0).toLowerCase())\n                ret = ret\
    \ && true;\n            else\n                ret = ret && false;\n        }\n\
    \        else ret = ret && false;\n    }\n    return ret;\n}\n", "\tvar keys =\
    \ Object.keys(dict);\n\tfor(var i = 0; i < keys.length; i++){\n\t\tvar key = keys[i];\n\
    \t\tvar value = dict[key];\n\t\tif(!isString(key) || !isString(value))\n\t\t\t\
    return false;\n\t\tif(key.toLowerCase() !== key || value.toLowerCase() !== value){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "    var keys = Object.keys(dict);\n\
    \    var flag = true;\n    for(var i=0; i<keys.length; i++){\n        if(typeof\
    \ dict[keys[i]] === \"string\"){\n            if(keys[i].toLowerCase() !== keys[i]){\n\
    \                flag = false;\n            }\n        }\n        else if(typeof\
    \ dict[keys[i]] === \"number\"){\n            if(dict[keys[i]] !== parseInt(keys[i])){\n\
    \                flag = false;\n            }\n        }\n        else{\n    \
    \        flag = false;\n        }\n    }\n    if(flag && Object.keys(dict).length\
    \ === 0){\n        return true;\n    }\n    return false;\n}\n", "  var ret =\
    \ true;\n  for(var key in dict){\n    if(typeof dict[key] !== \"string\"){\n \
    \     ret = false;\n      break;\n    }\n  }\n  return ret;\n}\n", "    var obj_key\
    \ = Object.keys(dict);\n    var key = 0;\n    var str_case = false;\n    var dict_case\
    \ = false;\n    if(obj_key != null && obj_key.length > 0){\n        for(var i=0;\
    \ i<obj_key.length; i++){\n            if(typeof dict[obj_key[i]] == \"string\"\
    ){\n                key = obj_key[i];\n                dict_case = true;\n   \
    \             str_case = dict[obj_key[i]].toLowerCase() == dict[obj_key[i]].toUpperCase();\n\
    \                if(key == obj_key[i]){\n                    key = obj_key[i]\
    \ + \"_lower\";\n                    dict_case = dict[obj_key[i]].toLowerCase()\
    \ == dict[obj_key[i]].toUpperCase();\n                }else if(key == obj_key[i]+\"\
    _lower\"){\n                    dict_case = dict[obj_key[i]].toLowerCase() ==\
    \ dict[obj_key[i]].toUpperCase();\n                }\n            }\n        }\n\
    \        return str_case && dict_case;\n    }else{\n        return false;\n  \
    \  }\n}\n", "    if(dict){\n        for(var key in dict){\n            if(is_string(key)\
    \ || is_string(key.toLowerCase())){\n                if(!is_string(dict[key])){return\
    \ false}\n            }\n        }\n        return true\n    }\n}\n", "    let\
    \ isUpper = true;\n    for (let key in dict){\n        if (typeof dict[key] ===\
    \ \"string\"){\n            if (isUpper){\n                if (key.toLowerCase()\
    \ !== key.toUpperCase()){\n                    return false;\n               \
    \ }\n            }\n            else{\n                if (key.toLowerCase() !==\
    \ key.toUpperCase()){\n                    return false;\n                }\n\
    \            }\n            isUpper = !isUpper;\n        }\n        else if (typeof\
    \ dict[key] === \"object\"){\n            if (!check_dict_case(dict[key])){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }", "\tvar keys = Object.keys(dict);\n\tif(keys.length == 0){\n\t\treturn false;\n\
    \t}\n\t\n\tfor(var i in keys){\n\t\tif(!keys[i].match(/^[A-Z_]+$/)){\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n", "  for(var key in dict){\n   \
    \ if(typeof dict[key] == 'string'){\n      if(dict[key].toLowerCase() != dict[key]\
    \ && dict[key].toUpperCase() != dict[key]){\n        return false;\n      }\n\
    \    }\n  }\n  return true;\n}\n", "\tfor (var key in dict)\n\tif (typeof (key)!='string'\
    \ || key.trim()==\"\") return false;\n\treturn true;\n}\n", "\tvar flag = false;\n\
    \tvar keys = new Array();\n\tfor(var key in dict){\n\t\tkeys.push( key );\n\t\
    }\n\tkeys.sort();\n\tfor(var i=0;i<keys.length;i++){\n\t\tkey = keys[i];\n\t\t\
    if(key.toLowerCase() != key){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "    var keys = Object.keys(dict);\n    var i;\n    var str_case = keys.map(function(key)\
    \ {\n        return key.toLowerCase();\n    });\n    str_case.sort();\n    for(i\
    \ = 0; i < str_case.length; i++){\n        if(!keys[i].toLowerCase().startsWith(str_case[i])){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    var\
    \ isString = true;\n    for(var i in dict){\n        if(dict[i]===null || typeof(dict[i])!==\"\
    string\")\n            isString = false;\n    }\n    return isString;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you for your code. I modified your code to support string\
    \ key & value. Here is my modified code: \n    function check_dict_case(dict){\n\
    \        var isString = true;\n        for(var i in dict){\n            if(dict[i]===null\
    \ || typeof(dict[i])!==\"string\")\n                isString = false;\n      \
    \  }\n        return isString;\n    }\n<|/ c |>\n<| c |>\nYou are right, I missed\
    \ that.  I have edited the answer to reflect your change.\n<|/ c |>\n<| a |>\n\
    I believe this would be a good fit for Python's collections.defaultdict, specifically\
    \ the default_factory parameter:\n<code>\nfrom collections import defaultdict\n\
    \ndef is_dict_like(obj):\n    return hasattr(obj, '__iter__') and hasattr(obj,\
    \ 'keys')\n\ndef dict_like_to_dict(d):\n    if d:\n        return dict(d)\n  \
    \  else:\n        return dict()\n\ndef dict_like_default_factory(d):\n    if not\
    \ is_dict_like(d):\n        return dict()\n    else:\n        return dict_like_to_dict(d)\n\
    </code>\n<|/ a tags=dictionary,python dscore=3 |>\n<| c |>\nI think you meant\
    \ `hasattr(obj, 'keys')` and not `hasattr(obj, 'values')`\n<|/ c |>\n<| c |>\n\
    No, I was referring to the other answer. His solution worked with only a single\
    \ key that did not have a value. His answer would fail for `{'key': 1}`.\n<|/\
    \ c |>\n<| a tags=dictionary,python dscore=1 |>\nI came here from Google searching\
    \ \"isdict in python\" so I am writing this solution for my own use case. In my\
    \ use case, I need to perform different operations on the dict before storing\
    \ it in mongodb and then want to restore it back to a dict.\n<code>\ndef isdict(obj):\n\
    \    try:\n        iter(obj)\n    except Exception:\n        return False\n  \
    \  return True\n\ndef dictlike_to_dict(d):\n  if isinstance(d, dict):\n    return\
    \ d\n  result = dict()\n  for k, v in d.items():\n    if isinstance(v, dict):\n\
    \      v = dictlike_to_dict(v)\n    if isdict(v):\n      result[k] = v\n    else:\n\
    \      result[k] = v\n  return result\n</code>\n<|/ a |>\n<| a |>\nA small modification\
    \ to the answer by to support string keys and values. \n<code>\nfrom collections\
    \ import defaultdict \n# Given an object, return true if all keys are strings\
    \ in lower \n# case or all keys are ", "    var all_lowercase = true;\n    var\
    \ all_uppercase = true;\n    var all_keys = new Set();\n    for(var key in dict){\n\
    \        if (typeof(dict[key]) == \"string\"){\n            all_lowercase = (all_lowercase\
    \ && key.toLowerCase() == key)\n            all_uppercase = (all_uppercase &&\
    \ key.toUpperCase() == key)\n            all_keys.add(key)\n        }\n    }\n\
    \    return all_keys.length == 0 || all_lowercase || all_uppercase;\n}\n", " \
    \   for (var key in dict) {\n        if (typeof(dict[key]) !== 'string'){\n  \
    \          return false;\n        }\n        else if (key.charAt(0) == key.charAt(0).toLowerCase()){\n\
    \            continue;\n        }\n        else if (key.charAt(0) == key.charAt(0).toUpperCase()){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "\tvar ret\
    \ = true;\n\tvar i = 0;\n\tfor(key in dict){\n\t\tif(typeof(dict[key]) != 'string')\n\
    \t\t\tret = false;\n\t\telse\n\t\t\tkey = key.toLowerCase();\n\t\ti++;\n\t}\n\t\
    return (ret == true && i == dict.length);\n}\n", "\tif(is_empty_dict){\n\t\treturn\
    \ false;\n\t}\n\tfor(var i = 0; i < dict.length; i++){\n\t\tif(typeof dict[i]\
    \ === \"string\"){\n\t\t\tif(dict[i].charCodeAt(0) > 96 && dict[i].charCodeAt(0)\
    \ < 123){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}else if(typeof dict[i] !== \"\
    string\"){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor(var\
    \ key in dict)\n\t{\n\t\tif(typeof dict[key] === \"string\" && dict[key].toLowerCase()\
    \ !== dict[key].toUpperCase())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n*/\n", "\tfor(var key in dict){\n\t\tvar lc = key.toLowerCase();\n\
    \t\tvar uc = key.toUpperCase();\n\t\tif(lc != uc){\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n", "    var keys = new Set();\n    for(let [key, value]\
    \ of Object.entries(dict)){\n        if(typeof value === \"string\") keys.add(key)\n\
    \    }\n    return !dict.length || keys.size === dict.length;\n}\n", "    var\
    \ keys = Object.keys(dict);\n    var str_keys = keys.map(function(key){\n    \
    \    return key.toLowerCase();\n    });\n    \n    return !Object.keys(str_keys.filter(function(key){\n\
    \        return dict[key].toUpperCase() === dict[key];\n    })).some(function(key){\n\
    \        return dict[key].toUpperCase() === dict[key];\n    });\n}\n", "  if(!dict)\n\
    \    return false;\n  var keys = Object.keys(dict);\n  for(var i = 0; i < keys.length;\
    \ i++){\n    var key = keys[i];\n    if(typeof dict[key] == 'string')\n      return\
    \ true;\n    if(typeof dict[key] == 'object'){\n      if(!check_dict_case(dict[key]))\n\
    \        return false;\n    }\n  }\n  return false;\n}\n", "    for(var key in\
    \ dict){\n        if(typeof (key)==\"string\")\n            key = key.toLowerCase();\n\
    \        if(typeof (dict[key])==\"string\")\n            dict[key] = dict[key].toLowerCase();\n\
    \        else if(typeof (dict[key])==\"number\")\n            dict[key] = dict[key].toString();\n\
    \    }\n    return Object.keys(dict).length == 0;\n}\n", "    var cases = [];\n\
    \    var check_case_one = function(obj){ // check one key in obj\n        var\
    \ case = false;\n        var keys = Object.keys(obj); \n        for (var i = 0;\
    \ i < keys.length; i++){\n            var key = keys[i];\n            var val\
    \ = obj[key];\n            if (typeof val == \"string\") {\n                case\
    \ = true;\n            }\n        }\n        return case;\n    };\n    var check_case_two\
    \ = function(obj){ // check two keys in obj\n        var case = false;\n     \
    \   var keys = Object.keys(obj); \n        var keys_length = keys.length;\n  \
    \      for (var i = 0; i < keys_length; i++){\n            var key = keys[i];\n\
    \            var val = obj[key];\n            if (typeof val == \"string\") {\n\
    \                case = true;\n            }\n        }\n        return case;\n\
    \    };\n    var check_case_three = function(obj){ // check three keys in obj\n\
    \        var case = false;\n        var keys = Object.keys(obj); \n        var\
    \ keys_length = keys.length;\n        for (var i = 0; i < keys_length; i++){\n\
    \            var key = keys[i];\n            var val = obj[key];\n           \
    \ if (typeof val == \"string\") {\n                case = true;\n            }\n\
    \        }\n        return case;\n    };\n    var check_case_four = function(obj){\
    \ // check four keys in obj\n        var case = false;\n        var keys = Object.keys(obj);\
    \ \n        var keys_length = keys.length;\n        for (var i = 0; i < keys_length;\
    \ i++){\n            var key = keys[i];\n            var val = obj[key];\n   \
    \         if (typeof val == \"string\") {\n                case = true;\n    \
    \        }\n        }\n        return case;\n    };\n    var check_case_five =\
    \ function(obj){ // check five keys in obj\n        var case = false;\n      \
    \  var keys = Object.keys(obj); \n        var keys_length = keys.length;\n   \
    \     for (var i = 0; i < keys_length; i++){\n            var key = keys[i];\n\
    \            var val = obj[key];\n            if (typeof val == \"string\") {\n\
    \                case = true;\n            }\n        }\n        return case;\n\
    \    };\n    var check_case_six = function(obj){ // check six keys in obj\n  \
    \      var case = false;\n        var keys = Object.keys(obj); \n        var keys_length\
    \ = keys.length;\n        for (var i = 0; i < keys_length; i++){\n           \
    \ var key = keys[i];\n            var val = obj[key];\n            if (typeof\
    \ val == \"string\") {\n                case = true;\n            }\n        }\n\
    \        return case;\n    };\n    var check_case_seven = function(obj){ // check\
    \ seven keys in obj\n        var case = false;\n        var keys = Object.keys(obj);\
    \ \n        var keys_length = keys.length;\n        for (var i = 0; i < keys_length;\
    \ i++){\n            var key = keys[i];\n            var val = obj[key];\n   \
    \         if (typeof val == \"string\") {\n                case = true;\n    \
    \        }\n        }\n        return case;\n    };\n    var check_case_eight\
    \ = function(obj){ // check eight keys in obj\n        var case = false;\n   \
    \     var keys = Object.keys(obj); \n        var keys_length = keys.length;\n\
    \        for (var i = 0; i < keys_length; i++){\n            var key = keys[i];\n\
    \            var val = obj[key];", "  var keys = Object.keys(dict);\n  for(var\
    \ i=0; i<keys.length; i++){\n    if(typeof dict[keys[i]] === \"string\"){\n  \
    \    if(!((keys[i]).toLowerCase() === keys[i])){\n        return false;\n    \
    \  }\n    }\n    else{\n      if(!((keys[i]).toLowerCase() === keys[i])){\n  \
    \      return false;\n      }\n    }\n  }\n  return true;\n}\n", "    var keys\
    \ = Object.keys(dict);\n    var is_all_strings = false;\n    keys.forEach(function(key){\n\
    \        if (key.length !== 0 && !isNaN(parseInt(key)) && \n            !isNaN(parseFloat(key))){\n\
    \            is_all_strings = true;\n        }\n    });\n    return is_all_strings;\n\
    }\n\n", "    var keys = Object.keys(dict);\n    var isSame = true;\n    var isSameUpper\
    \ = true;\n    keys.forEach(function(key){\n        if(typeof dict[key] === \"\
    string\" && dict[key].toUpperCase() === dict[key]){\n            isSameUpper =\
    \ false;\n        }\n        if(typeof dict[key] === \"string\" && dict[key].toLowerCase()\
    \ === dict[key]){\n            isSame = false;\n        }\n    });\n    return\
    \ isSame && isSameUpper;\n}\n", "  // Only check keys that exist in the dict\n\
    \  var keys = Object.keys(dict);\n  for(var i=0; i < keys.length; i++){\n    if(typeof\
    \ dict[keys[i]] === \"string\" && keys[i].toLowerCase() !== keys[i]){\n      return\
    \ false;\n    }\n    else if(typeof dict[keys[i]] === \"string\" && keys[i].toUpperCase()\
    \ !== keys[i]){\n      return false;\n    }\n  }\n  return true;\n}\n", "\tvar\
    \ i;\n\tvar isLowerCase = true;\n\tvar isUpperCase = true;\n\tvar keys = Object.keys(dict);\n\
    \tvar numKeys = keys.length;\n\tfor (i=0; i<numKeys; i++){\n\t\tkey = keys[i];\n\
    \t\tif(typeof(dict[key]) == \"string\" && dict[key].length < 1 || \n\t\ttypeof(dict[key])\
    \ == \"string\" && dict[key].length > 1 || \n\t\ttypeof(dict[key]) == \"string\"\
    \ && dict[key].length != 1){\n\t\t\tisLowerCase = false;\n\t\t}else{\n\t\t\tisUpperCase\
    \ = false;\n\t\t}\n\t}\n\treturn isLowerCase && isUpperCase;\n}\n", "    for(var\
    \ k in dict){\n        if(k.toLowerCase() !== k && k.toUpperCase() !== k){\n \
    \           return false;\n        }\n    }\n    return true;\n}", "    if (dict.length\
    \ == 0) return false;\n    for (var key in dict) {\n        if(!isNaN(parseInt(key))\
    \ || key == ''){\n            return false;\n        }\n        \n        if (typeof\
    \ dict[key] == 'string'){\n            if (dict[key].toUpperCase() != dict[key])\
    \ return false\n            else if (dict[key].toLowerCase() != dict[key]) return\
    \ false\n        }\n        else {\n            if (dict[key].toUpperCase() !=\
    \ dict[key]) return false\n            else if (dict[key].toLowerCase() != dict[key])\
    \ return false\n        }\n    }\n    return true;\n}\n", "    // TODO: Make this\
    \ work case-insensitive for both keys and values.\n    let keys = Object.keys(dict);\n\
    \    if (keys.length == 0) return true;\n    for (let i = 0; i < keys.length;\
    \ i++){\n        if (keys[i].toLowerCase() == keys[i].toLowerCase()){\n      \
    \      continue;\n        }\n        else if (keys[i].toUpperCase() == keys[i].toUpperCase()){\n\
    \            continue;\n        }\n        else return false;\n    }\n    return\
    \ true;\n}\n", "    var is_dict_case = false,\n        keys = Object.keys(dict),\n\
    \        keys_length = keys.length;\n    for(var i = 0; i < keys_length; i++){\n\
    \        if(keys[i].toLowerCase() !== keys[i]){\n            is_dict_case = true;\n\
    \            break;\n        }\n    }\n    return is_dict_case;\n}\n", "    for(var\
    \ key in dict){\n        if(typeof(key)=='string'){\n            if(key.toLowerCase()!=key){\n\
    \                return false;\n            }\n        }else{\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n</cell>\n<text>\nExercise\nConvert\
    \ the string 'a' to the integer value 97 using ord(). Print the value 97.\n\n\n\
    </text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n## Your code here\n</cell>\n\
    <text>\nExercise\nConvert the string 'a' to the integer value 97 using ord().\
    \ Print the value 97.\n\n\n</text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n\
    ## Your code here\n</cell>\n<text>\nExercise\nConvert the string 'a' to the integer\
    \ value 97 using ord(). Print the value 97.\n\n\n</text>\n<cell>\n##Solution\n\
    ord('a')\n</cell>\n<cell>\n## Your code here\n</cell>\n<text>\nExercise\nConvert\
    \ the string 'a' to the integer value 97 using ord(). Print the value 97.\n\n\n\
    </text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n## Your code here\n</cell>\n\
    <text>\nExercise\nConvert the string 'a' to the integer value 97 using ord().\
    \ Print the value 97.\n\n\n</text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n\
    ## Your code here\n</cell>\n<text>\nExercise\nConvert the string 'a' to the integer\
    \ value 97 using ord(). Print the value 97.\n\n\n</text>\n<cell>\n##Solution\n\
    ord('a')\n</cell>\n<cell>\n## Your code here\n</cell>\n<text>\nExercise\nConvert\
    \ the string 'a' to the integer value 97 using ord(). Print the value 97.\n\n\n\
    </text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n## Your code here\n</cell>\n\
    <text>\nExercise\nConvert the string 'a' to the integer value 97 using ord().\
    \ Print the value 97.\n\n\n</text>\n<cell>\n##Solution\nord('a')\n</cell>\n<cell>\n\
    ## Your code here\n</cell>\n<text>\nExercise\nConvert the string 'a' to the integer\
    \ value 97 using ord(). Print the value 97.\n\n\n", "\tif (typeof dict !== 'object'){\n\
    \t\treturn false\n\t}\n\tvar keys = Object.keys(dict);\n\tvar is_all_strings =\
    \ true\n\tfor (let key of keys){\n\t\tif (typeof key !== 'string'){\n\t\t\tis_all_strings\
    \ = false\n\t\t}\n\t}\n\treturn is_all_strings\n}\n", "    var is_upper = true;\n\
    \    var is_lower = true;\n    for( var key in dict){\n        if(!isNaN(parseInt(key))){\n\
    \            continue;\n        }\n        //if key is all lowercase, return false\n\
    \        if(key.toLowerCase() !== key){\n            is_upper = false;\n     \
    \       break;\n        }\n        //if key is all uppercases, return false\n\
    \        if(key.toUpperCase() !== key){\n            is_lower = false;\n     \
    \       break;\n        }\n    }\n    return is_upper && is_lower;\n}\n", "  \
    \  var i;\n    for (i in dict){\n        if (typeof(dict[i])==='string'){\n  \
    \          if (i.toLowerCase() !== i){\n                return false;\n      \
    \      }\n        }else{\n            if (i.toUpperCase() !== i){\n          \
    \      return false;\n            }\n        }\n    }\n    return true;\n}\n",
  "    if(is_empty(dict) || !is_object_name(dict) || dict.constructor !== Object)\
    \ return false;\n    for(var key in dict){\n        if(key === key && is_string(key)\
    \ && key.match(/[a-z]/) && key.match(/[A-Z]/)) return false;\n        if(is_number(key)\
    \ && key === key && is_string(key) && key.match(/[a-z]/) && key.match(/[A-Z]/))\
    \ return false;\n        if(is_string(key) && key.match(/[a-z]/) && key.match(/[A-Z]/))\
    \ return false;\n    }\n    return true;\n}\n", "    for(var key in dict){\n \
    \       if(!(typeof dict[key] === 'string')){\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n", "  let keys = Object.keys(dict).sort();\n\
    \  let isLowerCase = true;\n  let isUpperCase = true;\n  let i = 0;\n  while(i\
    \ < keys.length){\n    if(typeof keys[i] === \"string\" && !(keys[i]).match(/[^A-Z]/)){\n\
    \      i++;\n    }else{\n      isUpperCase = false;\n      isLowerCase = false;\n\
    \    }\n  }\n  return isLowerCase && isUpperCase;\n}\n", "    for (var key in\
    \ dict){\n        if (key.toLowerCase() == key){\n            return true;\n \
    \       }\n    }\n    return false;\n}\n", "   if(dict == null || typeof dict\
    \ != \"object\"){\n      return false;\n   }\n   var keys = Object.keys(dict);\n\
    \   for(var i in keys){\n      var key = keys[i];\n      if(typeof key != \"string\"\
    ){\n         return false;\n      }\n      if(typeof dict[key] != \"string\"){\n\
    \         return false;\n      }\n      if(key.toLowerCase() == key){\n      \
    \   continue;\n      }\n      if(key.toUpperCase() == key){\n         continue;\n\
    \      }\n      return false;\n   }\n   return true;\n}\n", "    var has_upper\
    \ = false;\n    for(var key in dict){\n        if(typeof dict[key] == 'string'){\n\
    \            has_upper = has_upper || (key.toUpperCase() == key);\n        }\n\
    \    }\n    return has_upper;\n}", "    let result = true;\n    for(let key in\
    \ dict){\n        if(typeof key !== 'string'){\n            result = false;\n\
    \            break;\n        }\n        //All keys must be lowercase strings\n\
    \        if(key.indexOf(key.charAt(0).toLowerCase()) < 0){\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\n", " \
    \   if (dict.length == 0)\n    {\n        return false;\n    }\n    else\n   \
    \ {\n        for (key in dict)\n        {\n            if (typeof key == \"string\"\
    \ && key.toLowerCase() == key)\n            {\n                return true;\n\
    \            }\n            else if (typeof key == \"string\" && key.toUpperCase()\
    \ == key)\n            {\n                return true;\n            }\n      \
    \      else if (typeof key != \"string\")\n            {\n                return\
    \ false;\n            }\n        }\n    }\n    return false;\n}", "    for(var\
    \ k in dict){\n        if(typeof dict[k] === \"string\"){\n            if(dict[k].toLowerCase()\
    \ === dict[k]){\n                continue;\n            }\n            if(dict[k].toUpperCase()\
    \ === dict[k]){\n                continue;\n            }\n        }\n       \
    \ return false;\n    }\n    return true;\n}\n", "\tvar keys = Object.keys(dict);\n\
    \tfor(var i=0; i<keys.length; i++){\n\t\tvar key = keys[i];\n\t\tif(!is_string(key))\n\
    \t\t\treturn false;\n\t\tif(is_string(key) && key.toLowerCase() != key){\n\t\t\
    \treturn false;\n\t\t}\n\t\tif(is_string(key) && key.toUpperCase() != key){\n\t\
    \t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "    for(key in dict){\n\
    \        if(typeof dict[key] === \"string\"){\n            if((dict[key].toUpperCase()\
    \ != dict[key]) && (dict[key].toLowerCase() != dict[key])){\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n\n", "  if (dict.length\
    \ == 0) {\n    return false;\n  }\n  var keys = Object.keys(dict);\n  for(var\
    \ i=0; i<keys.length; i++){\n    if (typeof dict[keys[i]] == 'string'){\n    \
    \  if (keys[i].length == 1){\n        if (keys[i].charCodeAt(0)>64 && keys[i].charCodeAt(0)<91){\n\
    \          //if 1st character is uppercase letter, 2nd character should be lowercase\n\
    \          return false;\n        }\n      }\n      else{\n        if (keys[i].charCodeAt(0)>96\
    \ && keys[i].charCodeAt(0)<123){\n          //if 1st character is uppercase letter,\
    \ 2nd character should be uppercase\n          return false;\n        }\n    \
    \  }\n    }\n    else{\n      if (keys[i].length == 1){\n        if (keys[i].charCodeAt(0)>64\
    \ && keys[i].charCodeAt(0)<91){\n          //if 1st character is uppercase letter,\
    \ 2nd character should be lowercase\n          return false;\n        }\n    \
    \  }\n      else{\n        if (keys[i].charCodeAt(0)>96 && keys[i].charCodeAt(0)<123){\n\
    \          //if 1st character is uppercase letter, 2nd character should be uppercase\n\
    \          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
  "   var result = true;\n   var key_list = Object.keys(dict);\n   for (var i = 0;\
    \ i < key_list.length; i++){\n      for (var key in dict){\n         if(typeof\
    \ dict[key] !== \"string\" && typeof dict[key] !== \"number\" && typeof dict[key]\
    \ !== \"boolean\"){\n            result = false;\n         }\n      }\n   }\n\
    \   return result;\n}", "\tfor(var k in dict){\n\t\tif(typeof k == \"string\"\
    ){\n\t\t\tif(k.toLowerCase() == k && k.toUpperCase() == k){\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t\telse if(typeof k == \"number\"){\n\t\t\tif(k == k){\n\t\t\t\
    \treturn true;\n\t\t\t}\n\t\t}\n\t\telse if(typeof k == \"undefined\"){\n\t\t\t\
    continue;\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n", "    for(key in\
    \ dict){\n        var value = dict[key];\n        if(typeof(value)=='string'){\n\
    \            var lower = value.toLowerCase();\n            var upper = value.toUpperCase();\n\
    \            if(!((lower==upper)||(lower==value))){\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n", "    if(dict === null\
    \ || typeof dict !== 'object')\n        return false;\n    if(Object.keys(dict).length\
    \ === 0) \n        return false;\n    for(var k in dict){\n        if(!k.match(/^[a-z0-9]+$/))\n\
    \            return false;\n    }\n    return true;\n}\n", "  // Write code here\n\
    \  var ret = true;\n  for(var i = 0; i < dict.length; i++){\n    for(var key in\
    \ dict[i]){\n      var cur = dict[i][key]\n      if(typeof cur == \"string\"){\n\
    \        if(cur.toLowerCase() != key.toLowerCase()){\n          ret = false;\n\
    \          break;\n        }\n      }\n      else if(typeof cur == \"number\"\
    ){\n        if(cur != key){\n          ret = false;\n          break;\n      \
    \  }\n      }\n    }\n  }\n  return ret;\n}\n", "    for (var key in dict){\n\
    \        if (typeof dict[key] !== \"string\"){\n            return false;\n  \
    \      }\n        if (dict[key].length < 1){\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n", "    if (Object.keys(dict).length == 0){\n\
    \        return false;\n    }\n    let lower = Object.keys(dict).map(function(key)\
    \ {\n        return key.toLowerCase();\n    });\n    let upper = Object.keys(dict).map(function(key)\
    \ {\n        return key.toUpperCase();\n    });\n    for (let i = 0; i < lower.length;\
    \ i++){\n        if (upper.indexOf(lower[i]) != -1){\n            return false;\n\
    \        }\n    }\n    return true;\n}", "\tfor(var key in dict){\n\t\tif(typeof\
    \ dict[key] == \"string\" && dict[key].toUpperCase() == dict[key]){\n\t\t\treturn\
    \ false;\n\t\t}\n\t\tif(typeof dict[key] == \"string\" && dict[key].toLowerCase()\
    \ == dict[key]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "   \
    \ var is_case_sensitive = true;\n    for(var key in dict){\n        if(typeof\
    \ dict[key] === \"string\"){\n            if(!is_case_sensitive){\n          \
    \      is_case_sensitive = dict[key].toLowerCase() === dict[key].toUpperCase();\n\
    \            }\n            else{\n                is_case_sensitive = dict[key].toLowerCase()\
    \ === dict[key].toLowerCase();\n            }\n        }\n        else if(typeof\
    \ dict[key] === \"object\"){\n            if(is_case_sensitive){\n           \
    \     is_case_sensitive = check_dict_case(dict[key]) \n            }\n       \
    \     else{\n                is_case_sensitive = check_dict_case(dict[key]) \n\
    \            }\n        }\n    }\n    return is_case_sensitive;\n}", "  for(const\
    \ key in dict){\n    if(!is_str(key) || !is_str(dict[key])){\n      return false\n\
    \    }\n  }\n  return true\n}\n\n", "    var result = true;\n    for(var key in\
    \ dict){\n        if(typeof dict[key] != \"string\"){\n            result = false;\n\
    \            break;\n        }\n    }\n    return result;\n}\n", "  if (is_empty(dict))\
    \ return false;\n  \n  var keys = Object.keys(dict);\n  \n  // Convert all keys\
    \ to lower case\n  for (var i = 0; i < keys.length; i++){\n    var key = keys[i];\n\
    \    var val = dict[key];\n    dict[key] = val.toLowerCase();\n  }\n  \n  // Check\
    \ if every keys are strings in lower case\n  for (var j = 0; j < keys.length;\
    \ j++){\n    var key = keys[j];\n    var val = dict[key];\n    if (is_empty(val))\
    \ return false;\n  }\n  \n  // Convert all keys to upper case\n  for (var i =\
    \ 0; i < keys.length; i++){\n    var key = keys[i];\n    var val = dict[key];\n\
    \    dict[key] = val.toUpperCase();\n  }\n  \n  // Check if every keys are strings\
    \ in upper case\n  for (var j = 0; j < keys.length; j++){\n    var key = keys[j];\n\
    \    var val = dict[key];\n    if (is_empty(val)) return false;\n  }\n  \n  return\
    \ true;\n}\n", "  let isDict = dict instanceof Object;\n  if(!isDict) return false;\n\
    \  let keys = Object.keys(dict);\n  let keys_length = keys.length;\n  for(let\
    \ i = 0; i < keys_length; i++){\n    let k = keys[i];\n    let isString = typeof\
    \ dict[k] === \"string\";\n    let isInt = isString && dict[k].match(/\\d+/);\n\
    \    if(isInt || isString){\n      let lowerCaseLetter = dict[k].toLowerCase();\n\
    \      let upperCaseLetter = dict[k].toUpperCase();\n      return (lowerCaseLetter\
    \ === upperCaseLetter);\n    }\n  }\n  return true;\n}\n", "    var keys = Object.keys(dict);\n\
    \    var result = true;\n    for (var i=0; i<keys.length; i++){\n        var key\
    \ = keys[i];\n        if (!(typeof key === 'string')){\n            result = false;\n\
    \        }\n        else if ((key.toLowerCase() !== key) || (key.toUpperCase()\
    \ !== key)){ \n            result = false;\n        }\n    }\n    return result;\n\
    }\n", "  for (var key in dict){\n    if (typeof dict[key] !== \"string\"){\n \
    \     return false;\n    }\n  }\n  return true;\n}\n", "    var str_keys = Object.keys(dict).map(function(key){\
    \ return key.toLowerCase(); });\n    for(var i=0;i<str_keys.length;i++){\n   \
    \     if (str_keys[i] in dict){\n            if (typeof(dict[str_keys[i]]) ==\
    \ \"string\"){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n", "    var keys = Object.keys(dict);\n    for(var i=0;\
    \ i<keys.length; i++){\n        if(typeof keys[i]!=='string' || keys[i].toUpperCase()\
    \ !==keys[i]){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "\tfor(var key in dict){\n\t\tif(typeof dict[key] == \"string\"){\n\t\t\t\
    if(!(key.toLowerCase() in dict) \n\t\t\t\t\t&& !(key in dict)){\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key] == \"number\"){\n\t\t\t\
    if(!(key.toUpperCase() in dict) \n\t\t\t\t\t&& !(key in dict)){\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key] == \"object\"){\n\t\t\t\
    if(!check_dict_case(dict[key])){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn true;\n}\n", "  let keys = Object.keys(dict)\n  return keys.length ===\
    \ Object.keys(dict).filter(key => typeof dict[key] === \"string\" && key.substring(0,\
    \ 1) === key.substring(0,1).toLowerCase()).length || keys.length === Object.keys(dict).filter(key\
    \ => typeof dict[key] === \"string\" && key.substring(0, 1) === key.substring(0,1).toUpperCase()).length;\n\
    }\n", "  for(var key in dict){\n    if(!key){\n      return false;\n    }\n  \
    \  var lower = key.toLowerCase();\n    var upper = key.toUpperCase();\n    if(lower==upper){\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "    if (dict == undefined\
    \ || dict.length == 0){\n        return false;\n    }\n    for (var key in dict){\n\
    \        if (typeof(dict[key]).toLowerCase() != 'string' &&\n            typeof(dict[key]).toUpperCase()\
    \ != 'STRING'){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    for(var key in dict){\n        if(!_.isString(key) || \n          \
    \  !_.isString(dict[key]) ||\n            key.indexOf(dict[key]) !== 0 ||\n  \
    \          _.isArray(dict[key]) ){\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n", "\t// Logic to check if all keys are strings in lower\
    \ or upper case\n\tvar caseCheck = false;\n\tif(is_empty(dict)){\n\t\treturn false;\n\
    \t}\n\tfor(var key in dict){\n\t\tif(typeof dict[key] != \"string\"){\n\t\t\t\
    return false;\n\t\t}\n\t\tvar key = key.trim().toLowerCase();\n\t\tvar value =\
    \ dict[key];\n\t\tif((value[0] >= 'a' && value[0] <= 'z') || (value[0] >= 'A'\
    \ && value[0] <= 'Z')){\n\t\t\tcaseCheck = true;\n\t\t}else{\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn caseCheck;\n}\n", "    for(var key in dict){\n        if(typeof\
    \ dict[key] !== \"string\"){\n            return false;\n        }\n        key\
    \ = key.toLowerCase();\n        if(!(key[0] >= \"a\" && key[0] <= \"z\")){\n \
    \           return false;\n        }\n    }\n    return true;\n}\n", "    if (dict\
    \ == \"\" || typeof(dict) == \"undefined\" || dict == null) \n        return true;\n\
    \    var keys = Object.keys(dict).sort();\n    var first = true;\n    for(var\
    \ i in keys) {\n        if (keys[i].match(/[a-z]$/i) && keys[i].match(/[A-Z]$/i))\n\
    \            continue;\n        if (first && !keys[i].match(/[a-z]/i))\n     \
    \       return false;\n        if (first && !keys[i].match(/[A-Z]/i))\n      \
    \      return false;\n        first = false;\n    }\n    return true;\n}\n", "\t\
    if (!dict) return false\n\tfor(key in dict){\n\t\tval = dict[key];\n\t\tif (typeof(val)\
    \ == \"string\"){\n\t\t\tlower = key.toLowerCase();\n\t\t\tupper = key.toUpperCase();\n\
    \t\t\tif (lower != upper && lower != key) return false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    for(key in dict){\n        if(typeof dict[key] != \"string\"\
    ){\n            return false;\n        }\n    }\n    return true;\n}\n", "  for(var\
    \ key in dict){\n    if(typeof dict[key] == 'string'){\n      if(typeof key.toLowerCase()\
    \ == 'string' || typeof key.toUpperCase() == 'string'){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\n", "\tif (dict == null || Object.keys(dict).length\
    \ == 0) return false;\n\tfor (key in dict){\n\t\tif (key.toLowerCase() == key\
    \ || key.toUpperCase() == key)\n\t\t\tcontinue;\n\t\treturn false;\n\t}\n\treturn\
    \ true;\n}\n", "    var dictLower = {\n        \"name\": \"Name\",\n        \"\
    age\": \"Age\",\n        \"city\": \"City\",\n        \"zip\": \"ZIP\",\n    \
    \    \"state\": \"STATE\",\n        \"phone\": \"Phone\",\n        \"address\"\
    : \"Address\",\n        \"website\": \"Website\"\n    }\n    var dictUpper = {\n\
    \        \"NAME\": \"Name\",\n        \"AGE\": \"Age\",\n        \"CITY\": \"\
    City\",\n        \"ZIP\": \"ZIP\",\n        \"STATE\": \"STATE\",\n        \"\
    PHONE\": \"Phone\",\n        \"ADDRESS\": \"Address\",\n        \"WEBSITE\": \"\
    Website\"\n    }\n    for(var key in dict){\n        if(dictLower.hasOwnProperty(key))\
    \ {\n            if(dictLower[key] !== key){\n                return false\n \
    \           }\n        }\n        if(dictUpper.hasOwnProperty(key)) {\n      \
    \      if(dictUpper[key] !== key){\n                return false\n           \
    \ }\n        }\n    }\n    return true\n}\n", "    if (Object.keys(dict).length\
    \ == 0) return false\n    for (let key in dict){\n        if (dict[key].constructor\
    \ === String && !(dict[key].toLowerCase() === dict[key].toLowerCase()) || dict[key].constructor\
    \ === Number && !(dict[key].toString() === dict[key].toString())) return false\n\
    \    }\n    return true\n}\n", "    if(!dict || Object.keys(dict).length === 0)\
    \ return false\n    if(Object.keys(dict).reduce( (a,c)=>(a || dict[c] instanceof\
    \ String) ,true))\n        return true\n    else\n        return false\n}\n",
  "    //If the dictionary is empty, return true immediately.\n    if(Object.keys(dict).length\
    \ === 0)\n        return true;\n    \n    //Get the keys of the dictionary. \n\
    \    var keys = Object.keys(dict).sort();\n    \n    //Sort the keys in alphabetical\
    \ order and make a new object.\n    var newDict = {};\n    keys.forEach(function(key){\n\
    \        newDict[key.toLowerCase()] = dict[key];\n    });\n    \n    //Get the\
    \ keys of the new dictionary.\n    var newKeys = Object.keys(newDict).sort();\n\
    \    \n    //Sort the new keys in alphabetical order. \n    var upperCaseKeys\
    \ = newKeys.filter(function(key){\n        return key.length === 0 || key[0].toUpperCase()\
    \ === key[0];\n    });\n    \n    //Sort the upper case keys in alphabetical order.\
    \ \n    var lowerCaseKeys = newKeys.filter(function(key){\n        return key.length\
    \ === 0 || key.toLowerCase() === key.toLowerCase();\n    });\n    \n    //If both\
    \ sets of keys are equal, return true immediately.\n    if(newKeys.length ===\
    \ 0)\n        return true;\n    \n    //If there are no upper case keys, return\
    \ false. \n    if(upperCaseKeys.length === 0)\n        return false;\n    \n \
    \   //If there are no lower case keys, return false. \n    if(lowerCaseKeys.length\
    \ === 0)\n        return false;\n    \n    //If there are no keys with an upper\
    \ case letter, return false. \n    if(upperCaseKeys.length === 0 && lowerCaseKeys.length\
    \ === 0)\n        return false;\n    \n    //If there are no keys with an lower\
    \ case letter, return false. \n    if(upperCaseKeys.length === 0 && lowerCaseKeys.length\
    \ === 0)\n        return false;\n    \n    //If there are keys with an upper case\
    \ letter, return false. \n    if(upperCaseKeys.length === 1)\n        return false;\n\
    \    \n    //If there are keys with an lower case letter, return false. \n   \
    \ if(lowerCaseKeys.length === 1)\n        return false;\n    \n    //If there\
    \ are both lower case and upper case letters, return false. \n    if(upperCaseKeys.length\
    \ === 1 && lowerCaseKeys.length === 1)\n        return false;\n    \n    //If\
    \ there are both lower case and upper case letters, return false. \n    if(upperCaseKeys.length\
    \ === 1)\n        return false;\n    \n    //If there are both upper case and\
    \ lower case letters, return false. \n    if(upperCaseKeys.length === 0 && lowerCaseKeys.length\
    \ === 0)\n        return false;\n    \n    //If there are both upper case and\
    \ lower case letters, return false. \n    if(upperCaseKeys.length === 0)\n   \
    \     return false;\n    \n    //If there are no upper case letters, return false.\
    \ \n    if(upperCaseKeys.length === 1)\n        return false;\n    \n    //If\
    \ there are no lower case letters, return false. \n    if(lowerCaseKeys.length\
    \ === 1)\n        return false;\n    \n    //If there are no letter", "  if (!dict\
    \ || Object.keys(dict).length === 0){\n    return false;\n  }\n  \n  var keys\
    \ = Object.keys(dict).sort();\n  for (var i = 0; i < keys.length; i++){\n    if\
    \ (keys[i].toLowerCase() !== keys[i]){\n      return false;\n    }\n  }\n  \n\
    \  return true;\n}\n\n", "    var key;\n    for (key in dict){\n        if (dict[key]\
    \ === undefined){\n            return false;\n        }\n        if (key === key.toUpperCase()){\n\
    \            return true;\n        }\n        if (key === key.toLowerCase()){\n\
    \            return true;\n        }\n    }\n    return false;\n}\n", "\tif (!dict_is_dict(dict)){\n\
    \t\treturn false;\n\t}\n\tfor(var key in dict){\n\t\tif (dict_key_is_string(key)\
    \ && dict_key_is_string(dict[key])){\n\t\t\tif (dict_key_to_lower(key) != dict_key_to_lower(dict[key])){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}else if (dict_key_is_string(key) && !dict_key_is_string(dict[key])){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "    let keys_lower = Object.keys(dict).filter(key\
    \ => key.toLocaleLowerCase() == key);\n    let keys_upper = Object.keys(dict).filter(key\
    \ => key.toLocaleUpperCase() == key);\n    return (keys_lower.length == keys_upper.length\
    \ && keys_lower.length>0); \n}\n", "    if(dict.constructor === Object){\n   \
    \     for(var key in dict){\n            if(key === key.toUpperCase()){\n    \
    \            return true;\n            }else if(key === key.toLowerCase()){\n\
    \                return true;\n            }\n        }\n        return false;\n\
    \    }\n}\n", "    // your code here\n}\n</cell>\n<cell>", "  for(var key in dict){\n\
    \    if(typeof dict[key] !== \"string\" || (key[0].toLowerCase() === key[0].toUpperCase())){\n\
    \      return false;\n    }\n  }\n  return true;\n}", "    for (var key in dict){\n\
    \        if (!(typeof key == \"string\" || typeof key == \"number\" || typeof\
    \ key == \"boolean\" || key == null)){\n            return false;\n        }\n\
    \    }\n    return true;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\nI prefer to\
    \ use 'hasOwnProperty' instead of 'in', it makes the code cleaner. Here is my\
    \ code :\n<code>", "  \n  for (var key in dict){\n    \n    // Convert to lower\
    \ case if necessary\n    if(typeof(dict[key]) === \"string\" && dict[key].length\
    \ !== 0){\n      dict[key] = dict[key].toLowerCase();\n    } \n    \n    // Convert\
    \ to upper case if necessary\n    if(typeof(dict[key]) === \"string\" && dict[key].length\
    \ !== 0){\n      dict[key] = dict[key].toUpperCase();\n    } \n    \n    if(typeof(dict[key])\
    \ !== \"string\"){\n      console.log(dict[key]);\n    }\n  }\n  \n  return true;\n\
    }\n", "    if (dict === null || typeof(dict) === 'undefined') return false;\n\
    \    for(let key in dict){\n        let val = dict[key];\n        let case_val\
    \ = val.toUpperCase();\n        if (case_val === val){\n            if (typeof(val)\
    \ === \"string\"){\n                case_val = val.toLowerCase();\n          \
    \  }\n            if(!case_val.match(/^[a-z]*$/i) && case_val.match(/^[A-Z]*$/i)){\n\
    \                return false;\n            }\n        } else {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    for(var key in dict){\n\
    \        if(typeof(dict[key]) === \"string\"){\n            if(key.toLowerCase()\
    \ === key){\n                if(dict[key].toLowerCase() === dict[key]){\n    \
    \                return true;\n                }\n            }\n            else{\n\
    \                if(key.toUpperCase() === key){\n                    if(dict[key].toUpperCase()\
    \ === dict[key]){\n                        return true;\n                    }\n\
    \                }\n            }\n        }\n        else{\n            if(typeof(dict[key])\
    \ === \"object\"){\n                if(check_dict_case(dict[key])){\n        \
    \            return true;\n                }\n            }\n        }\n    }\n\
    \    return false;\n}\n", "    var keys = Object.keys(dict);\n    if (keys.length\
    \ == 0) return false;\n    for(var i = 0; i < keys.length; i++){\n        if(typeof\
    \ dict[keys[i]] == \"string\"){\n            if (keys[i].toUpperCase() != keys[i]){\n\
    \                return false;\n            }\n        }else{\n            if\
    \ (dict[keys[i]] != \"N/A\"){\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n", "  if(dict==null || typeof dict !=\
    \ \"object\") return false;\n  var keys=Object.keys(dict);\n  var flag=false;\n\
    \  for(var i=0;i<keys.length;i++){ \n     var key=keys[i]; \n     if(typeof dict[key]\
    \ == \"string\" && key==key.toLocaleLowerCase()){\n        flag = true;\n    \
    \    break;\n     }\n     else if(typeof dict[key] == \"string\" && key==key.toUpperCase()){\n\
    \        flag = true;\n        break;\n     }\n  }\n  return !flag;\n}\n", " \
    \ var keys = Object.keys(dict);\n  var first_key = keys[0];\n  var first_char\
    \ = first_key.charCodeAt(0);\n  \n  if (first_char == 65){\n    for(var i in keys){\n\
    \      var key = keys[i];\n      var lower_char = key.charCodeAt(0);\n      if\
    \ (lower_char != first_char){\n        return false;\n      }\n    }\n    return\
    \ true;\n  } else if (first_char >= 65 && first_char <= 90){\n    for(var i in\
    \ keys){\n      var key = keys[i];\n      var upper_char = key.charCodeAt(0);\n\
    \      if (upper_char <= first_char){\n        return false;\n      }\n    }\n\
    \    return true;\n  }\n  return false;\n}", "  for(var key in dict){\n    if(typeof\
    \ dict[key] !== \"string\"){\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "\tvar flag = true;\n\tvar keys = Object.keys(dict);\n\tkeys.forEach(function(key){\n\
    \t\tif(typeof(dict[key]) !== 'string'){\n\t\t\tflag = false;\n\t\t}\n\t});\n\t\
    return flag;\n}\n", "\tvar keys = Object.keys(dict);\n\tvar isLowerCase = true;\n\
    \tvar isUpperCase = true;\n\n\t// if there are keys in lower case or all keys\
    \ are in uppercase, return true\n\tfor(var i=0; i<keys.length; i++){\n\t\tif(keys[i]\
    \ in dict && (dict[keys[i]].toLowerCase() == dict[keys[i]].toUpperCase()) ){\n\
    \t\t\tisLowerCase = false;\n\t\t}\n\t\telse if(keys[i] in dict && (dict[keys[i]].toUpperCase()\
    \ == dict[keys[i]].toLowerCase()) ){\n\t\t\tisUpperCase = false;\n\t\t}\n\t}\n\
    \n\t// If both flags are false, dicts has non-strings in either case\n\treturn\
    \ !(isLowerCase && isUpperCase);\n}\n\n", "    let flag = true;\n    for(let key\
    \ in dict){\n        if(typeof key == \"string\"){\n            if(key.toLowerCase()\
    \ != key.toUpperCase()){\n                flag = false;\n                break;\n\
    \            }\n        }else{\n            flag = false;\n            break;\n\
    \        }\n    }\n    return flag;\n}\n", "\tvar keys = Object.keys(dict);\n\t\
    var len = keys.length;\n\tfor(var i=0; i<len; i++){\n\t\tif(typeof keys[i] ===\
    \ \"string\"){\n\t\t\tif(keys[i].toLowerCase() === keys[i].toLowerCase())\n\t\t\
    \t\treturn true;\n\t\t\telse if(keys[i].toUpperCase() === keys[i].toLowerCase())\n\
    \t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n", "    var all_keys = [];\n    for(var k in dict){\n        if(typeof\
    \ k === \"string\"){\n            all_keys.push(k);\n        }\n    }\n    \n\
    \    return all_keys.length == 0 || all_keys.sort().toString() === Object.keys(dict).sort().toString();\n\
    }\n</cell>\n<cell>\n%%javascript", "\tvar string_dict = {};\n\t\n\t//Get all keys\
    \ as an array\n\tvar keys = Object.keys(dict);\n\t//Iterate through all the keys\n\
    \tkeys.forEach(function(key){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\t\
    string_dict[key] = dict[key];\n\t\t}\n\t});\n\t\n\treturn Object.keys(string_dict).length\
    \ === Object.keys(dict).length;\n}\n", "    for (let k in dict){\n        let\
    \ lowerCaseKey = ((k + \"\").toLowerCase());\n        let upperCaseKey = lowerCaseKey.replace(/[A-Z]/g,\
    \ \"-\");\n        if (lowerCaseKey != k) {\n            return false;\n     \
    \   }\n    }\n    for (let k in dict){\n        let lowerCaseKey = ((k + \"\"\
    ).toLowerCase());\n        let upperCaseKey = lowerCaseKey.replace(/[A-Z]/g, \"\
    -\");\n        if (upperCaseKey != k) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\n", "\tif (!dict)\n\t\treturn false;\n\t\n\tfor\
    \ (var key in dict){\n\t\tvar value = dict[key];\n\t\tif (typeof value == \"string\"\
    ){\n\t\t\tif (value.toLowerCase() == value.toUpperCase())\n\t\t\t\treturn true;\n\
    \t\t}\n\t}\n\t\n\treturn false;\n}\n", "\tfor (var key in dict)\n\t\tif (typeof(key)\
    \ != \"string\") return false;\n\treturn true;\n}\n", "  var flag = true\n  for(var\
    \ key in dict){\n    if(typeof key == \"string\" && key.toLowerCase() != key &&\
    \ key.toUpperCase() != key){\n      flag = false\n    }\n  }\n  return flag\n\
    }\n", "\tfor(var key in dict)\n\t\tif(typeof dict[key] !== \"string\" \n\t\t\t\
    || key.match(/^[A-Z]/)\n\t\t\t|| key.match(/^[a-z]/))\n\t\t\treturn false;\n\t\
    return true;\n}\n", "    let string_keys = Object.keys(dict).filter((key) => {\n\
    \        switch(key){\n            case \"NAME\": \n                return (typeof(dict[key])\
    \ == \"string\");\n            case \"AGE\": \n                return (typeof(dict[key])\
    \ == \"string\") || (typeof(dict[key]) == \"number\");\n            case \"STATE\"\
    : \n                return (typeof(dict[key]) == \"string\");\n            case\
    \ \"ZIP\": \n                return (typeof(dict[key]) == \"string\");\n     \
    \       default:\n                return false;\n        }\n    });\n    return\
    \ !(string_keys.length == 0);\n}\n", "  if ( Object.keys(dict).length == 0 ) return\
    \ false\n  \n  var keys = Object.keys(dict)\n  var first_key = keys[0]\n  \n \
    \ if ( !is_string( dict[first_key] ) ) throw Error(\"Object key is not string\"\
    )\n  \n  for ( var index = 1; index < keys.length; index++ ){\n    \n    if (\
    \ !is_string( dict[keys[index]] ) ) \n      throw Error(\"Dictionary value is\
    \ not string\")\n      \n    if ( first_key != keys[index] ) throw Error(\"Keys\
    \ are not the same\")\n    \n  }\n  return true\n}\n", "  for(var key in dict)\n\
    \  {\n    if(typeof dict[key] == 'string' && dict[key].length != 0)\n    {\n \
    \     if(key.toUpperCase() === key)\n        return true;\n      if(key.toLowerCase()\
    \ === key)\n        return true;\n    }\n  }\n  return false;\n}\n", "\tfor(var\
    \ key in dict){\n\t\tif(typeof dict[key] == \"string\"){\n\t\t\tif((key === key.toUpperCase())\
    \ || (key === key.toLowerCase())){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "\tif (typeof dict == \"undefined\" || dict == null)\n\t\
    \treturn false;\n\tif (Object.keys(dict).length == 0) return true;\n\t\n\tObject.keys(dict).forEach(function(key)\
    \ {\n\t\tkey = key.trim().toLowerCase();\n\t\t\n\t\tif (key.indexOf(\"a\") ==\
    \ 0)\n\t\t\tkey = key.substring(1);\n\t\t\n\t\tif (key.indexOf(\"b\") == 0)\n\t\
    \t\tkey = key.substring(1);\n\t\t\n\t\tif (key == \"\" || key == null)\n\t\t\t\
    return false;\n\t});\n\t\n\treturn true;\n}\n", "    if(Object.keys(dict).length\
    \ ==0)\n        return false;\n    for(var i in dict){\n        if(typeof dict[i]\
    \ == 'string'){\n            if(i.toUpperCase() == i)\n                return\
    \ true;\n            else if(i.toLowerCase() == i)\n                return true;\n\
    \        }\n    }\n    return false;\n}\n", "    let res = {}\n    for(let k in\
    \ dict){\n        if(typeof k == \"string\")\n            continue\n        if(typeof\
    \ k == \"number\")\n            continue\n        if(typeof k == \"boolean\")\n\
    \            continue\n        if(typeof k == \"undefined\")\n            continue\n\
    \        if(typeof k == \"function\")\n            continue\n        res[k] =\
    \ dict[k]\n    }\n    for(let k in dict){\n        if(typeof k == \"string\")\n\
    \            continue\n        if(typeof k == \"number\")\n            continue\n\
    \        if(typeof k == \"boolean\")\n            continue\n        if(typeof\
    \ k == \"undefined\")\n            continue\n        if(typeof k == \"function\"\
    )\n            continue\n        if(! (k in res)){\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    var keys = Object.keys(dict);\n\
    \    for(var i = 0; i < keys.length; i++){\n        if(typeof dict[keys[i]] !==\
    \ 'string'){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "  let isUpper = true;\n  let isLower = true;\n  for(let key in dict){\n\
    \    if (typeof dict[key] == \"string\"){\n      if (dict[key].toUpperCase() ==\
    \ dict[key]){\n        isUpper = false;\n      } else if (dict[key].toLowerCase()\
    \ == dict[key]){\n        isLower = false;\n      }\n    }\n  }\n  return isUpper\
    \ && isLower;\n}\n", "  var bool=true;\n  var arr=[];\n  for(var key in dict){\n\
    \    arr.push(key);\n  }\n  arr=arr.sort();\n  for(var i=0;i<arr.length;i++){\n\
    \    if(typeof(dict[arr[i]])==\"string\" && dict[arr[i]].toUpperCase()!=dict[arr[i]]){\n\
    \      bool=false;\n      break;\n    }\n  }\n  return bool;\n}\n", "  if(Object.keys(dict).length\
    \ == 0){\n    return false;\n  }\n  var upper_case_keys = [];\n  var lower_case_keys\
    \ = [];\n  for(var key in dict){\n    if(key.length == 1){\n      if(key.toUpperCase()\
    \ == key){\n        upper_case_keys.push(key);\n      }else{\n        lower_case_keys.push(key);\n\
    \      }\n    }\n  }\n  if(upper_case_keys.length == 0 && lower_case_keys.length\
    \ == 0){\n    return true;\n  }\n  return false;\n}\n", "    for(var key in dict)\n\
    \        if(typeof dict[key] === 'string'){\n            var flag1 = dict[key].search(/[a-z]/g)\
    \ > -1;\n            var flag2 = dict[key].search(/[A-Z]/g) > -1;\n          \
    \  return flag1 === flag2;\n        }\n    return false;\n}\n", "    // Return\
    \ false if the given object is empty\n    if(Object.keys(dict).length == 0){\n\
    \        return false;\n    }\n    // Convert all keys to lowercase if all are\
    \ lower case\n    for(key in dict){\n        if(!isString(key)){\n           \
    \ delete dict[key];\n        }\n    }\n    \n    // Convert all keys to uppercase\
    \ if all are upper case\n    for(key in dict){\n        if(isString(key)){\n \
    \           dict[key.toUpperCase()] = dict[key];\n            delete dict[key];\n\
    \        }\n    }\n    \n    // Return true if all keys are strings in lower case\
    \ or all keys are strings in upper case\n    return isStringsCase(dict) || isStringsCase(dict);\n\
    }\n", "\t\n\tfor(var i in dict){\n\t\t\n\t\tvar value = dict[i];\n\t\t\n\t\tif(typeof\
    \ value == \"object\" && value == null) continue;\n\t\t\n\t\tif(typeof value ==\
    \ \"string\" && value.toLowerCase() == value) \n\t\t\tcontinue;\n\t\t\n\t\tif(typeof\
    \ value == \"string\" && value.toUpperCase() == value)\n\t\t\tcontinue;\n\t\t\n\
    \t\treturn false;\n\t}\n\t\n\treturn true;\n}\n\n", "\tvar keys = Object.keys(dict);\n\
    \tif(keys.length == 0) return true;\n\tvar lower_keys = keys.map(function(key){return\
    \ key.toLowerCase();});\n\tvar upper_keys = keys.map(function(key){return key.toUpperCase();});\n\
    \treturn lower_keys.all(function(lower_key){return upper_keys.includes(lower_key);});\n\
    }\n", "  for(i in dict)\n    if(typeof(dict[i]) != \"string\"){\n      return\
    \ false;\n    }\n  return true;\n}", "    //If the given object is empty, return\
    \ true.\n    if(Object.keys(dict).length === 0){\n        return true;\n    }\n\
    \    \n    //Create an array of all keys in the given object.\n    const key_array\
    \ = Object.keys(dict);\n\n    //Sort the array in ascending order.\n    key_array.sort();\n\
    \n    //Create a flag variable which will tell us if the given key is upper case\
    \ or lower case.\n    let is_upper_case = false;\n    for(let i = 0; i < key_array.length;\
    \ i++){\n        //If the given key and the next key are the same and the next\
    \ key is a string and the previous keys are both upper case, \n        //then\
    \ we found a lower case key. \n        if(key_array[i] === key_array[i+1] && typeof\
    \ dict[key_array[i]] === \"string\" && (is_upper_case || dict[key_array[i]].toUpperCase()\
    \ === dict[key_array[i]])){\n            is_upper_case = true;\n        }\n  \
    \  }\n\n    //Return false if the given object is empty and found a lower case\
    \ key.\n    if(Object.keys(dict).length === 0 && is_upper_case){\n        return\
    \ false;\n    }\n    \n    //Return true if the given object is empty and found\
    \ a upper case key.\n    if(Object.keys(dict).length === 0 && !is_upper_case){\n\
    \        return true;\n    }\n\n    //Return false if the given object contains\
    \ both lower case and upper case keys.\n    if(Object.keys(dict).length > 0){\n\
    \        return false;\n    }\n    \n    //Return true if the given object contains\
    \ both lower case and upper case keys.\n    return true;\n}\n", "    if(isEmpty(dict))\n\
    \        return false;\n    for(var key in dict){\n        if(typeof key != \"\
    string\"){\n            return false;\n        }\n        if(!isLowerCase(key)){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    for(var\
    \ key in dict)\n        for(var i in dict[key])\n            if(typeof dict[key][i]\
    \ == \"string\")\n                return true;\n    return false;\n}\n", "   \
    \ for(var key in dict){\n        if(typeof dict[key] !== \"string\"){\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n", "  var keys =\
    \ Object.keys(dict);\n  if(keys.length === 0) return false;\n  for(var i = 0;\
    \ i < keys.length; i++){\n    var key = keys[i];\n    if(typeof dict[key] !==\
    \ 'string' && (typeof dict[key] !== 'number' || isNaN(dict[key]))){\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    if (!dict)\n        return false;\n\
    \    if (Object.keys(dict).length === 0)\n        return false;\n    for (var\
    \ k in dict){\n        if (k != k.toLowerCase() && k != k.toUpperCase())\n   \
    \         return false;\n    }\n    return true;\n}\n", "    if (!dict){\n   \
    \     return false;\n    }\n    for (var key in dict){\n        if (typeof dict[key]\
    \ === \"string\"){\n            var lower = key.toLowerCase();\n            if\
    \ (lower.charCodeAt(0) < 97 || lower.charCodeAt(0) > 122){\n                return\
    \ false;\n            }\n            var upper = key.toUpperCase();\n        \
    \    if (upper !== lower){\n                return false;\n            }\n   \
    \     }else{\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    var keys = Object.keys(dict);\n    for(var i in keys){\n        var\
    \ s = keys[i].toLowerCase();\n        var s2 = keys[i].toUpperCase();\n      \
    \  if(s !== s2){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let result = false;\n    Object.keys(dict).forEach((key)=>{\n     \
    \   if(typeof key === 'string'){\n            if(key.toLowerCase() !== key)\n\
    \                result = false;\n        }else if(typeof key === 'number'){\n\
    \            if(key.toString() !== key.toString())\n                result = false;\n\
    \        }\n    });\n    return result;\n}\n", "    if (isEmpty(dict)){\n    \
    \    return false;\n    }\n    var keys = Object.keys(dict);\n    var isInUpper\
    \ = isUpper(keys);\n    for (var key in dict){\n        if (dict[key] instanceof\
    \ Object){\n            if (!check_dict_case(dict[key])){\n                return\
    \ false;\n            }\n        } else { \n            var isInLower = isLower(key);\n\
    \            if (isInUpper != isInLower){\n                return false;\n   \
    \         }\n        }\n    }\n    return true;\n}\n", "\tif(!dict || !(dict instanceof\
    \ Object) || dict.length === 0)\n\t\treturn false;\n\tfor(var i in dict)\n\t\t\
    if(typeof dict[i] !== \"string\")\n\t\t\treturn false;\n\tfor(var i in dict)\n\
    \t\tif(typeof dict[i] !== \"string\")\n\t\t\treturn false;\n\treturn true;\n}\n",
  "    if(Object.keys(dict).length == 0) return false;\n    for(var key in dict){\n\
    \        if(typeof dict[key] !== 'string'){\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "    if(!dict) return false; // Empty dict\
    \ is fine\n    for(var key in dict){ \n        if(typeof(dict[key]) != \"string\"\
    ) return false; \n        if(key.toLowerCase() != key) return false; \n    }\n\
    \    return true;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis is great code,\
    \ and a great answer. One question though, what is the purpose of the '!' in front\
    \ of 'dict'? I got that line from another solution on this site and I don't see\
    \ how it works. I guess it is because of the \"typeof\" but I am not sure why.\n\
    <|/ c |>\n<| c |>\nIt is a JavaScript operator that inverts the result of the\
    \ expression. In this case, it is used to ensure that the function returns false\
    \ if the argument is falsey. `!false` returns `true`, and `!true` returns `false`.\n\
    <|/ c |>\n<| a |>\nHere is my solution using a custom filter:\n<code>\nangular.module('angularFilters',[]).filter('keyFilter',\
    \ function() {\n  return function (obj, filter) {\n    var filtered = [];\n  \
    \  for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        if\
    \ (filter.indexOf(prop) > -1) filtered.push(obj[prop]);\n      }\n    }\n    return\
    \ filtered;\n  };\n});\n</code>\nAnd here is the usage:\n<code>\n{{ people | keyFilter:\
    \ 'firstName' }}\n</code>\n<|/ a dscore=4 tags=filter,javascript,angularjs |>\n\
    <| a tags=filter,javascript,angularjs |>\nYou can use angular.forEach and iterate\
    \ through each item in an array. \n<code>\nvar myarray = [1,2,3,4,5];\n\nangular.forEach(myarray,\
    \ function(value,index){\n    alert(index + ': ' + value);\n});\n</code>\n<|/\
    \ a dscore=4 |>\n<| a tags=filter,javascript,angularjs dscore=3 |>\nHere is another\
    \ solution using lodash's _.mapValues method.\n<code>\nvar myarray = [{name:\"\
    Bob\", id:1},{name:\"Jim\", id:2},{name:\"Tom\", id:3}];\n\nvar newArray = _.mapValues(myarray,\
    \ function(val) {\n    return val.name;\n});\n", "    if(Object.keys(dict).length\
    \ === 0){\n        return false;\n    }\n    for(const key in dict){\n       \
    \ const value = dict[key];\n        if(typeof value === \"string\"){\n       \
    \     const lower_key = key.toLowerCase();\n            const upper_key = key.toUpperCase();\n\
    \            if(lower_key === upper_key){\n                continue;\n       \
    \     }\n            return false;\n        }\n        if(typeof value === \"\
    object\"){\n            return check_dict_case(value);\n        }\n    }\n   \
    \ return true;\n}\n", "\tif (!dict || Object.keys(dict).length === 0) return false;\n\
    \tvar keys = Object.keys(dict),\n\t\ti = keys.length;\n\twhile (i--) {\n\t\tvar\
    \ key = keys[i];\n\t\tif (key === key.toUpperCase()) continue;\n\t\tif (key ===\
    \ key.toLowerCase()) continue;\n\t\treturn false;\n\t}\n\treturn true;\n}\n",
  "  var keys = [];\n  for(var key in dict)\n    keys.push(key.toLowerCase());\n \
    \ return check_all_keys_lower_case(keys) || check_all_keys_upper_case(keys);\n\
    }\n", "    var is_lower_case = false;\n    var is_upper_case = false;\n    for(var\
    \ key in dict){\n        if(typeof(dict[key]) == 'string'){\n            if(dict[key].length\
    \ == 0 || dict[key].toLowerCase() == dict[key]){\n                is_lower_case\
    \ = true;\n            }\n            else if(dict[key].length == 0 || dict[key].toUpperCase()\
    \ == dict[key]){\n                is_upper_case = true;\n            }\n     \
    \   }\n    }\n    if(is_lower_case == is_upper_case){\n        return true;\n\
    \    }\n    else{\n        return false;\n    }\n}\n", "  var keys = Object.keys(dict)\n\
    \  var i\n  for (i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if\
    \ (!((key === 'toUpperCase' || key === 'toLowerCase') && typeof dict[key] ===\
    \ \"string\")) {\n      return false\n    }\n  }\n  return true\n}\n\n", "   \
    \ for(var key in dict){\n        if(typeof dict[key] == 'string'){\n         \
    \   if(dict[key].toLowerCase() != dict[key]){\n                return false\n\
    \            }\n        }else{\n            if(dict[key].toLowerCase() != dict[key].toUpperCase()){\n\
    \                return false\n            }\n        }\n    }\n    return true\n\
    }\n", "    return isString(dict) && Object.keys(dict).every(key => \n    isString(key)\
    \ ? key.toLowerCase() === key.toUpperCase() : \n    isString(key) ? key === key.toUpperCase()\
    \ : \n    false\n    );\n}\n", "  if(Object.keys(dict).length == 0){\n    return\
    \ false;\n  }\n  var keyArray = Object.keys(dict);\n  for(var i in keyArray){\n\
    \    if(typeof dict[keyArray[i]] != \"string\"){\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "\tif (Object.keys(dict).length <= 0)\n\t\treturn\
    \ false\n\t\n\tfor (var key in dict)\n\t\tif (key < 'A' || key > 'Z')\n\t\t\t\
    return false\n\t\t\n\treturn true\n}\n", "    for(var key in dict){\n        if((typeof\
    \ key) == \"string\"){\n            if((key.toLowerCase) == (key.toUpperCase)){\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n</script>\n<script>", "  var flag;\n  if(is_empty(dict)){\n    flag = false;\n\
    \  }\n  else{\n    flag = true;\n    for (var i in dict) {\n      if (!dict[i][\"\
    Name\"] && dict[i][\"STATE\"] && dict[i][\"ZIP\"]) {\n        flag = false;\n\
    \      }\n      else if (!dict[i][\"Name\"] && dict[i][\"STATE\"] && dict[i][\"\
    ZIP\"]) {\n        flag = true;\n      }\n      else if (!dict[i][\"Name\"] &&\
    \ dict[i][\"Name\"] && dict[i][\"Age\"] && dict[i][\"City\"]) {\n        flag\
    \ = true;\n      }\n      else if (!dict[i][\"Name\"] && dict[i][\"Name\"] &&\
    \ dict[i][\"Age\"] && dict[i][\"City\"]) {\n        flag = true;\n      }\n  \
    \  }\n  }\n  return flag;\n}\n", "    var keys = Object.keys(dict);\n    for(var\
    \ i=0;i<keys.length;i++){\n        if(typeof dict[keys[i]] !== 'string'){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n", "    for(\
    \ var key in dict){\n        if( typeof dict[key] !== 'string' || dict[key].toUpperCase()\
    \ !== dict[key] )\n            return false;\n    }\n    return true;\n}\n", " \
    \   for(key in dict){\n        if(typeof key == \"string\" && (key.toLowerCase()\
    \ == key || key.toUpperCase() == key)) return true;\n    }\n    return false;\n\
    }\n", "    // If the dictionary is empty, return false\n    if(Object.keys(dict).length\
    \ === 0){\n        return false;\n    }\n    // Check lower case string in all\
    \ keys\n    for(const key of Object.keys(dict)){\n        if(typeof dict[key]\
    \ === \"string\"){\n            if(key.toLowerCase() !== key){\n             \
    \   return false;\n            }\n        }\n    }\n    // Check upper case string\
    \ in all keys\n    for(const key of Object.keys(dict)){\n        if(typeof dict[key]\
    \ === \"string\"){\n            if(key.toUpperCase() !== key){\n             \
    \   return false;\n            }\n        }\n    }\n    return true;\n}\n", "\t\
    for(var key in dict){\n\t\tif(typeof(key)===\"string\"){\n\t\t\tcontinue;\n\t\t\
    }else if(typeof(key)===\"number\"){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}", "\tvar dict_case = true, i;\n\tfor(i\
    \ in dict){\n\t\tif(typeof dict[i] == 'string'){\n\t\t\tdict_case = dict_case\
    \ && (dict[i].toLowerCase() == dict[i].toLowerCase());\n\t\t\tdict_case = dict_case\
    \ && (dict[i].toUpperCase() == dict[i].toUpperCase());\n\t\t\tif(!dict_case){\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn dict_case;\n}\n", "    if(Object.keys(dict).length==0){\n\
    \        return false;\n    }\n    var lower_keys=Object.keys(dict).map(function(key){return\
    \ key.toLowerCase();});\n    var upper_keys=Object.keys(dict).map(function(key){return\
    \ key.toUpperCase();});\n    var keys_set=lower_keys.concat(upper_keys);\n   \
    \ return keys_set.every(function(key){\n        return typeof dict[key]==='string';\n\
    \    });\n}\n", "    var keys = Object.keys(dict);\n    for(var i=0; i<keys.length;\
    \ i++){\n        if(typeof dict[keys[i]] !== \"string\"){\n            return\
    \ false;\n        }\n        else if(keys[i].toLowerCase() !== keys[i]){\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n", "    if(!dict)\
    \ return false\n    var keys = Object.keys(dict)\n    for(var i=0; i<keys.length;\
    \ i++){\n        if(typeof dict[keys[i]] === \"string\"){\n            if(dict[keys[i]].toLowerCase()\
    \ === keys[i]){\n                if(dict[keys[i]].toLowerCase() === keys[i]){\n\
    \                    if(dict[keys[i]].toLowerCase() === \"key\"){\n          \
    \              return false\n                    }\n                    if(isNaN(dict[keys[i]])){\n\
    \                        return false\n                    }\n               \
    \ }else{\n                    return false\n                }\n            }\n\
    \        }else if(typeof dict[keys[i]] === \"number\"){\n            if(isNaN(dict[keys[i]])){\n\
    \                return false\n            }\n        }\n    }\n    return true\n\
    }\n", "\tif (Object.keys(dict).length == 0) return false\n\tfor (var k in dict){\n\
    \t\tvar k = k.toLowerCase()\n\t\tvar v = dict[k.toLowerCase()]\n\t\tif (k == v)\
    \ return true\n\t\telse return false\n\t}\n\treturn false\n}\n", "    for(var\
    \ key in dict){\n        if(!isNaN(parseInt(key)) || key.indexOf(\"_\") > -1 ||\
    \ isNaN(parseFloat(key))){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "\tif (!dict) return false\n\tfor (key in dict){\n\t\tif (!(key\
    \ in dict)) return false\n\t\tvalue = dict[key]\n\t\tif (typeof value !== \"string\"\
    ) return false\n\t\tvalue = value.toLowerCase()\n\t\tif (value !== key) return\
    \ false\n\t}\n\treturn true\n}\n", "  if (!dict || !Object.keys(dict).length)\
    \ return false;\n  var keys = Object.keys(dict);\n  for (var i = 0; i < keys.length;\
    \ i++){\n    var key_case = keys[i].toUpperCase();\n    if (dict[keys[i]] !==\
    \ keys[i]) \n      return false;\n  }\n  return true;\n}\n", "    var upperCase\
    \ = Object.keys(dict).every(function (key) {\n        return typeof dict[key]\
    \ === \"string\" && dict[key].toUpperCase() === dict[key];\n    });\n    var lowerCase\
    \ = Object.keys(dict).every(function (key) {\n        return typeof dict[key]\
    \ === \"string\" && dict[key].toLowerCase() === dict[key];\n    });\n    return\
    \ !Object.keys(dict).length;\n}", "  if(Object.keys(dict).length == 0) return\
    \ false; \n  return Object.keys(dict).every((key) => typeof dict[key] === \"string\"\
    \ && dict[key].toLowerCase() === dict[key].toUpperCase());\n}\n", "\tfor(i in\
    \ dict){\n\t\tif(typeof dict[i]==\"string\"){\n\t\t\tif(dict[i].toLowerCase()!=dict[i].toLowerCase()){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[i]==\"string\"\
    ){\n\t\t\tif(dict[i].toUpperCase()!=dict[i].toUpperCase()){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor (var key in dict){\n\t\tif (!isNaN(Number(key))){\n\
    \t\t\tcontinue;\n\t\t}\n\t\tvar val = dict[key];\n\t\tif (val == null){\n\t\t\t\
    continue;\n\t\t}\n\t\tif (typeof val != \"string\"){\n\t\t\treturn false;\n\t\t\
    }\n\t\t\n\t\tvar upperCase = val.toUpperCase();\n\t\tvar lowerCase = val.toLowerCase();\n\
    \t\tif (lowerCase != val){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n\
    }\n\n", "    //TODO: Implement a better solution\n    if (!dict) return false\n\
    \    for (let key in dict){\n        if (is_string_case(key))\n            return\
    \ true\n        if (is_string_case(key.charAt(0)))\n            return true\n\
    \    }\n    return false\n}\n", "    for (var k in dict){\n        if (typeof\
    \ k == 'string'){\n            var a = k.toUpperCase();\n            var b = k.toLowerCase();\n\
    \            if (a === b){\n                continue;\n            }\n       \
    \     return false\n        }\n    }\n    return true;\n}\n</code>\n<|/ a tags=javascript,dictionary\
    \ |>\n<| c |>\nYour function will consider that an object with key \"a\" is a\
    \ key of the same name, but with different casings.\n<|/ c |>\n<| c |>\n: I know.\
    \ I fixed it. This is not the most efficient way of doing it, but I wanted to\
    \ be concise and easy to understand.\n<|/ c |>\n<| a tags=javascript,dictionary\
    \ |>\nThis should do the trick. Not the prettiest code in the world, but seems\
    \ to do the job.\n<code>\nvar myObject = {\n  \"Name\": \"John\",\n  \"Age\":\
    \ \"36\",\n  \"City\": \"Houston\"\n};\n", "    if (dict == null) return false;\n\
    \    var keys = Object.keys(dict);\n    for (var i=0; i < keys.length; i++){\n\
    \        var key_lower = keys[i].toLowerCase();\n        var key_upper = keys[i].toUpperCase();\n\
    \        if (dict[key_lower] == dict[key_upper]) return true;\n    }\n    return\
    \ false;\n}", "  var keys = Object.keys(dict)\n  return keys.every(function(key){\n\
    \    return (typeof(key)=='string')&&(key[0]=='a')||(key[0]=='A')\n  })\n}\n",
  "\tfor(var k in dict){\n\t\tif(dict[k].toLowerCase()===dict[k].toLowerCase()){\n\
    \t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\t\n\t", " \
    \ if (!dict || Object.keys(dict).length == 0) return false\n  for (key in dict){\n\
    \    if (isNaN(parseInt(key)) && !isNaN(parseFloat(key)) \n            || key.toUpperCase()\
    \ == key.toLowerCase()) return false\n  }\n  return true\n}\n", "\tlet checkString\
    \ = true;\n\tfor (let key in dict){\n\t\tif (typeof dict[key] !== \"string\"){\n\
    \t\t\tcheckString = false;\n\t\t}\n\t}\n\treturn checkString;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

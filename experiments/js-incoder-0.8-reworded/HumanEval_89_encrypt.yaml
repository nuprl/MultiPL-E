name: HumanEval_89_encrypt
language: js
prompt: "//Create a function encrypt that takes a string as an argument and\n// returns\
  \ a string encrypted with the alphabet being rotated. \n// The alphabet should be\
  \ rotated in a manner such that the letters \n// shift down by two multiplied to\
  \ two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
  asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
  et\")\n// \"ix\"\nfunction encrypt(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
  asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
  et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
  );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
  dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
  );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
completions: ["    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var alphabetLen\
    \ = alphabet.length;\n    var keySize = 16;\n    var key = \"\";\n    var outString\
    \ = \"\";\n    var newStr = \"\";\n    \n    for(var i=0; i<keySize; i++){\n \
    \       key += alphabet.charAt(Math.floor(Math.random() * alphabetLen));\n   \
    \ }\n    \n    for(var i=0; i<s.length; i++){\n        \n        var char = s.charAt(i);\n\
    \        \n        newStr = key + char;\n        \n        for(i=0;i<keySize;i++){\n\
    \            newStr = newStr.charAt(alphabetLen - (newStr.indexOf(key)-1)) + newStr.charAt(newStr.indexOf(key));\n\
    \        }\n        \n        outString += newStr;\n        \n    }\n    \n  \
    \  return outString;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \  var alphabetLen = alphabet.length;\n  var keySize = 5;\n  var encryptedStr\
    \ = \"\";\n  var keyStr = \"\";\n\n  for (var i = 0; i < s.length; i++) {\n  \
    \  keyStr = \"\";\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen + alphabetLen % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ / alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i\
    \ % alphabetLen)) + keySize);\n    keyStr += alphabet.charAt(alphabet.indexOf(alphabet.charAt(",
  "  \n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  \n  var key = alphabet.split(\"\
    \").reverse().join(\"\");\n  \n  var newKey = \"\";\n  \n  for(var i=0; i<key.length;\
    \ i++){\n    newKey += key.charAt(i) + key.charAt(i)\n  }\n  \n  key = newKey;\n\
    \  \n  while(key.length < s.length){\n    key += \"0\";\n  }\n  \n  var cipher\
    \ = \"\";\n  \n  for(var i=0; i<s.length; i++){\n    var index = alphabet.indexOf(key[i]);\n\
    \    cipher += alphabet.charAt((index+alphabet.indexOf(key[i+1]))%alphabet.length);\n\
    \  }\n  \n  return cipher;\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var alphabetLen = alphabet.length;\n    var encryptedString = \"\";\n \
    \   for(var i = 0; i < s.length; i++){\n        var encryptedChar = alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 1);\n        encryptedString += encryptedChar;\n    }\n    return encryptedString;\n\
    }\n", "    var rot = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n    var rot\
    \ = rot.reverse();\n    var newLetter = \"\";\n    var finalString = \"\";\n \
    \   for(i = 0; i < s.length; i++){\n        if(rot.indexOf(s[i]) >= 0){\n    \
    \        newLetter = rot.indexOf(s[i]) + 2;\n            newLetter = String.fromCharCode(newLetter);\n\
    \        }\n        finalString = finalString + newLetter;\n    }\n    return\
    \ finalString;\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  var keyIndex = 0;\n    var keyArr = [];\n    var charArr = [];\n    var i;\n\
    \n    for(i = 0; i < s.length; i++){\n        charArr[i] = alphabet[alphabet.indexOf(s.charAt(i)\
    \ + alphabet[i]) % 26];\n        keyArr[i] = alphabet[alphabet.indexOf(keyArr[i]\
    \ + alphabet[i]) % 26];\n    }\n\n    keyIndex = 0;\n\n    for(i = 0; i < s.length;\
    \ i++){\n        keyIndex += alphabet.indexOf(charArr[i]) * Math.pow(26, s.length\
    \ - i - 1);\n    }\n\n    for(i = 0; i < s.length; i++){\n        charArr[i] =\
    \ alphabet[keyIndex % alphabet.length];\n        keyIndex -= alphabet.indexOf(charArr[i])\
    \ * Math.pow(26, s.length - i - 1);\n    }\n\n    return charArr.join(\"\");\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  var rotated_alphabet\
    \ = rotateAlphabet(alphabet);\n  var keySize = 16;\n  var keyChars = alphabet.split(\"\
    \");\n  keyChars.forEach(function(letter){\n    if(letter != \" \"){\n      keySize\
    \ += 1;\n    }\n  });\n  keySize++;\n  keyChars = keyChars.map(function(letter){\n\
    \    return rotated_alphabet[letter];\n  });\n  return s.split(\"\").map(function(letter){\n\
    \    return rotated_alphabet[alphabet[alphabet.indexOf(letter) + keySize % alphabet.length]];\n\
    \  }).join(\"\");\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    var alphabetLength = alphabet.length;\n    var rotatedAlphabet = alphabet.substring(alphabetLength\
    \ - 1) + alphabet.substring(0, alphabetLength - 1);\n    var alphabetLengthRotated\
    \ = rotatedAlphabet.length;\n    var encryptedAlphabet = rotatedAlphabet.substring(0,\
    \ alphabetLengthRotated);\n    var encryptedAlphabetLength = encryptedAlphabet.length;\n\
    \    var encryptedAlphabetRotated;\n    var encryptedAlphabetRotatedLength;\n\
    \    var encryptedAlphabetRotatedRotated;\n    var encryptedString;\n    \n  \
    \  for(i = 0; i < s.length; i++) {\n        encryptedAlphabetRotated = encryptedAlphabet\
    \ + encryptedAlphabet;\n        encryptedAlphabetRotatedLength = encryptedAlphabetRotated.length;\n\
    \        encryptedAlphabetRotatedRotated = encryptedAlphabetRotated.substring(encryptedAlphabetRotatedLength\
    \ - 1) + encryptedAlphabetRotated.substring(0, encryptedAlphabetRotatedLength\
    \ - 1);\n        \n        encryptedString = encryptedAlphabetRotatedRotated +\
    \ encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated + encryptedAlphabetRotatedRotated\
    \ + encryptedAlphabet", "    // Rotate each letter down, add two to its position,\
    \ then rotate it back up\n    return s.replace(/[a-z]/g, function(c){ \n     \
    \   return String.fromCharCode((c.charCodeAt(0) + 2) % 26 + c.charCodeAt(0));\n\
    \    });\n}", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  var\
    \ rotation = 'ghjklmnopqrstuvwxyzabc'.split('');\n  var newStr = '';\n  for(var\
    \ i = 0; i < s.length; i++){\n    var letter = alphabet.indexOf(s.charAt(i));\n\
    \    letter = alphabet.indexOf(rotation.charAt(letter+1));\n    newStr += (letter\
    \ + 1);\n  }\n  return newStr;\n}", "  var i, a = new Array(26), c = \"\";\n \
    \ for (i=0; i<s.length; i+=2){\n    a[i] = s.charCodeAt(i);\n    a[i+1] = s.charCodeAt(i+1);\n\
    \  }\n  c = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(a[0]);\n  c = String.fromCharCode(a[0]+c*2);\n\
    \  for (i=0; i<s.length; i++){\n    a[i] = s.charCodeAt(i);\n  }\n  c = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .indexOf(a[0]);\n  c = String.fromCharCode(a[0]+c*2);\n  c = (c+s.length)%26;\n\
    \  c += \"\";\n  for (var i = 0; i < s.length; i++){\n    a[i] = s.charCodeAt(i);\n\
    \  }\n  c = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(a[0]);\n  c = String.fromCharCode(a[0]+c*2);\n\
    \  return c;\n}\n", "  console.log(s);\n  return alphabet[rotation(alphabet[s])];\n\
    }\n", "\tvar result = '';\n\tvar l = s.length;\n\tvar m = s.length % 2;\n\tvar\
    \ k = s.length/2;\n\n\tfor(var i = 0;i < k;i++){\n\t\tresult += alphabet.charAt(s.charAt(i));\n\
    \t}\n\n\tif(m){\n\t\tresult += alphabet.charAt(s.charAt(k));\n\t\tresult += 'z';\n\
    \t}\n\t\n\treturn result;\n}\n", "    var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    var alphaArr = alphabet.split(\"\");\n    var newAlphaArr = [];\n    for(var\
    \ i = 0;i < alphaArr.length;i++){\n        newAlphaArr.push(alphaArr[alphaArr.length\
    \ - i - 1] + alphaArr[alphaArr.length - i - 1]);\n    }\n    var result = [];\n\
    \    for(var i = 0;i < s.length;i++){\n        result.push(newAlphaArr[s.charCodeAt(i)\
    \ - 65]);\n    }\n    return result.join(\"\");\n}\n", "  var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  var len = alphabet.length;\n  var newString = \"\";\n  for (var i = 0; i\
    \ < s.length; i++){\n    var c = s.charAt(i);\n    var idx = alphabet.indexOf(c);\n\
    \    if (idx !== -1){\n      newString += alphabet.slice(0,idx);\n      newString\
    \ += alphabet.slice(idx+2);\n    } else {\n      newString += c;\n    }\n  }\n\
    \  return newString;\n}\n", "  s = s.split('')\n  var encrypted = \"\";\n  var\
    \ x = 1\n  for(var i = 0, l = s.length; i < l; i++){\n    var curChar = s.charAt(i)\n\
    \    var curShift = x + 2\n    if(curChar == 'z'){\n      curShift = 0\n     \
    \ curChar = 'a'\n    }\n    encrypted += String.fromCharCode(curChar + curShift)\n\
    \    x = x + 2\n  }\n  return encrypted\n}\n", "  s = s + \"\";\n  let rotateLetters\
    \ = function(s){\n    return s.split(\"\").reduce((acc, char, i)=>{\n      if(i\
    \ % 2 === 0) acc = acc + char;\n      return acc;\n    }, '');\n  }\n  s = rotateLetters(s);\n\
    \  let newWord = \"\";\n  for(let i=0; i<s.length; i++){\n    newWord += s.charAt(i);\n\
    \    if(i % 2 === 1) newWord += s.charAt(i+1);\n  }\n  return newWord;\n}\n",
  "\tvar alphabet=\"abcdefghijklmnopqrstuvwxyz\";\n\tvar rotation=2;\n\tvar result=[];\n\
    \tfor(i=0;i<s.length;i++){\n\t\tvar index=alphabet.indexOf(s.charAt(i));\n\t\t\
    var result1=index-rotation;\n\t\tvar result2=index+rotation;\n\t\tresult.push(alphabet[result1]+alphabet[result2]);\n\
    \t}\n\treturn result.join(\"\");\n}\n", "    var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    var encr = \"\";\n    for(var i = 0; i < s.length; i++){\n        var x\
    \ = alphabet.indexOf(s.charAt(i));\n        if(x === -1){\n            encr +=\
    \ s.charAt(i);\n        } else {\n            var y = alphabet.indexOf(chars.charAt(x\
    \ - 2));\n            encr += chars.charAt(x - 2 + y);\n        }\n    }\n   \
    \ return encr;\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  var alphabetArr = alphabet.split(\"\");\n    var encryptedString = \"\";\n\
    \    for(var i = 0; i < s.length; i++){\n        var letter = alphabet.indexOf(s[i]);\n\
    \        if(letter != alphabetArr.length){\n            letter = letter - alphabetArr.length;\n\
    \        }\n        letter = letter + 2;\n        if(letter > alphabetArr.length){\
    \ \n            letter = letter - alphabetArr.length;\n        }\n        encryptedString\
    \ += alphabetArr[letter];\n    }\n    return encryptedString;\n}\n", "    var\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rot1 = alphabet.charAt(alphabet.length\
    \ - 2);\n    var rot2 = alphabet.charAt(alphabet.length - 1);\n    var r = \"\"\
    ;\n    for(var i = 0; i < s.length; i++){\n        r += alphabet.charAt((s.charCodeAt(i)\
    \ >>> 2) ^ ((s.charCodeAt(i) >>> 7) ^ (s.charCodeAt(i) >>> 14)) ^ alphabet.charAt((s.charCodeAt(i)\
    \ >>> 2) ^ ((s.charCodeAt(i) >>> 7) ^ (s.charCodeAt(i) >>> 14))));\n    }\n  \
    \  return r + rot1 + rot2;\n}\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar rot_alphabet = \"gfedcba9876543210\";\n\tvar s = s.replace(/[^a-zA-Z]/g,\
    \ \" \");\n\ts = s.replace(/  +/g,\" \");\n\tvar t = [];\n\tfor(var i = 0; i <\
    \ s.length; i++){\n\t\tt.push(alphabet.charAt(alphabet.indexOf(s.charAt(i)) +\
    \ alphabet.indexOf(rot_alphabet.charAt(alphabet.indexOf(s.charAt(i)+2)) + alphabet.indexOf(rot_alphabet.charAt(alphabet.indexOf(s.charAt(i)+4))\
    \ + alphabet.indexOf(rot_alphabet.charAt(alphabet.indexOf(s.charAt(i)+6)) + alphabet.indexOf(rot_alphabet.charAt(alphabet.indexOf(s.charAt(i)+8))\
    \ + alphabet.indexOf(rot_alphabet.charAt(alphabet.indexOf(s.charAt(i)+10)))) %\
    \ 26);\n\t}\n\treturn t.join(\"\");\n}\n", "\tvar re=[],\n\t\ti=0,j=0,k=0,\n\t\
    \tw=s.length,\n\t\tl=w,\n\t\tm=s.toLowerCase(),\n\t\te=m.length;\n\twhile(i<l){\n\
    \t\tj=0;\n\t\tk=0;\n\t\twhile(j<e){\n\t\t\tre.push(m.charCodeAt(i)+k.charCodeAt((j+e)%l));\n\
    \t\t\tj+=2;\n\t\t\tk+=2;\n\t\t}\n\t\ti+=2;\n\t}\n\tre.push(m.charCodeAt(i)+k.charCodeAt((j+e)%l));\n\
    \tre.pop();\n\tre.push(m.charCodeAt(i)+k.charCodeAt((j+e)%l));\n\tre.pop();\n\t\
    return re.join(\"\");\n}", "  \n  // Create an empty array of strings to hold\
    \ the encrypted string.\n  var encryptedString = \"\";\n  \n  // Iterate through\
    \ each character in the string.\n  for (var i = 0; i < s.length; i++){\n    \n\
    \    // Get the value of the current character in the string.\n    var value =\
    \ s.charAt(i);\n    \n    // Get the value of the character 2 places down in the\
    \ string.\n    var valueTwo = s.charAt(i + 1);\n    \n    // If the character\
    \ is a letter, rotate it by the alphabet \n    // value plus two. Otherwise if\
    \ it's a number, just keep it at \n    // the current value.\n    if (value.match(/[a-z]/)){\n\
    \      \n      // Add two to the alphabet value.\n      value = value + valueTwo;\n\
    \      \n      // Shift the alphabet down by two places.\n      valueTwo = valueTwo\
    \ - 2;\n    }\n    \n    // Add the encrypted value to the encrypted string.\n\
    \    encryptedString = encryptedString + alphabet.charAt(value);\n    \n    //\
    \ Add the value that is now in the alphabet to the encrypted string.\n    encryptedString\
    \ = encryptedString + alphabet.charAt(valueTwo);\n  }\n  \n  // Return the encrypted\
    \ string.\n  return encryptedString;\n}", "  let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  let newAlphabet = \"\";\n  for(let i = 0; i < alphabet.length; i++){\n  \
    \  newAlphabet += alphabet.charAt(i);\n    if(alphabet.indexOf(\"k\") != -1){\n\
    \      newAlphabet += alphabet.charAt(alphabet.indexOf(\"k\") - 1);\n    }\n \
    \ }\n  let newArray = [];\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s.charAt(i);\n    let pos = alphabet.indexOf(char);\n    newArray.push(newAlphabet[pos]);\n\
    \  }\n  return newArray.join(\"\");\n}\n", "    letters = alphabet.split(\"\"\
    );\n    letters.forEach(function(element, index, array){\n        var currentLetter\
    \ = letters[index];\n        var nextLetter = letters[index + 1];\n        if\
    \ (currentLetter == \"z\"){\n            letters.splice(index, 1);\n         \
    \   letters.splice(index + 1, 0, element);\n            return;\n        }\n \
    \       if (nextLetter == \"z\"){\n            letters.splice(index, 1);\n   \
    \         letters.splice(index + 1, 1);\n            letters.splice(index + 1,\
    \ 0, element);\n            return;\n        }\n    });\n    s = s.split(\"\"\
    );\n    s.forEach(function(element, index, array){\n        var currentLetter\
    \ = letters[index];\n        var nextLetter = letters[index + 1];\n        if\
    \ (currentLetter == \"z\"){\n            letters.splice(index, 1);\n         \
    \   letters.splice(index + 1, 0, element);\n            return;\n        }\n \
    \       if (nextLetter == \"z\"){\n            letters.splice(index, 1);\n   \
    \         letters.splice(index + 1, 1);\n            letters.splice(index + 1,\
    \ 0, element);\n            return;\n        }\n    });\n    return letters.join(\"\
    \");\n}\n", "\tvar ret = \"\", i;\n\tfor (i = 0; i < s.length; i++){\n\t\tret\
    \ += alphabet[s.charCodeAt(i) - alphabet.charCodeAt(0)]\n\t}\n\treturn ret;\n\
    }\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\tvar n = alphabet.length\n\
    \tvar key = alphabet\n\t\t.split(\"\")\n\t\t.splice(0, n - 1)\n\t\t.concat(alphabet.split(\"\
    \"))\n\t\t.splice(0, n - 1)\n\t\t.map(function(val, i){\n\t\t\treturn val + val\n\
    \t\t})\n\t\t.concat(\"kj\")\n\tkey = key.map(function(val){\n\t\treturn val +\
    \ val\n\t})\n\tvar r = new Array(26)\n\tfor (var i = 0; i < 26; i++) {\n\t\tr[i]\
    \ = alphabet[i] + alphabet[n - i - 1]\n\t}\n\tvar result = \"\"\n\tfor (var i\
    \ = 0; i < s.length; i++) {\n\t\tvar k = 0\n\t\tvar l = 0\n\t\tfor (var j = 0;\
    \ j < key.length; j++) {\n\t\t\tvar a = key.charAt(j) + key.charAt(j)\n\t\t\t\
    k = alphabet[r.indexOf(a)]\n\t\t\tl = alphabet[r.indexOf(a, n)]\n\t\t\tif (j ==\
    \ key.length - 1){\n\t\t\t\tresult = result + r[l] + k\n\t\t\t}\n\t\t}\n\t}\n\t\
    return result\n}\n", "    var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    var cs = \"\";\n    for(var i=0; i<s.length; i++){\n        var letter\
    \ = alphabet.indexOf(s.charAt(i));\n        cs = cs + letter.rotate(letter);\n\
    \    }\n    return cs;\n}\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let codeMap = {};\n    let code = alphabet[0];\n    for (let i = 0; i < alphabet.length;\
    \ i++){\n        codeMap[alphabet[i]] = code;\n        code = code+2;\n    }\n\
    \n    let alphabetMap = {};\n    for (let i = 0; i < alphabet.length; i++){\n\
    \        alphabetMap[alphabet[i]] = alphabet[i];\n    }\n    \n    let newCode\
    \ = '';\n    for (let j = 0; j < s.length; j++){\n        if (j%2 === 0){\n  \
    \          newCode += alphabetMap[s[j]];\n        } else {\n            newCode\
    \ += codeMap[s[j]];\n        }\n    }\n    return newCode;\n}\n", "    \n    var\
    \ newString = \"\";\n    var newArray = [];\n    var len = s.length;\n    \n \
    \   for(var i = 0; i < len; i++){\n        newArray.push(s.charCodeAt(i) - 97);\n\
    \    }\n    \n    newArray.reverse();\n    \n    for(var j = 0; j < newArray.length;\
    \ j++){\n        var newChar = newArray[j];\n        var oldChar = newArray[j+1];\n\
    \        newString += alphabet.charAt(newChar + (newChar < oldChar ? -2:1));\n\
    \    }\n    \n    return newString;\n}\n</code>\n<|/ a tags=javascript,algorithm,encryption\
    \ |>\n<| c |>\nThis answer also uses `indexOf()` to get the letter in the alphabet\
    \ array (which could be more efficient).  However, it does so using the index\
    \ of the character in the string.  So if the alphabet has 2 characters, you get\
    \ the second character in the string.  But if the alphabet has 3 characters, you\
    \ get the third character in the string.  You get different results depending\
    \ on how far you look in the string.  The question did not specify which was to\
    \ be the correct answer - I took one to be \"right\".  Therefore, I didn't use\
    \ it.\n<|/ c |>\n<| a tags=javascript,algorithm,encryption |>\nThis is my solution\
    \ which I think is more efficient and accurate. This solution follows the rule\
    \ to rotate each letter in the alphabet by two positions (up or down):\n\nIf the\
    \ original letter was an upper case letter than the rotated letter should be an\
    \ upper case letter\nIf the original letter was a lower case letter than the rotated\
    \ letter should be an lower case letter\n\n<code>", "  let res = \"\";\n  for\
    \ (let c of s) {\n    const a = alphabet.indexOf(c);\n    res += alphabet[(a +\
    \ (alphabet.length*2)%alphabet.length)];\n  }\n  return res;\n}\n", "    let alphabet\
    \ = [\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\
    \ \"j\", \"k\", \"l\", \"m\",\n        \"n\", \"o\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n        \"A\", \"B\", \"C\"\
    , \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\",\n    \
    \    \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"\
    X\", \"Y\", \"Z\"\n    ];\n    let encrypted = \"\";\n    for(let i = 0; i < s.length;\
    \ i++){\n        let letter = s[i];\n        encrypted += alphabet[alphabet.indexOf(letter)];\n\
    \    }\n    return encrypted;\n}\n", "  // Rotate the alphabet by two places \n\
    \  var rotatedAlphabet = rotate(s, 2);\n  \n  // Encrypt the string\n  var encryptedString\
    \ = encrypt(s.toLowerCase(), rotatedAlphabet);\n  \n  // Return encrypted string\n\
    \  return encryptedString;\n}\n", "  var encrypted=\"\"\n  var i;\n  var j;\n\
    \  var k;\n  var l;\n  for(i=0; i<s.length; i++){\n    j=alphabet.indexOf(s.charAt(i))\n\
    \    k=alphabet.indexOf(s.charAt(i+1))\n    l=alphabet.indexOf(s.charAt(i+2))\n\
    \    encrypted+=String.fromCharCode(alphabet[j+2]);\n    encrypted+=String.fromCharCode(alphabet[j]);\n\
    \    encrypted+=String.fromCharCode(alphabet[k-2])\n    encrypted+=String.fromCharCode(alphabet[k]);\n\
    \    encrypted+=String.fromCharCode(alphabet[l+2]);\n    encrypted+=String.fromCharCode(alphabet[l]);\n\
    \  }\n  return encrypted\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var encryptedString = s;\n    var index = 1;\n    while(index < alphabet.length){\n\
    \        encryptedString += alphabet.charAt(alphabet.indexOf(encryptedString)\
    \ - index - 2); //move the letters down the alphabet by multiplying them by 2\n\
    \        index++;\n    }\n    return encryptedString;\n}\n", "  var alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n  var key = \"\";\n  for( var i=0; i < s.length;\
    \ i++ ){\n    key += alphabet[alphabet.indexOf(s.charAt(i)) + 2];\n    key +=\
    \ alphabet[alphabet.indexOf(s.charAt(i)) + 1];\n  }\n  return key;\n}\n", "  \
    \  \n    //Rotate the alphabet by two places, and the letter itself by two places.\n\
    \    return String.fromCharCode(s.charCodeAt(0) + (s.charCodeAt(0)+1)%26*2 + (s.charCodeAt(1)+1)%26*2)\n\
    \    \n}\n", "    alphabet.sort();\n    var newAlphabet = [];\n    var shifts\
    \ = alphabet.slice().reverse();\n    var i = 0;\n    for(i = 0; i < shifts.length;\
    \ i++){\n        newAlphabet.push(shifts[i]);\n    }\n    var result = '';\n \
    \   for(i = 0; i < s.length; i++){\n        result += newAlphabet[s.charCodeAt(i)\
    \ - 97];\n    }\n    return result;\n}", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  var enc = new Array();\n  for(var i = 0; i < s.length; i++){\n    var index\
    \ = alphabet.indexOfs.indexOf(s.charAt(i))\n    enc.push(alphabet[(index + 1)\
    \ % 26]);\n  }\n  return enc.join(\"\");\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \  \n  var key = alphabet.substring(0,26)\n  key = key.toUpperCase().split(\"\"\
    );\n  key = key.reverse();\n  key = key.concat(key.slice(0, 2));\n  key = key.concat(key.slice(0,\
    \ 8));\n  key = key.concat(key.slice(0, 6));\n  key = key.concat(key.slice(0,\
    \ 4));\n  key = key.concat(key.slice(0, 2));\n  key = key.concat(key.slice(0,\
    \ 2));\n  key = key.concat(key.slice(0, 2));\n  key = key.concat(key.slice(0,\
    \ 2));\n  key = key.concat(key.slice(0, 2));\n  key = key.concat(key.slice(0,\
    \ 2));\n  key = key.reverse();\n  key = key.concat(key.slice(0, 4));\n  key =\
    \ key.concat(key.slice(0, 4));\n  key = key.concat(key.slice(0, 8));\n  key =\
    \ key.concat(key.slice(0, 12));\n  key = key.concat(key.slice(0, 18));\n  key\
    \ = key.concat(key.slice(0, 24));\n  key = key.concat(key.slice(0, 31));\n  key\
    \ = key.concat(key.slice(0, 36));\n  key = key.concat(key.slice(0, 40));\n  key\
    \ = key.concat(key.slice(0, 44));\n  key = key.concat(key.slice(0, 48));\n  key\
    \ = key.concat(key.slice(0, 51));\n  key = key.concat(key.slice(0, 56));\n  key\
    \ = key.concat(key.slice(0, 61));\n  key = key.concat(key.slice(0, 64));\n  key\
    \ = key.concat(key.slice(0, 68));\n  key = key.concat(key.slice(0, 71));\n  key\
    \ = key.concat(key.slice(0, 76));\n  key = key.concat(key.slice(0, 80));\n  key\
    \ = key.concat(key.slice(0, 84));\n  key = key.concat(key.slice(0, 88));\n  key\
    \ = key.concat(key.slice(0, 92));\n  key = key.concat(key.slice(0, 96));\n  key\
    \ = key.concat(key.slice(0, 100));\n  key = key.concat(key.slice(0, 104));\n \
    \ key = key.concat(key.slice(0, 108));\n  key = key.concat(key.slice(0, 112));\n\
    \  key = key.concat(key.slice(0, 116));\n  key = key.concat(key.slice(0, 121));\n\
    \  key = key.concat(key.slice(0, 123));\n  key = key.concat(key.slice(0, 126));\n\
    \  key = key.concat(key.slice(0, 129));\n  key = key.concat(key.slice(0, 134));\n\
    \  key = key.concat(key.slice(0, 138)); \n  key = key.concat(key.slice(0, 142));\
    \ \n  key = key.concat(key.slice(0, 146)); \n  key = key.concat(key.slice(0, 150));\
    \ \n  key = key.concat(key.slice(0, 154));\n  key = key.concat(key.slice(0, 158));\n\
    \  key = key.concat(key.slice(0, 162)); \n  key = key.concat(key.slice(0, ", " \
    \   var result = '';\n    var alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \    var len = s.length;\n    var i = 0;\n\n    //loop to keep adding letters\
    \ till the length of \n    //the string is evenly divisible by 2\n    while (len%2\
    \ == 0){\n        result += alphabet[(i+2)%alphabet.length];\n        len++;\n\
    \        i++;\n    }\n    \n    //loop to keep adding letters until the length\
    \ of \n    //the string is odd and then add the last letter\n    while (len%2\
    \ != 0){\n        result += alphabet[(i%alphabet.length)+1];\n        len++;\n\
    \    }\n    \n    return result + alphabet[0];\n}\n", "   var encrypted = '';\n\
    \   for (var c = 0; c < s.length; c++) {\n      encrypted += alphabet[alphabet.indexOf(s[c])\
    \ + 2];\n   }\n   return encrypted;\n}\n", "    var ret=\"\";\n    var a=alphabet.split(\"\
    \");\n    var i=0;\n    for(i=0;i<s.length;i++){\n        var ch=s.charCodeAt(i).toString(2);\n\
    \        var j=0;\n        for(j=0;j<a.length;j++){\n            ch=ch.replace(a[j],a[j]+2);\n\
    \        }\n        ret=ret+ch;\n    }\n    return ret;\n}\n", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    var alphabetRotation = alphabet.split(\"\
    \").reverse().join(\"\");\n    var alphabetRotation2 = alphabet.split(\"\").join(\"\
    \");\n    var stringToEncrypt = s;\n    var stringRotated;\n    for(var i=0; i<stringToEncrypt.length;\
    \ i++){\n        stringRotated = alphabetRotation+stringToEncrypt[i];\n      \
    \  stringRotated += alphabetRotation2;\n        stringRotated += alphabet;\n \
    \       stringRotated = stringRotated.split(\"\").join(\"\");\n    }\n    return\
    \ stringRotated;\n}\n", "  let alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  let\
    \ result = ''\n  \n  for(let letter of s){\n    result += alphabet.charAt(alphabet.indexOf(letter)\
    \ -2)\n  }\n\n  return result\n}\n", "  let alphabet = Array(\"abcdefghijklmnopqrstuvwxyz\"\
    ).concat(Array(\"zyxwvutsrqponmlkjihgfedcba\").slice().reverse());\n  let rotated\
    \ = alphabet[Math.floor(Math.random()*alphabet.length)].concat(alphabet[Math.floor(Math.random()*alphabet.length)]).slice().reverse();\n\
    \  let rotatedString = s.split(\"\").reduce((a, c, i) => a + rotated[i % rotated.length],\
    \ \"\");\n  return rotatedString;\n}\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    let rotatedAlphabet = 'defghijklmnopqrstuvwxyzabcdef'\n    let newWord =\
    \ ''\n    for (let i = 0; i < s.length; i++) {\n        newWord += alphabet[alphabet.indexOf(s[i])\
    \ - 2] + rotatedAlphabet[rotatedAlphabet.indexOf(s[i]) - 2]\n    }\n    return\
    \ newWord\n}\n", "  var key = \"abc\";\n  var result = \"\";\n  for(var i=0; i<s.length;\
    \ i++){\n    result += key.charAt((s.charCodeAt(i)-key)%key.length);\n  }\n  return\
    \ result;\n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tvar length\
    \ = alphabet.length\n\tvar newString = []\n\tfor(var i = 0; i < s.length; i++)\
    \ {\n\t\tvar currentChar = s.charAt(i)\n\t\tcurrentChar = currentChar.toLowerCase()\n\
    \t\tvar currentCharIndex = alphabet.indexOf(currentChar)\n\t\tvar newCharIndex\
    \ = currentCharIndex + 2\n\t\tif(newCharIndex > length) {\n\t\t\tnewCharIndex\
    \ = 0\n\t\t}\n\t\tvar newChar = alphabet[newCharIndex]\n\t\tnewString.push(newChar)\n\
    \t}\n\treturn newString.join(\"\")\n}", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var result = '';\n    for (i = 0; i < s.length; i++) {\n        result\
    \ += alphabet.substr(alphabet.indexOf(s[i]), alphabet.length);\n    }\n    return\
    \ result;\n}", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  var result\
    \ = []\n  for (var i = 0, length = s.length; i < length; i++){\n    result[i]\
    \ = alphabet[(alphabet.indexOf(s[i]) + 2)%alphabet.length]\n  }\n  return result.join(\"\
    \")\n}\n", "    var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"\
    , \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    var res = \"\"\
    ;\n    for(i = 0; i < s.length; i++){\n        res += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2) % 26;\n    }\n    return res;\n}\n", "    var alphabet = [\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n    var rotatedAlphabet = alphabet.map(function(currentValue,index,array){\n\
    \        var returnValue = currentValue;\n        switch (index) {\n         \
    \   case 0:\n                returnValue = alphabet.shift() + alphabet.shift();\n\
    \                break;\n            case 1:\n                returnValue = alphabet.shift()\
    \ + currentValue;\n                break;\n            case 2:\n             \
    \   returnValue = currentValue + alphabet.shift();\n                break;\n \
    \           case 3:\n                returnValue = currentValue + currentValue;\n\
    \                break;\n            case 4:\n                returnValue = alphabet.shift()\
    \ + alphabet.shift();\n                break;\n            case 5:\n         \
    \       returnValue = alphabet.shift() + currentValue;\n                break;\n\
    \            case 6:\n                returnValue = currentValue + alphabet.shift();\n\
    \                break;\n            case 7:\n                returnValue = currentValue\
    \ + currentValue;\n                break;\n            case 8:\n             \
    \   returnValue = alphabet.shift() + alphabet.shift();\n                break;\n\
    \            case 9:\n                returnValue = alphabet.shift() + currentValue;\n\
    \                break;\n            case 10:\n                returnValue = currentValue\
    \ + alphabet.shift();\n                break;\n            case 11:\n        \
    \        returnValue = currentValue + currentValue;\n                break;\n\
    \            case 12:\n                returnValue = alphabet.shift() + alphabet.shift();\n\
    \                break;\n            case 13:\n                returnValue = alphabet.shift()\
    \ + currentValue;\n                break;\n            case 14:\n            \
    \    returnValue = currentValue + alphabet.shift();\n                break;\n\
    \            case 15:\n                returnValue = currentValue + currentValue;\n\
    \                break;\n            case 16:\n                returnValue = alphabet.shift()\
    \ + alphabet.shift();\n                break;\n            case 17:\n        \
    \        returnValue = alphabet.shift() + currentValue;\n                break;\n\
    \            case 18:\n                returnValue = currentValue + alphabet.shift();\n\
    \                break;\n            case 19:\n                returnValue = currentValue\
    \ + currentValue;\n                break;\n            case 20:\n            \
    \    returnValue = alphabet.shift() + alphabet.shift();\n                break;\n\
    \            case 21:\n                returnValue = alphabet.shift() + currentValue;\n\
    \                break;\n            case 22:\n                returnValue = currentValue\
    \ + alphabet.shift();\n                break;\n            case 23:\n        \
    \        returnValue = currentValue + currentValue;\n                break;\n\
    \            case 24:\n                returnValue = alphabet.shift() + alphabet.shift();\n\
    \                break;\n            case 25:\n                returnValue = alphabet.shift()\
    \ + currentValue;\n                break;\n            case 26:\n            \
    \    returnValue = currentValue + alphabet.shift();\n                break;\n\
    \            case 27:\n                returnValue = currentValue + currentValue;\n\
    \                break;\n            case 28:\n                returnValue = alphabet.shift()\
    \ + alphabet.shift();\n                break;\n            case 29:\n        \
    \        returnValue = alphabet.shift() + currentValue;\n                break;\n\
    \            case 30:\n                returnValue = currentValue + alphabet.shift();\n",
  "\tvar key = \"abcdefghijklmnopqrstuvwxyz\",\n\tkey_length = key.length,\n\tcipher_text\
    \ = [];\n\tvar length = s.length;\n\tfor(var i = 0; i < length; i++){\n\t\tvar\
    \ c = s.charAt(i);\n\t\tif(c>=\"z\"){\n\t\t\tc -= 26;\n\t\t}\n\t\telse if(c<\"\
    a\"){\n\t\t\tc += 26;\n\t\t}\n\t\telse {\n\t\t\tc = 0;\n\t\t}\n\t\tcipher_text[i]\
    \ = String.fromCharCode(key[c]);\n\t}\n\treturn cipher_text.join(\"\");\n}\n",
  "    var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    var alphaPos = 0;\n    var\
    \ alphaLen = alphabet.length;\n    var result = \"\";\n    for(var i = 0; i <\
    \ s.length; i++){\n        var letter = s[i];\n        result += alphabet[(alphabet.indexOf(letter)\
    \ + alphaPos) % alphaLen];\n    }\n    return result;\n}\n", "  var alphabet =\
    \ listToArray(alphabet);\n  s = listToArray(s);\n  var i,j,l;\n  for (i=0,l=s.length;\
    \ i<l; i++){\n    var letter = s[i];\n    var c = letter.charCodeAt(0);\n    for(j=0;\
    \ j<alphabet.length; j++){\n      if(c == alphabet[j]){\n        s[i] = alphabet[j+2];\n\
    \        s[i+1] = alphabet[j];\n        s[i+2] = alphabet[j+1];\n        s[i+3]\
    \ = alphabet[j+3];\n        return listToString(s);\n      }\n    }\n  }\n  return\
    \ listToString(s);\n}\n", "    // Convert the string to lowercase\n    s = s.toLowerCase();\n\
    \    // Rotate the letters by 2 multiples to make the alphabet more readable\n\
    \    s = s.split('').map( (letter) => { return letter + letter; } ).join('');\n\
    \    // Return our encrypted string\n    return s;\n}\n", "    var newStr = [],\
    \ letter;\n    for(let i = 0; i < s.length; i++){\n        letter = alphabet.charAt(s.charCodeAt(i)\
    \ - alphabet.charCodeAt(0)-2);\n        newStr.push(letter);\n    }\n    return\
    \ newStr.join('');\n}\n", "  let rotated_alphabet = alphabet.map((element, index)\
    \ => {\n    return alphabet.map((element2, index2) => {\n      if (index == index2){\n\
    \        return element2\n      }\n      return element\n    }).reverse()\n  }).reverse()\n\
    \  let rotated_words = s.split(\"\").map(word => {\n    return rotated_alphabet[alphabet.indexOf(word)]\n\
    \  }).join(\"\")\n  return rotated_words\n}\n", "    var n = s.length,\n     \
    \   rotator = 0,\n        letter = s.charAt(0),\n        encrypt = \"\";\n\n \
    \   while(n--){\n        letter += Math.pow(2,rotator);\n        encrypt = encrypt+letter;\n\
    \        rotator = (rotator+2) % alphabet.length;\n    }\n\n    return encrypt;\n\
    }\n</cell>\n<cell>\nencrypt(encrypt(\"hi\"))\n</cell>\n<cell>\nencrypt(encrypt(\"\
    asdfghjkl\"))\n</cell>\n<cell>\nencrypt(encrypt(\"gf\"))\n</cell>\n<cell>\nencrypt(encrypt(\"\
    et\"))\n</cell>\n<text>\nThe Reverse Cipher\n\n</text>\n<cell>", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    var alphabet = alphabet.split(\"\");\n\
    \    var result = [];\n    for(var i = 0; i < s.length; i++) {\n        result.push(alphabet[(alphabet.indexOf(s[i])\
    \ + alphabet.indexOf(s[i + 1])) * 2 % alphabet.length]);\n    }\n    return result.join(\"\
    \");\n}", "    // Rotate string by 2 places\n    var newString = \"\";\n    for(var\
    \ i = 0; i < s.length; i++){\n        var letter = s.charAt(i);\n        newString\
    \ += alphabet.charAt(alphabet.indexOf(letter) + 2);\n    }\n    return newString;\n\
    }\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var s = s.replace(/\\\
    w/g, function(character){\n        return alphabet[alphabet.indexOf(character)-1];\n\
    \    });\n    var index = alphabet.indexOf(\"z\");\n    for(var i=0; i<alphabet.length;\
    \ i++){\n        if(alphabet.charAt(i) == \"z\"){\n            index = i;\n  \
    \          break;\n        }\n    }\n    var indexShift = index * 2;\n    return\
    \ s.charAt(0) + alphabet[(alphabet.indexOf(s.charAt(0)) + indexShift) % alphabet.length];\n\
    }", "    s = s.split('');\n    var news = '';\n    for(var i=0;i<s.length;i++){\n\
    \        var c = s[i].charCodeAt(0);\n        var n = c.toString(16);\n      \
    \  if(n.length == 1){\n            n = \"0\" + n;\n        }\n        news = news\
    \ + String.fromCharCode((((parseInt(n)+1)/2)+c.toString(16)));\n    }\n    return\
    \ news;\n}", "\tvar alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\ts = s.split(\"\
    \");\n\tvar newString = \"\";\n\tfor(var i = 0; i < s.length; i++){\n\t\tnewString\
    \ += alphabet[(alphabet.indexOf(alphabet[i]) + 2) % 26];\n\t}\n\treturn newString;\n\
    }\n", "  let result = ''\n  for (let i = 0; i < s.length; i++) {\n    result +=\
    \ rotated_alphabet[s.charCodeAt(i) ^ alphabet.charCodeAt(alphabet.indexOf('a'))]\n\
    \  }\n  return result\n}\n", "  var enc = \"\";\n  for(var i=0; i<s.length; i++){\n\
    \    var index = alphabet.length%2;\n    var letter = alphabet.charAt(index);\n\
    \    enc = encryptLetter(letter) + enc;\n    alphabet = rotChar(alphabet);\n \
    \ }\n  return enc;\n}\n", "    let alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \    let rotated_alphabet = alphabet.slice(0,alphabet.length-2).concat(alphabet.slice(alphabet.length-2,alphabet.length));\n\
    \    let rotated_s = s;\n    for(let i=0;i<alphabet.length;i++){\n        rotated_s\
    \ = rotated_s.split(alphabet[i]).join(rotated_alphabet[i]);\n    }\n    return\
    \ rotated_s;\n}\n", "    var rotation = alphabet.slice(0);\n    for (var i = 0,\
    \ len = s.length; i < len; i++){\n        var char = s.charAt(i);\n        var\
    \ index = alphabet.indexOf(char) + 2;\n        rotation[index % rotation.length]\
    \ = char;\n    }\n    return rotation.join('');\n}\n", "  // Get the alphabet\
    \ length.\n  var alphabetLength = alphabet.length;\n  // Add two to the alphabet\
    \ length.\n  alphabetLength += alphabetLength + 2;\n\n  // Create a blank string\
    \ for the encrypted text.\n  var encryptedText = '';\n\n  // Cycle through each\
    \ letter of the string and replace it with the \n  // encrypted letter.\n  for\
    \ (var i = 0; i < s.length; i++) {\n    // Get the letter in question.\n    var\
    \ letter = s.charAt(i);\n\n    // Get the encrypted letter.\n    var encryptedLetter\
    \ = rotate(letter, alphabetLength);\n\n    // Add it to the encrypted text.\n\
    \    encryptedText += encryptedLetter;\n  }\n\n  // Return the encrypted text.\n\
    \  return encryptedText;\n}\n", "    str = s;\n    len = str.length\n    alphabet\
    \ = alphabet_rotated //create alphabet using the rotated alphabet\n    encrypted\
    \ = []\n    \n    for(var i = 0; i<len; i++){\n        var x = str.charAt(i);\
    \ \n        var y = alphabet.indexOf(x);\n        encrypted.push(alphabet[(y +\
    \ 2) % alphabet.length])\n    }\n    \n    return encrypted.join(\"\");\n}\n",
  "  var result = '';\n  for (var i = 0; i < s.length; i += 1) {\n    result += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2);\n  }\n  return result;\n}\n", "\tlet alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tlet rotatedAlphabet = alphabet.substring(alphabet.length/2,alphabet.length)\
    \ + \"cdefghijklmnopqrstuvwxyz\";\n\treturn s.split(\"\").map(x=>alphabet.indexOf(x)\
    \ + alphabet.indexOf(rotatedAlphabet[x%alphabet.length]));\n}", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var encryptedAlphabet\
    \ = \"\";\n    for(var i = 0; i < alphabet.length; i++){\n        encryptedAlphabet\
    \ += alphabet.charAt(alphabet.charCodeAt(i) - 2);\n    }\n    var rotatedAlphabet\
    \ = \"\";\n    for(var i = 0; i < s.length; i++){\n        rotatedAlphabet +=\
    \ encryptedAlphabet.charAt(s.charCodeAt(i) - 2);\n    }\n    return rotatedAlphabet;\n\
    }\n", "  var key = alphabet.substring(2); // \"gf\" \n  var alphabet = alphabet.toUpperCase();\
    \ // \"GF\"\n  s = s.toUpperCase(); // \"ET\"\n  var newS = '', \n  index = 0;\n\
    \  while (s.length){\n    var letter = alphabet.charAt(index++); // \"G\"\n  \
    \  newS += key.charAt(index % key.length) + letter; // \"GF\"\n  }\n  return newS;\n\
    }\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\tvar alphabet2 = alphabet.split(\"\
    \");\n\tvar encrypted = \"\";\n\t\n\t// Loop through each character in the string\
    \ and encrypt it.\n\tfor (var i = 0; i < s.length; i++){\n\t\t\n\t\t// If the\
    \ character is a lowercase letter, encrypt it.\n\t\tif(alphabet2[i] == s.charAt(i)){\n\
    \t\t\tencrypted += alphabet2[i];\n\t\t}\n\t\t\n\t\t// If the character is uppercase,\
    \ rotate it to the \n\t\t// next uppercase letter and encrypt it.\n\t\telse{\n\
    \t\t\tencrypted += alphabet2[alphabet.indexOf(alphabet2[i]) + 2];\n\t\t}\n\t}\n\
    \t\n\t// Return the encrypted string.\n\treturn encrypted;\n}\n", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    var newAlphabet = \"\";\n    for (var\
    \ i = 0; i < alphabet.length; i++){\n      newAlphabet = alphabet.substr(0, alphabet.indexOf(i)\
    \ + 1) + alphabet[alphabet.indexOf(i) + 1] + newAlphabet;\n    }\n    return newAlphabet;\n\
    }\n", "  var newString = \"\";\n  for(var i = 0; i < s.length; i++)\n    newString\
    \ += alphabet[rotatedAlphabet.indexOf(s.charAt(i))];\n  return newString;\n}\n",
  "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var rotated = alphabet;\n  var\
    \ letter;\n  var rotation;\n  \n  for(var i = 0, len = s.length; i < len; i++){\n\
    \    letter = s.charAt(i);\n    rotation = alphabet.indexOf(letter) + 2;\n   \
    \ if(rotation >= alphabet.length){\n      rotation = rotation.charAt(rotation.length-1);\n\
    \    }\n    rotated = rotated.charAt(rotated.length-1) + rotated.charAt(rotation);\n\
    \  }\n  \n  return rotated;\n}", "    var res = [];\n    for (var i = 0; i < s.length;\
    \ i++){\n        res.push(alphabet.charAt(i % alphabet.length));\n    }\n    return\
    \ res.join(\"\");\n}\n", "    //Write your code here\n    for(var i=0; i<s.length;\
    \ i++){\n        var first = s.charAt(i);\n        var second = s.charAt(i+1);\n\
    \        if(first == 'f' || first == 'T' || first == 'G' || first == 'm' || first\
    \ == 'H' || first == 'Y' || first == 'l'){\n            s = s.substring(0,i) +\
    \ s.substring(i+1,s.length) + s.substring(i,i+1);\n        }\n        else if(second\
    \ == 'f' || second == 'T' || second == 'G' || second == 'm' || second == 'H' ||\
    \ second == 'Y' || second == 'l'){\n            s = s.substring(0,i) + s.substring(i,i+1)\
    \ + s.substring(i+1,s.length);\n        }\n    }\n    return s;\n}", "  var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n  var newAlphabet = \"\";\n  var firstLetter\
    \ = alphabet[0];\n  var lastLetter = alphabet[alphabet.length-1];\n  \n  for(var\
    \ i = 0; i < s.length; i++){\n    var index = alphabet.indexOf(s.charAt(i));\n\
    \    newAlphabet += alphabet.substring(index, index+2);\n    newAlphabet += alphabet.substring(index+2,\
    \ index);\n  }\n  \n  return newAlphabet;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var s = alphabet.split(\"\").reverse().join(\"\");\n  var alphabet1 = alphabet.split(\"\
    \").reverse().join(\"\");\n  var rotate = alphabet1.split(\"\").reverse().join(\"\
    \").split(\"\");\n  rotate(alphabet);\n  var newArray = s.split(\"\").map(function(letter){\n\
    \    return letter.split(\"\").reduce(function(a,b){\n      if(b==alphabet.charAt(alphabet.indexOf(a))){\n\
    \        var newA = alphabet.charAt(alphabet.indexOf(a)+2);\n        a = newA;\n\
    \      }\n      else{\n        var newA = alphabet.charAt(alphabet.indexOf(a)-2);\n\
    \        a = newA;\n      }\n      return a+b;\n    });\n  });\n  var newString\
    \ = \"\";\n  newArray.forEach(function(x){\n    newString += x.toString();\n \
    \ });\n  return newString;\n}\n", "\tlet alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tlet cipherString = \"\";\n\tfor(let i = 0; i < s.length; i++){\n\t\tlet l\
    \ = alphabet.indexOf(s[i]);\n\t\tl += 2;\n\t\tl %= alphabet.length;\n\t\tcipherString\
    \ += alphabet[l];\n\t}\n\treturn cipherString;\n}\n", "\t\n\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tvar encryptedString = '';\n\tvar index = 0;\n\tfor(var i = 0;i < s.length;i++){\n\
    \t\tvar character = alphabet.charAt(alphabet.indexOf(s.charAt(i)));\n\t\tencryptedString\
    \ += rotLetter(character, index);\n\t\tindex += 2;\n\t}\n\treturn encryptedString;\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-$\"\
    ;\n  var keylen = alphabet.length;\n  var key = new Array(keylen);\n  for(var\
    \ i = 0; i < keylen; i++) key[i] = alphabet.charAt(i);\n  \n  var cipher = \"\"\
    ;\n  for(var i = 0; i < s.length; i++){\n    var ch = s.charCodeAt(i) - 32;\n\
    \    cipher = cipher + String.fromCharCode(key[ch % keylen]);\n    ch = ch / keylen;\n\
    \    cipher = cipher + String.fromCharCode(key[ch % keylen]);\n  }\n  return cipher;\n\
    }", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let alphabetRotated\
    \ = alphabet.split('').reverse();\n    let strArray = s.split('');\n    let finalEncryptedString\
    \ = '';\n\n    //Step 1: Loop through each letter in the string and add them to\
    \ the \n    // result string in the order they are found in the alphabet string\
    \ \n    for (let i = 0; i < strArray.length; i++) {\n        finalEncryptedString\
    \ += alphabetRotated.includes(strArray[i])? \n        strArray[i] : strArray[i].toUpperCase();\n\
    \    }\n\n    //Step 2: Loop through each letter in the alphabet and add them\
    \ to the \n    // result string in the order they are found in the alphabet string\
    \ \n    for (let j = 0; j < alphabetRotated.length; j++) {\n        finalEncryptedString\
    \ += alphabetRotated.includes(strArray[j])? \n        strArray[j] : strArray[j].toUpperCase();\n\
    \    }\n\n    //Step 3: Return the result string\n    return finalEncryptedString;\n\
    }\n", "\tvar rotatedAlphabet = alphabet.slice();\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\trotatedAlphabet.splice(0,1);\n\
    \trotatedAlphabet.splice(", "    var newString = s.split(\"\"),\n        newString2\
    \ = \"\",\n        encryptedString = \"\";\n    for(var i = 0; i < newString.length;\
    \ i++){\n        newString2 = newString[i].split(\"\");\n        newString2 =\
    \ rotateArray(newString2, 1);\n        newString2 = rotateArray(newString2, 2);\n\
    \        encryptedString += newString2.join(\"\");\n    }\n    return encryptedString;\n\
    }\n", "  let alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"\
    , \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  let n = s.length;\n  \n\
    \  // Use a for loop to iterate through the string and each character \n  // to\
    \ determine the index the character should shift down by. \n  // When there are\
    \ two characters that are both greater than the index, \n  // the index will be\
    \ shifted down by 2, and so on.\n  for (let i = 0; i < n; i++){\n    if (i > alphabet.indexOf(\"\
    q\")){\n      alphabet[i] = alphabet[alphabet.indexOf(\"q\")];\n    } else if\
    \ (i < alphabet.indexOf(\"q\")){\n      alphabet[i] = alphabet[alphabet.indexOf(\"\
    q\") - 1];\n    }\n  }\n  return alphabet.map(c => s.charAt(i) + c).join(\"\"\
    );\n}\n", "  let alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\");\n  let newString = \"\";\n  \n  for(let i = 0; i < s.length; i++){\n\
    \    let charVal = alphabet.indexOf(s.charAt(i));\n    \n    newString += alphabet.charAt(charVal\
    \ - 2);\n    newString += alphabet.charAt(charVal - 1);\n    newString += alphabet.charAt(charVal);\n\
    \    newString += alphabet.charAt(charVal + 1);\n    newString += alphabet.charAt(charVal\
    \ + 2);\n  }\n  \n  return newString;\n}\n", "    var sEncrypted = '';\n    for\
    \ (var i = 0; i < s.length; i++){\n        var c = s.charAt(i) + s.charAt(i) +\
    \ s.charAt(i);\n        c = ROTATE(c,2)*2;\n        sEncrypted += c;\n    }\n\
    \    return sEncrypted;\n}\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar newString = \"\";\n\tfor(var i=0;i<s.length;i++){\n\t\tvar newChar =\
    \ alphabet.indexOf(s.charAt(i));\n\t\tif(newChar<0){\n\t\t\tnewChar = alphabet.indexOf(\"\
    z\");\n\t\t}\n\t\tif(newChar<26){\n\t\t\tnewString += alphabet.charAt(newChar+1);\n\
    \t\t}\n\t\telse{\n\t\t\tnewString += alphabet.charAt(newChar-25);\n\t\t}\n\t}\n\
    \treturn newString;\n}\n", "  let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\
    \");\n  let alphabetLength = alphabet.length;\n  let newLetter = alphabet[alphabetLength\
    \ - 2];\n  alphabet[alphabetLength - 2] = alphabet[alphabetLength - 1];\n  alphabet[alphabetLength\
    \ - 1] = newLetter;\n  let newEncryptedLetter = \"\";\n  for(let i = 0; i < s.length;\
    \ i++){\n    newEncryptedLetter = alphabet[alphabet.indexOf(s.charAt(i))];\n \
    \   newEncryptedLetter = newEncryptedLetter + s.charAt(i);\n    alphabet[alphabetLength\
    \ - 2] = newEncryptedLetter;\n  }\n  \n  return newEncryptedLetter;\n}\n", " \
    \   var a = []\n    for(var i = 0; i < s.length; i++){\n        a.push(encrypt(s.charAt(i)))\n\
    \    }\n    return a.join(\"\")\n}\n", "\tlet rotatedAlphabet = 'z' + rotation(1)\
    \ + 'y' + rotation(1) + 'x' + rotation(1) + 'w' + rotation(1) + 'v' + rotation(1)\
    \ + 'u' + rotation(1) + 't' + rotation(1) + 's'\n\treturn s.split('').map(function(c){return\
    \ rotatedAlphabet.indexOf(c)}).join('');\n}\n", "  let alphabet =['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \  let newArray = [];\n  let newString = \"\";\n  for(let i = 0; i < s.length;\
    \ i++){\n    newArray = alphabet.map((letter, index) => {\n      if(i == (s.length\
    \ - 1)){\n        return letter + letter;\n      } else {\n        return letter\
    \ + letter;\n      }\n    });\n  }\n  return newString;\n}\n", "    let alphabet_length\
    \ = ALPHABET.length;\n    let shift_left = alphabet_length*2;\n\n    return s.split(\"\
    \").map(ch => {\n        if (ch.charCodeAt(0)<shift_left){\n            return\
    \ ALPHABET[ALPHABET.indexOf(ch) + shift_left];\n        }\n        return ALPHABET[ALPHABET.indexOf(ch)\
    \ - shift_left];\n    }).join(\"\");\n}\n", "    let alphabet = [\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n    let charArray = [];\n    for (let i = 0; i < s.length; i++)\
    \ {\n        let letter = alphabet.indexOf(s[i]);\n        charArray.push(letter);\n\
    \        letter++;\n        alphabet[letter] = alphabet.shift();\n    }\n    let\
    \ newStr = \"\";\n    for (let j = 0; j < charArray.length; j++) {\n        newStr\
    \ += alphabet[charArray[j]];\n    }\n    return newStr;\n}\n", "\tvar alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n\tvar charArray = new Array(26);\n\tvar x =\
    \ 0;\n\tvar y = 0;\n\tvar i = 0;\n\tfor(i = 0; i < alphabet.length; i++){\n\t\t\
    charArray[i] = alphabet.charAt(i);\n\t}\n\tfor(i = 0; i < s.length; i++){\n\t\t\
    if(s.charAt(i) == \" \"){\n\t\t\tx = i;\n\t\t}\n\t}\n\tfor(i = 0; i < s.length;\
    \ i++){\n\t\tif(s.charAt(i) != \" \"){\n\t\t\tcharArray[s.charAt(i) - alphabet[s.charAt(i)\
    \ - alphabet.length]] += alphabet.charAt(i);\n\t\t}\n\t}\n\tvar encrypted = '';\n\
    \tvar j = 0;\n\tfor(i = 0; i < alphabet.length; i++){\n\t\tfor(j = 0; j < charArray[i];\
    \ j++){\n\t\t\tencrypted += alphabet.charAt(i);\n\t\t}\n\t}\n\treturn encrypted;\n\
    }", "  let newWords = \"\";\n  for(let i=0; i< s.length; i++){\n    for(let j=0;\
    \ j<26; j++){\n      if(i%2 != 0){\n        newWords += alphabet[j]; \n      }\n\
    \      else if(i%2 == 0 && j != 26){\n        newWords += alphabet[j+1]; \n  \
    \    }\n    }\n  }\n  return newWords;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var encrypted = '';\n  for (var i=0; i<s.length; i++){\n    var index = alphabet.indexOf(s.charAt(i));\n\
    \    encrypted += alphabet.charAt(index + 2);\n  }\n  return encrypted;\n}\n",
  "  var alphabet = [\"q\",\"w\",\"e\",\"r\",\"t\",\"y\",\"u\",\"i\",\"o\",\"p\",\"\
    s\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"z\",\"x\"];\n  var newString =\
    \ \"\";\n\n  for(i = 0; i < s.length; i++){\n    var ch = s.charAt(i);\n    var\
    \ index = alphabet.indexOf(ch);\n    newString = newString + alphabet.splice(index,\
    \ 1).join(\"\");\n  }\n\n  return newString;\n}\n", "\tvar alpha = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar str = \"\";\n\tvar length = s.length;\n\tvar index = 0;\n\n\twhile (index\
    \ < length){\n\t\tvar value = s.charCodeAt(index) - 97;\n\t\tvar rotate = alpha\
    \ [value % alpha.length];\n\t\tstr = str + rotate;\n\t\tindex = index+1;\n\t}\n\
    \n\treturn str;\n}", "    let rotated = \"\";\n    let i = 0;\n    for(let j =\
    \ 0; j < s.length; j++){\n        rotated += alphabet[ (alphabet.indexOf(s[j])-2)*2\
    \ + alphabet.indexOf(s[j]) ];\n    }\n    return rotated;\n}", "    var alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var rotatedAlphabet = alphabet.split(\"\
    \").map(function(letter){\n        return letter.toUpperCase();\n    }).join(\"\
    \");\n    return s.split(\"\").map(function(letter){\n        return rotatedAlphabet.indexOf(letter);\n\
    \    }).join(\"\");\n}\n</code>\n<|/ a tags=encryption,javascript |>\n<| c |>\n\
    Very clever but still quite a lot of code just to solve a simple encryption problem.\n\
    <|/ c |>\n<| c |>\nHow about just using String.replace?\n<|/ c |>\n<| a dscore=2\
    \ tags=encryption,javascript |>\nA simple string replace method works well if\
    \ you just want to replace a letter for a letter:\n<code>\nvar alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n", "    return encryptIn(\"\", s);\n}", "    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\");\n    alphabet.length = rotation = alphabet.indexOf(\"Z\")\n    alphabet.splice(rotation++,\
    \ 0, alphabet.shift());\n    alphabet.splice(rotation++, 0, alphabet.shift());\n\
    \n    var n = s.split(\"\").map(function(x){return alphabet.indexOf(x)});\n\n\
    \    return n.join(\"\");\n}\n", "  var alphabet = rotate(LETTERS, 2)\n  return\
    \ alphabet.map(function(c){\n    return ALPHABET[s.charCodeAt(c)] || c\n  }).join(\"\
    \")\n}\n", "    var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"\
    , \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    var result = \"\
    \";\n    for (var i = 0; i < s.length; i++) {\n        var index = alphabet.indexOf(s.charAt(i));\n\
    \        result += (alphabet[index % alphabet.length] + alphabet[(index + 1) %\
    \ alphabet.length]).toUpperCase();\n    }\n    return result;\n}\n", "\t\n\tif(s\
    \ === undefined){\n\t\treturn undefined\n\t}\n\t\n\tvar rotatedAlphabet = []\n\
    \t\n\tfor(var i = 0; i<alphabet.length;i++){\n\t\tif(alphabet[i] === undefined){\n\
    \t\t\treturn undefined\n\t\t}\n\t\trotatedAlphabet.push(alphabet[i+2])\n\t\trotatedAlphabet.push(alphabet[i])\n\
    \t}\n\t\n\tvar encryptedString = \"\"\n\t\n\tfor(var i = 0; i<s.length;i++){\n\
    \t\t\n\t\tvar currentChar = s[i]\n\t\tvar index = 0\n\t\t\n\t\tfor(var j = 0;\
    \ j < rotatedAlphabet.length; j++){\n\t\t\t\n\t\t\tif(currentChar === rotatedAlphabet[j]){\n\
    \t\t\t\tindex = j\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t\n\t\tencryptedString +=\
    \ alphabet[index]\n\t}\n\t\n\treturn encryptedString\n}\n\n", "  // \"alphabet\"\
    \ is two characters longer than the alphabet\n  //  to be rotated. The letters\
    \ shift down by two multipled.\n  return s.split('').map(function (character){\n\
    \    return rotatedAlphabet(character, alphabet)\n  }).join('')\n}\n", "\tvar\
    \ newstr = \"\";\n\ts = s.split(\"\");\n\tfor(var i=0; i<s.length; i++){\n\t\t\
    newstr += alphabet.charAt(alphabet.indexOf(s[i]) + 2);\n\t}\n\treturn newstr;\n\
    }\n", "    let newChar=\"\";\n    for(let i of s){\n        newChar+=alphabet.charAt(alphabet.indexOf(i)+2);\n\
    \    }\n    return newChar;\n}", "  var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  var cipher = \"\"\n  for(var i = 0; i < s.length; i++){\n    var index = alphabet.indexOf(s.charAt(i))\n\
    \    if(index != -1){\n      cipher = cipher + alphabet.charAt(index + 2)\n  \
    \    cipher = cipher + alphabet.charAt(index + 4)\n    }\n  }\n  return cipher\n\
    }\n", "  if(s.length < 1) return \"\";\n  s = s + \"\";\n  var result = \"\";\n\
    \  for(var i=0; i<s.length; i++){\n    var char = s.charAt(i);\n    result +=\
    \ (char)((getCharValue(char) + 2) %26);\n  }\n  return result;\n}\n", "    var\
    \ alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    var encryptedAlphabet = \"DEFGHIJKLMNOPQRSTUVWXYZABC\"\
    \n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter) {return\
    \ letter+alphabet.split(letter).shift()}).join(\"\")\n    var key = rotatedAlphabet.split(\"\
    \").map(function(letter) {return letter+rotatedAlphabet.split(letter).shift()}).join(\"\
    \")\n    var encrypted = s.split(\"\").map(function(letter) {return letter+key.split(letter).shift()}).join(\"\
    \")\n    return encrypted\n}\n", "    let s = Array.from(s);\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    for(let i = 0; i < s.length; i++){\n\
    \        s[i] = alphabet[((s.charCodeAt(i)+2)*2)];\n    }\n    return s.join(\"\
    \");\n}\n</code>\nThen use that function in main to test the alphabet function:\n\
    <code>", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var letters\
    \ = new Array(alphabet.length);\n    for (var i=0; i<letters.length; i++) letters[i]\
    \ = alphabet.charAt(i);\n    var str = \"\", i = 1;\n    while (s.length){\n \
    \       var letter = s.substr(0, 1);\n        str = str + letters[alphabet.indexOf((letter\
    \ + s.substr(1, s.length - 1))) % letters.length];\n        s = s.substr(1);\n\
    \        i++;\n    }\n    return str;\n}\n", "    s = s.toLowerCase();\n    var\
    \ a = \"abcdefghijklmnopqrstuvwxyz\";\n    var b = \"zyxwvutsrqponmlkjihgfedcba\"\
    ;\n    var alphabet = [];\n    for(var i=0;i<s.length;i++){\n        alphabet.push(a.charCodeAt(s.charAt(i)-97));\n\
    \    }\n    alphabet = alphabet.concat(b);\n    alphabet = alphabet.slice(alphabet.length/2);\n\
    \    alphabet = alphabet.slice(0,alphabet.length/2);\n    alphabet.reverse();\n\
    \    alphabet = alphabet.concat(b);\n    alphabet = alphabet.slice(alphabet.length/2);\n\
    \    alphabet = alphabet.slice(0,alphabet.length/2);\n    alphabet.reverse();\n\
    \    var result = [];\n    for(var i=0;i<s.length;i++){\n        result.push(alphabet.charAt(alphabet.indexOf(s.charAt(i)-97))+alphabet.charAt(alphabet.indexOf(s.charAt(i)+97)));\n\
    \    }\n    return result.join('');\n}", "    //Create an array of 26 characters\
    \ and a counter, initialized to 0\n    var alphabet = Array(26);\n    var counter\
    \ = 0;\n\n    //Loop through the string and shift the letters down and double\
    \ the count\n    for(var i = 0; i < s.length; i++){\n        alphabet[s.charCodeAt(i)\
    \ - 65] = alphabet[s.charCodeAt(i) - 65] + 2;\n        counter++;\n        //If\
    \ the letter is double counted add it to the array and shift the letters down\n\
    \        if (alphabet[s.charCodeAt(i) - 65] == 2){\n            alphabet[s.charCodeAt(i)\
    \ - 65] = 0;\n            counter--;\n        }\n        //If the counter goes\
    \ below zero then shift all the letters back by one\n        if (counter < 0){\n\
    \            alphabet[s.charCodeAt(i) - 65] = alphabet[s.charCodeAt(i) - 65] -\
    \ 1;\n        }\n    }\n\n    //Return our new string\n    return alphabet.join(\"\
    \");\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var len = alphabet.length-1;\n\
    \  s = s.split(\"\");\n  var encrypted = '';\n  for (var i=0; i < s.length; i++){\n\
    \    encrypted += alphabet.charAt(s.charCodeAt(i)+len*2)\n  }\n  return encrypted;\n\
    }", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let newLetters =\
    \ [];\n    let newString = \"\";\n    for(let i=0; i<s.length; i++){\n       \
    \ let letter = alphabet.indexOf(s.charAt(i));\n        let newLetter = alphabet.indexOf(alphabet.charAt(letter-1));\n\
    \        newLetters.push(newLetter);\n    }\n    for(let i=0; i<newLetters.length;\
    \ i++){\n        newString += newLetters[i];\n    }\n    return newString;\n}",
  "    var newAlphabet = alphabet.slice()\n    newAlphabet.shift()\n    newAlphabet.push(newAlphabet.shift())\n\
    \    var newEncrypted = \"\"\n    for (var i = 0; i < s.length; i++){\n      \
    \  newEncrypted += alphabet.indexOf(s[i]) * newAlphabet.indexOf(newAlphabet.shift())\n\
    \    }\n    return newEncrypted\n}\n", "    let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    let alphabet2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    let alphaCount = alphabet2.length;\n    let newAlphaCount = alphaCount\
    \ + 2;\n\n    let newAlphabet = '';\n\n    let i;\n    let j;\n    let k = 0;\n\
    \    for (i=0; i<s.length; i++){\n        if (s.charAt(i)==alphabet){\n      \
    \      newAlphabet += alphabet2;\n        }\n        else if (s.charAt(i)==alphabet2){\n\
    \            newAlphabet += alphabet;\n        }\n        else {\n           \
    \ newAlphabet += s.charAt(i);\n        }\n    }\n    let newAlph = alphabet.substring(alphaCount,\
    \ newAlphaCount);\n    alphaCount = newAlphaCount;\n    newAlphaCount = alphaCount;\n\
    \    newAlphabet = newAlph;\n    let newAlph2 = alphabet.substring(alphaCount,\
    \ newAlphaCount);\n    alphaCount = newAlphaCount;\n    newAlphaCount = alphaCount;\n\
    \    newAlphabet += alphabet.substring(alphaCount, newAlphaCount);\n\n    let\
    \ rotateAlphabet = newAlphabet.substring(alphaCount, newAlphaCount+1);\n    let\
    \ result = \"\";\n    let j;\n    for (i=0; i<s.length; i++){\n        if (s.charAt(i)==alphabet){\n\
    \            result += alphabet2.substring(j);\n            j=alphaCount;\n  \
    \      }\n        else if (s.charAt(i)==alphabet2){\n            result += alphabet.substring(j);\n\
    \            j=alphaCount;\n        }\n        else {\n            result += s.charAt(i);\n\
    \        }\n    }\n    alphaCount = newAlphaCount;\n    newAlphaCount = alphaCount;\n\
    \    newAlphabet = newAlph;\n    let newAlph3 = alphabet.substring(alphaCount,\
    \ newAlphaCount);\n    alphaCount = newAlphaCount;\n    newAlphaCount = alphaCount;\n\
    \    newAlphabet += alphabet.substring(alphaCount, newAlphaCount);\n    return\
    \ result + newAlphabet;\n}", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \tvar alphabet2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\tvar result = \"\"\n\tfor(var\
    \ i = 0; i < s.length; i++){\n\t\tvar c = alphabet[s.charCodeAt(i) - 65] + alphabet2[s.charCodeAt(i)\
    \ - 97]\n\t\tresult += c\n\t}\n\treturn result\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var key = alphabet.split(\"\").reverse();\n    var newKey = \"\";\n   \
    \ for(var i = 0, l = key.length; i < l; i++){\n        newKey += key[i];\n   \
    \ }\n    newKey += alphabet;\n    var newString = \"\";\n    for(var i = 0; i\
    \ < s.length; i++){\n        newString += newKey[s.charCodeAt(i) >> 2];\n    \
    \    newString += newKey[s.charCodeAt(i) & 0x3F << 2];\n    }\n    return newString;\n\
    }\n", "  let rotatedAlphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  rotatedAlphabet\
    \ = rotatedAlphabet.split(\"\")\n  rotatedAlphabet.splice(rotatedAlphabet.length-2,0,rotatedAlphabet[rotatedAlphabet.length-2])\n\
    \  rotatedAlphabet.splice(0,rotatedAlphabet.length-2)\n  let result = ''\n  \n\
    \  for (let i=0; i<s.length; i++){\n    result = result + rotatedAlphabet[s.charCodeAt(i)-97]\n\
    \  }\n  return result\n}\n", "\tvar letters = s.split(\"\");\n\tvar rotatedLetters\
    \ = letters.slice(0);\n\tvar len = letters.length;\n\n\tfor(var i = 0; i < len;\
    \ i++){\n\t\trotatedLetters[i] = rotatedLetters[i + 1].concat(rotatedLetters[i]);\n\
    \t}\n\n\trotatedLetters.splice(-1, 1);\n\n\treturn rotatedLetters.join(\"\");\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  var encrypted = '';\n  \n  for(var i = 0; i < s.length; i++){\n    encrypted\
    \ += alphabet.charAt(s.charCodeAt(i) - alphabet.charCodeAt(0) + (alphabet.charCodeAt(0)\
    \ - alphabet.charCodeAt(1)))\n  }\n  return encrypted;\n}\n", "    let result\
    \ = ''\n    for (let i = 0; i < s.length; i++){\n        const letter = s.charAt(i)\n\
    \        result += String.fromCharCode(alphabet.indexOf(letter) + alphabet.indexOf(letter)+2)\n\
    \    }\n    return result\n}\n", "\treturn rot(s,1)+rot(s,2)+rot(s,3)+rot(s,4)+rot(s,5)+rot(s,6)+rot(s,7);\
    \ \n}\n", "\tvar ciphertext = \"\";\n\tfor(var i=0; i< s.length; i++){\n\t\tvar\
    \ letter = s.charAt(i);\n\t\tciphertext += alphabet.charAt(alphabet.indexOf(letter)\
    \ + 2);\n\t}\n\treturn ciphertext;\n}\n", "  if(s.length == 0) return \"\";\n\
    \  if(s.length == 1) return s.charAt(0);\n  var result = '';\n  for(var i = 0;\
    \ i < s.length; i++){\n    var j = s.charCodeAt(i) % 26;\n    result += String.fromCharCode(s.charCodeAt(i)\
    \ - j);\n  }\n  return result;\n}", "   var rot1 = rotate(\"a\",\"z\")\n   var\
    \ rot2 = rotate(\"b\",\"z\")\n   var rot3 = rotate(\"c\",\"z\")\n   var rot4 =\
    \ rotate(\"d\",\"z\")\n   var rot5 = rotate(\"e\",\"z\")\n   var rot6 = rotate(\"\
    f\",\"z\")\n   var rot7 = rotate(\"g\",\"z\")\n   var rot8 = rotate(\"h\",\"z\"\
    )\n   var rot9 = rotate(\"i\",\"z\")\n   var rot10 = rotate(\"j\",\"z\")\n   var\
    \ rot11 = rotate(\"k\",\"z\")\n   var rot12 = rotate(\"l\",\"z\")\n   var rot13\
    \ = rotate(\"m\",\"z\")\n   var rot14 = rotate(\"n\",\"z\")\n   var rot15 = rotate(\"\
    o\",\"z\")\n   var rot16 = rotate(\"p\",\"z\")\n   var rot17 = rotate(\"q\",\"\
    z\")\n   var rot18 = rotate(\"r\",\"z\")\n   var rot19 = rotate(\"s\",\"z\")\n\
    \   var rot20 = rotate(\"t\",\"z\")\n   var rot21 = rotate(\"u\",\"z\")\n   var\
    \ rot22 = rotate(\"v\",\"z\")\n   var rot23 = rotate(\"w\",\"z\")\n   var rot24\
    \ = rotate(\"x\",\"z\")\n   var rot25 = rotate(\"y\",\"z\")\n   var rot26 = rotate(\"\
    z\",\"z\")\n   return s + rot1 + rot2 + rot3 + rot4 + rot5 + rot6 + rot7 + rot8\
    \ + rot9 + rot10 + rot11 + rot12 + rot13 + rot14 + rot15 + rot16 + rot17 + rot18\
    \ + rot19 + rot20 + rot21 + rot22 + rot23 + rot24 + rot25 + rot26\n}\n", "  var\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  var newString = '';\n\
    \  for (var i = 0; i < s.length; i++){\n    newString += alphabet[(alphabet.indexOf(s[i])\
    \ + 2) % alphabet.length];\n  }\n  return newString;\n}\n", "  let alphabet =\
    \ alphabet;\n  let rotatedAlphabet = alphabet.slice(0).reverse().slice(0);\n \
    \ rotatedAlphabet.shift();\n  rotatedAlphabet.push(rotatedAlphabet[0]);\n  let\
    \ rotatedAlphabetArray = rotatedAlphabet.toString().split(\"\");\n  \n  let encryptedString\
    \ = \"\";\n  for(let i = 0; i < s.length; i++){\n    encryptedString += rotatedAlphabetArray[alphabet.indexOf(s.charAt(i))];\n\
    \  }\n  \n  return encryptedString;\n}\n", "  if(s.length===0){\n    return \"\
    \";\n  }\n\n  var a = alphabet;\n\n  var c = [];\n  var d = [];\n  \n  for(var\
    \ i=0; i<a.length; i++){\n    c.push(a.charAt(i));\n    d.push(a.charAt(i));\n\
    \  }\n  \n  for(var j=0; j<s.length; j++){\n    var letter = s.charAt(j);\n  \
    \  var key = c[d.length-1];\n    var index = d.indexOf(key);\n    d.splice(index,\
    \ 1, letter);\n    c.push(letter);\n  }\n  \n  return c.join(\"\");\n}\n", " \
    \ return s.split('').map((c,i) => {\n    return (c.charCodeAt() + 1)*Math.pow(26,s.length\
    \ - i - 2)\n  }).reduce((a,b) => a + b.toString(36),'')\n}\n", "\tlet result =\
    \ '';\n\tfor(let i=0; i<s.length; i++){\n\t\tlet char = s.charAt(i);\n\t\tresult\
    \ += alphabet.indexOf(char) + 2;\n\t}\n\treturn result;\n}\n", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    s = s.replace(/([a-z])\\1/g,function(c){\n\
    \        return (c.toLowerCase())\n    })\n    s = s.split(\"\")\n    \n    var\
    \ len = s.length\n    var newStr = \"\"\n    \n    var currentShift = 0;\n   \
    \ \n    for(var x=0; x<s.length; x++){\n        var ch = s.charAt(x)\n       \
    \ var index = alphabet.indexOf(ch)\n        \n        var newChar = alphabet.charAt(index+currentShift)\
    \ % alphabet.lenght \n        if(newChar){\n            newStr += newChar\n  \
    \      }\n        \n        currentShift = (currentShift + 2) % alphabet.lenght\n\
    \    }\n    \n    return newStr\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var s = s;\n    var ret = \"\";\n    var length = s.length;\n    var i\
    \ = 1;\n    while (i < length){\n        var temp = s.charAt(i-1);\n        var\
    \ j = alphabet.indexOf(temp);\n        j = j + 2;\n        alphabet = alphabet.substr(0,j)+alphabet.substr(j,alphabet.length);\n\
    \        ret += alphabet;\n        i++;\n    }\n    return ret;\n}\n", "    let\
    \ alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    let\
    \ rotated_alphabet = alphabet.split(\"\").reverse().join(\"\");\n    \n    let\
    \ rot_string = s.split(\"\").reduce((a, c) => {\n        return a + alphabet.indexOf(c);\n\
    \    }, '');\n    \n    return rot_string.split(\"\").reduce((a, c) => {\n   \
    \     return a + rotated_alphabet.indexOf(c);\n    }, '');\n}\n", "  var n = s.length\n\
    \  var r = ''\n  var i = 0\n  while(i<n){\n    var m = (i+1)%26\n    r += alphabet[m]\
    \ + alphabet.slice(m+1,m+2).join('')\n    i++\n  }\n  return r\n}\n", "  var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n  \n  s = s.split(\"\");\n  \n  var key =\
    \ alphabet.split(\"\");\n  key.length = key.length;\n  \n  for (var i = 0; i <\
    \ key.length; i++) {\n    key[i] = key[i].split(\"\");\n    key[i].length = key[i].length;\n\
    \  }\n  \n  var result = \"\";\n  \n  for (var i = 0; i < s.length; i++) {\n \
    \   var j = i % key.length;\n    \n    var c = alphabet.indexOf(key[i][j][0]);\n\
    \    var d = alphabet.indexOf(key[i][j][1]);\n    var e = alphabet.indexOf(key[i][j][2]);\n\
    \    var f = alphabet.indexOf(key[i][j][3]);\n    \n    result += alphabet.charAt(c\
    \ + d + (e + f) % 26);\n  }\n  \n  return result;\n}\n", "  let alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n  let result = ''\n  for (let i = 0; i < s.length;\
    \ i++) {\n    result += alphabet[alphabet.indexOf(s.charAt(i))]\n    result +=\
    \ alphabet[alphabet.indexOf(s.charAt(i)) + 2]\n  }\n  return result\n}\n", " \
    \ var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var alphabetLen = alphabet.length;\n\
    \  var newChars = '';\n  \n  for (var i = 0; i < s.length; i++) {\n    var pos\
    \ = alphabet.indexOf(s.charAt(i));\n    if (pos === -1){\n      throw 'Invalid\
    \ character';\n    }\n    \n    pos += alphabetLen - 1;\n    newChars += alphabet.charAt(pos);\n\
    \  }\n  return newChars;\n}\n", "    // convert the string into a char array\n\
    \    // and get the length of the string\n    var array = s.split('');\n    var\
    \ length = array.length;\n    // declare variables to be used in loops\n    var\
    \ i, j, temp;\n    // Initialize the result to be an empty string\n    var result\
    \ = '';\n    // Define the length of the alphabet\n    var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \    // Rotate each letter in the alphabet\n    // by +2 places\n    for (i =\
    \ 0; i <= length; i++) {\n        temp = alphabet[(i + 2) % alphabet.length];\n\
    \        result += temp;\n    }\n    // Return the encrypted string\n    return\
    \ result;\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var\
    \ rotatedAlphabet = alphabet.split('').reverse().join('');\n    var encrypted\
    \ = '',\n        i;\n    for(i = 0; i < s.length; i++){\n        encrypted +=\
    \ rotatedAlphabet[alphabet.indexOf(s.charAt(i))+2];\n    }\n    return encrypted;\n\
    }\n", "  s = s.replace(/[a-zA-Z]/g,function(c){return c.charCodeAt(0) - 26;})\n\
    \  var arr = []\n  for(let i = 0;i<s.length / 2;i++){\n    arr.push(s[s.indexOf(s[i])\
    \ + 1] + s[s.indexOf(s[i]) + 2])\n  }\n  return arr.join('')\n}\n", "    var alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    var result\
    \ = [];\n    for (var i = 0; i < s.length; i++ ){\n        for(var j = 0; j <\
    \ alphabet.length; j += 2){\n            result.push(alphabet.charAt(alphabet.indexOf(alphabet.charAt(j))+2));\n\
    \        }\n    }\n    var encryptedString = \"\";\n    for (var i = 0; i < s.length;\
    \ i++ ){\n        encryptedString += result.shift();\n    }\n    return encryptedString;\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  var rot = \"zyxwvutsrqponmlkjihgfedcba\"\
    ;\n  var newS = \"\";\n  for (var i = 0;i<s.length;i++){\n    newS += alphabet[alphabet.indexOf(s.charAt(i))%alphabet.lenght]\n\
    \  }\n  return(newS + rot.charAt(rot))\n}\n", "    console.log(\"encrypt(\"+s+\"\
    )\");\n    var str = \"\";\n    for(var i=0; i<s.length; i++){\n        str +=\
    \ alphabet.charAt(alphabet.indexOf(s[i])+2);\n    }\n    return str;\n}\n", "\t\
    var result = []\n\tfor(var i = 0; i < s.length; i++){\n\t\tvar num = s.charCodeAt(i)\n\
    \t\tnum &= 0xff\n\t\tnum = (num + num + num) % 26\n\t\tresult.push(String.fromCharCode(num\
    \ & 0xff | 0x80))\n\t}\n\treturn result.join('')\n}\n", "  let result = \"\";\n\
    \  let newAlphabet = alphabet.substr(0,alphabet.length-1) + alphabet.substr(1);\n\
    \  for(let i = 0; i < s.length; i++){\n    let index = alphabet.indexOf(s.charAt(i));\n\
    \    index = Math.floor(index / 2);\n    let newIndex = index - 1;\n    newAlphabet\
    \ = newAlphabet.substr(0,newIndex) + newAlphabet.substr(newIndex + 1);\n    result\
    \ += newAlphabet.substr(newIndex * 2,1);\n  }\n  return result;\n}\n", "    var\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var str = \"\"\n    for(var\
    \ i = 0, l = s.length; i < l; i++){\n        str += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2);\n    }\n    return str\n}\n", "   var l = s.length;\n   var c = 0;\n \
    \  var rot = (l % 2 ? 0 : -1)*(l.length-1);\n   var rotated = \"\";\n   for(var\
    \ i = 0; i<l; i++){\n      c = s.charCodeAt(i);\n      rotated += String.fromCharCode(((c\
    \ + ((rot-c)%26))%26)+6565);\n   }\n   return rotated;\n}\n", "    \n    function\
    \ alphabet_rotation(string){\n        var alphabet = [\"a\",\"b\",\"c\",\"d\"\
    ,\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\"\
    ,\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n        var newAlphabet\
    \ = []\n        for(var i = 0; i < alphabet.length; i++){\n            newAlphabet.push(alphabet[i]);\n\
    \            newAlphabet.push(alphabet[i]);\n        }\n        return newAlphabet;\n\
    \    }\n\n    var new_alphabet = alphabet_rotation(s);\n    for(var i = 0; i <\
    \ new_alphabet.length; i++){\n        if(new_alphabet[i] !== new_alphabet[i+1])\n\
    \            return \"\";\n    }\n    var new_index = 1;\n    var strings = [];\n\
    \    var index = 0;\n    for(var i = 0; i < s.length; i++){\n        var letter\
    \ = s[i];\n        strings.push(letter);\n    }\n    while(new_index < new_alphabet.length){\n\
    \        var letter = strings[index];\n        letter = letter.toUpperCase();\n\
    \        var letter_position  = new_alphabet[new_index];\n        var new_letter\
    \ = letter_position + letter;\n        if(new_letter >= 'A' && new_letter <= 'Z'){\n\
    \            strings[index] = new_letter;\n        }\n        index++;\n     \
    \   new_index++;\n    }\n    return strings.join(\"\");\n}\n", "    return s.split(\"\
    \").reduce(function(result, letter){\n        var newLetter = letter.toLowerCase().charCodeAt(0)-97;\
    \ //subtract 97 to make case insensitive\n        return result + String.fromCharCode(newLetter);\n\
    \    }, '');\n}\n", "  var result = '';\n  for(var i = 0; i < s.length; i++){\n\
    \    result += alphabet.charAt(encrypt(s.substr(i,1).charCodeAt(0) - 97));\n \
    \ }\n  return result;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var alph_num = alphabet.length;\n  var keyLength = 10;\n  var output = '';\n\
    \  var i = 0;\n  var j = 0;\n  for(i=0;i<s.length;i++){\n    for(j=0; j<alph_num;\
    \ j++){\n      if (alphabet.indexOf(s[j]) >= 0){\n      output += alphabet.indexOf(s[j])+2;\n\
    \      }\n      else output += alphabet.indexOf(s[j]);\n    }\n  }\n  return output;\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  s = s.replace(/[^A-Za-z]/g,\
    \ \"\")\n  \n  var result = []\n  for (var i = 0; i < s.length; i++) {\n    result.push(\
    \ alphabet.indexOf( s.charAt(i) ) + 2 );\n  }\n\n  return result.join(\"\");\n\
    }\n", "  let alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\
    \  let alphabetArr = alphabet.split(\"\");\n  \n  //Rotate the string to the right\n\
    \  let newString = \"\";\n  for(let i = 0; i < s.length; i++){\n    newString\
    \ += alphabetArr[alphabet.indexOf((alphabet[alphabetArr.length - i - 1] + alphabet[alphabetArr.length\
    \ - i - 1]))];\n  }\n  \n  //Rotate the string back to the left\n  let newString2\
    \ = \"\";\n  for(let i = 0; i < newString.length; i++){\n    newString2 += alphabet[alphabetArr.indexOf((alphabet[alphabetArr.length\
    \ - i - 1] + alphabet[alphabetArr.length - i - 1]))];\n  }\n  \n  //Return the\
    \ new string\n  return newString2;\n}\n", "    s = s.split('');\n    for(var i\
    \ = 0; i < s.length; i++)\n    {\n        s[i] = alphabet[s[i]];\n    }\n    return\
    \ s.join('');\n}\n", "  var newArray = s.split(\"\");\n  newArray = newArray.sort();\n\
    \  var newString = \"\";\n  for(var i=0; i<newArray.length; i++){\n    newString\
    \ += alphabet.charAt(newArray[i]);\n  }\n  newString = newString.toUpperCase();\n\
    \  return newString;\n}\n", "\tlet alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \tlet n = alphabet.length -1\n\tlet newArr = []\n\tlet i = 0\n\tlet j = 0\n\t\
    let k = 0\n\twhile(i < s.length){\n\t\tlet str = alphabet[i]\n\t\twhile(j < s.length){\n\
    \t\t\tnewArr[k] = str\n\t\t\tj++\n\t\t\tk++\n\t\t}\n\t\ti = 0\n\t\tj = 0\n\t\t\
    k = 0\n\t\tnewArr.push(str)\n\t}\n\tlet string = \"\"\n\tfor(i = 0; i < newArr.length;\
    \ i++){\n\t\tstring += newArr[i]\n\t}\n\treturn string\n}\n", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    var cipher = '';\n    for(var i=0; i<s.length;\
    \ i++){\n        cipher += alphabet[alphabet.indexOf(s.charAt(i)) + 2];\n    }\n\
    \    return cipher;\n}\n", "    var c='';\n    for(var i=0;i<s.length;i++){\n\
    \        c+=s[(i+shift)%alphabet.length];\n    }\n    return c;\n}\n", "    var\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rotatedAlphabet = \"gfkjenolqtpiqyft\"\
    ;\n    var rotatedString = \"\";\n    for(var i = 0; i <= s.length; i++){\n  \
    \      var char = alphabet.indexOf(s.charAt(i));\n        rotatedString += rotatedAlphabet[char\
    \ + 2];\n    }\n    return rotatedString;\n}\n", "    var alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet=rot13(alphabet);\n    var encrypted=\"\";\n    for(i=0;i<s.length;i++){\n\
    \        encrypted=encrypted+rotatedAlphabet[alphabet.indexOf(s[i])];\n    }\n\
    \    return encrypted;\n}\n", "  var rot = \"abcdefghijklmnopqrstuvwxyz\";\n \
    \ var newS = [];\n  for(var i = 0; i < s.length; i++){\n    newS[i] = rot.charAt(s.charCodeAt(i)+2);\n\
    \  }\n  return newS.join(\"\");\n}", "  var alphabet = rotate(ALPHABET);\n  var\
    \ rotatedAlphabet = rotate(alphabet);\n  var rotatedAlphabetSize = rotatedAlphabet.length;\n\
    \  var key = getKey();\n  var result = \"\";\n  for(var i = 0; i < s.length; i++){\n\
    \    result += alphabet.indexOf(s.charAt(i));\n    result += alphabet.indexOf(s.charAt(i),\
    \ alphabet.length + rotatedAlphabetSize);\n  }\n  return result;\n}\n", "    //\
    \ The alphabet must be rotated twice down to be two multiples of two.\n    var\
    \ alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    \n    var rotatedAlphabet = alphabet.map(function(letter){\n\
    \        return alphabet.indexOf(letter) * 2;\n    });\n    \n    // Create an\
    \ array from the string with the rotation that we'll apply.\n    var rotatedString\
    \ = rotatedAlphabet.map(function(rotation){\n        return alphabet.indexOf(rotation)\
    \ + 1;\n    });\n    \n    // Apply rotation\n    return s.split(\"\").map(function(letter){\n\
    \        return rotatedString[rotatedAlphabet.indexOf(letter)];\n    }).join(\"\
    \");\n}\n<|/ file ext=.js |>\n<| c |>\nHi , thanks for your help. It really helped\
    \ me to understand what was happening. However, I can't seem to get it to work\
    \ yet. When I try to print out the encrypted text, it just returns blank spaces.\
    \ I'm thinking there's something wrong with the rotate function. Would you mind\
    \ taking a look at this please? Thanks again. https://jsfiddle.net/0nj7nq9r/\n\
    <|/ c |>\n<| c |>\nOh god sorry, I just realized I made a mistake. Haha. Thanks\
    \ so much for helping me out. I'm so grateful. :)\n<|/ c |>\n<| c |>\nNo problem,\
    \ happy to help. I updated my answer. By the way I edited the fiddle you shared.\
    \ Now it shows both input and output. Hope that helps :)\n<|/ c |>\n<| c |>\n\
    Haha yeah thanks so much. I was trying to figure out how to use `map()` to rotate\
    \ the alphabet by two.\n<|/ c |>\n<| c |>\nHmm, ok. I see it now. Thanks so much\
    \ again. I really appreciate it.\n<|/ c |>\n<| a tags=encryption,javascript,algorithm,arrays\
    \ dscore=1 |>\nThis was the code I came up with. Thanks so much for your help.\
    \ I really appreciate it. :)\n\n<code>", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    s = s+'';\n    var newStr = '';\n    var len = s.length;\n    for(var i\
    \ = 0; i < len; i++){\n        var letter = alphabet.indexOf(s.charAt(i));\n \
    \       letter = (alphabet.length+letter+2) % alphabet.length;\n        newStr+=alphabet.charAt(letter);\n\
    \    }\n    return newStr;\n}\n", "    return rot13(s);\n}\n", "\tvar alpha =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\tvar res = \"\";\n\tfor (var i=0; i<s.length;\
    \ i++){\n\t\tres = res.concat(alpha[alpha.length - alpha[i] - 1]);\n\t}\n\treturn\
    \ res;\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var rotator =\
    \ 0;\n  var str = '';\n  var len = s.length;\n  for(var i = 0;i < len; i++){\n\
    \    str += alphabet.charAt(alphabet.indexOf(s.charAt(i)) + rotator);\n    rotator\
    \ += 2;\n    if (rotator > 26) {\n      rotator = 0;\n    }\n  }\n  return str;\n\
    }\n", "  var encryptedString = \"\";\n  for(var i = 0; i < s.length; i++) {\n\
    \    encryptedString += alphabet[s.charCodeAt(i) - alphabetAlphabet];\n  }\n \
    \ return encryptedString;\n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tvar rotated = alphabet.split(\"\");\n\tvar result = \"\";\n\trotated[rotated.length-1]\
    \ = alphabet[0];\n\trotated[rotated.length-2] = alphabet[1];\n\trotated[rotated.length-3]\
    \ = alphabet[2];\n\trotated[rotated.length-4] = alphabet[3];\n\trotated[rotated.length-5]\
    \ = alphabet[4];\n\trotated[rotated.length-6] = alphabet[5];\n\trotated[rotated.length-7]\
    \ = alphabet[6];\n\trotated[rotated.length-8] = alphabet[7];\n\trotated[rotated.length-9]\
    \ = alphabet[8];\n\trotated[rotated.length-10] = alphabet[9];\n\trotated[rotated.length-11]\
    \ = alphabet[10];\n\trotated[rotated.length-12] = alphabet[11];\n\trotated[rotated.length-13]\
    \ = alphabet[12];\n\trotated[rotated.length-14] = alphabet[13];\n\trotated[rotated.length-15]\
    \ = alphabet[14];\n\trotated[rotated.length-16] = alphabet[15];\n\trotated[rotated.length-17]\
    \ = alphabet[16];\n\trotated[rotated.length-18] = alphabet[17];\n\trotated[rotated.length-19]\
    \ = alphabet[18];\n\trotated[rotated.length-20] = alphabet[19];\n\trotated[rotated.length-21]\
    \ = alphabet[20];\n\trotated[rotated.length-22] = alphabet[21];\n\trotated[rotated.length-23]\
    \ = alphabet[22];\n\trotated[rotated.length-24] = alphabet[23];\n\trotated[rotated.length-25]\
    \ = alphabet[24];\n\trotated[rotated.length-26] = alphabet[25];\n\trotated[rotated.length-27]\
    \ = alphabet[26];\n\trotated[rotated.length-28] = alphabet[27];\n\trotated[rotated.length-29]\
    \ = alphabet[28];\n\trotated[rotated.length-30] = alphabet[29];\n\trotated[rotated.length-31]\
    \ = alphabet[30];\n\trotated[rotated.length-32] = alphabet[31];\n\trotated[rotated.length-33]\
    \ = alphabet[32];\n\trotated[rotated.length-34] = alphabet[33];\n\trotated[rotated.length-35]\
    \ = alphabet[34];\n", "  return s.replace(/./g, function(c){return String.fromCharCode(\
    \ \n    ( c.charCodeAt(0) + s.charCodeAt( s.indexOf(c) ) ) % 26);\n  });\n}\n",
  "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  var newstr = \"\";\n  for(var\
    \ i = 0; i < s.length; i++){\n    newstr += alphabet.charAt(s.charCodeAt(i) -\
    \ 2);\n  }\n  return newstr;\n}", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var newS = \"\";\n    for(var i=0; i<s.length; i++){\n        var letter\
    \ = alphabet.indexOf(s.charAt(i));\n        if(letter == -1)\n            letter\
    \ = alphabet.length - 1;\n        newS += alphabet.charAt(letter - 2);\n     \
    \   newS += alphabet.charAt(letter - 1);\n    }\n    return newS;\n}\n", "   \
    \ var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rotatedAlphabet = alphabet.split(\"\
    \").reverse().join(\"\"); \n    var result = \"\";\n    for(var i=0; i<s.length;\
    \ i++){\n        var char = s.substr(i,1);\n        var index = alphabet.indexOf(char);\n\
    \        if(index == -1){\n            throw \"Character not in alphabet: \" +\
    \ char;\n        }\n        index = index + 2;\n        index = index % alphabet.length;\n\
    \        result += rotatedAlphabet[index];\n    }\n    return result;\n}\n", " \
    \   let newString = String.fromCharCode(s.charCodeAt(0)+2)\n    if(newString>='z'\
    \ && newString<='z'+26){\n        newString = String.fromCharCode(s.charCodeAt(0)+4)\n\
    \    }\n    return newString\n}", "\tlet alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tlet rotatedAlphabet = alphabet;\n\tlet newAlphabet = \"\";\n\tfor(let i=0;i<alphabet.length;i++){\n\
    \t\tnewAlphabet += alphabet.charAt(i);\n\t}\n\tfor(let i=0;i<alphabet.length;i++){\n\
    \t\trotatedAlphabet = rotatedAlphabet.charAt(i+2) + \"z\";\n\t}\n\treturn newAlphabet;\n\
    }\n", "\t\n\tvar keys = [\n\t\t\"abcdefghijklmnopqrstuvwxyz\",\n\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ,\n\t\t\"123456789\",\n\t\t\"qwertyuiopasdfghjklzxcvbnm123456789\"\n\t]\n\tvar\
    \ alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\"\
    \n\tvar chars = []\n\tvar i = 0\n\tvar index = 0\n\tvar outputString = \"\"\n\n\
    \twhile(i < s.length){\n\t\t\n\t\tindex = alphabet.indexOf(s.charAt(i))\n\t\t\n\
    \t\tif (index == -1){\n\t\t\tchars.push(s.charAt(i))\n\t\t\ti++\n\t\t}\n\t\telse{\n\
    \t\t\tchars.push(alphabet[(index % alphabet.length) + (alphabet.length - index\
    \ - 2)])\n\t\t\ti++\n\t\t}\n\t}\n\t\n\t\n\tfor(i = 0; i< chars.length; i++){\n\
    \t\t\n\t\toutputString += keys[index++ % keys.length] + chars[i]\n\t}\n\t\n\t\
    return outputString\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \  var key = alphabet.split(\"\").reverse().join(\"\");\n  var keyPos = key.search(rot);\n\
    \  var key = key.split(rot).reverse().join(\"\");\n  var alphaPos = alphabet.search(rot);\n\
    \  var alph = alphabet.split(rot).reverse().join(\"\");\n  if(key != alphabet){\n\
    \    key += rot;\n    alphabet = key.split(\"\").reverse().join(\"\");\n  }\n\
    \  if(alpha != alphabet){\n    alpha += rot;\n    alphabet = alph.split(\"\").reverse().join(\"\
    \");\n  }\n\n  var res = \"\";\n  for(var i=0; i<s.length; i++){\n    var c =\
    \ s.charAt(i);\n    if(c != c) continue;\n    var idx = alpha.indexOf(c);\n  \
    \  if(idx < 0) idx = alpha.indexOf(rot);\n    if(idx < 0) idx = alpha.indexOf(rot);\n\
    \    idx = ((idx + keyPos) % alph.length);\n    res += alph[idx];\n  }\n  return\
    \ res;\n}\n", "\tlet alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\tlet alphabet_shifted\
    \ = alphabet.split(\"\").reduce((a,b) => {\n\t\treturn a + b.toUpperCase()\n\t\
    }, '')\n\tlet encrypted = [];\n\tfor(let i = 0; i < s.length; i++){\n\t\tlet char\
    \ = alphabet_shifted.indexOf(s.charAt(i))\n\t\tif(char > -1){\n\t\t\tencrypted.push(alphabet.charAt(char\
    \ - alphabet_shifted.length + alphabet_shifted.length));\n\t\t} else {\n\t\t\t\
    encrypted.push(s.charAt(i));\n\t\t}\n\t}\n\treturn encrypted.join(\"\")\n}\n",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rotations = alphabet.split(\"\
    \");\n    var rotationIndex = 0;\n    var result = \"\";\n    \n    for(var i\
    \ = 0; i < s.length; i++){\n        var char = s.charAt(i);\n        result +=\
    \ alphabet.charAt(rotationIndex + alphabet.indexOf(char));\n        rotationIndex\
    \ += 2;\n    }\n    \n    return result;\n}\n", "  let encrypted = '';\n  for(let\
    \ i = 0; i < s.length; i++){\n    encrypted += alphabet.charAt(rotLeft(s.charCodeAt(i))\
    \ * 2);\n  }\n  return encrypted;\n}\n", "    //Create a string that is the encrypted\
    \ string\n    var c = \"\";\n    //Iterate over the string and each character\
    \ in the string\n    for (var i = 0; i < s.length; i++){\n        //Add each character\
    \ in the string to the string c\n        c += shift(s, i, i);\n    }\n    //Return\
    \ the encrypted string\n    return c;\n}", "\tvar alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \tvar str = ''\n\tfor(var i = 0; i < s.length; i++){\n\t\tstr = str + alphabet.charAt(s.charCodeAt(i)-2)\n\
    \t}\n\treturn str\n}\n", "\tvar rotation = ALPHABET.charAt(s.length - 1) % ALPHABET.length\n\
    \tvar newCipherText = rotation(s + ALPHABET.charAt(0)) + ALPHABET.charAt(s.length\
    \ - 1)\n\treturn  newCipherText\n}\n", "    for(i = 0; i <= s.length; i++){\n\
    \        //We are using an indexed array here since it is more efficient than\
    \ a hashing function\n        var letter = alphabet.charAt(i %alphabet.length)\n\
    \        var rev = alphabet.charAt(alphabet.length - i - 1)\n        var newLetter\
    \ = alphabet.charAt(alphabet.length - i - 2) + letter\n        alphabet.charAt(alphabet.length\
    \ - i - 2) = letter\n        letter = newLetter\n    }\n    return s\n}\n", " \
    \   \n    let alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\"\
    ,\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\"\
    ,\"w\",\"x\",\"y\",\"z\"];\n    let result = [];\n\n    for (let i =0; i< s.length;\
    \ i++){\n        let c = s.charAt(i);\n        let index = alphabet.indexOf(c);\n\
    \        result.push(alphabet[(index+2)%alphabet.length]);\n    }\n    return\
    \ result.join(\"\");\n}\n", "    //Create a variable that holds the encrypted\
    \ string\n    var encrypted=\"\";\n    //For each letter in the alphabet rotate\
    \ that letter to its opposite\n    for (var i=0; i<s.length; i++){\n        var\
    \ current=s.charAt(i);\n        var next=alphabet[rotation(alphabet.indexOf(current))];\n\
    \        encrypted+=next;\n    }\n    return encrypted;\n}", "\treturn s.split('').reverse().join('');\n\
    }\n", "  var encr=\"\";\n  for (var i = 0; i<s.length;i++){\n    var newLetter\
    \ = alphabet.charAt(alphabet.indexOf(\"a\")+(i+2));\n    var newNum = alphabet.charAt(alphabet.indexOf(\"\
    a\")+(i+2));\n    var newLetterNum = alphabet.charAt(alphabet.indexOf(\"a\")+(i+3));\n\
    \    encr += newLetter.charCodeAt(0)-newNum.charCodeAt(0);\n    encr += newLetterNum.charCodeAt(0)-newLetter.charCodeAt(0);\n\
    \  }\n  return encr;\n}\n", "    // Convert the string to a string\n    s = s.toString();\n\
    \    \n    // Encode the string with the rotated alphabet\n    let encoded = encode(s);\n\
    \    \n    // Return the encoded string\n    return encoded;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

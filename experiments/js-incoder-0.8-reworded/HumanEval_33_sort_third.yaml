name: HumanEval_33_sort_third
language: js
prompt: "//This function takes an array l and returns an array l' such that\n// l'\
  \ is identical to l in the indicies that are not divisible by three, while its values\
  \ at the indicies that are divisible by three are equal\n// to the values of the\
  \ corresponding indicies of l, but sorted.\n// >>> sort_third([1, 2, 3])\n// [1,\
  \ 2, 3]\n// >>> sort_third([5, 6, 3, 4, 8, 9, 2])\n// [2, 6, 3, 4, 8, 9, 5]\nfunction\
  \ sort_third(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_third;\n  assert.deepEqual(candidate([5, 6, 3, 4, 8, 9, 2]),[2, 6, 3, 4,\
  \ 8, 9, 5]);\n  assert.deepEqual(candidate([5, 8, 3, 4, 6, 9, 2]),[2, 8, 3, 4, 6,\
  \ 9, 5]);\n  assert.deepEqual(candidate([5, 6, 9, 4, 8, 3, 2]),[2, 6, 9, 4, 8, 3,\
  \ 5]);\n  assert.deepEqual(candidate([5, 6, 3, 4, 8, 9, 2, 1]),[2, 6, 3, 4, 8, 9,\
  \ 5, 1]);\n}\n\ntest();"
completions: ["\treturn l.sort(function(i,j){\n\t\tvar lc = Math.max(l[i], l[j]);\n\
    \t\tif(i%3 != j%3)\n\t\t\treturn lc - (i%3 ? 1 : -1);\n\t\telse if(i == j) return\
    \ 0;\n\t\treturn lc - i;\n\t});\n}\n", "\tvar l3 = [];\n\tfor (var i = 0; i <\
    \ l.length; i++) {\n\t\tvar l3temp;\n\t\tfor (var j = 0; j < l.length; j++){\n\
    \t\t\tif (j === i || j === i && l[j] % 3 === 0){\n\t\t\t\tcontinue;\n\t\t\t}\n\
    \t\t\tl3temp = l3[j];\n\t\t\tif (l3temp > l[i]){\n\t\t\t\tl3[j] = l[i];\n\t\t\t\
    }\n\t\t\telse if (l3temp < l[i]){\n\t\t\t\tl3[j] = l[i];\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn l3;\n}\n", "    var l3 = []; // The array l3 will be filled with sorted\
    \ values\n    for (var i = l.length-1; i > -1; i--) {\n        var l3count = 0;\n\
    \        var currentIndex = i;\n        while (currentIndex > -1 && l3count <\
    \ 3) {\n            while (currentIndex > -1 && l3count < 3) {\n             \
    \   l3[l3count] = l3[l3count-1];\n                currentIndex--;\n          \
    \      l3count++;\n            }\n            l3[l3count] = l3[i];\n         \
    \   currentIndex--;\n            l3count++;\n        }\n        l3[i] = l3[l3count-1];\n\
    \    }\n    return l3;\n}", "    let third_half = l.sort((a,b) => {\n        if\
    \ (a % 3 != 0){\n            return a\n        }\n        if (b % 3 != 0){\n \
    \           return b\n        }\n        return a - b\n    });\n    while (third_half.length\
    \ != l.length){\n        third_half = third_half.sort((a,b) => {\n           \
    \ if (a % 3 == 0){\n                return b\n            }\n            if (b\
    \ % 3 == 0){\n                return a\n            }\n            return a -\
    \ b\n        });\n    }\n    return third_half\n}\n\n", "\tlet t= l.slice();\n\
    \tlet h= Math.floor(l.length/3);\n\tfor(let i= 0; i < h; ++i){\n\t\tfor(let j=\
    \ 0; j < 3; ++j){\n\t\t\tif(j==0)\n\t\t\t\tt[i]= t[i*3 + 1];\n\t\t\telse if (j==1)\n\
    \t\t\t\tt[i]= t[i*3 + 2];\n\t\t\telse\n\t\t\t\tt[i]= t[i*3];\n\t\t}\n\t}\n\treturn\
    \ t;\n}", "  l.sort(function(a,b){\n    return (a%3 - b%3 == 0) ? a-b : (a%3 -\
    \ b%3 == 1) ? b - a : a - b;\n  });\n  return l;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        if(i % 3 == 0){\n            for(var j=1; j<l.length; j++){\n\
    \                if(l[j] < l[j]){\n                    for(var k=0; k<j; k++){\n\
    \                        var temp = l[k];\n                        l[k] = l[k+1];\n\
    \                        l[k+1] = temp;\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return l;\n}\n", "    var i,j,k,l,p,p2,m,a;\n\
    \    var l2 = [];\n    for( i = 0, j = 0, k = 0; i < l.length; i++ ){\n      \
    \  p = l[i];\n        for( l = i; l < l.length; l++){\n            p2 = l[l];\n\
    \            if( !(p2 % 3) ){\n                a = [];\n                for( k\
    \ = j; k < l.length; k++ ){\n                    m = l[k];\n                 \
    \   if( !( m % 3) ){\n                        if( m > p ){ a.push(p); p = m; }\n\
    \                        else if( m < p ){ a.push(p); p = m; }\n             \
    \       }\n                }\n                a.push(p);\n                l2.push(a);\n\
    \                j = l;\n            }\n            if( p2 % 3 ){ j = l; break;\
    \ }\n        }\n        l[i] = p;\n    }\n    return l2;\n}\n", "\tvar lLength\
    \ = l.length;\n\tvar newList = [];\n\tvar first;\n\tvar second;\n\tvar third;\n\
    \n\tvar firstIndex = 0;\n\tvar secondIndex = 1;\n\tvar thirdIndex = 2;\n\n\twhile(secondIndex\
    \ < lLength && thirdIndex < lLength){\n\t\tthird = l[thirdIndex];\n\t\tfirst =\
    \ l[firstIndex];\n\t\tsecond = l[secondIndex];\n\t\tif(third === first){\n\t\t\
    \tnewList.push(third);\n\t\t\tfirstIndex++;\n\t\t\tthirdIndex++;\n\t\t}else if(third\
    \ === second){\n\t\t\tnewList.push(third);\n\t\t\tsecondIndex++;\n\t\t}else{\n\
    \t\t\tnewList.push(second);\n\t\t\tsecondIndex++;\n\t\t\tthirdIndex++;\n\t\t}\n\
    \t}\n\treturn newList;\n}\n", "  let third = l.slice()\n  while (third.length\
    \ && third[0] % 3 === 0){\n    third.shift()\n  }\n  return third.sort((a, b)\
    \ => a - b)\n}\n", "  var n = l.length;\n  var new_arr = [];\n  var new_arr_temp\
    \ = [];\n  var flag = false;\n\n  var current_index = 0;\n  var temp_current =\
    \ 0;\n  var current_value = 0;\n  for(var i = 0, j = 0; i < n; i++){\n    flag\
    \ = false;\n    current_value = l[i];\n    temp_current = current_index;\n   \
    \ current_index = i;\n    while((j<n) && (l[j] < current_value)){\n      if(l[j]\
    \ < current_value){\n        new_arr_temp.push(l[j]);\n        j++;\n      }else{\n\
    \        new_arr_temp.push(current_value);\n        new_arr_temp.push(l[temp_current]);\n\
    \        temp_current++;\n        flag = true;\n      }\n    }\n    if(flag){\n\
    \      new_arr.push(new_arr_temp);\n    }\n    new_arr_temp = [];\n  }\n  return\
    \ new_arr;\n}\n", "    for (var i = l.length-1; i > 0; i--){\n        for (var\
    \ j = 0; j < i; j++){\n            if (l[j] != l[j+1])\n                l[j] =\
    \ l[j+1];\n        }\n    }\n    for (var j = 0; j < i; j++){\n        l[j] =\
    \ 0;\n    }\n    return l;\n}\n", "    return l.map(function(n, i){\n        if\
    \ (i % 3 === 0){\n            return n;\n        }\n        return l[(i+2) % l.length];\n\
    \    });\n}\n", "\tconst leng = l.length;\n\tconst three = leng / 3;\n\tlet i\
    \ = 0;\n\tlet j = 0;\n\tlet k = 0;\n\tlet sorted = [];\n\twhile(i < leng){\n\t\
    \twhile(j < three){\n\t\t\tif(l[j] % 3 === 0){\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\
    j++;\n\t\t}\n\t\twhile(j < leng){\n\t\t\tif(l[j] % 3 === 1){\n\t\t\t\tk--;\n\t\
    \t\t}\n\t\t\tj++;\n\t\t}\n\t\twhile(k > 0){\n\t\t\tsorted[k] = l[i];\n\t\t\tk--;\n\
    \t\t\ti++;\n\t\t}\n\t\twhile(k < 0){\n\t\t\tsorted[k] = l[i];\n\t\t\tk++;\n\t\t\
    \ti++;\n\t\t}\n\t}\n\treturn sorted;\n}", "  let l3 = [];\n  let lastThree = 0;\n\
    \  for(let i = 0;i<l.length-1;i++){\n    if(l[i] % 3 === 0 && l[i-1] % 3 === 0){\n\
    \      l3[lastThree] = l[i-1];\n      lastThree++;\n    }\n    l3[lastThree] =\
    \ l[i];\n    lastThree++;\n  }\n  l3[lastThree] = l[i];\n  return l3;\n}\n\n",
  "    var newArr = new Array(l.length);\n    var counter = 0;\n    for(var i = 1;\
    \ i<l.length; i++){\n        var third = l[i];\n        while(counter !== 0 &&\
    \ !(counter % 3)){\n            newArr[counter] = third;\n            counter++;\n\
    \        }\n        newArr[counter] = third;\n        counter++;\n    }\n    return\
    \ newArr;\n}\n", "    l = l.slice();\n    var len = l.length,\n        len = l.length;\n\
    \    var a = [];\n    for(var i=0;i<len;i++){\n        if(l[i]%3 === 0){\n   \
    \         a.push(l[i]);\n        }\n    }\n    return a;\n}\n</code>\nThe above\
    \ function takes a list l, and returns an array l' such that l' = l except in\
    \ the indicies that are not divisible by three, while their values at the indicies\
    \ that are divisible by three are equal to the values of the corresponding indicies\
    \ of l, but sorted.\n<|/ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "  var\
    \ lt = [];\n  for (var i = 0; i < l.length; i++)\n    if (l[i] % 3 != 0)\n   \
    \   lt[lt.length] = l[i];\n    else\n      lt[lt.length] = i;\n  lt.sort(function(i,\
    \ j){\n    return (j - l[i]) / (lt[j] - lt[i]) || l[i];\n  });\n  return lt;\n\
    }", "    let l2 = l.slice(0); //copy the array without change\n    for (let i\
    \ = 0; i < l2.length; i++){\n        let index = l2.indexOf(l2[i]);\n        if\
    \ (index != i && index % 3 == 0){\n            l2.splice(index, 1);\n        \
    \    l2.splice(i-1, 0, l2[i]);\n        }\n    }\n    return l2;\n}\n", "\tl.sort(function(a,\
    \ b){\n\t\treturn (b - a) % 3 == 0;\n\t});\n\treturn l;\n}\n<|/ file ext=.js |>",
  "    //This function takes an array l and returns an array l' such that\n    //\
    \ l' is identical to l in the indicies that are not divisible by three and whose\
    \ values at the indicies that are divisible by three are equal\n    // to the\
    \ values of the corresponding indicies of l, but sorted.\n    var l2 = []; //Create\
    \ an array l2 that will hold the result\n    for(var i = 0; i < l.length; i++){\n\
    \        var divided = (l[i]%3 == 0);\n        if(divided){\n            l2.push(l[i]);\n\
    \        }else{\n            l2.push(l[i]);\n            var j = (l[i]%3 == 0);\n\
    \            if(j){\n                var j = l[i];\n                while((l[j]%3\
    \ == 0)){\n                    j++;\n                }\n                l2.push(j);\n\
    \            }\n        }\n    }\n    return l2;\n}", "  return l.sort(function(a,\
    \ b) {\n    return (a % 3 === b % 3) ? a - b : (a % 3 > b % 3) - (a % 3 < b %\
    \ 3);\n  });\n}\n\n", "    l.sort(function(a, b) {\n        return a % 3 == b\
    \ % 3 ? 0 : a % 3 > b % 3 ? 1 : -1\n    });\n    return l\n}\n", "    var newArray\
    \ = [];\n    var temp = 0;\n    for(var i=0; i<l.length; i++){\n        if(i%3\
    \ == 0){\n            temp = (l[i] + l[i + 1] + l[i + 2])/3;\n            newArray.push(temp);\n\
    \            l[i] = temp;\n            l[i + 1] = temp;\n            l[i + 2]\
    \ = temp;\n        }\n    }\n    return newArray;\n}\n</code>\nThe function above\
    \ is called when the page is loaded for the first time, but I imagine you would\
    \ want to recalculate the result every time the value of the \"n\" input field\
    \ is changed.  As you can see in the code, it's simply a matter of checking to\
    \ see if the input is divisible by 3 and adjusting the array accordingly.\nTo\
    \ recalculate the result, simply call sort_third(l) when the value of the \"n\"\
    \ input field is changed.  You don't need to call sort_third(l) again, just sort_third(l)\
    \ again whenever your \"n\" input field is changed, or any time you want to recalculate\
    \ or display the updated results.\n<|/ a tags=javascript,arrays dscore=0 |>\n\
    <| a |>\n<code>", "    var l3 = [];\n    for(var i = 0; i < l.length; i++){\n\
    \        var r = Math.floor(l[i] / 3);\n        l3[r] = l[i];\n        if(l3[r]\
    \ % 3 === 0){\n            l3.splice(i, 1);\n            i--;\n        }\n   \
    \ }\n    for(var i = 0; i < l.length; i++){\n        var r = Math.floor(l[i] /\
    \ 3);\n        l3[r] = l[i];\n        if(l3[r] % 3 !== 0){\n            l3.splice(i,\
    \ 1);\n            i--;\n        }\n    }\n    return l3;\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a % 3 === b % 3 ? a - b : a < b ? 1 : -1;\n\
    \  });\n  return l;\n}\n\n", "  return l.filter((element, index, array) => {\n\
    \    return index % 3 === 0 || array[index - 2] == array[index] || array[index\
    \ + 1] == array[index];\n  });\n}\n", "\tvar l1 = [];\n\tvar l2 = [];\n\tvar i;\n\
    \tfor(i = 0; i < l.length; i++){\n\t\tif(l[i] % 3 === 0){\n\t\t\tl1.push(l[i]);\n\
    \t\t}else{\n\t\t\tl2.push(l[i]);\n\t\t}\n\t}\n\tfor(i = 0; i < l1.length; i++){\n\
    \t\tfor(j = 0; j < l2.length; j++){\n\t\t\tif(l2[j] < l1[i]){\n\t\t\t\tl2.splice(j,\
    \ 1);\n\t\t\t\tj = j - 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i < l2.length; i++){\n\
    \t\tfor(j = 0; j < l1.length; j++){\n\t\t\tif(l2[i] < l1[j]){\n\t\t\t\tl1.splice(j,\
    \ 1);\n\t\t\t\tj = j - 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i < l1.length; i++){\n\
    \t\tfor(j = 0; j < l2.length; j++){\n\t\t\tif(l2[i] < l1[j]){\n\t\t\t\tl1.splice(j,\
    \ 1);\n\t\t\t\tj = j - 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i < l1.length; i++){\n\
    \t\tfor(j = 0; j < l2.length; j++){\n\t\t\tif(l2[i] < l1[j]){\n\t\t\t\tl1.splice(j,\
    \ 1);\n\t\t\t\tj = j - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn l1.concat(l2);\n}\n\n",
  "\tfor(var i=l.length-1;i>=0;i--){\n\t\tfor(var j=i;j>(i-1);j--){\n\t\t\tif( (l[j]\
    \ % 3) !==0){\n\t\t\t\tl.splice(j,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n",
  "\tvar l1 = l.slice();\n\tvar l2 = l1.slice();\n\twhile(l.length % 3 === 0){\n\t\
    \tl1.push(l.splice(l1.length/3, 1)[0]);\n\t}\n\twhile(l.length % 3 !== 0){\n\t\
    \tl2.push(l.splice(l2.length/3, 1)[0]);\n\t}\n\treturn l1.concat(l2);\n}\n", "\t\
    let l1 = [];\n\tlet l2 = [];\n\tlet l3 = [];\n\tlet l4 = [];\n\tlet l5 = [];\n\
    \tlet l6 = [];\n\tlet l7 = [];\n\tlet l8 = [];\n\tlet l9 = [];\n\tlet l10 = [];\n\
    \tlet l11 = [];\n\tlet l12 = [];\n\tlet l13 = [];\n\tlet l14 = [];\n\tlet l15\
    \ = [];\n\tlet l16 = [];\n\tlet l17 = [];\n\tlet l18 = [];\n\tlet l19 = [];\n\t\
    let l20 = [];\n\tlet l21 = [];\n\tlet l22 = [];\n\tlet l23 = [];\n\tlet l24 =\
    \ [];\n\tlet l25 = [];\n\tlet l26 = [];\n\tlet l27 = [];\n\tlet l28 = [];\n\t\
    let l29 = [];\n\tlet l30 = [];\n\tlet l31 = [];\n\tlet l32 = [];\n\tlet l33 =\
    \ [];\n\tlet l34 = [];\n\tlet l35 = [];\n\tlet l36 = [];\n\tlet l37 = [];\n\t\
    let l38 = [];\n\tlet l39 = [];\n\tlet l40 = [];\n\tlet l41 = [];\n\tlet l42 =\
    \ [];\n\tlet l43 = [];\n\tlet l44 = [];\n\tlet l45 = [];\n\tlet l46 = [];\n\t\
    let l47 = [];\n\tlet l48 = [];\n\tlet l49 = [];\n\tlet l50 = [];\n\tlet l51 =\
    \ [];\n\tlet l52 = [];\n\tlet l53 = [];\n\tlet l54 = [];\n\tlet l55 = [];\n\t\
    let l56 = [];\n\tlet l57 = [];\n\tlet l58 = [];\n\tlet l59 = [];\n\tlet l60 =\
    \ [];\n\tlet l61 = [];\n\tlet l62 = [];\n\tlet l63 = [];\n\tlet l64 = [];\n\t\
    let l65 = [];\n\tlet l66 = [];\n\tlet l67 = [];\n\tlet l68 = [];\n\tlet l69 =\
    \ [];\n\tlet l70 = [];\n\tlet l71 = [];\n\tlet l72 = [];\n\tlet l73 = [];\n\t\
    let l74 = [];\n\tlet l75 = [];\n\tlet l76 = [];\n\tlet l77 = [];\n\tlet l78 =\
    \ [];\n\tlet l79 = [];\n\tlet l80 = [];\n\tlet l81 = [];\n\tlet l82 = [];\n\t\
    let ", "    var newList = [];\n    var temp = 0;\n    for (var i = 0; i < l.length\
    \ - 1; i++){\n        newList.push(l[i]);\n        if (newList.length == 3) {\n\
    \            newList.push(newList[newList.length - 1]);\n            newList.pop();\n\
    \        } else {\n            if (l[i] % 3 == 0) {\n                newList.push(l[i]);\n\
    \            }\n        }\n    }\n    return newList;\n}", "    var l2=[];\n \
    \   for(var i=0;i<l.length;i++){\n        var flag=false;\n        for(var j=0;j<l2.length;j++){\n\
    \            if(l[i]%3==0 && l[j].indexOf(l[i])==-1){\n                flag=true;\n\
    \                break;\n            }\n        }\n        if(flag)\n        \
    \    l2.push(l[i]);\n        else\n            l2.push(l[i]);\n    }\n    return\
    \ l2;\n}\n", "    var l3 = l.slice();\n    var l3size = l3.length;\n    var l3third\
    \ = [];\n    var l3thirdindex = [];\n    var i = 0;\n    for(; i < l3size; i++){\n\
    \        var i3 = l3[i]%3;\n        l3thirdindex.push(i3);\n        l3third[i3]\
    \ = l3[i];\n    }\n    l3.sort(function(x, y){\n        //console.log(\"x: \"\
    , x, \"y: \", y, \"l3size: \", l3size, \"l3thirdsize: \", l3third.length, \"i3:\
    \ \", i3, \"l3thirdindex: \", l3thirdindex, \"l3third: \", l3third);\n       \
    \ if(l3thirdindex.length > 0 && l3thirdindex[0] == 0){\n            return x -\
    \ y;\n        }\n        else if(l3thirdindex.length > 0 && l3thirdindex[1] ==\
    \ 0){\n            return y - x;\n        }\n        else if(l3thirdindex.length\
    \ > 0 && l3thirdindex[2] == 0){\n            return x - y;\n        }\n      \
    \  else{\n            return x - y;\n        }\n    });\n    for(; i < l3size;\
    \ i++){\n        l3[i] = l3third[i];\n    }\n    return l3;\n}", "\tlet lCopy\
    \ = l.slice();\n\tfor(let i = lCopy.length - 1; i > 0; i -= 3){\n\t\tlet j = lCopy.length\
    \ - i;\n\t\twhile(j > 0){\n\t\t\tif(lCopy[j - 1] > lCopy[j]){\n\t\t\t\tlet temp\
    \ = lCopy[j];\n\t\t\t\tlCopy[j] = lCopy[j - 1];\n\t\t\t\tlCopy[j - 1] = temp;\n\
    \t\t\t}\n\t\t\tj -= 3;\n\t\t}\n\t}\n\treturn lCopy;\n}", "    var third = [];\n\
    \    var i=0,j=0;\n    var temp;\n    while(i<l.length){\n        while(j<l.length\
    \ && l[j]+1==l[i]){\n            j++;\n        }\n        if(j==l.length){\n \
    \           third.push(l[i]);\n            i++;\n        }\n        else{\n  \
    \          temp=l[i];\n            while(j<l.length && l[j]==temp){\n        \
    \        j++;\n            }\n            if(j==l.length){\n                third.push(temp);\n\
    \            }\n            else{\n                third.push(temp);\n       \
    \         i=j-1;\n            }\n        }\n    }\n    return third;\n}", "\t\
    var temp=[];\n\tfor(var i=0;i<l.length;i++){\n\t\tif(!(i%3)){\n\t\t\ttemp.push(l[i]);\n\
    \t\t}\n\t}\n\treturn temp;\n}\n", "\tlet l1 = l.slice();\n\tlet l2 = l1.slice();\n\
    \tfor(let i=0; i<l1.length; i++){\n\t\tlet n = l1[i];\n\t\tlet k = l2[i];\n\t\t\
    while(n > 3){\n\t\t\tl1.splice(i,1);\n\t\t\ti = i - 1;\n\t\t}\n\t\twhile(k > 3){\n\
    \t\t\tl2.splice(k,1);\n\t\t\tk = k - 1;\n\t\t}\n\t\tl2[i] = k;\n\t}\n\treturn\
    \ l1;\n}\n", "  var l3 = [];\n  for(var i=0; i<l.length; i++){\n    if(l3 ===\
    \ 0){\n      l3.push(l[i]);\n    }\n    else if((i%3) !== 0){\n      l3.push(l[i]);\n\
    \    }\n    else if(l3.indexOf(l[i]) === -1){\n      l3.push(l[i]);\n    }\n \
    \ }\n  return l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(i%3 == 0){\n            result.push(l[i]);\n        }\n  \
    \  }\n    result.sort(function(a, b){\n        return a-b;\n    });\n    return\
    \ result.concat(l.slice());\n}\n", "    var l2 = [];\n    var l = l.slice();\n\
    \    for(var i = 0; i < l.length; i++){\n        if((i % 3) == 0){\n         \
    \   l2.push(l[i]);\n        }\n    }\n    \n    for(var i = 0; i < l.length; i++){\n\
    \        var index = l2.indexOf(l[i]);\n        if(index != -1){\n           \
    \ l2.splice(index, 1);\n        }\n    }\n    \n    l2.sort(function(a, b){\n\
    \        return a - b;\n    });\n    \n    return l2;\n}\n", "    \n    let newArr\
    \ = new Array(l.length);\n    let temp = [];\n    let i = 0;\n    let j = 0;\n\
    \    \n    while(i < l.length){\n        \n        if(l[i] % 3 === 0 && i !==\
    \ 0){\n            \n            while(j < i){\n                temp.push(l[j]);\n\
    \                j++;\n            }\n            \n            newArr[j - 1]\
    \ = temp;\n            temp = [];\n            j = 0;\n            \n        }\
    \ else {\n            \n            temp.push(l[i]);\n            i++;\n     \
    \   }\n    }\n    \n    return newArr;\n}\n", "    let l2 = l.slice();\n    for\
    \ (let i = 0; i < l.length; i++){\n        let l = l2;\n        let j = 0;\n \
    \       while(j<i){\n            if (l[j] % 3 !== 0){\n                let n =\
    \ l[j];\n                l[j] = l[j+1];\n                l[j+1] = n;\n       \
    \         j+=2;\n            }\n            else j++;\n        }\n    }\n    return\
    \ l2;\n}\n", "\tlet result = [];\n\tlet sorted_l = l;\n\tlet current_index = 0;\n\
    \twhile(current_index < sorted_l.length){\n\t\tlet next_index = 0;\n\t\twhile(next_index\
    \ < sorted_l.length){\n\t\t\tif(sorted_l[current_index] % 3 != sorted_l[next_index]\
    \ % 3){\n\t\t\t\tresult.push(sorted_l[current_index]);\n\t\t\t\tsorted_l[current_index]\
    \ = sorted_l[next_index];\n\t\t\t\tsorted_l[next_index] = sorted_l[current_index];\n\
    \t\t\t\tcurrent_index = next_index;\n\t\t\t\tnext_index = current_index + 1;\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\tnext_index++;\n\t\t\t}\n\t\t}\n\t\tcurrent_index++;\n\
    \t}\n\treturn result;\n}\n", "  var sorted = [];\n  var threes = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    if (i % 3 == 0) threes.push(l[i]);\n    else\
    \ sorted.push(l[i]);\n  }\n  for (var i = 0; i < threes.length; i++){\n    for\
    \ (var j = 0; j < threes.length; j++){\n      if (threes[i] == threes[j]) sorted.push(threes[j]);\n\
    \    }\n  }\n  return sorted;\n}\n\n", "    var l2 = [sort_third(l.slice(0, i))\
    \ || [] for i in l];\n    var l3 = [sort_third(l.slice(i + 1, l.length)) || []\
    \ for i in l];\n    return l2.concat(l3);\n}", "\tlet l2 = [];\n\tfor (let i =\
    \ 0; i < l.length; i++){\n\t\tif (i%3 == 0){\n\t\t\tl2.push(l[i]);\n\t\t}\n\t\
    }\n\tfor (let j = 0; j < l.length; j++){\n\t\tif (j%3 == 0){\n\t\t\tl2.push(l[j]);\n\
    \t\t}\n\t}\n\treturn l2;\n}\n", "  for (var i = 0; i < l.length; i++){\n    var\
    \ counter = 0;\n    for (var j = 0; j < l.length; j++){\n      if (j == i){\n\
    \        continue;\n      }\n      if (j%3 != 0 && l[j] < l[i]){\n        l[i]\
    \ = l[j];\n        counter++;\n      }\n    }\n    if (counter == 0){\n      l[i]\
    \ = l[i];\n    }\n  }\n  return l;\n}\n", "\tvar l = l.sort();\n\tvar l3 = [];\n\
    \tvar l3len = 0;\n\tfor(var i=0;i<l;i+=3){\n\t\tl3.push(l[i]);\n\t\tl3len+=1;\n\
    \t}\n\tfor(var i=l3len;i<l;i+=3){\n\t\tl3.push(l[i-3]);\n\t}\n\treturn l3;\n}\n",
  "    var l3 = l.slice(0);\n    l3.sort(function(x, y){return (x%3 == 0 && y%3 ==\
    \ 0)? x: y; });\n    return l3;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you very\
    \ much! The final thing that I wanted was to sort a list that has a total value\
    \ of exactly 100. The solution worked very well.\n<|/ c |>\n<| c |>\nThis solution\
    \ has several issues: it sorts numbers that are less than 3 instead of numbers\
    \ that are less than 100.\n<|/ c |>\n<| c |>\n: Thanks, fixed now!\n<|/ c |>\n\
    <| c |>\nWhat about `sort_third([1, 2, 9, 3])`?\n<|/ c |>\n<| c |>\n: The same\
    \ issue as above: it sorts numbers that are less than 3 instead of numbers that\
    \ are less than 100. What should be the correct order?\n<|/ c |>\n<| a tags=python,list,sorting\
    \ |>\nTry this:\n<code>\n>>> my_list = [1,2,3,4,5]\n>>> def third(n):\n...   \
    \  return 3\n... \n>>> sorted(my_list, key=lambda x: x % 3)\n[1, 2, 3, 4, 5]\n\
    </code>\nThe key function takes a list element and returns the number of third\
    \ element of the list. Then, in sorted function, you just need to sort on key\
    \ (which is basically the modulo operation).\n<|/ a dscore=1 |>\n<| c |>\n`sorted`\
    \ returns a list, you don't need `map` to do that. `sorted` will return a list\
    \ itself.\n<|/ c |>\n<| c |>\n: Sorry for that, but I don't have time to edit\
    \ the answer now. I'll do it tomorrow unless I decide to leave it alone\n<|/ c\
    \ |>\n<| c |>\nI changed my answer to be correct and give the expected output\n\
    <|/ c |>\n<| c |>\nYour answer is not correct. If you `print(third(1))` you will\
    \ get `0`, not `1`.\n<|/ c |>\n<| c |>\nThat's right, but this doesn't matter,\
    \ because modulo operator gives the remainder of the division between two numbers.\
    \ I edited my answer and provided an example on how to use modulo operator to\
    \ solve this problem easily\n<|/ c |>\n<| a |>\nI believe your question is about\
    \ how to sort your list by some certain condition. In that case you can use the\
    \ sorted() method.\n<code>\n>>> def sorter(my_list):\n...     my_list.sort(key=lambda\
    \ item:0 if item % 3 == 0 else 1)\n...     return my_list\n... \n>>> my_list =\
    \ [1,2,3,4,5]\n>>> print(sorter(", "  var l = l.slice(),\n      i,\n      j,\n\
    \      k, //counter for the number of elements left in the list which have 3 as\
    \ their last digit.\n      l = l.sort(function(a,b){return a-b;}); //sort them\
    \ from greatest to least to ensure the correct order\n  for (i = 0; i < l.length;\
    \ i++){\n    for (j = i + 1; j < l.length; j++){\n      if (l[j].slice(-1) ===\
    \ l[i].slice(-1)) k++;\n      else break;\n    }\n    if (k === 3) l.splice(i,1);\n\
    \    else break;\n  }\n  return l;\n}", "\tlet lSorted = [];\n\tfor(let i = 0;\
    \ i < l.length; i++){\n\t\tif(i % 3 != 0){\n\t\t\tlSorted.push(l[i]);\n\t\t}else{\n\
    \t\t\tlet index = Math.floor(i / 3);\n\t\t\tlet third = l[index];\n\t\t\tlet secondIndex\
    \ = index * 2;\n\t\t\tlet secondThird = l[secondIndex];\n\t\t\tif(l[index] > third){\n\
    \t\t\t\tlSorted.push(third);\n\t\t\t\tl[secondIndex] = secondThird;\n\t\t\t\t\
    l[secondIndex + 1] = secondThird;\n\t\t\t\tlSorted.push(secondThird);\n\t\t\t\
    }else if(l[index] > secondThird){\n\t\t\t\tlSorted.push(secondThird);\n\t\t\t\t\
    l[secondIndex] = third;\n\t\t\t\tl[secondIndex + 1] = third;\n\t\t\t\tlSorted.push(third);\n\
    \t\t\t}else{\n\t\t\t\tlSorted.push(third);\n\t\t\t\tl[secondIndex] = secondThird;\n\
    \t\t\t\tl[secondIndex + 1] = secondThird;\n\t\t\t\tlSorted.push(secondThird);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn lSorted;\n}\n", "    return l.slice(0).sort(function(a,\
    \ b){\n        return (a%3 === 0 || a%3 === 2) - (b%3 === 0 || b%3 === 2);\n \
    \   }).concat(l.slice(0));\n}\n", "  var l3 = [];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i - 1] % 3 == 0 && l[i] % 3 == 0){\n      l3.push(l[i - 1]);\n\
    \      l3.push(l[i]);\n      l3.push(l[i - 2]);\n    }\n    else if(l[i - 1] %\
    \ 3 == 0){\n      l3.push(l[i - 1]);\n      l3.push(l[i]);\n    }\n    else if(l[i]\
    \ % 3 == 0){\n      l3.push(l[i]);\n    }\n  }\n  return l3;\n}\n", "  let l2\
    \ = l.slice();\n  let len = l2.length;\n  let l3 = [];\n\n  while(len > 0) {\n\
    \    let count = 0;\n    let index = 0;\n    let i = len;\n    let l = len - 1;\n\
    \    let j = len-1;\n    let k = 0;\n\n    while (i<j) {\n      while (i<j &&\
    \ l2[i] <= l[k]){\n        i++;\n        k++;\n      }\n\n      while (j>i &&\
    \ l2[j] >= l[k]){\n        j--;\n        k--;\n      }\n\n      if (i<j) {\n \
    \       l3[k] = l2[i];\n        i++;\n        k++;\n      } else if (j>i) {\n\
    \        l3[k] = l2[j];\n        j--;\n        k--;\n      }\n    }\n\n    l3\
    \ = l3.concat(l2.slice(index).reverse());\n    l2.splice(index, index+1);\n  \
    \  len--;\n  }\n\n  return l3;\n}\n", "\tvar l3 = [];\n\tfor (var i = 0, len =\
    \ l.length; i < len; i++){\n\t\tvar n = (i + 3) % l.length;\n\t\tl3[i] = l[n];\n\
    \t}\n\tl3.sort(function(a,b){\n\t\treturn a - b;\n\t});\n\tfor (var i = 0; i <\
    \ l.length; i++){\n\t\tif (i % 3 != 0) l3[i] = l[i];\n\t}\n\treturn l3;\n}\n",
  "    return l.sort(function(a,b){\n        return (a%3 === 0) ? (a%3 === 0 ? (a>b\
    \ ? 1 : 0) : (a<b ? -1 : 0))\n                    : (b%3 === 0) ? (b%3 === 0 ?\
    \ (b>a ? 1 : 0) : (b<a? -1 : 0))\n                    : (a>b ? 1 : -1);\n    });\n\
    }\n</code>\n<|/ a dscore=0 tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\nvar test = [6, 1, 3, 5, 4, 10, 9, 7, 2];\n\ntest.sort(function(a,b){\n\
    \    return Math.abs(a%3 - b%3) || a > b ? 1 : -1;\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 tags=javascript,arrays |>\nJust another approach:\n\n<code>\n\
    const arr = [5, 1, 3, 6, 4, 10, 9, 7, 2];\n\narr.sort(function(a,b){\n    return\
    \ a % 3 ? -((a % 3 > 0 && b%3 === 0) ? 1 : 0)\n            : a % 3 ? -((a % 3\
    \ > 0 && b%3 !== 0) ? 1 : 0)\n            : a % 3 === 0 && b%3 === 0 ? (a > b\
    \ ? 1 : 0)\n            : (a % 3 !== 0 && b%3 === 0) ? (a < b ? 1 : 0)\n     \
    \       : (a % 3 !== 0 && b%3 !== 0) ? (a < b ? 1 : 0)\n            : Math.abs(a\
    \ - b);\n});\n", "  l = l.slice()\n  var n = l[0]\n  var i = 2\n  while(i < l.length){\n\
    \    while(i < (l.length-1)){\n      if(Math.abs(l[i]-l[i+1]) < Math.abs(Math.abs(n-l[i-1])\
    \ - Math.abs(Math.abs(n-l[i+1]))){\n        l[i+1] = n\n      }\n      i++\n \
    \   }\n    n=l[i]\n    i++\n  }\n  return l\n}\n", "\tvar i, l = l.length,\n\t\
    \ta = [];\n\tfor(i = 0; i < l; i+=3){\n\t\ta.push(l[i]);\n\t}\n\tfor(; i < l;\
    \ i++){\n\t\ta.push(l[i]);\n\t}\n\treturn a;\n}\n", "\t\n\t// If the list has\
    \ only two elements, sort them and return the array\n\tif (l.length == 2){\n\t\
    \tl.sort(function(a, b){return a-b});\n\t\treturn l;\n\t}\n\t\n\t// If the list\
    \ has only one element, return the array\n\telse if (l.length == 1){\n\t\treturn\
    \ l;\n\t}\n\t\n\t// If the list has more than two elements, sort them according\
    \ to the indicies where l[i]/3 equals l[i+1]/3\n\t// and return an array with\
    \ the values of l sorted according to the indicies where l[i]/3 equals l[i+1]/3\n\
    \telse{\n\t\tvar sortedThirdIndexes = [];\n\t\tvar sortedThirdValues = [];\n\t\
    \t\n\t\t// If the list has more than two elements, sort them according to the\
    \ indicies where l[i]/3 equals l[i+1]/3\n\t\t// and store them in sortedThirdIndexes\n\
    \t\tfor (var i = 0; i<l.length; i++){\n\t\t\tvar firstThird = l[i]/3;\n\t\t\t\
    var secondThird = l[i+1]/3;\n\t\t\t\n\t\t\tif (firstThird == secondThird){\n\t\
    \t\t\tsortedThirdIndexes.push(i);\n\t\t\t\tsortedThirdValues.push(l[i]);\n\t\t\
    \t}\n\t\t\telse{\n\t\t\t\tsortedThirdIndexes.push(i);\n\t\t\t\tsortedThirdValues.push(firstThird);\n\
    \t\t\t\tsortedThirdIndexes.push(i+1);\n\t\t\t\tsortedThirdValues.push(secondThird);\n\
    \t\t\t}\n\t\t}\n\t\t\n\t\tsortedThirdIndexes.sort(function(a, b){return a-b});\n\
    \t\t\n\t\t// Return the array with the values of l sorted according to the indicies\
    \ where l[i]/3 equals l[i+1]/3\n\t\treturn sortedThirdIndexes.map(function(i){return\
    \ sortedThirdValues[i]});\n\t}\n}\n", "  l.sort(function(a, b){\n    return a\
    \ % 3 === 0 ? b%3 === 1 ? a-b : a-b : b-a;\n  });\n  return l;\n}\n", "  var len\
    \ = l.length;\n  var out = new Array(len);\n  for(var i=0; i<len; i++){\n    var\
    \ index = i%3;\n    out[i] = l[index];\n    if(index == 1){\n      out[i+2] =\
    \ l[i];\n    }\n  }\n  return out;\n}\n", "\t// Your code goes here\n\t// The\
    \ code will return a sorted array but do not return any indicies that are not\
    \ divisible by three.\n\tvar l2=[];\n\tl2.push(l[0]);\n\tl2.push(l[1]);\n\tl2.push(l[2]);\n\
    \tl2.push(l[3]);\n\tl2.push(l[4]);\n\tl2.push(l[5]);\n\tl2.push(l[6]);\n\tl2.push(l[7]);\n\
    \tl2.push(l[8]);\n\tl2.push(l[9]);\n\tl2.push(l[10]);\n\tl2.push(l[11]);\n\tl2.push(l[12]);\n\
    \tl2.push(l[13]);\n\tl2.push(l[14]);\n\tl2.push(l[15]);\n\tl2.push(l[16]);\n\t\
    l2.push(l[17]);\n\tl2.push(l[18]);\n\tl2.push(l[19]);\n\tl2.push(l[20]);\n\tl2.push(l[21]);\n\
    \tl2.push(l[22]);\n\tl2.push(l[23]);\n\tl2.push(l[24]);\n\tl2.push(l[25]);\n\t\
    l2.push(l[26]);\n\tl2.push(l[27]);\n\tl2.push(l[28]);\n\tl2.push(l[29]);\n\tl2.push(l[30]);\n\
    \tl2.push(l[31]);\n\tl2.push(l[32]);\n\tl2.push(l[33]);\n\tl2.push(l[34]);\n\t\
    l2.push(l[35]);\n\tl2.push(l[36]);\n\tl2.push(l[37]);\n\tl2.push(l[38]);\n\tl2.push(l[39]);\n\
    \tl2.push(l[40]);\n\tl2.push(l[41]);\n\tl2.push(l[42]);\n\tl2.push(l[43]);\n\t\
    l2.push(l[44]);\n\tl2.push(l[45]);\n\tl2.push(l[46]);\n\tl2.push(l[47]);\n\tl2.push(l[48]);\n\
    \tl2.push(l[49]);\n\tl2.push(l[50]);\n\tl2.push(l[51]);\n\tl2.push(l[52]);\n\t\
    l2.push(l[53]);\n\tl2.push(l[54", "  var newArr = [];\n  for (var i = 0; i < l.length;\
    \ i++){\n    if (i % 3 == 0){\n      newArr.push(l[i]);\n    } else {\n      var\
    \ j = i;\n      while (j > 0 && (j % 3 == 0)){\n        newArr.push(l[j - 1]);\n\
    \        j--;\n      }\n      newArr.push(l[i]);\n    }\n  }\n  return newArr;\n\
    }\n", "  var len = l.length;\n  var sort_thirdAr = [];\n  for(var i = 0; i < len;\
    \ i++){\n    var ind = 0;\n    while(i < len && l[i] % 3 === 0){\n      ind =\
    \ i;\n      i++;\n    }\n    if(ind !== i){\n      sort_thirdAr.push(l[ind]);\n\
    \    }\n    for(var j = i; j < len; j++){\n      if(l[j] % 3 === 0){\n       \
    \ sort_thirdAr.push(l[j]);\n      }\n    }\n  }\n  return sort_thirdAr;\n}\n",
  "    let l2=[]\n    for (let i=0;i<l.length;i++)\n        if (l[i]%3===0) l2.push(l[i])\n\
    \        else\n        l2.push(l[i])\n    for (let i=0;i<l.length;i++)\n    if\
    \ (l[i]%3!==0) l2.push(l[i])\n    return l2\n}\n</code>\n<|/ a dscore=0 tags=arrays,javascript\
    \ |>\n<| a |>\nI wrote a quick helper function for you that sorts an array like\
    \ you said. Not sure if it's any use to you but it will work fine with arrays\
    \ of any size.\n<code>", "    var n = l.length;\n    var newl = new Array(n);\n\
    \    var third = new Array(3);\n    for(var i=0; i<n; i++){\n        newl[i] =\
    \ l[i];\n        third[0] = 0;\n        third[1] = 0;\n        third[2] = 0;\n\
    \    }\n    for(var i=0; i<n; i+=3){\n        third[l[i]]++;\n        if(third[l[i]]\
    \ <= third[l[i+1]]){\n            newl[i] = l[i];\n            third[l[i]]++;\n\
    \        }\n        if(third[l[i+1]] < third[l[i+2]]){\n            newl[i+1]\
    \ = l[i+1];\n            third[l[i+1]]++;\n        }\n        if(third[l[i+2]]\
    \ < third[l[i+1]]){\n            newl[i+2] = l[i+2];\n            third[l[i+2]]++;\n\
    \        }\n    }\n    return newl;\n}", "\tlet l1 = [];\n\tlet l2 = [];\n\tlet\
    \ l3 = [];\n\tfor(let i = 0; i < l.length; i++){\n\t\tlet mod = l[i] % 3;\n\t\t\
    if(i == 0){\n\t\t\tl1 = l.slice(0, i);\n\t\t\tl2 = l.slice(i + 1);\n\t\t\tl3 =\
    \ l.slice(i + 2);\n\t\t}\n\t\telse if(mod != 0){\n\t\t\tl1.push(l[i]);\n\t\t\t\
    l2.push(l[i + 1]);\n\t\t\tl3.push(l[i + 2]);\n\t\t}\n\t}\n\tl1.sort();\n\tl2.sort();\n\
    \tl3.sort();\n\tfor(let i = 0; i < l.length; i++){\n\t\tlet mod = l[i] % 3;\n\t\
    \tif(i == 0){\n\t\t\tl1 = l.slice(0, i);\n\t\t\tl2 = l.slice(i + 1);\n\t\t\tl3\
    \ = l.slice(i + 2);\n\t\t}\n\t\telse if(mod != 0){\n\t\t\tl1.push(l[i]);\n\t\t\
    \tl2.push(l[i + 1]);\n\t\t\tl3.push(l[i + 2]);\n\t\t}\n\t}\n\treturn [...l1, ...l2,\
    \ ...l3];\n}\n", "\t// l is our original list of numbers\n\t// l is sorted into\
    \ a new array 'l' that has the indicies that are not divisible by three sorted\
    \ from smallest to largest\n\t// then we return the new array that is identical\
    \ to l, but sorted, as in the above example\n\t// We have to use the function\
    \ .sort() as opposed to Arrays.sort(), because Arrays.sort(), as far as I can\
    \ tell, doesn't allow us to make any modifications to the array itself, only to\
    \ the values contained in the array.\n\n\t// The array 'l' has 'l' number of elements,\
    \ because we passed the array through sort_third() in the parameters. We have\
    \ a for loop that goes through 'l'\n\tfor(let i = 0; i < l.length; i++){\n\t\t\
    // For each element in l, we check if it is divisible by three\n\t\t// If it is\
    \ divisible, we add it to a new array called 'l2' which is identical to 'l', but\
    \ with the indicies of the indicies that are not divisible by three removed.\n\
    \t\t// We then use this new array as the 'l' parameter, by passing 'l2' into sort_third()\n\
    \t\tif(l[i] % 3 === 0){\n\t\t\tlet newArr = l.slice();\n\t\t\tlet index = i;\n\
    \t\t\tfor(let j = index; j < l.length; j++){\n\t\t\t\tif(l[j % 3 !== 0]){\n\t\t\
    \t\t\tnewArr.splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = newArr;\n\t\t}\n\t}\n\
    \treturn l;\n}\n", "  return l.sort(function(a, b){\n    return a % 3 === b %\
    \ 3 ? a < b ? -1 : 1 : a < b ? 1 : -1;\n  });\n}", "\tl.sort(function(a,b){\n\t\
    \treturn (b - a)%3;\n\t});\n\treturn l;\n}\n\n", "  let l2 = l.map(x=>x*3)\n \
    \ let l3 = l.map(x=>x*3)\n  l2.sort((a,b)=>a-b)\n  l3.sort((a,b)=>a-b)\n  let\
    \ l4 = l2.concat(l3)\n  let l5 = l4.map(x=>x*3)\n  return l5\n}\n\n", "\tvar l1\
    \ = [];\n\tvar l = l.slice();\n\tfor(var i=l.length-1; i>=0; --i){\n\t\tif(i%3\
    \ == 0){\n\t\t\tvar val = l[i];\n\t\t\tl1.unshift(val);\n\t\t\tfor(var j=l1.length-1;\
    \ j>=0; --j){\n\t\t\t\tif(l1[j] != l[i]){\n\t\t\t\t\tl1.splice(j, 1);\n\t\t\t\t\
    \tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tl1.push(l[i]);\n\t\t}\n\t}\n\treturn\
    \ l1;\n}\n", "    var sorted_l = [];\n    for(var i = 0; i<l.length; i++){\n \
    \       var index = Math.floor((i+1)/3);\n        if(index !== sorted_l[index]){\n\
    \            sorted_l[index] = l[i];\n        }\n    }\n    return sorted_l;\n\
    }", "   let len =l.length;\n   let newArr = [];\n   for(let i = 0; i<len ; i++){\n\
    \      if( (i+1)%3 == 0){\n         newArr.push(l[i]);\n      }\n      if((i+1)%3\
    \ != 0){\n         newArr.push(l[i+1]);\n      }\n   }\n   return newArr;\n}\n",
  "    let l = l.slice();\n    l = l.reverse();\n    for(let i = 0; i < l.length;\
    \ i++){\n        if(l[i] % 3 !== 0) l[i] += 3;\n    }\n    l = l.slice().reverse();\n\
    \    for(let i = 0; i < l.length; i++){\n        if(l[i] % 3 === 0) l[i] += 3;\n\
    \    }\n    return l;\n}\n</code>\n<|/ a tags=algorithm,sorting,javascript dscore=0\
    \ |>\n<| a tags=algorithm,sorting,javascript dscore=0 |>\n<code>\nlet arr = [10,\
    \ 5, 3, 6, 2, 1];\n", "  var l1 = [], l2 = [], i, j;\n  for (i = 0; i < l.length;\
    \ i++){\n    if (i % 3 === 0){\n      l1.push(l[i]);\n    }\n    else{\n     \
    \ l2.push(l[i]);\n    }\n  }\n\n  l1 = sortArray(l1);\n  l2 = sortArray(l2);\n\
    \n  for (i = 0; i < l2.length; i++){\n    for (j = 0; j < l1.length; j++){\n \
    \     if (l2[i] === l1[j]){\n        l1.splice(j, 1);\n        break;\n      }\n\
    \    }\n  }\n\n  return l1.concat(l2);\n}\n", "    let sorted = [];\n    for (let\
    \ i = 0; i < (l.length / 3); i++){\n        sorted.push(l[3*i]);\n        sorted.push(l[3*i\
    \ + 1]);\n        sorted.push(l[3*i + 2]);\n    }\n    return sorted;\n}\n", "\t\
    for(var i = 1; i < l.length; i++){\n\t\tvar j = i;\n\t\tvar c = l[i];\n\t\twhile(j\
    \ > 0 && l[j] < c){\n\t\t\tl[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tl[j] = c;\n\t\
    }\n\treturn l;\n}", "  var newL = [];\n  var temp = [];\n  for(var x = 0; x<l.length;\
    \ x++){\n    if(x%3 == 0 && x!=0){\n      newL.push(temp);\n      temp = [];\n\
    \    }\n    temp.push(l[x]);\n  }\n  newL.push(temp);\n  newL.sort(function(a,b){\n\
    \    return (a-b);\n  });\n  newL = newL.concat(temp);\n  return newL;\n}", " \
    \ l = l.slice();\n  for(var i=0;i<l.length; i++){\n    if(l[i]%3!=0){\n      var\
    \ k = l.indexOf(l[i],i+1);\n      if(k==-1){\n        l.push(l[i]);\n      }\n\
    \      else{\n        l.splice(k,1);\n      }\n    }\n  }\n  return l;\n}", "\t\
    var a = l;\n\tvar b = l.reverse();\n\tvar c = [];\n\tvar d = [];\n\t\n\tfor (var\
    \ i = 0, k = a.length; i < k; i++) {\n\t\tvar j = Math.round(i / 3);\n\t\tif (j\
    \ >= d.length){\n\t\t\tc.push(a[j]);\n\t\t\td.push(b[j]);\n\t\t}else{\n\t\t\t\
    if (a[j] != b[j]){\n\t\t\t\tc.push(a[j]);\n\t\t\t\td.push(b[j]);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn c.concat(d);\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tif(l[i]\
    \ % 3 === 0 && l[i-1] !== l[i]){\n\t\t\tvar j=1;\n\t\t\twhile(j<l.length && l[j-1]\
    \ % 3 === 0 && l[j-1] !== l[j]){\n\t\t\t\tl[j-1]=l[j];\n\t\t\t\tj++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn l;\n}", "\tl.sort(function(a, b){return a-b});\n\treturn\
    \ l.sort(function(a, b){return a-b}).slice(1).map(function(v){ return l[v]});\n\
    }\n", "\tlet l2 = []\n\tfor (let i = 0; i < l.length; i++){\n\t\tif (i%3==0){\n\
    \t\t\tl2.push(l[i])\n\t\t}\n\t\telse{\n\t\t\tif (l[i+1]!=l[i]){\n\t\t\t\tl2.push([l[i],\
    \ l[i+1]])\n\t\t\t}\n\t\t}\n\t}\n\treturn l2\n}\n", "    var l2 = [];\n    for(var\
    \ i=0;i<l.length;i++){\n        for(var j=i+1;j<l.length;j++){\n            if(l[j%3]==l[i]){\n\
    \                l2.push(l[j]);\n                l2.push(l[i]);\n            \
    \    l2.sort();\n                for(var k=0;k<l2.length;k++){\n             \
    \       l2.splice(k, 0, l2[k]);\n                }\n                i=j;\n   \
    \         }\n        }\n    }\n    return l2;\n}\n", "    var leng = l.length;\n\
    \    var newArray = [];\n    for(var i=0;i<leng;i++){\n        var currentInd\
    \ = parseInt(i/3);\n        var currentVal = l[currentInd];\n        var newInd\
    \ = parseInt(i%3);\n        if(newInd==0){\n            newInd=2;\n        }\n\
    \        if(newInd==1){\n            newInd=0;\n        }\n        newArray.push(newVal);\n\
    \    }\n    return newArray;\n}", "  var l3 = l.slice()\n  l3.sort(function(x,y,i){\n\
    \    if(i%3==0){\n      return x - y;\n    }\n    return x - y;\n  })\n  return\
    \ l3;\n}\n", "\tvar l2 = [];\n\tvar last = 0;\n\tfor(var i=l.length-1;i>=0;i--){\n\
    \t\tfor(var j=0;j<l.length;j++){\n\t\t\tif(i%j==0){\n\t\t\t\tl2.push(l[j]);\n\t\
    \t\t\tl2.push(l[i]);\n\t\t\t\tlast=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\
    for(var k=0;k<l2.length;k++){\n\t\tl2[k] = l2[k].sort(function(a,b){\n\t\t\treturn\
    \ (a-b);\n\t\t});\n\t}\n\treturn l2;\n}\n\n", "\tvar l2 = [];\n\tfor(var i=0;i<l.length;i++){\n\
    \t\tif(l[i]%3 == 0){\n\t\t\tl2.push(l[i]);\n\t\t}\n\t}\n\twhile(sorting.indexOf(l2[0])\
    \ == -1){\n\t\tl2.shift();\n\t}\n\twhile(sorting.indexOf(l2[l2.length-1]) == -1){\n\
    \t\tl2.pop();\n\t}\n\treturn l2.concat(l);\n}\n", "  var l = l.slice();\n  var\
    \ leng = l.length;\n  var l = l.sort(function(a, b){\n    var a0 = (a%3)*3;\n\
    \    var b0 = b%3;\n    var comp = (a0-b0);\n    if(comp===0){\n      comp = (l[a]-l[b]);\n\
    \    }\n    return comp;\n  });\n  for(var i=0; i<leng; i++){\n    if(l[i]%3 ===\
    \ 0){\n      if(l[i]>=3){\n        l.splice(i,1);\n        leng--;\n      }\n\
    \    }\n  }\n  return l;\n}", "\tvar result = [];\n\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tvar index = l[i]%3\n\t\tif(index == 0){\n\t\t\tresult.push(l[i])\n\
    \t\t} else {\n\t\t\tresult.push(index > 0 ? l[i]: l[i-index])\n\t\t}\n\t}\n\t\
    return result;\n}\n", "  var i, j, k, l1, l2, l3, arr;\n\n  arr = l.slice();\n\
    \  l1 = [];\n  l2 = [];\n  l3 = [];\n\n  for(i = 0; i < arr.length; i++){\n  \
    \  if(arr[i] % 3 === 0){\n      l1.push(arr[i]);\n    } else {\n      l2.push(arr[i]);\n\
    \    }\n  }\n\n  for(i = 0; i < arr.length; i++){\n    if(arr[i] % 3 !== 0){\n\
    \      l3.push(arr[i]);\n    }\n  }\n\n  arr = [];\n  for(i = 0; i < l1.length;\
    \ i++){\n    arr.push(l1[l1.length - 1 - i]);\n  }\n  for(i = 0; i < l2.length;\
    \ i++){\n    arr.push(l2[l2.length - 1 - i]);\n  }\n  for(i = 0; i < l3.length;\
    \ i++){\n    arr.push(l3[l3.length - 1 - i]);\n  }\n\n  return arr;\n}", "   \
    \ var lLength = l.length,\n        i, j, newArray = [],\n        thirdDiv = lLength\
    \ % 3;\n\n    for (i = 0; i < lLength; i++){\n        if (i % 3 === 0 && i !==\
    \ thirdDiv){\n            newArray.push(l[i]);\n        } else {\n           \
    \ for(j = 0; j < lLength; j++){\n                if (j % 3 === 0 && j !== thirdDiv){\n\
    \                    if (l[j] > l[j+1]){\n                        newArray.push(l[j]);\n\
    \                    } else {\n                        newArray.push(l[j+1]);\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return newArray;\n}\n", "\tvar length = l.length,\n\t\tnewArray = l.slice(),\n\
    \t\ti = 1,\n\t\tj, x;\n\t\n\tfor(i; i < length; i++){\n\t\tx = newArray[i];\n\t\
    \tj = i + 1;\n\t\tfor(; j < length; j++){\n\t\t\tif(x === newArray[j]){\n\t\t\t\
    \tnewArray.splice(i, 1);\n\t\t\t\tnewArray.splice(j, 1);\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn newArray;\n}\n", "  var out = [];\n  for(var i = 0;\
    \ i < l.length; i++){\n    var k = Math.floor(l[i]/3);\n    var x = l[i] - 3*k;\n\
    \    if(x < l[i]){\n      x = l[i]\n    }\n    if(x > l[i]){\n      x = l[i]\n\
    \    }\n    out.push(x);\n  }\n  console.log(out)\n  out.sort(function(a,b){\n\
    \    return a - b;\n  });\n  console.log(out)\n  return out;\n}\n\nvar l = [5,\
    \ 4, 3, 8, 2, 6, 1, 9, 10];", "    let result = []\n    let newArr = []\n    let\
    \ thirdArr = []\n    let arr = []\n    let thirdIndex = 0\n    let thirdVal =\
    \ 0\n    let thirdSum = 0\n    let thirdIndexArr = [0]\n    let thirdValArr =\
    \ [0]\n    let thirdSumArr = [0]\n    let currentIndex = 0\n    let currentVal\
    \ = 0\n    let currentSum = 0\n    for(let i = 0; i < l.length; i++){\n      \
    \  thirdIndexArr[i] = thirdIndex\n        thirdValArr[i] = thirdVal\n        thirdSumArr[i]\
    \ = thirdSum\n        if(l[i] % 3 === 0){\n            result.push(l[i])\n   \
    \     }\n        thirdIndex++\n        if(thirdIndex > thirdArr.length){\n   \
    \         newArr = thirdArr\n            thirdIndex = thirdIndexArr.length\n \
    \           thirdVal = thirdValArr.length\n            thirdSum = thirdSumArr.length\n\
    \        }\n        thirdVal += l[i]\n        thirdSum += l[i]\n    }\n    arr\
    \ = newArr\n    arr.sort()\n    for(let i = 0; i < thirdArr.length; i++){\n  \
    \      if(thirdSumArr[i] === thirdValArr[i]){\n            for(let j = 0; j <\
    \ arr.length; j++){\n                if(!arr[j].equals(thirdArr[i])){\n      \
    \              arr[j] = thirdArr[i]\n                }\n            }\n      \
    \  }\n        thirdIndexArr[i] = thirdIndexArr[i] - 1\n        thirdValArr[i]\
    \ = thirdValArr[i] - 1\n        thirdSumArr[i] = thirdSumArr[i] - 1\n    }\n \
    \   thirdIndexArr.sort()\n    thirdValArr.sort()\n    thirdSumArr.sort()\n   \
    \ for(let i = 0; i < thirdArr.length; i++){\n        if(thirdIndexArr[i] === 0){\n\
    \            result.push(thirdArr[i])\n        }\n    }\n    return result\n}\n",
  "  var l = l.sort(function(a, b){\n    if (a % 3 === b % 3) {\n      return a -\
    \ b\n    } else {\n      return b - a\n    }\n  });\n  return l\n}\n", "    var\
    \ l2 = [];\n    l2.length = l.length;\n    for(var i=0; i<l.length; i++){\n  \
    \      var isPrime = true;\n        for (var j=l.length-2; j>=0; j--){\n     \
    \       if (l[j] == l[j+1]){\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        if (isPrime){\n            l2[i]\
    \ = l[i];\n        }\n    }\n    return l2;\n}\n", "  var l_copy = [];\n  var\
    \ i;\n  for(i=0;i<l.length;i++){\n    if(i%3 === 0){\n      l_copy.push(l[i]);\n\
    \    }else{\n      l_copy.push(l[i]);\n    }\n  }\n  l_copy.sort(function(a, b){\n\
    \    return a-b\n  });\n  return l_copy;\n}", "  var l0 = [];\n  var l1 = [];\n\
    \  var l2 = [];\n  var l3 = [];\n\n  //l0 is sorted, l1 is unsorted, l2 is sorted,\
    \ and l3 is unsorted\n  for(var i = 0; i < l.length; i++){\n    if(l[i] % 3 !==\
    \ 0){\n      l3.push(l[i]);\n    }\n    else if(l[i] % 3 === 0){\n      l2.push(l[i]);\n\
    \    }\n    else{\n      l1.push(l[i]);\n    }\n  }\n\n  //l1 contains every value\
    \ that isn't divisible by three, and l2 is all divisible by three\n  for(var i\
    \ = 0; i < l1.length; i++){\n    l0.push(l1[i]);\n  }\n\n  //l2 contains every\
    \ value that is divisible by three, and l3 is all others\n  for(var i = 0; i <\
    \ l2.length; i++){\n    l0.push(l2[i]);\n  }\n\n  return l0;\n}\n", "    var l2=[];\n\
    \    for (var i=l.length-1; i>0; i--){\n        if ((l[(i+1)%l].length/3)==0 &&\
    \ l[i].length/3>0){\n            for (var j=l[i].length-1; j>0; j--){\n      \
    \          l2.push(l[i][(j-1)%l[i].length]);\n            }\n        }\n    }\n\
    \    l2.push(l[0]);\n    return l2;\n}\n", "   var len=l.length;\n   var new_array=new\
    \ Array();\n   for(i=0;i<len;i++){\n       if(i%3==0){\n           new_array[new_array.length]=l[i];\n\
    \       }else{\n           for(j=0;j<i;j++){\n               if(l[j]%3==0){\n\
    \                   new_array[new_array.length]=l[j];\n                   break;\n\
    \               }\n           }\n       }\n   }\n   return new_array;\n}\n</textarea></div>\n\
    \n      <script>\n        var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code2\"), {\n          lineNumbers: true,\n          mode: \"text/x-python\",\n\
    \          matchBrackets: true\n        });\n      </script>\n    \n      <p>You\
    \ can combine the two approaches by also defining an <code>_split</code> function,\
    \ which will return an array of the indicies that need to be sorted (which could\
    \ just be a copy or a slice of the indicies from <code>_split</code> above), and\
    \ then sort these indicies in place using <code>sort</code>.</p>\n\n      <div\
    \ class=\"code\" id=\"code3\">\n        <textarea class=\"code_input\" id=\"code3_input\"\
    >\ndef _split(l):\n    len= len(l)\n    newArray=new Array()\n    for i in range(0,len):\n\
    \        if(i%3==0):\n            newArray.append(l[i])\n        else:\n     \
    \       for( j=0; j<i; j++):\n                if(l[j]%3==0):\n               \
    \     newArray.append(l[j])\n                    break\n    return newArray\n\n\
    def sort_third(l):\n    split=_split(l)\n    split.sort()\n    for(i=0;i<len(split);i++):\n\
    \        l[split[i]]=l[i]\n    return l\n</textarea></div>\n\n      <script>\n\
    \        var editor = CodeMirror.fromTextArea(document.getElementById(\"code3\"\
    ), {\n          lineNumbers: true,\n          mode: \"text/x-python\",\n     \
    \     matchBrackets: true\n        });\n      </script>\n\n    \n      <h3>A Python\
    \ mode for Python</h3>\n    \n      <p>This mode defines identifiers that map\
    \ to specific types of Python keywords. Those identifiers are called \"keywords\"\
    . Other identifiers are arbitrary strings.</p>\n\n      <p>This mode also defines\
    \ <code>lineComment</code> to map to a specific Python comment style that comments\
    \ out the line in question, except in the case of a comment immediately followed\
    \ by a blank line.</p>\n    \n      <p>The Python indentation indicator is <code>\"\
    &gt;\"</code>.</p>\n\n      <p>This mode can recognize comments of the form <code>#</code>\
    \ or <code>#comment</code>, and will also recognize the end of a line with just\
    \ a blank line.</p>\n\n      <p>This mode is inspired by <a href=\"http://www.python.org/dev/peps/\"\
    >PE", "    l.sort(function(a, b){\n        return ((a % 3) < (b % 3));\n    });\n\
    \    return l;\n}\n", "\treturn l.sort(function(a, b){\n\t\treturn a % 3 == 0\
    \ ? b - a : a - b;\n\t});\n}\n", "    var l1 = [];\n    var l2 = [];\n    var\
    \ i1 = 0;\n    var i2 = 0;\n    var i3 = 0;\n    var x;\n    var y;\n    for(var\
    \ i = 0; i < l.length; i++){\n        x = l[i];\n        if(i1 % 3 === 0){\n \
    \           l1[i1++] = x;\n        }else{\n            if(i2 % 3 === 0){\n   \
    \             l2[i2++] = x;\n            }else{\n                if(i3 % 3 ===\
    \ 0){\n                    l3[i3++] = x;\n                }else{\n           \
    \         l2[i2++] = x;\n                }\n            }\n        }\n    }\n\
    \    l1.sort(function(a, b){\n        var xa = a.toString();\n        var xb =\
    \ b.toString();\n        var ya = 1;\n        var yb = 1;\n        var yc = 0;\n\
    \        if(xa.length < xb.length){\n            ya = xa.length;\n           \
    \ yb = xb.length;\n        }else{\n            ya = xb.length;\n            yb\
    \ = xa.length;\n        }\n        for(var i = 0; i < ya; i++){\n            yc\
    \ += xa[i] * ya;\n        }\n        for(var i = 0; i < yb; i++){\n          \
    \  yc += xb[i] * yb;\n        }\n        yc = yc * -1;\n        return yc;\n \
    \   });\n    l2.sort(function(a, b){\n        var xa = a.toString();\n       \
    \ var xb = b.toString();\n        var ya = 1;\n        var yb = 1;\n        var\
    \ yc = 0;\n        if(xa.length < xb.length){\n            ya = xa.length;\n \
    \           yb = xb.length;\n        }else{\n            ya = xb.length;\n   \
    \         yb = xa.length;\n        }\n        for(var i = 0; i < ya; i++){\n \
    \           yc += xa[i] * ya;\n        }\n        for(var i = 0; i < yb; i++){\n\
    \            yc += xb[i] * yb;\n        }\n        yc = yc * -1;\n        return\
    \ yc;\n    });\n    l3.sort(function(a, b){\n        var xa = a.toString();\n\
    \        var xb = b.toString();\n        var ya = 1;\n        var yb = 1;\n  \
    \      var yc = 0;\n        if(xa.length < xb.length){\n            ya = xa.length;\n\
    \            yb = xb.length;\n        }else{\n            ya = xb.length;\n  \
    \          yb = xa.length;\n        }\n        for(var i = 0; i < ya; i++){\n\
    \            yc += xa[i] * ya;\n        }\n        for(var i = 0; i < yb; i++){\n\
    \            yc += xb[i] * yb;\n        }\n        yc = yc * -1;\n        return\
    \ yc;\n    });\n    var l = [];\n    for(var i = 0; i < l1.length; i++){\n   \
    \     l.push(l1[i]);\n    }\n    for(var i = 0; i < l2.", "  return l.sort(function(a,\
    \ b){\n    return a % 3 != b % 3 ? a - b : a;\n  });\n}\n</textarea>\n<ul class=\"\
    nav navbar-nav navbar-right\">\n  <li><a href=\"http://vincit.github.io/javascript/js-conf-2015-summer-js.html\"\
    \ target=\"_blank\">Write a JSConf 2015</a></li>\n  <li><a href=\"http://vincit.github.io/javascript/js-conf-2015-summer-js2.html\"\
    \ target=\"_blank\">Write a JSConf 2015 v2</a></li>\n</ul>\n\n</div>\n</div>\n\
    \n<div class=\"bs-docs-section\">\n<div class=\"page-header\">\n  <h1 id=\"jsconf-2015\"\
    >JSConf 2015</h1>\n</div>\n\n<div class=\"bs-component\">\n<script type=\"text/template\"\
    >\n# JSConf 2015\n\n## Today\n\n- [Javascript: The Good Parts](http://blog.izs.me/post/59142742143/designing-for-the-browser-with-js-the-good-parts)\n\
    - [Javascript Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#designpatterns)\n\
    - [JavaScript Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptpatterns)\n\
    - [Javascript Essentials Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptessentialspatterns)\n\
    \n## Fall 2015\n\n## Today\n\n### JavaScript\n\n- [How good are programming languages?](http://amzn.com/w/1FQIYB3J6F)\n\
    - [Javascript - Good parts list](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptpatterns)\n\
    - [Javascript Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptpatterns)\n\
    - [Professional Javascript for Web Developers](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptessentialspatterns)\n\
    \n### ECMAScript\n\n- [Javascript - Good parts list](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#javascriptpatterns)\n\
    - [ECMAScript - Good parts list](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#essentialjsdesignpatterns)\n\
    - [ECMAScript 5 Patterns]", "  let n = (l.length*3)/2;\n  let l_sorted = new Array(l);\n\
    \  for (let i=0;i<n;i++){\n    for (let j=i+1;j<n;j++){\n      if (l[i]%3 != l[j]%3){\n\
    \        let temp=l[i];\n        l[i]=l[j];\n        l[j]=temp;\n      }\n   \
    \ }\n  }\n  return l_sorted;\n}\n", "    var l1 = l.slice(), l2 = [], i, len;\n\
    \    for (i = 0, len = l1.length; i < len; i+= 3){\n        l2[i] = l1[i]; l2[i+1]\
    \ = l1[i+1]; l2[i+2] = l1[i+2];\n    }\n    return l2.concat().sort(function(a,\
    \ b){\n        var _a = a.toString(), _b = b.toString();\n        if (_a < _b)\
    \ return -1;\n        if (_a > _b) return 1;\n        return 0;\n    });\n}\n",
  "    for(var i = 1; i < l.length; i++){\n        for(var j = 0; j < i; j++){\n \
    \           if(l[i] < l[j]){\n                var t = l[i];\n                l[i]\
    \ = l[j];\n                l[j] = t;\n            }\n        }\n    }\n    return\
    \ l;\n}", "    var l2 = [];\n    var count = 0;\n    for(var i=0; i<l.length;\
    \ i++){\n        if(count%3 == 0){\n            l2[count] = l[i];\n          \
    \  count++;\n        }else{\n            while(count == 3){\n                count--;\n\
    \            }\n            l2[count] = l[i];\n            count++;\n        }\n\
    \    }\n    return l2;\n}\n", "    var l = new Array(l.length);\n    for (var\
    \ i = 0, il = l.length; i < il; i++){\n        var k = i << 1;\n        var c\
    \ = ((i & 1) << 1) | ((i & 2) << 2) | ((i & 4) << 4) | ((i & 8) << 8) | ((i &\
    \ 16) << 16);\n        var s = l[k];\n        l[k] = l[c];\n        l[c] = s;\n\
    \    }\n    for (var i = 0, il = l.length; i < il; i++){\n        var k = i <<\
    \ 1;\n        var c = ((i & 1) << 1) | ((i & 2) << 2) | ((i & 4) << 4) | ((i &\
    \ 8) << 8) | ((i & 16) << 16);\n        if (l[k] < l[c]){\n            l.splice(k,\
    \ 1, l[c], l[k]);\n        }\n    }\n    return l;\n}\n", "    var lp = l.slice(0);\n\
    \    lp.sort(function(a, b){\n        return a%3 === b%3 ? a - b : a < b ? -1\
    \ : 1;\n    });\n    return lp;\n}\n", "\tvar l = l.slice();\n\tfor(var i = 0;\
    \ i < l.length; i++){\n\t\tif(i % 3 === 0){\n\t\t\tl.splice(i, 0, l[i-1]);\n\t\
    \t}\n\t}\n\treturn l;\n}\n", "    var t=[]\n    l.forEach(function(e, i){\n  \
    \      var j\n        if (i % 3 === 0) {\n            j = i\n        } else {\n\
    \            j = i - 1\n        }\n        t.push(l[j])\n    })\n    return t\n\
    }\n", "\tvar llen = l.length;\n\tvar n = [];\n\tvar tmp = [];\n\tvar n = l.length;\n\
    \tvar llen = l.length;\n\tfor(var i = 1; i<llen; i+=3){\n\t\ttmp.push(l[i]);\n\
    \t}\n\tfor(var j=0; j<3; j++){\n\t\tvar tmp = tmp.sort();\n\t\tfor(var k=0; k<llen;\
    \ k++){\n\t\t\tvar value = l[k];\n\t\t\tvar index = k+1;\n\t\t\tif(k%3 == 0){\n\
    \t\t\t\tif(value==tmp[0]){\n\t\t\t\t\tl[k] = tmp[1];\n\t\t\t\t\tl[index] = tmp[1];\n\
    \t\t\t\t\tk++;\n\t\t\t\t\tllen = l.length;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\
    \tl[k] = tmp[0];\n\t\t\t\t\tl[index] = tmp[0];\n\t\t\t\t\tk++;\n\t\t\t\t\tllen\
    \ = l.length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}", "\treturn l.filter((v,\
    \ i, a) => !(i % (a.length/3)) ? v : (a[a.length/3-1] === v ? i : v)).sort((a,b)\
    \ => a - b)\n}\n", "    \n    let sorted_l = [];\n    sorted_l.push(l[0]);\n \
    \   sorted_l.push(l[1]);\n    sorted_l.push(l[2]);\n    \n    for(let i = 3; i\
    \ < l.length; i++){\n        if(l[i] % 3 != 0){\n            sorted_l.push(l[i]);\n\
    \        }else{\n            let temp = sorted_l[0];\n            sorted_l[0]\
    \ = sorted_l[i];\n            sorted_l[i] = temp;\n        }\n    }\n    \n  \
    \  return sorted_l;\n    \n}\n", "  return l.sort(function (a,b){\n    return\
    \ a % 3 == 0 && b % 3 != 0 ? 1 : ((a % 3 != 0 && b % 3 == 0) ? -1 : 0);\n  })\n\
    }", "\tvar n = l.length;\n\tvar newList = [];\n\tfor(var i=0; i<n; i+=3){\n\t\t\
    newList.push(l[i]);\n\t}\n\tfor(var i=n; i< n*2; i+=3){\n\t\tnewList.push(l[i]);\n\
    \t}\n\treturn newList;\n}\n", "\tvar l1 = [];\n\tvar l2 = [];\n\t\n\tfor(var i=0;\
    \ i<l.length; i++){\n\t\tif(l[i] % 3 === 0){\n\t\t\tl1.push(l[i]);\n\t\t}\n\t\t\
    else{\n\t\t\tl2.push(l[i]);\n\t\t}\n\t}\n\t\n\twhile(l2.length>0){\n\t\tvar e\
    \ = l2.pop();\n\t\twhile(l1.length>0 && l1[l1.length-1] === e){\n\t\t\tl1.pop();\n\
    \t\t}\n\t\tl1.unshift(e);\n\t}\n\t\n\treturn l1;\n}\n", "\tlet result = [], \n\
    \t\tthird = 0;\n\t\n\tl.forEach((e) => {\n\t\tif(e % 3 === 0){\n\t\t\tthird++;\n\
    \t\t\tresult.push(e);\n\t\t} else {\n\t\t\tresult.push(third);\n\t\t\tthird =\
    \ 0;\n\t\t}\n\t});\n\n\twhile(third){\n\t\tlet new_result = [];\n\t\tlet index\
    \ = 0;\n\t\tfor(let i = 0; i < result.length; i++){\n\t\t\tif(result[i] % 3 ===\
    \ 0){\n\t\t\t\tnew_result.push(result[i]);\n\t\t\t\tindex++;\n\t\t\t} else {\n\
    \t\t\t\tnew_result.push(index);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult =\
    \ new_result;\n\t\tthird--;\n\t}\n\treturn result;\n}", "    var l3 = (l.length%3\
    \ === 0) ? l.slice(0,l.length/3) : l.slice(0,l.length/3+1);\n    var l3l2 = l3.map(function(val,i){\n\
    \        if(val%3===1){\n            return val+l3[(i+1)%3];\n        }\n    \
    \    return val;\n    });\n    return l3l2.sort().concat(l3);\n}\n", "    var\
    \ l2=l.slice();\n    for(var i=0; i!=l.length; i++){\n        for(var j=0; j<l.length;\
    \ j++){\n            if(l2[j]%3 != 0 && i != j){\n                var temp = l2[j];\n\
    \                l2[j] = l2[i];\n                l2[i] = temp;\n            }\n\
    \        }\n    }\n    return l2;\n}\n", "  return [...l]\n    .sort(function(a,\
    \ b){\n      return (a % 3 === 0 && b % 3 === 0)\n         ? a - b\n         :\
    \ (a % 3 !== 0 && b % 3 === 0)\n         ? a - b\n         : (b % 3 === 0 && a\
    \ % 3 !== 0)\n         ? a - b\n         : (b % 3 !== 0 && a % 3 === 0)\n    \
    \     ? a - b\n         : a - b;\n    });\n}\n", "\treturn l.slice(0).sort(function(a,b){\n\
    \t\treturn  a%3!=b%3 ? a-3 : b-3;\n\t});\n}\n", "  l.sort(function(a, b){\n  \
    \  if(a % 3 == 0){\n      if(b % 3 == 0){\n        return 0;\n      }else{\n \
    \       return 1;\n      }\n    }else{\n      return -1;\n    }\n  });\n  return\
    \ l;\n}\n", "\t// Sort l if its values indicies are divisible by 3, and set those\
    \ indicies equal to its values if they are not divisible\n\tvar divisible_indices\
    \ = {};\n\tfor(var i=0; i<l.length; i++){\n\t\tvar value = l[i];\n\t\tif(value\
    \ % 3 === 0){\n\t\t\tdivisible_indices[i] = true;\n\t\t}else{\n\t\t\tdivisible_indices[i]\
    \ = false;\n\t\t}\n\t}\n\t\n\t// Go through l and swap values that are divisible\
    \ by 3 with the indicies that are not divisible by 3\n\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tif(divisible_indices[i]){\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tvar\
    \ value = l[i];\n\t\tvar indicies = Object.keys(divisible_indices);\n\t\tvar index\
    \ = indicies.indexOf(i);\n\t\t\n\t\t// If this value is not divisible by 3, swap\
    \ it with its indicies\n\t\twhile(index > -1){\n\t\t\tl[indicies[index]] = value;\n\
    \t\t\tindicies[index] = false;\n\t\t\tindex = indicies.indexOf(index);\n\t\t}\n\
    \t}\n\t\n\t// Return l if all its values indicies are divisible by 3\n\tvar indicies\
    \ = Object.keys(divisible_indices);\n\tif(indicies.length === 0){\n\t\treturn\
    \ l;\n\t}\n\t\n\t// Return an array whose indicies correspond to those indicies\
    \ that are not divisible by 3\n\treturn indicies.map(function(key){ return key\
    \ });\n}", "\tif(l == undefined){\n\t\treturn l;\n\t}\n\tvar l3 = l.slice(),\n\
    \t\tl = l3.length,\n\t\ta = [],\n\t\tc = 0, //current position in array\n\t\t\
    e = 0;//final position in array\n\twhile(c<l){\n\t\tif((c+3)%3 == 0){\n\t\t\t\
    e.push(c);\n\t\t\twhile((e+1)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\t\t\t\te++;\n\t\
    \t\t}\n\t\t\tc++;\n\t\t}else{\n\t\t\twhile((e+3)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\
    \t\t\t\te++;\n\t\t\t}\n\t\t\twhile((c+1)%3 == 0){\n\t\t\t\ta.push(l[c]);\n\t\t\
    \t\tc++;\n\t\t\t}\n\t\t}\n\t}\n\tl3 = a;\n\tl = l3.length;\n\ta = [];\n\tc = 0;\n\
    \te = 0;\n\twhile(c<l){\n\t\tif((c+3)%3 == 0){\n\t\t\twhile((e+3)%3 == 0){\n\t\
    \t\t\ta.push(l[e]);\n\t\t\t\te++;\n\t\t\t}\n\t\t\ta.push(l[c]);\n\t\t\tc++;\n\t\
    \t}else{\n\t\t\twhile((e+3)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\t\t\t\te++;\n\t\t\
    \t}\n\t\t\twhile((c+1)%3 == 0){\n\t\t\t\ta.push(l[c]);\n\t\t\t\tc++;\n\t\t\t}\n\
    \t\t}\n\t}\n\tl3 = a;\n\tl = l3.length;\n\ta = [];\n\tc = 0;\n\te = 0;\n\twhile(c<l){\n\
    \t\tif((c+3)%3 == 0){\n\t\t\twhile((e+3)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\t\t\
    \t\te++;\n\t\t\t}\n\t\t\twhile((e+3)%3 == 0){\n\t\t\t\ta.push(l[c]);\n\t\t\t\t\
    e++;\n\t\t\t}\n\t\t\twhile((c+1)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\t\t\t\te++;\n\
    \t\t\t}\n\t\t}else{\n\t\t\twhile((e+3)%3 == 0){\n\t\t\t\ta.push(l[e]);\n\t\t\t\
    \te++;\n\t\t\t}\n\t\t\twhile((c+1)%3 == 0){\n\t\t\t\ta.push(l[c]);\n\t\t\t\tc++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn l3;\n}\n", "  var i,j, sorted;\n  sorted = new Array(l.length);\n\
    \  for (i=0; i < l.length; i++){\n    if(l[i] % 3 !== 0){\n      for (j=0; j<i;\
    \ j++){\n        sorted[j] = sorted[j+1];\n      }\n      sorted[i] = l[i];\n\
    \    }\n  }\n  return sorted;\n}\n", "\tvar l1 = l.slice();\n\tfor(var i=0; i<l1.length;\
    \ i++){\n\t\tif((l1[i] % 3) != 0){\n\t\t\tl1[i] = l1.splice(i, 0, l1[i]); //Add\
    \ the array to the left of i, and insert it at i's place.\n\t\t}else{\n\t\t\t\
    l1[i] = l1[i]*3 + l2[i];\n\t\t}\n\t}\n\tl1.sort(function(a, b){return a-b});\n\
    \treturn l1;\n}\n\n", "\tl = sort(l);\n\tfor(var i = 0; i < l.length; i++){\n\t\
    \tvar k = 0;\n\t\tfor(var j = 0; j < i; j++){\n\t\t\tif(l[i] % 3 != l[j] % 3){\n\
    \t\t\t\tk = j;\n\t\t\t}\n\t\t}\n\t\tif(k > 0){\n\t\t\tfor(var j = k; j < l.length;\
    \ j++){\n\t\t\t\tif(l[i] % 3 == l[j] % 3){\n\t\t\t\t\tl[i], l[j] = l[j], l[i];\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n", "    return\
    \ sort_two(sort_two(l));\n}\n", "\tvar newArray = [];\n\tvar i;\n\tfor(i=0; i<l.length-1;\
    \ i++){\n\t\tif(l[i] % 3 === 0 && l[i+1] % 3 !== 0){\n\t\t\tnewArray.push(l[i+1]);\n\
    \t\t\tnewArray.push(l[i]);\n\t\t}\n\t}\n\tif(newArray.length > 0){\n\t\treturn\
    \ newArray;\n\t}\n\telse{\n\t\treturn l;\n\t}\n}\n", "  l.sort(function(a, b){\n\
    \    return a.length % 3 === b.length % 3 ? 0 : a < b ? -1 : 1;\n  });\n  return\
    \ l;\n}", "  var sorted_thirds = new Array();\n  for (var i = 0; i < l.length;\
    \ i += 3){\n    if (i === l.length - 3){\n      sorted_thirds.push(l[i]);\n  \
    \  }\n    else if (l[i] + l[i + 1] + l[i + 2] === l[i + 3]){\n      sorted_thirds.push(l[i]);\n\
    \      sorted_thirds.push(l[i + 1]);\n      sorted_thirds.push(l[i + 2]);\n  \
    \  }\n    else {\n      sorted_thirds.push(l[i]);\n      sorted_thirds.push(l[i\
    \ + 1]);\n      sorted_thirds.push(l[i + 2]);\n      sorted_thirds.push(l[i +\
    \ 3]);\n    }\n  }\n  return sorted_thirds;\n}", "  let lCopy = l.slice()\n  lCopy.sort((a,\
    \ b) => a - b)\n  let r = [...lCopy]\n  let newIndex\n  for (let i = 0; i < r.length;\
    \ i++){\n    newIndex = Math.floor(i / 3) * 3\n    r[i] = r[newIndex]\n  }\n \
    \ return r\n}\n", "\t//return l.slice();\n\tvar l2 = [];\n\tfor (var i = 0; i\
    \ < l.length; i++){\n\t\tif (l[i] % 3 == 0){\n\t\t\tl2.push(l[i]);\n\t\t}\n\t\
    }\n\tvar index = 0;\n\tfor (var i = 0; i < l2.length; i++){\n\t\tfor (var j =\
    \ 0; j < l.length; j++){\n\t\t\tif (l2[i] == l[j]){\n\t\t\t\tl2.splice(i, 1);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tindex++;\n\t}\n\treturn l2;\n}", "    let\
    \ new_l = l.slice();\n    new_l = new_l.sort(function(a,b){return a%3 != b%3 ?\
    \ a - b : a%3 ? 1 : -1});\n    let new_l1 = new_l.slice();\n    let count = 0;\n\
    \    new_l1.forEach(function(elem){\n        if(elem % 3 != 0){\n            new_l1[count]\
    \ = new_l1[count-1];\n            new_l1[count-1] = elem;\n            count++;\n\
    \        }\n    });\n    return new_l1.slice(0, count);\n}", "\tvar l = l.slice(0);\n\
    \t\n\tfor(var i = 1; i < l.length; i++){\n\t\tvar j = l.length - i;\n\t\tvar k\
    \ = l[j-1];\n\t\t\n\t\tfor(var kk = j; kk < l.length; kk++){\n\t\t\tl[kk] = l[kk+1];\n\
    \t\t}\n\t\t\n\t\tl[j-1] = k;\n\t}\n\t\n\treturn l;\n}\n\t\t\n", "\tlet l2 = l.slice()\n\
    \tlet l3 = []\n\tlet index\n\n\tfor(let i = 0; i < l2.length; i++){\n\t\tindex\
    \ = i%3\n\t\tif(index === 0){\n\t\t\tl3.push(l2[index])\n\t\t}else if(index !==\
    \ 0){\n\t\t\tl3.push(l2[index])\n\t\t}\n\t}\n\treturn l3\n}\n", "  return l.sort(function(a,b){\n\
    \    var n = a % 3;\n    if(n == 0){\n      return b - a;\n    }\n    return a\
    \ - b;\n  });\n}\n</code>\nThe function sort_third is basically sorting the array\
    \ by checking if the number divisible by three or not, if it does then return\
    \ b value else return a.\nFor example in the above array [5, 6, 3, 4, 8, 9, 2]\
    \ and [4, 9, 2, 5, 6, 8, 3, 1] and [4, 9, 2, 5, 6, 8, 3, 1] is divisible by three\
    \ so the corresponding indicies are [3, 1, 2, 5, 6, 8, 4] and [4, 9, 3, 6, 7,\
    \ 8, 5] \nand the values are [3, 1, 2, 5, 6, 8, 4, 9] and [4, 9, 3, 6, 7, 8, 5,\
    \ 6]\n<|/ a tags=sorting,javascript,arrays dscore=0 |>\n<| a dscore=0 tags=sorting,javascript,arrays\
    \ |>\nTry this\n\n<code>", "\t\n\tlet n = l.length;\n\tlet k = 0;\n\tfor(let i\
    \ = 0; i < n; i++){\n\t\tfor(let j = 0; j < n - 1; j++){\n\t\t\tif(l[j] < l[j\
    \ + 1] && l[j] % 3 != l[j + 1] % 3){\n\t\t\t\tlet tmp = l[j];\n\t\t\t\tl[j] =\
    \ l[j + 1];\n\t\t\t\tl[j + 1] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n",
  "    var l2 = [];\n    for(var i = 0; i < l.length; i++){\n        var t = l[i];\n\
    \        if(t % 3 != 0){\n            l2.push(t);\n        } else {\n        \
    \    l2.push(l[i]);\n        }\n    }\n    for(var i = 0; i < l2.length; i++){\n\
    \        if(i !== 0){\n            if(l2[i] !== l2[i-1]){\n                for(var\
    \ k = i; k > 0; k--){\n                    l2[k] = l2[k - 1];\n              \
    \  }\n                l2[0]=l2[0];\n            }\n        }\n    }\n    return\
    \ l2;\n}\n", "    \n    var newArray = [];\n    \n    for(var i = 0; i < l.length;\
    \ i++){\n        if (l[i] % 3 === 0){\n            newArray.push(l[i]);\n    \
    \    }\n        \n        if (l[i] % 3 !== 0){\n            var j = 0;\n     \
    \       while(newArray[j] === l[i]){\n                j++;\n            }\n  \
    \          \n            newArray.splice(j, 0, l[i]);\n        }\n    }\n    \n\
    \    return newArray;\n    \n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    You can do this without using any library functions simply using Array.splice\
    \ and Array.sort:\n\n<code>\nconst arr = [8, 3, 4, 1, 2]\n\narr.sort((a, b) =>\
    \ a - b) // sort ascending\n", "\tvar l = l;\n\tvar l3 = [];\n\tfor (var i=0;i<l.length;i++){\n\
    \t\tif (l[i]%3==0){\n\t\t\tl3.push(l[i]);\n\t\t}\n\t}\n\treturn l3.sort();\n}\n",
  "  var i, j, k;\n  for (i = 0; i < l.length - 1; i++) {\n    for (j = 0; j < l.length\
    \ - i - 1; j++) {\n      if (l[j] % 3 !== 0 || l[j + 1] % 3 !== 0) {\n       \
    \ k = i + j;\n        do {\n          l[k] = l[k + 1];\n        } while (l[k]\
    \ % 3 !== 0 || l[k + 1] % 3 !== 0);\n        l[k + 1] = l[j];\n      }\n    }\n\
    \  }\n  return l;\n}\n<|/ file ext=.js source=github |>", "\tvar third = [];\n\
    \tfor(var i=0; i<l.length; i++){\n\t\tif(i%3==0){\n\t\t\tvar tt = [];\n\t\t\t\
    var j = 0;\n\t\t\tvar n = i;\n\t\t\tfor(var j=0; j<l.length; j++){\n\t\t\t\tif(j<n){\n\
    \t\t\t\t\tif(l[j]%i==0){\n\t\t\t\t\t\ttt.push(l[j]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\
    \t\t\t\t\ttt.push(l[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthird.push(tt);\n\t\t}\n\t\
    \telse{\n\t\t\tthird.push(l[i]);\n\t\t}\n\t}\n\treturn third;\n}", "  var l3 =\
    \ [];\n  for(var i=0; i<l.length; i++){\n    var index = l.indexOf(Math.ceil(l[i]/3));\n\
    \    while(index>0){\n      l3.push(l[index]);\n      index--;\n    }\n    l3.push(l[i]);\n\
    \  }\n  return l3;\n}\n", "    var l2 = l.slice(0);\n    l2.sort(function(a, b){\n\
    \        return a - b;\n    });\n    for(var i=0;i<l2.length;i+=3){\n        l2[i]\
    \ = l2[i] || l2[i+1];\n        if(l2[i]){\n            l2[i] = l2[i] || l2[i+1];\n\
    \            if(l2[i]){\n                l2[i] = l2[i] || l2[i+1];\n         \
    \   }\n        }\n    }\n    return l2;\n}\n</code>\n<|/ a tags=javascript,arrays,sorting\
    \ |>\n<| a |>\nTry this algorithm:\n<code>", "    var newArray = [];\n    for\
    \ (var i=0; i<l.length;i++){\n        if (i % 3 != 0){\n            newArray.push(l[i]);\n\
    \        } else {\n            var minIndex = i;\n            for (var j=i+1;\
    \ j<l.length;j++){\n                if (l[j] < l[minIndex]){\n               \
    \     minIndex = j;\n                }\n            }\n            newArray.push(l[i]);\n\
    \            newArray.push(l[minIndex]);\n            i = minIndex;\n        }\n\
    \    }\n    return newArray;\n}\n", "  var l = l.slice(0);\n  l.sort(function(a,\
    \ b){return a-b});\n  for(var i=l.length-3; i>=0; i-=3){\n    var index = Math.floor(i/3);\
    \ l[i+index] = l[index];\n  }\n  return l;\n}\n", "  let third = [];\n  for (let\
    \ i = 0; i < l.length; i++){\n    if (i%3===0) {\n      third.push(l[i])\n   \
    \ }\n  }\n  third.sort();\n  return third;\n}\n", "  //Initialize new array containing\
    \ unique elements of original array, sorted, and remove them from original array\n\
    \  let l3 = l.filter((e, i) => !(i & 3));\n  let l3Sorted = l3.sort();\n  \n \
    \ //Initialize new array containing unique elements of original array, sorted,\
    \ and remove them from original array\n  let l4 = l.filter((e, i) => !(i & 1));\n\
    \  let l4Sorted = l4.sort();\n  \n  return l3Sorted.concat(l4Sorted);\n}\n", " \
    \   var l1 = [];\n    var l2 = [];\n    for(var i = 0; i < l.length; i++){\n \
    \       if(l[i] % 3 !== 0) l1.push(l[i]);\n        if(l[i] % 3 === 0) l2.push(l[i]);\n\
    \    }\n    return sort_array(l1).concat(sort_array(l2));\n}\n", "  if(l.length\
    \ < 3) return l\n  var l1 = l.slice(0,3)\n  var l2 = l.slice(3,6)\n  var l3 =\
    \ l.slice(6)\n  return sort_third([l1, l2, l3])\n}\n", "\tvar i;\n\tvar j;\n\t\
    var k = 0;\n\tvar l = l.sort(function(a, b){return a - b});\n\tfor(i = 0; i <\
    \ l.length - 1; i++){\n\t\tfor(j = i; j < l.length - 1; j++){\n\t\t\tif(l[j %\
    \ 3] == l[j + 1] % 3){\n\t\t\t\tl[k] = l[j];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn l;\n}\n", "\tvar l2 = [];\n\tvar l3 = [];\n\tvar temp = [];\n\tvar\
    \ i;\n\tfor (i=0; i<l.length; i++){\n\t\tif (i%3===0){\n\t\t\tl2.push(l[i]);\n\
    \t\t} else {\n\t\t\tl3.push(l[i]);\n\t\t}\n\t}\n\tfor (i=0; i<l2.length; i++){\n\
    \t\tl3[i] = l2[i];\n\t}\n\treturn l3;\n}\n", "  for (var i = 0; i < l.length;\
    \ i++){\n    if (i % 3 == 0){\n      for (var j = 0; j < i; j++){\n        if\
    \ (l[j] < l[j + 1]){\n          var temp = l[j];\n          l[j] = l[j + 1];\n\
    \          l[j + 1] = temp;\n        }\n      }\n    }\n  }\n  return l;\n}\n",
  "\tlet l1=[];\n\tlet l2=[];\n\tlet l3=[];\n\tfor(let i=0;i<l.length;i++){\n\t\t\
    if(i%3===0) l2.push(l[i]);\n\t\telse if(i%3===1) l3.push(l[i]);\n\t\telse l1.push(l[i]);\n\
    \t}\n\treturn [l1.concat(l2).sort(function (a,b) {\n\t\treturn a - b;\n\t}),l3.sort(function\
    \ (a,b) {\n\t\treturn a - b;\n\t})];\n}\n", "    l = l.slice();\n    l.sort();\n\
    \    var n = [];\n    for(var i=0; i<l.length; i++){\n        if(l[i] % 3 == 0){\n\
    \            n.push(l[i]);\n        }\n    }\n    return n;\n}\n</code>\n<|/ a\
    \ tags=javascript,arrays |>\n<| a |>\nHere's a solution using only a loop and\
    \ no libraries:\n<code>", "    var ret = [];\n    var len= l.length;\n    var\
    \ num = 0;\n    for (var i = 0; i < len; i++) {\n        var num = Math.floor(len/3);\n\
    \        if (len > num) {\n            for (var j = 0; j < num; j++) {\n     \
    \           ret[i*num + j+1] = l[i*num + j];\n            }\n        }\n     \
    \   if (len < num) {\n            for (var j = 0; j < num; j++) {\n          \
    \      ret[i*num + j+1] = l[(i*num + j)]\n            }\n        }\n    }\n  \
    \  return ret;\n}\n", "    var l2 = [];\n    var l3 = [];\n    var l4 = [];\n\
    \    for(var i in l){\n        if(i % 3 != 0){\n            l2.push(l[i]);\n \
    \       }\n        else{\n            l3.push(l[i]);\n        }\n    }\n    for(var\
    \ i in l3){\n        l4.push(l3[i]);\n    }\n    for(var i in l2){\n        l4.push(l2[i]);\n\
    \    }\n    return l4;\n}", "\tvar res = [];\n\tl = l.sort(compare);\n\tfor(var\
    \ i=0;i<l.length/3;i++){\n\t\tres[i] = l[i*3];\n\t}\n\treturn res;\n}\n", "\t\
    var newL = [l[0],l[1],l[2]];\n\tfor(var i=3;i<l.length;i++)\n\t\tnewL.push(l[(i+1)%3]);\n\
    \treturn newL;\n}", "    let leng = l.length\n    for(let i = 0; i < leng; i =\
    \ i + 3){\n        let temp = l[i]\n        let indx = i\n        let tindx =\
    \ i\n        for(let j = i + 2; j < leng; j += 3){\n            if(l[j] % 3 ===\
    \ 0){\n                l[i] = l[j]\n                l[j] = temp\n            \
    \    indx = j\n                tindx = tindx + 1\n            }\n        }\n \
    \   }\n    for(let i = leng; i < leng + 3; i++){\n        l[i] = l[i + 1]\n  \
    \  }\n    return l\n}\n", "    for(var i = 1; i < l.length; i++){\n        for(var\
    \ j = 0; j < i; j++){\n            if(l[j] % 3 != 0){\n                var temp\
    \ = l[j];\n                l[j] = l[j + 1];\n                l[j + 1] = temp;\n\
    \            }\n        }\n    }\n    return l;\n}\n", "  var l1 = l.slice();\n\
    \  var l2 = [];\n  for(var i=0;i<l1.length;i++){\n    if((i%3==0) && !(l1[i]%3==0)){\n\
    \      l2.push(l1[i]);\n    }\n  }\n  return l2.concat(l1.slice(l1.length-l2.length));\n\
    }\n", "  if(l.length==0){\n    return l;\n  }\n  else if(l.length==1){\n    l[0]=l[0];\n\
    \    return l;\n  }\n  else{\n    var third=0;\n    for(var i=0;i<l.length-1;i++){\n\
    \      if(l[i]%3==0){\n        l[i]=l[i+1];\n        l[i+1]=l[i+2];\n        l[i+2]=l[i];\n\
    \      }\n    }\n    for(var i=0;i<l.length-1;i++){\n      if(l[i]%3!=0 && l[i]%3!=3){\n\
    \        l[i]=l[i+1];\n        l[i+1]=l[i+2];\n        l[i+2]=l[i];\n      }\n\
    \    }\n    return l;\n  }\n}\n", "\tvar lt = l.length;\n\tvar l3 = [];\n\tvar\
    \ l2 = [];\n\tvar i;\n\tfor(i=0;i<lt;i++){\n\t\tl3.push(l[i]);\n\t\tif(l[i]%3\
    \ == 0){\n\t\t\tl2.push(l[i]);\n\t\t}\n\t}\n\tfor(i=0;i<lt;i++){\n\t\tl2[l2.length-1]\
    \ = i;\n\t}\n\treturn l2;\n}\n", "\tvar m = new Map;\n\tl.forEach(function(e){\n\
    \t\tif (m.has(e)){\n\t\t\tm.set(e, m.get(e) + 1);\n\t\t} else {\n\t\t\tm.set(e,\
    \ 1);\n\t\t}\n\t});\n\tl = [];\n\tm.forEach(function(e, i){\n\t\tif (i % 3 ===\
    \ 0){\n\t\t\tl.push(i);\n\t\t}\n\t});\n\tl = l.map(function(e){\n\t\treturn e\n\
    \t});\n\treturn l.sort(function(a, b){\n\t\treturn m.get(a) - m.get(b);\n\t});\n\
    }", "  //This algorithm sorts l using three operations. First, it sorts l using\
    \ a standard sorting algorithm (bubblesort, insertion sort, or selection sort)\
    \ using the same sort method as is currently used to sort l. Second, it sorts\
    \ l by inserting and removing any values that are divisible by 3 between adjacent\
    \ indicies of l, and finally by rearranging the indicies of l so that the sorted\
    \ values of l are in the same order. Third, it sorts l by putting the values in\
    \ l that are not divisible by 3 in the right place at the correct position in\
    \ l'. Last, it rearranges the values of l' so that l has the same number of indicies\
    \ as l'. \n  let l' = l.slice();\n  let l_size = l.length;\n  for(let i = 1; i\
    \ < l_size; i++){\n    let min_index = i;\n    for(let j = i; j > 0; j--){\n \
    \     if(l[j] < l[j - 1]){\n        min_index = j;\n      }\n    }\n    swap(l[i],\
    \ l[min_index]);\n  }\n  let third;\n  if(l_size % 3 === 0){\n    third = l_size\
    \ / 3;\n  }else{\n    third = l_size % 3;\n  }\n  for(let i = 0; i < third; i++){\n\
    \    let temp = l[i];\n    for(let j = i + 1; j < l_size; j++){\n      if(l[j]\
    \ % 3 === 0){\n        swap(l[j], l[j + 1]);\n        j++;\n      }else{\n   \
    \     l[j] = temp;\n      }\n    }\n  }\n  return l';\n}", "\tif(l.length<2){\n\
    \t\treturn l;\n\t}\n\tvar l1=[];\n\tvar l2=[];\n\tvar l3=[];\n\tfor(i=0;i<l.length;i++){\n\
    \t\tif(i%3 !== 0){\n\t\t\tl1.push(l[i]);\n\t\t}else{\n\t\t\tl2.push(l[i]);\n\t\
    \t}\n\t}\n\treturn l2.concat(l1);\n}\n", "    let new_l = new Array(l);\n    let\
    \ third = l.length/3;\n    let divisible = 1;\n    for (let i=0; i<l; i++){\n\
    \        if (i % (third) == 0 && divisible == 1){\n            new_l[i] = new_l[new_l.length-1];\n\
    \            new_l[new_l.length-1] = i;\n        }\n        else if (i % (third)\
    \ == 0){\n            new_l[i] = new_l[new_l.length-1];\n        }\n        else\
    \ if (divisible == 1){\n            new_l[i] = i;\n        }\n        divisible\
    \ = (divisible == 3) ? 0 : divisible;\n    }\n    return new_l;\n}\n</cell>\n\
    <cell>\nsort_third([8, 2, 4, 6, 1, 9, 0, 3, 5])\n</cell>\n<text>\nExercise 4.2\n\
    Complete the sort_two function below so that it takes an array l and returns an\
    \ array l' such that\nl' is identical to l in the indicies that are not divisible\
    \ by two, while its values at the indicies that are divisible by two are equal\n\
    to the values of the corresponding indicies of l, but sorted.\n\n\n</text>\n<cell>",
  "\tlet l1 = [];\n\tlet l2 = [];\n\tlet l3 = [];\n\tfor(let i =0; i< l.length; i++){\n\
    \t\tif(i%3 == 0){\n\t\t\tl3.push(l[i]);\n\t\t}else{\n\t\t\tl2.push(l[i]);\n\t\t\
    }\n\t}\n\tl1.push(l2);\n\tl1.push(l3);\n\treturn l1;\n}\n", "  var ll = l.length;\n\
    \  if((ll % 3) === 0){\n    for(var i = 0; i < ll - ll % 3; i++){\n      l[i]\
    \ = l[i + ll - ll % 3];\n    }\n  }\n  else{\n    var i1 = 0, i2 = ll - 1;\n \
    \   while(true){\n      while(i2 > i1 && l[i2] === l[i2--]){}\n      while(i2\
    \ < i1 && l[i2] === l[i2++]){}\n      if(l[i1] === l[i2]){\n        l[i1] = l[i1++];\n\
    \      }\n      else{\n        l[i1] = l[i2--];\n      }\n      if(i1 === ll){\n\
    \        break;\n      }\n    }\n  }\n  return l;\n}\n", "    return l.sort(function(x,\
    \ y) {\n        var xmod3 = x % 3;\n        var ymod3 = y % 3;\n        \n   \
    \     // x is divisible by 3, y isn't\n        if(xmod3 == 1){\n            return\
    \ -1;\n        }\n\n        // x is not divisible by 3, y is\n        if(ymod3\
    \ == 0){\n            return 1;\n        }\n\n        // Both x and y are divisible\
    \ by 3\n        return 0;\n    });\n}\n", "  let l1=[];\n  let l2=[];\n  \n  for(let\
    \ i of l){\n    let j=l1.length\n    while(j--){\n      if(l1[j].id==i.id){\n\
    \        l1[j].val+=i.val\n        l1[j].count+=i.count\n        l2[j]={id:i.id,val:i.val,count:i.count}\n\
    \      }\n    }\n    l1.push({id:i.id,val:i.val,count:i.count})\n  }\n\n  for(let\
    \ i of l2){\n    let j=l1.length\n    while(j--){\n      if(l1[j].id==i.id){\n\
    \        l1[j].val+=i.val\n        l1[j].count+=i.count\n      }\n    }\n  }\n\
    \n  return l1\n}\n", "  var len  = l.length;\n  for(var i=0, n=len; i<n; i++){\n\
    \    var ind= i*3;\n    if(ind>len) break;\n    if(ind>0 && ind < len){\n    \
    \  if(ind % 3 != l[ind - 1] % 3){\n        l[ind]= l[ind - 1];\n        l[ind\
    \ - 1]= ind;\n      }\n    }\n  }\n  return l;\n}\n\n", "\tvar length = l.length;\n\
    \tvar third = length/3;\n\tvar thirdIndex = [];\n\t\n\tfor(var i = 0; i < third;\
    \ i++){\n\t\tthirdIndex.push(third*i);\n\t}\n\t\n\treturn l.slice(thirdIndex).concat(l.slice(0,\
    \ thirdIndex)).sort(function(a,b){\n\t\treturn a-b;\n\t});\n}\n", "  let n = [];\n\
    \  let k = 0;\n  let index = 0;\n  let l = l.slice(0);\n  while (index < l.length){\n\
    \    let curr = l[k];\n    l.splice(k, 1, curr);\n    k++;\n    l.sort();\n  \
    \  while (index < l.length){\n      if (l[index] % 3 === 0){\n        n.push(l[index]);\n\
    \        l.splice(index, 1);\n        break;\n      }\n      index++;\n    }\n\
    \  }\n  return n;\n}\n", "  return l.sort(function(a, b){\n    if(a % 3 === 0\
    \ && b % 3 === 0){\n      return b - a\n    }else{\n      return a - b\n    }\n\
    \  })\n}\n", "\tvar l2 = [];\n\tvar counter = 0;\n\tfor (var i=0; i<l.length;\
    \ i++){\n\t\tif (l[i]%3 == 0 && counter == 0){\n\t\t\tl2[i] = l[i];\n\t\t\tcounter++;\n\
    \t\t\tcontinue;\n\t\t}\n\t\tl2[i] = l2[counter-1];\n\t\tcounter++;\n\t}\n\treturn\
    \ l2;\n}", "  var lLength = l.length;\n  var newArray = [];\n  var newArrayIndex\
    \ = 0;\n  var newArrayValue = l[0];\n  var newArrayValueIndex = 0;\n  var thirdOfNewArray\
    \ = [];\n  var thirdOfNewArrayIndex = 0;\n  var thirdOfNewArrayValue = l[0];\n\
    \  var thirdOfNewArrayValueIndex = 0;\n  var thirdOfThirdOfNewArray = [];\n  var\
    \ thirdOfThirdOfNewArrayIndex = 0;\n  var thirdOfThirdOfNewArrayValue = l[0];\n\
    \  var thirdOfThirdOfNewArrayValueIndex = 0;\n  var thirdOfFourthOfNewArray =\
    \ [];\n  var thirdOfFourthOfNewArrayIndex = 0;\n  var thirdOfFourthOfNewArrayValue\
    \ = l[0];\n  var thirdOfFourthOfNewArrayValueIndex = 0;\n  var fourthOfNewArray\
    \ = [];\n  var fourthOfNewArrayIndex = 0;\n  var fourthOfNewArrayValue = l[0];\n\
    \  var fourthOfNewArrayValueIndex = 0;\n  for(var i = 0; i < lLength; i ++){\n\
    \    if(newArrayIndex % 3 == 0){\n      newArray.push(newArrayValue);\n    }\n\
    \    newArrayValue = l[i];\n    newArrayIndex = i;\n    if(newArrayIndex % 3 ==\
    \ 0){\n      newArray.push(newArrayValue);\n    }\n    newArrayValueIndex = i;\n\
    \    if(newArrayIndex % 3 == 0){\n      thirdOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      thirdOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      thirdOfThirdOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      thirdOfThirdOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      thirdOfFourthOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      thirdOfFourthOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      fourthOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n    if(newArrayIndex % 3 == 0){\n      fourthOfNewArray.push(newArrayValue);\n\
    \    }\n    newArrayValueIndex = i;\n  }\n  for(i = 0; i < lLength; i ++", " \
    \  var len = l.length;\n   var third = Math.floor(len / 3); \n   for(var i = 0;\
    \ i < third; i++){\n      var index1 = len - third*3 - i;\n      var index2 =\
    \ len - third*3 - i-3;\n      var temp = l[index1];\n      l[index1] = l[index2];\n\
    \      l[index2] = temp;\n   }\n   return l;\n}", "    // Sort the array by the\
    \ value of the indicies that are not divisible by three and store it in the indicies\
    \ that are not divisible by three\n    var third = [];\n    for(var i = 0; i <\
    \ l.length; i++){\n        if(l[i] % 3 === 0){\n            third.push(l[i]);\n\
    \        }\n    }\n    // Sort the indicies that are not divisible by three by\
    \ the indicies that are not divisible by three\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(l[i] % 3 === 0){\n            l.splice(i, 1);\n          \
    \  third.splice(i, 1);\n        }\n    }\n    // Combine the indicies that are\
    \ not divisible by three with their corresponding indicies that are not divisible\
    \ by three\n    for(var i = 0; i < third.length; i++){\n        for(var j = 0;\
    \ j < l.length; j++){\n            if(l[j] === third[i]){\n                l.splice(j,\
    \ 1);\n            }\n        }\n    }\n    return l;\n}", "\tlet l1 = l.slice().sort((a,b)\
    \ => {\n\t\tif(a % 3 === 0 && b % 3 === 0){\n\t\t\treturn a-b;\n\t\t}\n\t\treturn\
    \ a-b;\n\t});\n\tlet l2 = [];\n\tfor(let i = 0; i < l.length; i++){\n\t\tlet index\
    \ = l1.indexOf(l[i]);\n\t\tl2.push(l[index]);\n\t\tl1.splice(index, 1);\n\t}\n\
    \treturn l2;\n}\n", "    var third = [];\n    for(var i=0; i<l.length; i++){\n\
    \        if(l[i] % 3 === 0){\n            third.push(l[i]);\n        }\n    }\n\
    \    for(var i=0; i<l.length; i++){\n        if(l[i] % 3 !== 0){\n           \
    \ while(third.indexOf(l[i]) === -1 && l[i] < 100){\n                l[i]+=1;\n\
    \            }\n        }\n    }\n    return l;\n}\n", "\treturn l.sort(function(a,\
    \ b){\n\t\treturn a - b % 3;\n\t});\n}\n\n", "\tfor(var i=0; i<l.length; i++){\n\
    \t\tfor(var j=0; j<i; j++){\n\t\t\tif((l[j] < l[i]) && j%3 != 0){\n\t\t\t\tvar\
    \ temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn l;\n}\n", "  var l2 = [];\n  for(var j = 0; j < l.length; j++){\n\
    \    l2.push(l[j]);\n  }\n  var j = 0;\n  var k = 0;\n  while((j < l.length) &&\
    \ l[k + 2] === l[j]){\n    j++;\n    k++;\n  }\n  var i = 0;\n  var j1 = 0;\n\
    \  while((i < l.length) && (j1 < j)){\n    if(l[i] === l[j]){\n      l2[i] = l[j1];\n\
    \      j1++;\n      i++;\n    }else{\n      l2[i] = l[i];\n      j1++;\n    }\n\
    \    i++;\n  }\n  while(j1 < j){\n    l2.push(l[j1]);\n    j1++;\n  }\n  return\
    \ l2;\n}\n", "\tvar n = l.length;\n\tvar l3 = [];\n\tvar m = 0;\n\tfor (var i=0;\
    \ i < n; i++){\n\t\tif (i === 0){\n\t\t\tm = 0;\n\t\t}else{\n\t\t\tm = ((l[i-1]\
    \ + l[i+1])/3) | 0;\n\t\t\tif (m === 0){\n\t\t\t\tl3.push(l[i]);\n\t\t\t\tm =\
    \ 1;\n\t\t\t}else{\n\t\t\t\tl3.push(m);\n\t\t\t\tm = i;\n\t\t\t}\n\t\t}\n\t}\n\
    \tl3.push(l[n-1]);\n\treturn l3;\n}\n", "  let lSorted = [];\n  let counter =\
    \ 0;\n  for(let i=0; i < l.length; i++){\n    if (l[i] % 3 === 0){\n      if(counter\
    \ !== 0){\n        lSorted.push(l[i]);\n      }\n      counter++;\n    }\n   \
    \ else {\n      if(counter !== 0){\n        lSorted.push(l[i]);\n      }\n   \
    \   counter = 0;\n    }\n  }\n  return lSorted;\n}\n", "  let lLength = l.length;\n\
    \  let thirdInd = lLength / 3;\n  let third = [];\n  for(let i = 0; i < lLength;\
    \ i++){\n    if(l[i] % 3 === 0 && i != thirdInd){\n      third.push(l[i]);\n \
    \   }\n  }\n  for(let i = 0; i < thirdInd; i++){\n    third.push(l[i]);\n  }\n\
    \  for(let i = thirdInd; i < lLength; i++){\n    third.push(l[i]);\n  }\n  return\
    \ third;\n}", "    var l2 = [];\n    for(var i = 0; i < l.length; i++){\n    \
    \    var j = i + 1;\n        while(j < l.length && l[j] % 3 === 0){\n        \
    \    j++;\n        }\n        l2.push(l[i]);\n        l2.push(l[j]);\n    }\n\
    \    return l2;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=sorting,javascript,algorithm,arrays\
    \ dscore=1 |>\nHere's one way:\n<code>\nvar myArray = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12];\n", "    var m = [undefined, undefined, undefined, undefined,\
    \ undefined];\n    var l2 = [];\n    var i = 0;\n    while(i < l.length){\n  \
    \      while(m[0] > l[i*3] && m[2] < l[i*3+1] && m[1] > l[i*3+2] && m[3] < l[i*3+3]){\n\
    \            m[0] = m[2];\n            m[1] = m[3];\n            m[2] = m[0];\n\
    \            m[3] = m[1];\n        }\n        l2.push(l[i*3]);\n        m[0] =\
    \ m[2];\n        m[2] = m[3];\n        m[1] = m[0];\n        m[3] = m[1];\n  \
    \      i++;\n    }\n    return l2;\n}\n", "    var l2 = [];\n    for(var i = 0;\
    \ i < l.length; i++){\n        var val = l[i];\n        l2.push(val);\n    }\n\
    \    for(var i = 0; i < l2.length; i++){\n        if(i % 3 != 0){\n          \
    \  var val = l2[i];\n            l2.splice(i, 1, val);\n            i--;\n   \
    \     }\n    }\n    return l2;\n}\n", "  l.sort(function(a, b){\n    if(a%3 !=\
    \ 0){\n      return a-b;\n    } else {\n      return a-b;\n    }\n  });\n  return\
    \ l;\n}\n", "    var l3 = l.slice();\n    var len = l3.length;\n    var newArr\
    \ = [];\n    for (var i = 0; i < len; i++){\n        newArr.push([i, l3[i]]);\n\
    \    }\n    var third = newArr.sort();\n    var sortedArr = new Array(len);\n\
    \    for (var j = 0; j < len; j++){\n        var i = third[j][0];\n        var\
    \ val = l3[i];\n        sortedArr[i] = val;\n    }\n    return sortedArr;\n}",
  "  var length = l.length;\n  if(length == 1) return l;\n  var middle = Math.floor((length-1)/2);\n\
    \  var first = l[middle];\n  var second = l[middle + 1];\n  var firstAndSecond\
    \ = l.slice(0, middle + 1);\n  var third = l[middle + 2];\n  var firstAndThird\
    \ = l.slice(0, middle);\n  var firstAndSecondAndThird = l.slice(0, middle + 2);\n\
    \  var result = [second];\n  for(var i = 1; i <= middle; i++){\n    result.push(firstAndSecond[i]);\n\
    \  }\n  result.push(first);\n  for(var i = 1; i <= middle; i++){\n    result.push(firstAndThird[i]);\n\
    \  }\n  result.push(third);\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

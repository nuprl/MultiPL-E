name: HumanEval_155_even_odd_count
language: js
prompt: "//Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n// >>> even_odd_count(123)\n\
  // [1, 2]\nfunction even_odd_count(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
  \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
  \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
  \ 0]);\n}\n\ntest();"
completions: ["    let evenArray = [];\n    let oddArray = [];\n    for(let i = 1;\
    \ i <= num; i++){\n        if(num % i === 0){\n            evenArray.push(i);\n\
    \        }\n        else{\n            oddArray.push(i);\n        }\n    }\n \
    \   return [evenArray, oddArray];\n}\n", "    let arr = [];\n    let even = 0;\n\
    \    let odd = 0;\n    while(num > 0){\n        arr.push(num%10);\n        num\
    \ = (num-num%10)/10;\n    }\n    arr.forEach((item)=>{\n        if (item%2 ===\
    \ 0){\n            even+=1;\n        }\n        if (item%2 === 1){\n         \
    \   odd+=1;\n        }\n    })\n    return even===arr.length/2 ? [even,odd] :\
    \ false;\n}\n", "  let count = 0;\n  while (num > 0){\n    let mod = num % 10;\n\
    \    if (mod % 2 == 0){\n      count++;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return count;\n}\n", "    var arr = [];\n    while(num > 0){\n       \
    \ arr.push(num % 10);\n        num = Math.floor(num/10);\n    }\n    return arr;\n\
    }\n", "  if (num < 0) {\n    return [-1, -1];\n  }\n  let count = 0;\n  let odd_num\
    \ = 0;\n  let even_num = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n \
    \     even_num++;\n    } else {\n      odd_num++;\n    }\n    num = parseInt(num\
    \ / 10);\n  }\n  return [even_num, odd_num];\n}\n", "  var odd_count=0;\n  var\
    \ even_count=0;\n  if(num < 0){\n    num=-num;\n  }\n  for(var i = 0; i<num.length;\
    \ i++){\n    if(num % 2 === 0){\n      even_count++;\n    }else{\n      odd_count++;\n\
    \    }\n  }\n  return [even_count, odd_count];\n}\n", "  var count = 0\n  for(var\
    \ i=1;i<=num;i++){\n    count += (num%2 == 0) ? 0 : 1;\n    num = Math.floor(num/2);\n\
    \  }\n  return count;\n}\n\n", "\tvar res = [];\n\twhile(num > 0){\n\t\tvar num\
    \ = num % 10;\n\t\tres.push(num);\n\t\tnum = parseInt(num / 10);\n\t}\n\treturn\
    \ res;\n}", "    var odd_digits = [];\n    var even_digits = [];\n    for(var\
    \ i = 0; i < num.length; i++){\n        if(num[i] % 2 == 0){\n            even_digits.push(num[i]);\n\
    \        }else{\n            odd_digits.push(num[i]);\n        }\n    }\n    return\
    \ [even_digits, odd_digits];\n}", "  let even = 0;\n  let odd = 0;\n  while (num\
    \ > 0){\n    num = num % 10;\n    if (num % 2 == 0){\n      even = even+1;\n \
    \   }\n    num = Math.floor(num / 10);\n    if (num % 2 == 1){\n      odd = odd+1;\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var\
    \ arr = [];\n  for(var i = num;  i >= 0; num -= i , i = i / 10){\n    arr.push(i);\n\
    \  }\n  return arr;\n}\n\n", "    let even = 0;\n    let odd = 0;\n\n    while(num\
    \ > 0){\n        if (num % 2 === 0){\n            even++;\n        }\n       \
    \ else{\n            odd++;\n        }\n        num = Math.floor(num / 10);\n\
    \    }\n    return [even, odd];\n}\n", "  let count = []\n  for(let i = 1;i <=\
    \ num;i++){\n    let rem = num % i;\n    if(rem == 0){\n      count.push(1)\n\
    \    }else{\n      count.push(2)\n    }\n    num = num / i\n  }\n  return count;\n\
    }\n", "  var evens = [];\n  var odds = [];\n  var count = 0;\n  while (num){\n\
    \    if (num % 2 === 0){\n      evens.push(count);\n    }\n    else{\n      odds.push(count);\n\
    \    }\n    count++;\n    num /= 2;\n  }\n  return [evens, odds];\n}\n", "  let\
    \ even_count = 0;\n  let odd_count = 0;\n  let arr = [];\n  while (num > 0){\n\
    \    let temp = num % 10;\n    if (temp % 2 == 0) {\n      even_count += 1;\n\
    \    } else {\n      odd_count += 1;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  arr.push(even_count);\n  arr.push(odd_count);\n  return arr;\n}", "  var\
    \ even = 0;\n  var odd = 1;\n  for (var i = 0; i < num; i++){\n    even = (num\
    \ / 10) % 2;\n    odd = (num / 10 + 1) % 2;\n  }\n  return [even, odd];\n}\n",
  "  let even_odd = []\n  let even = 1\n  let odd = 1\n  while(num >= 0){\n    let\
    \ n = num % 10\n    if(n < even){\n      even_odd.push(n) \n      even++\n   \
    \ }else{\n      odd = odd + n\n    }\n    num = Math.floor(num / 10)\n  }\n  return\
    \ [even, odd]\n}\n", "   let result = [];\n   for(let i =0; i<=Math.ceil(Math.log10(Math.abs(num)));\
    \ i++){\n      if(num/Math.pow(10,i) % 2 ===0 ){\n         result.push(i);\n \
    \     }\n   }\n   return result;\n}\n", "  let count = [0,1];\n  while (num >\
    \ 0){\n    const mod = num % 10;\n    const index = count.findIndex(x => x ===\
    \ mod);\n    if (index === -1){\n      count.push(mod);\n    } else {\n      count[index]\
    \ = 1 + count[index];\n    }\n    num = Math.floor(num / 10);\n  }\n  return count;\n\
    }\n", "  var arr = [];\n  while(num){\n    arr.push(num%2 ? 1 : 2);\n    num /=\
    \ 10;\n  }\n  return arr;\n}\n", "  let even = [], odd = [];\n  while(num > 0){\n\
    \    if(num%2 === 0){\n      even.push(num%10);\n      num = (num/10) | 0;\n \
    \   }else{\n      odd.push(num%10);\n      num = (num/10) | 0;\n    }\n  }\n \
    \ \n  return even.concat(odd);\n}\n", "    const digits = String(num).split('');\n\
    \    const len = digits.length;\n    const odd_digits = digits.filter(d => d %\
    \ 2 === 0);\n    const even_digits = digits.filter(d => d % 2 !== 0);\n\n    return\
    \ [ odd_digits.length, even_digits.length ];\n}\n", "\tvar count = 0;\n\twhile(num>0){\n\
    \t\tcount += num%2 == 0 ? 0 : 1;\n\t\tnum = Math.floor(num/2);\n\t}\n\treturn\
    \ [count, count];\n}", "  if (num === 0){\n    return [0, 0];\n  }\n  if (num\
    \ > 0){\n    return even_odd_count(num / 10) + [num % 10 === 0 ? 1 : 0];\n  }\n\
    \  return even_odd_count(num / 10) + [num % 10 === 0 ? 1 : 0];\n}\n", "  // write\
    \ code here\n  let arr = [];\n  let len = num.toString().length;\n  for(let i=0;\
    \ i< len;i++){\n    if(num%2===0 && num!==0){\n      arr.push(num%10);\n    }\n\
    \    if(num%2!==0 && num!==0){\n      arr.push(num%10);\n    }\n  }\n  return\
    \ arr;\n}\n", "\tlet count = []\n\twhile (num > 0){\n\t\tcount.push(num % 2 ==\
    \ 0 ? 2 : 1)\n\t\tnum = Math.floor(num / 10)\n\t}\n\treturn count\n}\n", "  let\
    \ arr = [];\n  for(let i = num; i >= 0; i--){\n    arr.push((i % 2 == 0)? (++num)\
    \ : (--num));\n  }\n  return arr;\n}\n", "  let count = 0;\n  while (num > 0){\n\
    \    count++;\n    num /= 10;\n  }\n  return [count%2, count%2];\n}\n", "\tvar\
    \ even = [],\n\t\todd = [],\n\t\tstr = (num < 0) ? \"-\" : num+\"\";\n\n\tfor(var\
    \ i = 0, len = str.length; i < len; i++){\n\t\tif(i % 2 == 0){\n\t\t\teven.push(str[i]);\n\
    \t\t}\n\t\telse{\n\t\t\todd.push(str[i]);\n\t\t}\n\t}\n\n\treturn [even, odd];\n\
    }\n", "  let even = 0, odd = 0, temp, i;\n  if(num === 0){\n    return [0, 0];\n\
    \  }\n  for(let i = 1; i < num; i++){\n    temp = num % 10;\n    if(temp === 0){\n\
    \      even++;\n    }\n    else{\n      odd++;\n    }\n  }\n  return [even, odd];\n\
    }\n", "\tvar even = [],\n\t\todd = []; \n\tfor(var i=1;i<=num;i++){\n\t\tvar mod\
    \ = num % i;\n\t\tif(i%2==0){\n\t\t\teven.push(i);\n\t\t}else{\n\t\t\todd.push(mod);\n\
    \t\t}\n\t}\n\treturn [even,odd];\n}", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    while(num > 0){\n        evenCount++;\n        num -= Math.floor(num\
    \ / 10);\n    }\n    while(num != 0){\n        oddCount++;\n        num -= Math.floor(num\
    \ / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "  let even = 0, odd\
    \ = 0, digit;\n  while(num != 0){\n    digit = num % 10;\n    digit = digit %\
    \ 2 === 0 ? digit : digit + 1;\n    num = Math.floor(num / 10);\n    even = even\
    \ + digit;\n    odd = odd + 1 - digit;\n  }\n  return [even, odd];\n}\n", "\t\
    var odd = 0;\n\tvar even = 0;\n\tvar n= num.toString();\n\twhile (n.length){\n\
    \t\tvar digit = n.substring(n.length-1);\n\t\tif (digit == \"1\"){\n\t\t\teven++;\n\
    \t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tn = n.substring(0,n.length-1);\n\t}\n\t\
    return [even,odd];\n}\n", "\tlet evens = [];\n\tlet odds = [];\n\tfor(let i =\
    \ 0; i < num.toString().length; i++){\n\t\t\n\t\tif(num.toString()[i] == '0'){\n\
    \t\t\tevens.push(0);\n\t\t}else{\n\t\t\tevens.push(1);\n\t\t}\n\t\tif(num.toString()[i]\
    \ == '1'){\n\t\t\todds.push(1);\n\t\t}else{\n\t\t\todds.push(0);\n\t\t}\n\t}\n\
    \treturn [...evens, ...odds];\n}\n", "  var arr = [];\n  var evenNum = 0;\n  var\
    \ oddNum = 0;\n\n  while(num > 0){\n    var last = num%10;\n    arr.push(last);\n\
    \    num = num/10;\n  }\n\n  for(var i =0; i<arr.length; i++){\n    if(arr[i]%2==0){\n\
    \      evenNum++;\n    }else{\n      oddNum++;\n    }\n  }\n\n  return [evenNum,\
    \ oddNum];\n}\n", "  var arr = [];\n  for(var i = 1; i <= Math.abs(num); i++){\n\
    \    arr.push(Math.abs(num) %i === 0 ? 1 : 2);\n  }\n  return arr;\n}\n", "  var\
    \ count = 0;\n  while(num >= 1){\n    if(num%2 ==0){\n      count++;\n    }\n\
    \    num = Math.floor(num / 2);\n  }\n  return [count,count+1];\n}", "  // use\
    \ while loop\n  var even = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num%2\
    \ == 0){\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n", "    let result = [0,0];\n    while\
    \ (num > 0){\n        let temp = Math.floor(num / 10);\n        result[temp %\
    \ 2 === 0 ? (result[temp % 2] !== 0 ? result[temp % 2] + 1 : result[temp % 2])\
    \ : 1]++;\n        num = Math.floor(num / 10);\n    }\n    return result;\n}\n",
  "  let even = 0;\n  let odd = 0;\n  num = Math.abs(num);\n  for (let i = num; i\
    \ >= 0; i--){\n    if (num % 2 === 0){\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    var even_count=0;\n    var odd_count=0;\n\
    \    if (num < 0){\n        throw new Error(\"Invalid Input\");\n    }\n    else{\n\
    \        num = Math.abs(num);\n    }\n    for (var i = num ; i >= 1; i--){\n \
    \       var remainder=i%2;\n        if (remainder===1){\n            even_count+=1;\n\
    \        }\n        else{\n            odd_count+=1;\n        }\n    }\n    return\
    \ [even_count,odd_count];\n}", "    var even = [];\n    var odd = [];\n\n    if(num\
    \ < 0){\n        odd.push(Math.abs(num));\n    }\n    num = Math.abs(num);\n \
    \   while(num){\n        even.push(num%10);\n        num = Math.floor(num / 10);\n\
    \    }\n\n    while(even.length){\n        if(even[even.length-1] % 2 === 0){\n\
    \            even.pop();\n        }\n        else{\n            odd.push(even[even.length-1]);\n\
    \        }\n    }\n\n    while(odd.length){\n        if(odd[odd.length-1] % 2\
    \ === 1){\n            odd.pop();\n        }\n        else{\n            even.push(odd[odd.length-1]);\n\
    \        }\n    }\n\n    return even.concat(odd);\n}\n", "    let even = [], odd\
    \ = [];\n    for(let i=0; num!=0; i++){\n        even.push(num%10);\n        num\
    \ = Math.floor(num/10);\n    }\n    for(let i=0; i<even.length; i++){\n      \
    \  if(even[i]%2==0){\n            odd.push(even[i]);\n        }else{\n       \
    \     odd.push(even[i]-1);\n        }\n    }\n    return [even, odd]\n}\n</code>\n\
    <|/ a dscore=0 tags=arrays,javascript |>\n<| a |>\n<code>", "  var res = [0,0];\n\
    \  for(var i=0; i <= num.length/2; i++){\n    if(num.charAt(i) == '-') continue;\n\
    \    if(num.charAt(i) % 2 === 0)\n      res[0]++;\n    else\n      res[1]++;\n\
    \  }\n  return res;\n}\n", "  var count = 0;\n  var odd_count = 0;\n  for(var\
    \ i =0; i<=num; i++){\n    if(num%2 === 0){\n      count++;\n    }else{\n    \
    \  odd_count++;\n    }\n  }\n  return [count, odd_count];\n}\n", "  let evenCount=0;\n\
    \  let oddCount=0;\n  while(num > 0){\n    let remain = num % 10;\n    evenCount\
    \ = evenCount + remain % 2 === 0 ? evenCount : evenCount+1;\n    oddCount = oddCount\
    \ + remain % 2 === 0 ? oddCount : oddCount+1;\n    num = Math.floor(num/10);\n\
    \  }\n  return [evenCount, oddCount];\n}", "  var even = [];\n  var odd = [];\n\
    \  var count = num;\n  while(num > 0){\n    count = (num % 10 === 0) ? count +\
    \ 1 : count;\n    num = num / 10;\n  }\n  if(count % 2 === 0){\n    even.push(count);\n\
    \  } else {\n    odd.push(count);\n  }\n  return even.concat(odd);\n}", "  if(num===0){\n\
    \    return [0, 0];\n  }\n\n  const odd = Math.ceil(Math.log10(num));\n  const\
    \ even = Math.ceil(odd);\n  return [even, odd];\n}\n", "  var count = 0;\n  while(num\
    \ != 0){\n    count += num%2 == 0 ? 1 : 0;\n    num /= 10;\n  }\n  return count;\n\
    }\n", "  let temp = [];\n  while(num > 0){\n    temp.push(num%10);\n    num =\
    \ Math.floor(num/10);\n  }\n  let even = 0;\n  let odd = 0;\n  for(let i=0; i<temp.length;\
    \ i++){\n    if(temp[i]%2 === 0){\n      even+=1;\n    }else{\n      odd+=1;\n\
    \    }\n  }\n  return [even, odd];\n}", "    var result = [];\n    var n = 0;\n\
    \    while (num > 0){\n        if (num % 2 == 0){\n            result.push(n);\n\
    \        }\n        num = Math.floor(num / 10);\n        n++;\n    }\n    return\
    \ result;\n}\n", "\tvar even = [], odd = [], i; //Loop through num's digits and\
    \ count the number of even and odd ones.\n\tnum = Math.abs(num); //Convert the\
    \ number into a positive number.\n\tfor (i = 0; i<num.length; i++){\n\t\teven.push(num[i]%2\
    \ ? 1 : 0); //Check if the current number being checked is even or odd.\n\t\t\
    odd.push(num[i]%2 ? 0 : 1);\n\t}\n\treturn [even, odd];\n}\n", "  let result =\
    \ [];\n  let even = 0;\n  let odd = 0;\n  while (num >= 0){\n   num = (num-even)\
    \ % 10;\n   result.push(num);\n   even = (even+1) % 2;\n   odd = (odd+num) % 2;\n\
    \  }\n  return result;\n}\n", "    let array = []\n    while(num > 0){\n     \
    \   let digit = num % 10\n        if(digit % 2 === 0){\n            array.push(digit)\n\
    \        }\n        num = num / 10\n    }\n    return array\n}", "  var numArray\
    \ = num.toString().split('');\n  var evenCount = 0;\n  var oddCount = 0;\n\n \
    \ for (var i = 0; i < numArray.length; i++){\n    if (numArray[i] == '1') {\n\
    \      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n\n  return [evenCount,\
    \ oddCount];\n}\n", "  if(num === 0)\n    return [1,1];\n  else\n    return [1,num%2]\n\
    }\n", "    var arr=[];\n    while(num>0){\n        arr.push(num%2);\n        num=\
    \ Math.floor(num/2);\n    }\n    return arr;\n}", "    let even = [], odd = [];\n\
    \    for(let i = num; i > 0; i--){\n        if(num % 2 === 0){\n            even.push(i)\n\
    \        } else {\n            odd.push(i)\n        }\n    }\n    return even.concat(odd);\n\
    }\n", "    let evens = 0;\n    let odds = 0;\n    while(num != 0){\n        let\
    \ x = num % 10; //The remainder of dividing by 10.\n        if(x % 2 === 0){\n\
    \            evens += 1;\n        } else {\n            odds += 1;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return [evens, odds]\n}\n", " \
    \ var count = 0;\n  while(num > 0){\n    count += num%2 == 0 ? 1 : 0;\n    num\
    \ = Math.floor(num/10);\n  }\n  return count;\n}\n", "    var even = [1, 0], odd\
    \ = [1, 1];\n    while(num > 0) {\n        even[even.length] = num % 2;\n    \
    \    num = num / 2;\n    }\n    return even.concat(odd);\n}\n", "    let count\
    \ = 0;\n    if(num === 0) return [num, num];\n\n    while(num > 0){\n        num\
    \ = (num%10) + 1;\n        count++;\n    }\n\n    return [count, count+num];\n\
    }\n", "  if(num < 0){\n    throw \"num can't be negative\"\n  }\n  const evenDigits\
    \ = [];\n  const oddDigits = [];\n  let digit;\n  do {\n    digit = num % 10;\n\
    \    if(digit % 2 === 0){\n      evenDigits.push(digit);\n    }else{\n      oddDigits.push(digit);\n\
    \    }\n    num /= 10;\n  } while (num > 0);\n  return [evenDigits, oddDigits];\n\
    }\n", "  const even = new Array();\n  const odd = new Array();\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0){\n    if (num % 2 == 0){\n    \
    \  even[evenCount] = num % 10;\n      evenCount++;\n    }\n    else {\n      odd[oddCount]\
    \ = num % 10;\n      oddCount++;\n    }\n    num /= 10;\n  }\n  return { even,\
    \ odd };\n}\n", "    var result = [];\n    var temp = Math.abs(num);\n    while(temp>1){\n\
    \        result.unshift(temp%2);\n        temp = parseInt(num/2,10);\n    }\n\
    \    return result\n}\n", "\tif(num < 0) return [-1,-1];\n\tvar even = [num%2,\
    \ 0];\n\tvar odd = [1, num%2];\n\tvar result = [even, odd];\n\tvar i = 1;\n\t\
    while(num > 0){\n\t\ti++;\n\t\tnum = Math.floor(num / 10);\n\t\tif(num%2 == 0){\n\
    \t\t\teven.push(num%2);\n\t\t}else{\n\t\t\todd.push(num%2);\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n\n", "    \n    let evenNum;\n    let oddNum;\n    let evenCount\
    \ = 0;\n    let oddCount = 0;\n    \n    if (num > 0){\n        num = Math.abs(num);\n\
    \        \n        let even = num.toString().split('');\n        evenNum = even.length;\n\
    \        \n        let odd = num.toString().split('');\n        oddNum = odd.length;\n\
    \        \n        if (evenNum >= oddNum){\n            evenCount++;\n       \
    \     while (evenNum > 0 && odd.indexOf(even[evenNum - 1]) > -1){\n          \
    \      evenNum--;\n                evenCount++;\n            }\n        } else\
    \ {\n            oddCount++;\n            while (odd.indexOf(odd[oddNum - 1])\
    \ > -1){\n                oddNum--;\n                oddCount++;\n           \
    \ }\n        }\n    }\n    \n    return evenCount.concat({even: evenNum, odd:\
    \ oddCount});\n}\n", "  num.toString().split('').sort().reverse();\n  let even\
    \ = [],odd = []\n  for(let i = 0; i < num.length; i++){\n    if(i%2 == 0){\n \
    \     even.push(num[i])\n    }else{\n      odd.push(num[i])\n    }\n  }\n  return{even,odd}\n\
    }\n", "    var arr = [];\n    var count = 0;\n    while(num > 0){\n        var\
    \ mod = num % 10;\n        num = Math.floor(num/10);\n        if(mod % 2 == 0){\n\
    \            arr.push(mod);\n        }\n        else{\n            arr.push(mod\
    \ - 1);\n        }\n    }\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]\
    \ != arr[i+1]){\n            count = count + 1;\n        }\n    }\n    return\
    \ count;\n}\n", "  let even = [];\n  let odd = [];\n\n  for(let i = 0; i < num.toString().length;\
    \ i++){\n    if(num.toString().substring(i, i + 1).match(/^(ev|odd)$/i)){\n  \
    \    if(num.toString().substring(i, i + 1).match(/ev/i)){\n        even.push(num.toString().substring(i,\
    \ i + 1));\n      }\n      else{\n        odd.push(num.toString().substring(i,\
    \ i + 1));\n      }\n    }\n  }\n  console.log(even);\n  console.log(odd);\n \
    \ return [even, odd];\n}\n", "\tvar arr = [];\n\tvar count = 0;\n\twhile(num >\
    \ 0){\n\t\tarr.push(num%10);\n\t\tnum = Math.floor(num/10);\n\t\tcount++;\n\t\
    }\n\t\n\tif(count == 0){\n\t\treturn arr;\n\t}\n\t\n\twhile(count > 0){\n\t\t\
    if(arr[count] == 0){\n\t\t\tarr.splice(0, 1);\n\t\t\tcount--;\n\t\t}\n\t\telse{\n\
    \t\t\tcount--;\n\t\t}\n\t}\n\t\n\treturn arr;\n}\n", "  let even = [],\n     \
    \ odd = [];\n  if (num === 0) {\n    odd.push(0);\n    even.push(1);\n  } else\
    \ {\n    while (num > 0) {\n      const remainder = num % 2;\n      odd.push(remainder);\n\
    \      even.push(remainder + 1);\n      num = Math.floor(num / 2);\n    }\n  }\n\
    \  return { even, odd };\n}\n", "    let even = 0;\n    let odd = 1;\n    while(num\
    \ > 0){\n       if(num % 2 === 0){\n           even++;\n       }else{\n      \
    \     odd++;\n       }\n       num = Math.floor(num/2);\n    }\n    return [even,\
    \ odd];\n}\n", "    var count=[];\n    for(var i=0;i<num;i++){\n        if((num\
    \ % 2)===0){\n            count.push(1);\n        }else{\n            count.push(0);\n\
    \        }\n        num=num/2;\n    }\n    return count;\n}\n", "\tvar count =\
    \ 0;\n\tvar newNum = 0;\n\n\twhile(num > 0){\n\t\tnewNum = num%10;\n\t\tif(newNum%2\
    \ === 0){\n\t\t\tcount++;\n\t\t}\n\t\tnum = parseInt(num/10);\n\t}\n\treturn [count,\
    \ count+1];\n}\n", "  var result = [];\n  var temp = 0;\n  for(var i = 0;i<num.length;i++){\n\
    \    temp = num[i]%10;\n    if(temp%2 == 0){\n      result.push(1);\n    } else\
    \ {\n      result.push(0);\n    }\n  }\n  return result;\n}\n", "    let evenArray\
    \ = [];\n    let oddArray = [];\n    for(let i = 0; i < num.length; i++){\n  \
    \      if(num[i] % 2 === 0){\n            evenArray.push(num[i]);\n        }else{\n\
    \            oddArray.push(num[i]);\n        }\n    }\n    return evenArray.concat(oddArray);\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0){\n    let\
    \ result = num%10;\n    if (result %2 == 0){\n      evenCount++;\n    }else{\n\
    \      oddCount++;\n    }\n    num = Math.floor(num/10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  if(num<0){\n    return []\n  }\n  if(num===0){\n    return\
    \ [0]\n  }\n  if(num===-1){\n    return [1]\n  }\n  let result=[]\n  for(let i=1;i<num;i++){\n\
    \    let even=num%2===0\n    let odd=num%2===1\n    if(even){\n      result.push(even)\n\
    \    }\n    if(odd){\n      result.push(odd)\n    }\n    num-=i\n  }\n  return\
    \ result\n}\n", "    let even = [];\n    let odd = [];\n    let i = Math.floor(Math.log10(num)\
    \ / 3);\n    let result = [];\n    while(i--){\n        if(num%Math.pow(10,i)\
    \ === 0){\n            result.push(i);\n            even.push(num/Math.pow(10,i));\n\
    \        }\n        if(num%Math.pow(10,i) === 0){\n            result.push(i);\n\
    \            odd.push(num/Math.pow(10,i));\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "\tvar result = [];\n\twhile(num > 0){\n\t\tvar mod = num % 10;\n\
    \t\tnum = parseInt(num / 10);\n\t\tif(mod % 2 === 0){\n\t\t\tresult.push(mod);\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "  let even = []\n  let odd = []\n\n  while\
    \ (num > 0){\n    if(num%2 === 0){\n      even.push(num)\n    } else {\n     \
    \ odd.push(num)\n    }\n    num /= 10\n  }\n  return [even, odd]\n}\n", "\tlet\
    \ even_count = 0\n\tlet odd_count = 0\n\tfor(let num2 = num; num2 > 0; num2 /=\
    \ 10){\n\t\tif(num2 % 2 == 0){\n\t\t\teven_count += 1;\n\t\t}\n\t\telse{\n\t\t\
    \todd_count += 1;\n\t\t}\n\t}\n\treturn [even_count,odd_count]\n}", "  const array\
    \ = [];\n  for(let i=1; i<=num; i++){\n    array.push(i);\n    array[(num-i)%10-1]\
    \ = array[(num-i)%10-1]+1;\n  }\n  return array;\n}", "  var count = 0;\n  while(num){\n\
    \    count++;\n    num = parseInt(num/10);\n  }\n  return [count, count%2];\n\
    }\n", "\tvar evenCount = 0;\n\tvar oddCount = 0;\n\n\twhile(num >= 0){\n\t\tnum\
    \ = num % 10;\n\t\tif(num == 0){\n\t\t\tbreak;\n\t\t}\n\t\tif(num % 2 === 0){\n\
    \t\t\tevenCount ++;\n\t\t}\n\t\telse {\n\t\t\toddCount ++;\n\t\t}\n\t}\n\treturn\
    \ [evenCount, oddCount];\n}\n", "  var sum = 0;\n  while(num > 0){\n    sum +=\
    \ num % 2;\n    num /= 2;\n  }\n  return sum;\n}\n", "\tvar even = [];\n\tvar\
    \ odd = [];\n\twhile(num > 0){\n\t\tvar temp = num%10;\n\t\teven.push(temp);\n\
    \t\tnum = parseInt(num/10);\n\t}\n\twhile(num > 0){\n\t\tvar temp = num%10;\n\t\
    \todd.push(temp);\n\t\tnum = parseInt(num/10);\n\t}\n\treturn [even,odd];\n}",
  "  let count = 0;\n  let arr = [];\n  while (num != 0) {\n    arr.push(num % 10);\n\
    \    num = Math.floor(num/10);\n  }\n  arr.forEach(item => {\n    if(item % 2\
    \ === 0){\n      count += 1;\n    } else {\n      count -= 1;\n    }\n  });\n\
    \  return [count, arr];\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\nA solution that uses Array.prototype.some()\n\n<code>\nconst isEven = (n)\
    \ => n % 2 === 0\nconst isOdd = (n) => n % 2 === 1\n", "  var even = 0, odd =\
    \ 1;\n  if(num < 0){\n    num = -num;\n    even = 1;\n  }\n  while (num > 0) {\n\
    \    num = num / 10;\n    if (num % 2 === 0){\n      even++;\n    } else {\n \
    \     odd++;\n    }\n  }\n  return [even, odd];\n}\n", "    var odd = 0, even\
    \ = 0;\n    \n    while (num > 0){\n        num = Math.floor(num / 10);\n    \
    \    if(num % 2 === 0){\n            even++;\n        }\n        else{\n     \
    \       odd++;\n        }\n    }\n    \n    return [odd, even];\n}\n", "  let\
    \ evenOddCountArray = [];\n  let currentNum = num;\n  while(currentNum > 0) {\n\
    \    if (currentNum % 2 == 0) {\n      evenOddCountArray.push(1);\n    }\n   \
    \ else {\n      evenOddCountArray.push(0);\n    }\n    currentNum = currentNum\
    \ / 2;\n  }\n  return evenOddCountArray;\n}\n", "    let digits = String(num).split(\"\
    \");\n    let even = [],odd = [];\n    let evenCount = 0,oddCount = 0;\n    digits.forEach((digit,index)\
    \ => {\n        if(index%2 == 0){\n            even.push(digit);\n           \
    \ evenCount++;\n        }else {\n            odd.push(digit);\n            oddCount++;\n\
    \        }\n    });\n    return [evenCount,oddCount];\n}\n", "  return [Math.floor(num\
    \ / 10), num % 10];\n}\n", "  let evens = [];\n  let odds = [];\n  while(num >\
    \ 0){\n    if(num % 2 == 0){\n      evens.push(num);\n    }\n    else{\n     \
    \ odds.push(num);\n    }\n    num = Math.floor(num/2);\n  }\n  return [evens,\
    \ odds]\n}\n", "  if(num<0){\n    num*=-1\n  }\n  const arr=Array(num+1).fill(0)\n\
    \  for(let i=0;i<num;i++){\n    arr[i]+=i%2?0:1\n  }\n  return arr\n}\n", "  let\
    \ even_count=0;\n  let odd_count=0;\n  while(num>0){\n    let remainder=num%10;\n\
    \    if(remainder%2==0){\n      even_count+=1;\n    }else{\n      odd_count+=1;\n\
    \    }\n    num=Math.floor(num/10);\n  }\n  return [even_count,odd_count];\n}\n",
  "  return Number(num.toString()).split('').reduce((a,b)=>{\n    var c = Number(a)\n\
    \    c += Number(b)\n    return c\n  }, 0)\n}\n", "  let arr = []\n  while(num!=0){\n\
    \    arr.push(num%2)\n    num = Math.floor(num/2)\n  }\n  return arr\n}", "  let\
    \ evenArray = [];\n  let oddArray = [];\n  if(num < 0){\n    evenArray = [1, 1];\n\
    \    oddArray = [1, -1];\n  }\n  else {\n    let currentNum = num;\n    while\
    \ (currentNum > 0){\n      evenArray.push(num % 2);\n      currentNum /= 2;\n\
    \    }\n    currentNum = num;\n    while (currentNum > 0){\n      oddArray.push(num\
    \ % 2);\n      currentNum /= 2;\n    }\n  }\n  return evenArray.concat(oddArray);\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while(num){\n    if(num%2===0){\n\
    \      evenCount++;\n    } else {\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 2);\n  }\n  return [evenCount,oddCount];\n}\n", "    var n = Math.abs(num);\n\
    \    var array = [];\n    var isEven = (n%2==0); // if number even\n    if(isEven){\n\
    \        array.push(n); //push the even number into the array\n    }\n    for(var\
    \ i = 3; i<= Math.abs(n); i+=2){ // for all the odd numbers (starting from 3)\
    \ \n        if(isEven){ //if the number is even\n            array.push(i);\n\
    \        }\n        else { //if the number is odd\n            array.push(-i);\n\
    \        }\n        isEven = !isEven; //invert the boolean value\n    }\n    return\
    \ array; //return an array containing the even and odd numbers\n}\n", "  if(num\
    \ < 0){\n    return [0]\n  }\n  \n  let even = []\n  let odd = []\n  \n  while(num){\n\
    \    let temp = num % 10\n    num = Math.floor(num/10)\n    \n    if(temp ===\
    \ 2){\n      even.push(temp)\n    }else{\n      odd.push(temp)\n    }\n  }\n \
    \ \n  return [even, odd]\n}\n", "  var odd = [];\n  var even = [];\n\n  while(num\
    \ > 0){\n    var mod = num % 10;\n    odd.push(mod);\n    num -= mod;\n  }\n\n\
    \  while(num > 0){\n    var mod = num % 10;\n    if(mod % 2 === 0){\n      even.push(mod);\n\
    \      num -= mod;\n    } else {\n      even.push(0);\n    }\n  }\n\n  return\
    \ [even,odd];\n}\n", "    let even = [];\n    let odd = [];\n    while(num){\n\
    \        if(num%2 == 0){\n            even.push(num);\n        }else{\n      \
    \      odd.push(num);\n        }\n        num = num/2;\n    }\n    return [even,odd];\n\
    }\n", "  const odd = num % 2;\n  if(odd == 0){\n    return [num, 1];\n  }else{\n\
    \    const even = num - odd;\n    return [even, odd];\n  }\n}\n", "    const result\
    \ = [];\n    while(num > 0){\n        result.push(num%2 ? 2 : 1);\n        num\
    \ = parseInt(num/2);\n    }\n    return result;\n}\n", "    var even = 0, odd\
    \ = 0, arr = [];\n    num = Math.abs(num);\n    while(num > 0){\n        arr.push(num\
    \ % 10);\n        num = Math.floor(num / 10);\n    }\n    for(var i = 0, len =\
    \ arr.length; i < len; i++){\n        if((i % 2) === 0){\n            even++;\n\
    \        }else{\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }", "    let even = [];\n    let odd = [];\n    while(num > 0){\n        let last_digit\
    \ = num % 10;\n        if(last_digit % 2 === 0){\n            even.push(last_digit);\n\
    \            num = Math.floor(num / 10);\n        }else{\n            odd.push(last_digit);\n\
    \            num = Math.floor(num / 10);\n        }\n    }\n    return [even,\
    \ odd];\n}", "  let result = [];\n  for(let i = 0; i < num.length; i++){\n   \
    \ let even = num.charCodeAt(i) % 2;\n    let odd = (num.charCodeAt(i) + 1) % 2;\n\
    \    result.push(even, odd);\n  }\n  return result;\n}\n", "\tvar result = [];\n\
    \tvar sign = 1;\n\tif(num < 0){\n\t\tsign = -1;\n\t\tnum = -num;\n\t}\n\twhile(num\
    \ > 0){\n\t\tif(num % 2 === 0){\n\t\t\tresult.push(1);\n\t\t} else {\n\t\t\tresult.push(0);\n\
    \t\t}\n\t\tnum = Math.floor(num / 2);\n\t}\n\treturn [sign, result.reverse()];\n\
    }\n", "  let arr=[];\n  while(num > 0){\n    if (num % 2 == 0){\n      arr.push(num);\n\
    \    }\n    if (num % 2 == 1){\n      arr.push(num);\n    }\n    num--;\n  }\n\
    \  return arr;\n}\n", "  let count = [];\n  for(let i = 0; i < num.length; i++){\n\
    \    if(num[i] % 2 === 0 && num[i] % 10 == 0){\n      count.push(1);\n    }\n\
    \    if(num[i] % 2 !== 0 && num[i] % 10 != 0){\n      count.push(2);\n    }\n\
    \  }\n  return count;\n}\n", "  var count = 0;\n  var odd = 0;\n  var even = 0;\n\
    \  while (num > 0) {\n    count = (num % 10) % 2;\n    num = Math.floor(num /\
    \ 10);\n    odd = (odd % 10) + count;\n    even = (even % 10) + count;\n  }\n\
    \  return [even, odd];\n}\n", "  var array = [];\n  for(var i = 0; i <= num; i\
    \ += 2){\n    array.push(i);\n  }\n  return array;\n}\n", "  // initialize an\
    \ array that contains the even and odd numbers \n  var evenodd = []\n  \n  //\
    \ loop through num and count the even and odd digits\n  for(var i = 0; i <= num;\
    \ i++){\n    // if i is an even digit\n    if(num % 2 === 0){\n      evenodd.push(i)\n\
    \    }\n    // else if i is an odd digit\n    else if(num % 2 !== 0){\n      evenodd.push(num-i)\n\
    \    }\n  }\n  // return the array\n  return evenodd\n}\n", "  let even = [];\n\
    \  let odd = [];\n  let len = num.length;\n  for(let i = 0; i< len; i++){\n  \
    \  const current_digit = num[i];\n    if(current_digit % 2 == 0){\n      even.push(current_digit);\n\
    \    } else {\n      odd.push(current_digit);\n    }\n  }\n  return [even, odd];\n\
    }\n", "  var even_count = 0;\n  var odd_count = 0;\n  num = Math.abs(num);\n \
    \ if(num >= 1){\n    if(num % 2 === 0){\n      even_count++;\n    }else{\n   \
    \   odd_count++;\n    }\n  }\n  return [even_count, odd_count];\n}\n\n", "  let\
    \ even = 0;\n  let odd = 0;\n  while (num > 0){\n    even = num%2;\n    odd =\
    \ num%2;\n    num = Math.floor(num/2);\n  }\n  return [even,odd];\n}\n", "   \
    \ if(num < 0){\n        return [-1,-1];\n    }\n    \n    var digits_array = [],\n\
    \        i = num.toString().length;\n    \n    while(num){\n        digits_array.push([num\
    \ % 10,0]);\n        num = parseInt(num / 10);\n    }\n    \n    digits_array.forEach(function(item){\n\
    \        if(item[1] === 0){\n            item[1] = 1;\n        }\n    });\n  \
    \  \n    return digits_array;\n}\n", "    if(num < 0) return []\n    let evens\
    \ = []\n    let odds = []\n    while(num > 0){\n        num -= Math.floor(num\
    \ / 10)\n        if(num % 2 === 0) evens.push(num / 10)\n        else odds.push(num\
    \ / 10)\n    }\n    return [evens, odds]\n}\n", "    num = Math.abs(num);\n  \
    \  let even_odds = [];\n    if(num > 0){\n        let count = 0;\n        while(num\
    \ > 0){\n            count = count + Math.floor(num/2);\n            num = num%2;\n\
    \        }\n        even_odds.push(-count);\n        even_odds.push(count);\n\
    \    }\n    return even_odds;\n}\n", "    let even = 0, odd = 1;\n    while (num\
    \ > 0) {\n       if ((num % 10) === 0) {\n          even++;\n       }\n      \
    \ else {\n          odd++;\n       }\n       num = Math.floor(num / 10);\n   \
    \ }\n    return [even, odd];\n}\n", "    let even = 1,\n        odd = 0;\n   \
    \ while( num > 0 ){\n        num = num % 10;\n        if( num == 0 ){\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ [even, odd];\n}", "  num += '';\n  var numArr = num.split(\"\");\n  var evenArr\
    \ = [];\n  var oddArr = [];\n  var evenIndex = 1;\n  var oddIndex = 1;\n  for(var\
    \ i = 0; i < numArr.length; i++){\n    if(numArr[i] % 2 == 0){\n      evenArr.push(numArr[i]);\n\
    \      evenIndex++;\n    }\n    else{\n      oddArr.push(numArr[i]);\n      oddIndex++;\n\
    \    }\n  }\n  return [evenArr, oddArr];\n}", "    var count = 0;\n    var digit;\n\
    \    for(var i=0;i<num.length;i++){\n        digit = num % 10;\n        if(digit\
    \ % 2 === 0)\n            count++;\n        num = num / 10;\n    }\n    return\
    \ [count, num];\n}\n", "    let even_odd_count = []\n    for(let i = 1; i < (Math.floor(Math.log10(num))+1);\
    \ i++){\n        if(num % i === 0 && num % i !== 0){\n            even_odd_count.push(i)\n\
    \        }\n    }\n    return even_odd_count\n}\n", "  let even = 0,\n      odd\
    \ = 0;\n  while (num > 0) {\n    if (num%2 === 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num = Math.floor(num/10);\n  }\n  return [even,\
    \ odd];\n}\n", "    let [even_digits, odd_digits] = num.toString().split('').map(Number)\n\
    \    return [even_digits%2, odd_digits%2];\n}\n", "    var arr = [];\n    while(num){\n\
    \        arr.push(num%2===0 ? 1 : num%2===1 ? 2 : 0);\n        num = Math.floor(num/10);\n\
    \    }\n    return arr;\n}", "    var arr = [];\n    var exp = num.toString().length;\n\
    \    for(var i = 0; i < exp; i++){\n        var num = num / 10;\n        num =\
    \ parseInt(num.toString());\n        if(num % 2 == 0){\n            arr.push(num);\n\
    \        }else{\n            arr.push(-num);\n        }\n    }\n    return arr;\n\
    }\n", "\tvar arr = [];\n\tvar even_index = 0;\n\tvar odd_index = 0;\n\tnum = num.toString();\n\
    \tfor(var i = num.length-1; i >= 0; i--){\n\t\tif((num[i] % 2 === 0) || (num[i]\
    \ % 2 === 1)){\n\t\t\tif(num[i] % 2 === 0){\n\t\t\t\tarr[ even_index ] = num[i];\n\
    \t\t\t\teven_index ++;\n\t\t\t}else{\n\t\t\t\tarr[ odd_index ] = num[i];\n\t\t\
    \t\todd_index ++;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr;\n}\n", "  let even = [],\
    \ odd = []\n  while(num > 0){\n    if(num % 2 === 0) even.push(num);\n    else\
    \ odd.push(num);\n    num = Math.floor(num / 10);\n  }\n  return [even,odd]\n\
    }\n", "    let numDigits = num.toString().split('').reduce(function(a, b){\n \
    \       return a*10+b*1\n    })\n\n    let evenDigits = numDigits - (numDigits\
    \ % 2)\n    let oddDigits = (numDigits % 2)\n    return [evenDigits, oddDigits]\n\
    }\n", "    let even = [];\n    let odd = [];\n    for(let i = 0; i < num.toString(10).length;\
    \ i++){\n        \n        if(num % 2 === 0 && num % 10 !== 0){\n            even.push(num%10);\n\
    \        }\n        \n        if(num % 2 === 0 && num % 10 === 0){\n         \
    \   odd.push(num%10);\n        }\n        \n        num/=10;\n    }\n    return\
    \ [even, odd];\n}\n", "  var result = [];\n  while(num > 0){\n    result.push(num\
    \ % 2 == 0 ? 1 : 2);\n    num = Math.floor(num / 10);\n  }\n  return result;\n\
    }\n", "    num = String(num);\n    let even = [];\n    let odd = [];\n    let\
    \ numArr = num.split('');\n    for(let i=0; i<numArr.length; i++){\n        let\
    \ digit = numArr[i];\n        if(digit==='0'){\n            even.push(0);\n  \
    \      }else if(digit==='1'){\n            even.push(1);\n        }else{\n   \
    \         odd.push(digit);\n        }\n    }\n    return even.concat(odd);\n}\n",
  "  var arr = [];\n  var evenCount = 0;\n  var oddCount = 0;\n  while(num!=0){\n\
    \    if(num%2==0){\n      evenCount++;\n    }\n    else{\n      oddCount++;\n\
    \    }\n    num=num/2;\n  }\n  if(evenCount==1){\n    arr.push(evenCount);\n \
    \ }\n  else if(oddCount==1){\n    arr.push(oddCount);\n  }\n  else{\n    arr.push(evenCount,oddCount);\n\
    \  }\n  return arr;\n}", "    let count = 0;\n    while(num > 0){\n        num\
    \ /= 10;\n        count++;\n    }\n    return [count, count % 2];\n}\n", "  return\
    \ [num%2 === 0 ? 1 : 2, num%2 === 1 ? 2 : 0]\n}\n", "    let evenCount = 0;\n\
    \    let oddCount = 0;\n    for(let i=0; i< num.length;i++){\n        if(num %\
    \ 2 === 0){\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n    }\n    return [evenCount,oddCount]\n}\n", "    num = num.toString();\n\
    \    var arr = [];\n    arr.push(num.charAt(0));\n    arr.push(num.charAt(num.length-1));\n\
    \    return arr;\n}\n", "   var arr = new Array();\n   var num = num.toString();\n\
    \   for (var i = 0; i < num.length; i++) {\n      if (num[i].toString().indexOf('.')\
    \ > -1){\n         arr.push(num[i].toString().split('.')[0]);\n      }\n     \
    \ else{\n         arr.push(num[i]);\n      }\n   }\n   \n   var evenCount = 0;\n\
    \   var oddCount = 0;\n   arr.forEach(function(i){\n      if(i.includes('0') &&\
    \ i.includes('1')) {\n         evenCount++;\n      }\n      if(i.includes('1')\
    \ && i.includes('0')) {\n         oddCount++;\n      }\n   })\n   \n   return[evenCount,\
    \ oddCount];\n}\n", "    num = num.toString();\n    for(var i=0;i<num.length;i++){\n\
    \        var n = num.length - 1 - i;\n        if((num[n]%2)===0){\n          \
    \  return [1,0];\n        }\n        else{\n            return [0,1];\n      \
    \  }\n    }\n}\n</code>\n<|/ a tags=javascript,recursion |>\n<| a dscore=0 |>\n\
    My code using recursion \n<code>\nvar numbers = [];\nvar i = 0;\n", "  var result\
    \ = [];\n  while(num > 0){\n    if(num % 2 == 0){\n      result.push(1)\n    }\n\
    \    else{\n      result.push(2)\n    }\n    num = Math.floor(num / 2)\n  }\n\
    \  return result\n}\n", "    \n    let even = [];\n    let odd = [];\n    for(let\
    \ i = num; i >= 0; i--){\n        if(i % 2 == 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,odd]\n\
    }\n", "  return [num%2, num%2==0];\n}\n", "  const res=num.toString().split('');\n\
    \  let even=0,odd=0;\n  for(let i=0;i<res.length;i++){\n    if((res[i]%2)==0){\n\
    \      even+=1;\n    }else{\n      odd+=1;\n    }\n  }\n  return [even,odd];\n\
    }", "\tvar even = num / 10000;\n\tvar odd = num % 10000 / 1000;\n\tvar n = num\
    \ % 1000 / 10000;\n\tif(even){\n\t\teven.push(0);\n\t}\n\tif(odd){\n\t\todd.push(1);\n\
    \t}\n\tif(n){\n\t\todd.push(0);\n\t}\n\tif(odd.length + even.length > 1){\n\t\t\
    odd.unshift(0);\n\t}\n\tif(even.length + odd.length > 1){\n\t\teven.unshift(0);\n\
    \t}\n\treturn {\n\t\teven: even,\n\t\todd: odd\n\t};\n}\n", "  let even = 0;\n\
    \  let odd = 0;\n  while (num > 0){\n    if (num % 2 == 0){\n      even++;\n \
    \   }\n    else{\n      odd++;\n    }\n    num/=10;\n  }\n  return [even, odd];\n\
    }\n", "  var digit = String(num);\n  var evenCount = 0;\n  var oddCount = 0;\n\
    \  for (var i =0; i<digit.length; i++){\n    if (digit[i]%2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount,oddCount];\n\
    }\n", "    var even_count = 0;\n    var odd_count = 0;\n    while (num != 0) {\n\
    \        num = num / 10;\n        if (num % 2 === 0) {\n            even_count++;\n\
    \        } else {\n            odd_count++;\n        }\n    }\n    return [even_count,\
    \ odd_count];\n}\n", "    let arr = [0,0]\n    if(num < 0){\n        return [1,1]\n\
    \    }\n    for(let i = 1; i<=num; i++){\n        if((num % 2) == 0){\n      \
    \      arr[0] += 1\n        }else{\n            arr[1] += 1\n        }\n    }\n\
    \    return arr\n}\n", "  let even = 0;\n  let odd = 0;\n\n  while (num > 0){\n\
    \    num % 2 === 0 && even++;\n    num % 2 !== 0 && odd++;\n    num = parseInt(num\
    \ / 2);\n  }\n\n  return [even,odd];\n}\n", "   let evenCount = 0;\n   let oddCount\
    \ = 0;\n   let numberArray = [];\n   \n   while (num > 0) {\n      if (num%2 ==\
    \ 0) {\n         evenCount++;\n      }else {\n         oddCount++;\n      }\n\
    \      numberArray.push(num%10);\n      num = Math.floor(num/10);\n   }\n   \n\
    \   console.log(numberArray);\n   return numberArray;\n}\n", "\tvar odd_count\
    \ = 0;\n\tvar even_count = 0;\n\tfor(var i = 1; i <= num; i++){\n\t\tif(i%2 !=\
    \ 0){\n\t\t\teven_count += 1;\n\t\t}else{\n\t\t\todd_count += 1;\n\t\t}\n\t}\n\
    \tconsole.log(\"odd_count: \" + odd_count);\n\tconsole.log(\"even_count: \" +\
    \ even_count);\n\treturn [even_count,odd_count]\n}\n", "  return [num%2, num&1];\n\
    }", "    var result = [0,0];\n    var count = 0;\n    while( num>0 ){\n      \
    \  count += num%2;\n        num = Math.floor(num/2);\n        result[count]++;\n\
    \    }\n    return result;\n}\n", "    let even = [], odd = [];\n    let count\
    \ = (num.toString()).split('').reduce((a, b)=>{\n        if(b === '0') even.push(a);\n\
    \        else odd.push(a);\n        return a + 1;\n    });\n    return {\n   \
    \     'even': even,\n        'odd': odd\n    };\n}", "  var arr = [];\n  for(var\
    \ i = 0; i<num;i++){\n    var mod = num % 10;\n    if(i%2==0 && mod==0){\n   \
    \   arr.push(mod);\n    }\n    else if(mod==0){\n      arr.push(mod);\n    }\n\
    \  }\n  return arr;\n}\n", "  let even = 0, odd = 1;\n  for(let i=num; i>0; i--){\n\
    \    if(i%2 === 0){\n      even++;\n    }else{\n      odd++;\n    }\n  }\n  return\
    \ [even, odd]\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while (num\
    \ > 0) {\n    evenCount += Math.floor(num/2);\n    oddCount += num%2;\n    num\
    \ /= 10;\n  }\n  return [evenCount, oddCount]\n}\n", "    num = Math.abs(num);\n\
    \    let even = [];\n    let odd = [];\n    for(let i = 0; i <= 9; i++){\n   \
    \     if(num % 2 === 0){\n            even.push(i);\n        } else {\n      \
    \      odd.push(i);\n        }\n        num = Math.floor(num / 10);\n    }\n \
    \   return [even, odd];\n}\n", "    var arr = [];\n    while(num > 0){\n     \
    \   var mod = num % 10;\n        if(mod % 2 === 0){\n            arr.push(mod);\n\
    \        }\n        num /= 10;\n    }\n    return arr;\n}\n", "  const sum =[];\n\
    \  for (let i = 0; i < num.length; i++) {\n    sum.push(num[i] % 2 === 0 ? 1 :\
    \ 2);\n  }\n  return sum;\n}\n", "    var arr = [];\n    while (num) {\n     \
    \   arr.unshift(num % 10);\n        num = parseInt(num / 10);\n    }\n    if (arr.length\
    \ % 2 === 0){\n        return arr;\n    }else{\n        return arr.concat( arr[arr.length-1]);\n\
    \    }\n}", "    let even = 0\n    let odd = 1\n    for(let i = num; i > 0; i\
    \ = i / 2){\n        even = even * 2\n    }\n    for(let i = num; i > 0; i = i\
    \ / 2){\n        odd = odd * 2\n    }\n    return [even, odd]\n}\n", "    let\
    \ arr = []\n    let even = 0\n    let odd = 0\n    let n = num.toString()\n  \
    \  for(var i = 0; i < n.length; i++){\n        if(n % 2 === 0){\n            even++\n\
    \        }else{\n            odd++\n        }\n        arr.push(even)\n      \
    \  arr.push(odd)\n    }\n    return arr\n}\n", "    const odd_count=num%2;\n \
    \   const even_count=num-odd_count;\n    return [even_count, odd_count];\n}\n",
  "    var evens = 0;\n    var odds = 0;\n\n    for(var i = 0; i < num.length; i++){\n\
    \        switch(num[i]){\n            case 0:\n            evens++;\n        \
    \    break;\n            case 1:\n            odds++;\n            break;\n  \
    \      }\n    }\n\n    return [evens, odds];\n}\n", "  let even = num.toString().split(\"\
    \").filter((x)=>{return x%2===0}).length;\n  let odd = num.toString().split(\"\
    \").filter((x)=>{return x%2!==0}).length;\n  return [even, odd];\n}\n", "    var\
    \ arr = [];\n    while(num >= 0){\n        arr.push(num%2);\n        num = Math.floor(num/2);\n\
    \    }\n    return arr;\n}", "    var arr=[];\n    var odds=0;\n    var evens=0;\n\
    \    while(num!==0){\n       if(num%2==0){\n          evens++;\n       }else{\n\
    \          odds++;\n       }\n       num=num/2;\n    }\n    if(evens>odds){\n\
    \        arr[0]=evens;\n        arr[1]=odds;\n    }else{\n        arr[0]=odds;\n\
    \        arr[1]=evens;\n    }\n    return arr;\n}", "  let count = 0;\n  let even\
    \ = [];\n  let odd = [];\n  if(num == 0){\n    return even;\n  }\n  while(num\
    \ != 0){\n    if(num%2 == 0){\n      even.push(num%10);\n    }\n    else{\n  \
    \    odd.push(num%10);\n    }\n    num = Math.floor(num/10);\n  }\n  if(even.length\
    \ > odd.length){\n    count = even.length;\n  }\n  else{\n    count = odd.length;\n\
    \  }\n  return [even,odd];\n}\n", "    let even_odd = [];\n    while(num>0){\n\
    \        if(num % 2 === 0){\n            even_odd.push(num);\n        }\n    \
    \    else{\n            even_odd.unshift(num);\n        }\n        num = Math.floor(num/2);\n\
    \    }\n    return even_odd;\n}\n", "  var res = [];\n  var num = Math.abs(num);\n\
    \  while(num > 0){\n    res.push(num % 10);\n    num = Math.floor(num / 10);\n\
    \  }\n  var odd_count = res.length;\n  res.forEach(function (digit, index){\n\
    \    if(index % 2 === 1){\n      odd_count--;\n    }\n  });\n  if(odd_count >\
    \ 0){\n    res.push(1);\n  }\n  return res;\n}\n", "  var count = 0;\n  while(num\
    \ != 0){\n    count++;\n    num= num/10;\n  }\n  return count;\n}\n\n", "    var\
    \ arr = [];\n    while(num >= 0){\n        if (num%2 === 0){\n            arr.push(num);\n\
    \        }\n        else{\n            arr.push(num%10);\n        }\n        num\
    \ = Math.floor(num/10);\n    }\n    return arr;\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  while (num > 0){\n    evenCount += (num % 2 === 0);\n\
    \    oddCount += (num % 2 !== 0);\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "\tvar i, count = [], oddSum = 0, evenSum = 0;\n\
    \n\tfor(i = 1; i <= num; i++){\n\t\tif(num % i == 0){\n\t\t\tcount[i%2]++;\n\t\
    \t\toddSum += i; \n\t\t} else {\n\t\t\tcount[i%2-1]++;\n\t\t\tevenSum += i;\n\t\
    \t}\n\t}\n\n\treturn [evenSum, oddSum];\n}\n\n", "  // Your code here\n  var numStr\
    \ = num.toString();\n  var evenCount = numStr.length - (numStr.length % 2);\n\
    \  var oddCount = numStr.length - (evenCount + 1);\n  return [evenCount, oddCount];\n\
    }\n", "    if(num===0) return [0,0];\n    \n    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for(let i=0; i<num.toString().length; i++){\n        let val = num\
    \ % 10;\n        if(val === 0 || val === 1){\n            evenCount++;\n     \
    \   }else{\n            oddCount++;\n        }\n        num = Math.floor(num/10);\n\
    \    }\n    return [evenCount, oddCount];\n}\n", "  let arr = [];\n  while (num)\
    \ {\n    arr.push((num%2 === 0 )?1:0);\n    num /= 2;\n  }\n  return arr;\n}\n",
  "  // Declare an array to store the even and odd digits.\n  var even = [];\n  var\
    \ odd = [];\n  // A simple loop will do the trick.\n  for(var i = 0; i< num; i++){\n\
    \    if((num % 10) % 2 === 0){\n      even.push(num % 10);\n    } else {\n   \
    \   odd.push(num % 10);\n    }\n  }\n  \n  return [even, odd]\n}", "    const\
    \ numStr = String(num)\n    const evenCountArr = []\n    const oddCountArr = []\n\
    \    let evenStr = \"\"\n    let oddStr = \"\"\n\n    for(let index = 0; index\
    \ < numStr.length; index++){\n        const char = numStr.charAt(index)\n    \
    \    if(char === \"-\"){\n            oddCountArr.push(index)\n        }else{\n\
    \            evenCountArr.push(index)\n        }\n    }\n\n    evenCountArr.forEach(index\
    \ => {\n        const char = numStr.charAt(index)\n        if(char === \"-\"){\n\
    \            oddStr += char\n        }else{\n            evenStr += char\n   \
    \     }\n    })\n\n    return [evenStr.length, oddStr.length]\n}\n", "    num\
    \ = Math.abs(num);\n    let even = 0, odd = 0;\n    while (num >= 1){\n      \
    \  if (num % 2 === 0){\n            even++;\n        }else{\n            odd++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let res = [];\n  while (num > 0){\n    res.push(num % 2 ? 1 : 2);\n \
    \   num = Math.floor(num / 10);\n  }\n  return res;\n}\n", "  let even = 0,\n\
    \    odd = 1;\n  while(num >= 0){\n    if(num % 2 === 0){\n      even++;\n   \
    \ }\n    else if(num % 2 !== 0){\n      odd++;\n    }\n    num/=2;\n  }\n  return\
    \ [even, odd];\n}\n", "  if(num === 0) return [0, 0];\n  var even = num % 2 ===\
    \ 0 ? 1 : 0;\n  var odd = num % 2 === 1 ? 1 : 0;\n  return [even, odd];\n}\n",
  "  var digits = Math.floor(Math.log10(num))+1;\n  var even_digits = Math.ceil(digits/2);\n\
    \  var odd_digits = digits - even_digits;\n  return [even_digits,odd_digits]\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "  const oddCountArr = new Array(num).fill(0);\n\
    \  let evenCountArr = new Array(num).fill(0);\n  for (let i = 0; i < num; i++)\
    \ {\n    if (num % 2 === 0) {\n      evenCountArr[i] = evenCountArr[i] + 1;\n\
    \    } else {\n      oddCountArr[i] = oddCountArr[i] + 1;\n    }\n  }\n  return\
    \ [evenCountArr, oddCountArr];\n}\n", "  let count = 0;\n  num = Math.abs(num);\n\
    \  for (let i = 9; i >= 0; i--){\n    if (num % i === 0){\n      count++;\n  \
    \  }\n  }\n  return count;\n}\n", "    var evens = [];\n    var odds = [];\n \
    \   for (var i = 0; i <= num; i++){\n        var mod = i % 10;\n        if (mod\
    \ > 0){\n            evens.push(mod);\n        } else {\n            odds.push(mod);\n\
    \        }\n    }\n    return [evens, odds];\n}\n", "  let even = [0,0], odd =\
    \ [0,0];\n  for(let i = num.length-1; i >= 0; i--){\n    if( num[i]%2 ==0){\n\
    \      even[even.length-1] = num[i];\n    }else{\n      odd[odd.length-1] = num[i];\n\
    \    }\n  }\n  return even.concat(odd);\n}\n", "  let count = 0;\n  while (num\
    \ >= 0){\n    count++;\n    num = num/10;\n  }\n  return [count,count-1];\n}",
  "\tvar even = [];\n\tvar odd = [];\n\twhile(num > 0){\n\t\tvar val = Math.floor(num\
    \ / 10);\n\t\tif(val % 2 === 0){\n\t\t\teven.push(val);\n\t\t}else{\n\t\t\todd.push(val);\n\
    \t\t}\n\t\tnum = num % 10;\n\t}\n\treturn [even, odd];\n}\n", "  // Convert it\
    \ to string since JavaScript will automatically cast it\n  num = num.toString();\n\
    \  //Check first to see if it contains '-' then remove it.\n  if(num.indexOf('-')>0){\n\
    \    num = num.substring(0,num.indexOf('-'));\n  }\n  //Get all the even and odd\
    \ numbers in the string and count them.\n  var even = num.filter(function(c){\n\
    \    if(c%2==0){\n      return true;\n    }\n  });\n  var odd = num.filter(function(c){\n\
    \    if(c%2==1){\n      return true;\n    }\n  });\n  //Return the array\n  return\
    \ [even.length, odd.length];\n}\n", "  let even_count = 0;\n  let odd_count =\
    \ 1;\n  while (num > 0){\n    if (num % 2 === 0) {\n      even_count++;\n    }\
    \ else {\n      odd_count++;\n    }\n    num = Math.floor(num / 2);\n  }\n  return\
    \ [even_count, odd_count];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

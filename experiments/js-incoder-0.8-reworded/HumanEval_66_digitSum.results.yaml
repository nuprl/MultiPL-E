language: js
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0; // the\
    \ sum of digits\n  for (let i = 0; i < s.length; i++)\n  {\n    let c = s.charCodeAt(i);\
    \ // get ASCII code of character in position i\n    if (c >= 65 && c <= 90)\n\
    \    {\n      sum += c + 32;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpefl42jmv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpefl42jmv.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpefl42jmv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 48;\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp73_srnpg.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp73_srnpg.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp73_srnpg.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0;\n    s.split('').map(function(el){\n\
    \        var num = Number(el);\n        if(num<0){\n            return null;\n\
    \        }\n        sum+=num;\n    });\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpj_5xgvng.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpj_5xgvng.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpj_5xgvng.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // Write your code\
    \ here\n    var sum=0;\n    for(var i=0;i<s.length();i++){\n        var char =\
    \ s.charAt(i);\n        if(char.toUpperCase()==char){\n            sum += char.charCodeAt(0);\n\
    \        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2e01_ugy.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2e01_ugy.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2e01_ugy.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let l = 0,\n     \
    \   sum = 0;\n    for(let i=0; i<s.length; i++){\n        const n = s.charCodeAt(i);\n\
    \        if(n > 64){\n            l += 1;\n        }else{\n            sum +=\
    \ n;\n        }\n    }\n    return sum + l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdaeo9i1h.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdaeo9i1h.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdaeo9i1h.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let total = 0\n  \
    \  let sum = 0\n    for(let i=0; i<s.length; i++){\n        if(s[i] == 'A'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'a'){\n            sum\
    \ += 'A'.charCodeAt(0) - 'a'.charCodeAt(0);\n        }\n        if(s[i] == 'B'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'b'){\n            sum\
    \ += 'B'.charCodeAt(0) - 'b'.charCodeAt(0);\n        }\n        if(s[i] == 'C'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'c'){\n            sum\
    \ += 'C'.charCodeAt(0) - 'c'.charCodeAt(0);\n        }\n        if(s[i] == 'D'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'd'){\n            sum\
    \ += 'D'.charCodeAt(0) - 'd'.charCodeAt(0);\n        }\n        if(s[i] == 'E'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'e'){\n            sum\
    \ += 'E'.charCodeAt(0) - 'e'.charCodeAt(0);\n        }\n        if(s[i] == 'F'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'f'){\n            sum\
    \ += 'F'.charCodeAt(0) - 'f'.charCodeAt(0);\n        }\n        if(s[i] == 'G'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'g'){\n            sum\
    \ += 'G'.charCodeAt(0) - 'g'.charCodeAt(0);\n        }\n        if(s[i] == 'H'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'h'){\n            sum\
    \ += 'H'.charCodeAt(0) - 'h'.charCodeAt(0);\n        }\n        if(s[i] == 'I'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'i'){\n            sum\
    \ += 'I'.charCodeAt(0) - 'i'.charCodeAt(0);\n        }\n        if(s[i] == 'J'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'j'){\n            sum\
    \ += 'J'.charCodeAt(0) - 'j'.charCodeAt(0);\n        }\n        if(s[i] == 'K'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'k'){\n            sum\
    \ += 'K'.charCodeAt(0) - 'k'.charCodeAt(0);\n        }\n        if(s[i] == 'L'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'l'){\n            sum\
    \ += 'L'.charCodeAt(0) - 'l'.charCodeAt(0);\n        }\n        if(s[i] == 'M'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'm'){\n            sum\
    \ += 'M'.charCodeAt(0) - 'm'.charCodeAt(0);\n        }\n        if(s[i] == 'N'){\n\
    \            sum += 32;\n        }\n        if(s[i] == 'n'){\n            sum\
    \ += 'N'.charCodeAt(0) - 'n'.charCodeAt(0);\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpxi15gxyw.js:119\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64\n  }\n  return\
    \ sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpibw29its.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpibw29its.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpibw29its.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i=0 ; i<s.length ; i++) {\n        sum = sum + parseInt(s.charAt(i).charCodeAt(0)\
    \ - 'A'.charCodeAt(0));\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpabs_auml.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpabs_auml.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpabs_auml.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  var\
    \ lastVal = 0;\n  var lastLen = 0;\n\n  for (var i = 0; i < s.length; i++) {\n\
    \    var val = s.charCodeAt(i);\n    sum += val - lastVal;\n    lastVal = val;\n\
    \    lastLen++;\n  }\n  sum += lastVal;\n\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp02ehw1mi.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp02ehw1mi.js:33:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp02ehw1mi.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s === undefined ||\
    \ s === null){\n    return -1;\n  }\n  let sum = 0;\n  for(let i = 0; i < s.length;\
    \ i++){\n    const value = s.charCodeAt(i);\n    if(value > 64 && value < 91){\n\
    \      sum++;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpoorx3523.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpoorx3523.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpoorx3523.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = 0;\n  for(const\
    \ char of s) {\n    if(char >= '0' && char <= '9') result += parseInt(char) -\
    \ 48;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpw9ilsmzm.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpw9ilsmzm.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpw9ilsmzm.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet result = 0\n\tfor(let\
    \ index = 0; index < s.length; index++){\n\t\tresult += s.charCodeAt(index) -\
    \ 64\n\t}\n\treturn result\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpf9x710xq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpf9x710xq.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpf9x710xq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for\
    \ (var i=0;i<s.length; i++){\n    if ( s.charCodeAt(i) > 96 ){\n      sum += s.charCodeAt(i)\
    \ - 96;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmplqgzg3e3.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmplqgzg3e3.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmplqgzg3e3.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const arr = s.split(\"\
    \")\n  return arr.map(v=>v.charCodeAt(0)).filter(v=>v>=48 && v<=57).reduce((a,b)=>a+b,0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpbk405jpy.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpbk405jpy.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpbk405jpy.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').sort().reduce((a,b,i)=>a+=b*64-97+i,0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpty8p_tpc.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpty8p_tpc.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpty8p_tpc.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0\n\tfor (let\
    \ i = 0; i < s.length; i++){\n\t\tsum += s.charCodeAt(i) - 'a'.charCodeAt()\n\t\
    }\n\treturn sum\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp0sm61irv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp0sm61irv.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp0sm61irv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let char of s) {\n    sum += char.charCodeAt(0) - 64;\n  }\n  return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp62pe_cyz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp62pe_cyz.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp62pe_cyz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  s = s.replace(/[^A-Z]/g,'');\
    \ // remove all non-ASCII chars\n  s = s.replace(/([a-zA-Z])/g,'$1$1'); // double\
    \ all non-letters to get all letters just in case\n  s = s.replace(/([a-zA-Z])/g,'$2$1$2');\
    \ // triple all letters since we want the double letters to add up to a multiple\
    \ of 3\n  return s.replace(/[a-zA-Z]/g,'$&$1$2$3'); // add up the letters\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpuvg0bggm.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpuvg0bggm.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpuvg0bggm.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn s.match(/[A-Z]/g).reduce((a,b)=>(+a||0)+(+b||0),\
    \ 0)\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpf3vvhxff.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpf3vvhxff.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpf3vvhxff.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0\n    let\
    \ length = s.length\n    for(let i = 0; i < length; i++){\n        if(Number(s[i])\
    \ >= 48 && Number(s[i]) <= 57){\n            sum += Number(s[i])\n        }\n\
    \    }\n    return sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjleuakdu.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjleuakdu.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjleuakdu.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for (var i = 0; i < s.length; i++) {\n        var charCode = s.charCodeAt(i);\n\
    \        if (charCode < 97 || charCode > 101) {\n            sum += 0;\n     \
    \   } else {\n            sum += charCode - 32;\n        }\n    }\n    return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp9lach_ia.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp9lach_ia.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp9lach_ia.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(function(d){\n\
    \        return d.charCodeAt(0) - 'a'.charCodeAt(0);\n    }).reduce(function(a,b){\n\
    \        return a + b;\n    }, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpx1261tqm.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpx1261tqm.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpx1261tqm.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for(let\
    \ c of s){\n    if(c.toUpperCase() === c)\n      sum += c.charCodeAt(0);\n  }\n\
    \  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpb703b65k.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpb703b65k.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpb703b65k.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum=0;\n\tfor(var\
    \ i=0; i<s.length; i++){\n\t\tsum+=s.charCodeAt(i) > 64 && s.charCodeAt(i) < 91\
    \ ? s.charCodeAt(i) - 55 : s.charCodeAt(i) - 48;\n\t}\n\treturn sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpei8kuxcn.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpei8kuxcn.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpei8kuxcn.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) >= 48 && s.charCodeAt(i)\
    \ <= 57){\n      result += s.charCodeAt(i) - 48;\n    } else {\n      result +=\
    \ s.charCodeAt(i);\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpmijmj7vs.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpmijmj7vs.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpmijmj7vs.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var s = s + '',\n\
    \        sum = 0;\n    for(var i = 0; i <= s.length; i++){\n        sum += toUpperCase(s.charAt(i))\
    \ === s.charAt(i) ? parseInt(s.charAt(i), 10) : parseInt(s.charAt(i), 10);\n \
    \   }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpe09mutyd.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpe09mutyd.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpe09mutyd.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  for (let\
    \ i = 0; i < s.length; i++){\n    if (isNaN(s.charAt(i)) && s.charAt(i) !== '\
    \ ') {\n      sum += s.charCodeAt(i)\n    }\n  }\n  return sum\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpue7qcs95.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpue7qcs95.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpue7qcs95.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = 0;\n  let\
    \ chars = s.split(\"\");\n  for (let i = 0; i < chars.length; i++){\n    if(chars[i].match(/[\\\
    d]/g)) {\n      result += chars[i].charCodeAt(0) - 48;\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp69wx2hic.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp69wx2hic.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp69wx2hic.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   var sum = 0; \n   var\
    \ count = 0; \n   for (var i=0; i<s.length; i++){\n      var code = s.charCodeAt(i);\
    \ // Convert string to character\n      if (code >= 65 && code <= 90) sum += code;\
    \ // If character is between A-Z add to sum\n      if (code > 64) count++; //\
    \ Increment count if character is greater than A\n   }\n   return sum + count\
    \ * 64; // Return the sum of the count of upper characters\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpt8df0r_p.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpt8df0r_p.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpt8df0r_p.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var chars = s.replace(/[^A-Za-z]/g,\"\
    \"),\n        sum   = 0;\n    chars.split(\"\").forEach(function(char){\n    \
    \    sum += char.charCodeAt(0) - (char.charCodeAt(0) - 32) * 2;\n    });\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpodyzauwq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpodyzauwq.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpodyzauwq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  // write code here\n\
    \  var sum = 0;\n  for(var i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i)\
    \ - 'a'.charCodeAt(0);\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpt_qb9uqv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpt_qb9uqv.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpt_qb9uqv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let ans = 0,\n    i\
    \ = 0;\n  while(i < s.length){\n    ans += +s.charAt(i) - 48;\n    i++;\n  }\n\
    \  return ans;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpea17cv2e.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpea17cv2e.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpea17cv2e.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  let upperCase\
    \ = true\n  for( let char of s )\n    sum += (upperCase)? char.codePointAt(0)\
    \ - 64 : char.codePointAt(0)\n  upperCase = false\n  return sum\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpktp2zfhd.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpktp2zfhd.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpktp2zfhd.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const result = 0;\n\
    \  for(let i = 0; i<s.length; i++){\n    result += s.charCodeAt(i) - 48;\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmprhggczz0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmprhggczz0.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmprhggczz0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0, i\
    \ = 0;\n    while(i<s.length){\n        if(s[i]>='A' && s[i]<='Z'){\n        \
    \    result += s[i] - 'A' + 10;\n        }\n        i++;\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpqs2lztx_.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpqs2lztx_.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpqs2lztx_.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor(var\
    \ i =0; i<s.length; i++){\n\t\tsum = sum + s.charCodeAt(i);\n\t}\n\treturn sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp7yqa92qz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp7yqa92qz.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp7yqa92qz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977424
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 'a'.charCodeAt(0);\n\
    \  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp7rgxat5z.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp7rgxat5z.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp7rgxat5z.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return sum(map( toUpper,\
    \ s.split(\"\") ));\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp8q3mq7cg.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp8q3mq7cg.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp8q3mq7cg.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum=0;\n\tfor (var\
    \ i = 0; i < s.length; i++){\n\t\tsum += s.charCodeAt(i) > 47 && s.charCodeAt(i)\
    \ < 58 ? s.charCodeAt(i) - 55 : s.charCodeAt(i) - 48;\n\t}\n\treturn sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdr98p7q3.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdr98p7q3.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdr98p7q3.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(c\
    \ => c.charCodeAt(0)).filter(c => c >= 64 && c <= 90).reduce( (prev, curr) =>\
    \ prev + curr );\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpaxf7w8iz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpaxf7w8iz.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpaxf7w8iz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var result = 0;\n  for\
    \ (var i=0; i<s.length; i++)\n    if (s.charCodeAt(i) > 47 && s.charCodeAt(i)\
    \ < 58)\n      result += s.charCodeAt(i);\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2lhkeb36.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2lhkeb36.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2lhkeb36.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(val){\n\
    \    return val + val.charCodeAt(0);\n  }).reduce(function(acc, val){\n    return\
    \ acc + val;\n  }, 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpl3vi2isf.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpl3vi2isf.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpl3vi2isf.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    for(let i = 0; i <\
    \ s.length; i++){\n        if (s[i].charCodeAt(0) < 'a'.charCodeAt(0)) continue;\n\
    \        if (s[i].charCodeAt(0) > 'z'.charCodeAt(0)) continue;\n        return\
    \ s[i].charCodeAt(0) + digitSum(s.substring(i + 1, s.length));\n    }\n    return\
    \ s.charCodeAt(0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp7yod23r_.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp7yod23r_.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp7yod23r_.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    sum = sum + s.charCodeAt(i);\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp_oxit6_k.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp_oxit6_k.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp_oxit6_k.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++) {\n    var c = s.charCodeAt(i) - 97;\n    sum\
    \ = (sum + c) % 97;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp6qt2m9nw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp6qt2m9nw.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp6qt2m9nw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var digitSum = 0;\n\
    \    var currentCharCode;\n    for (var i = 0; i < s.length; i++){\n        currentCharCode\
    \ = s.charCodeAt(i);\n        if (currentCharCode < 48 || currentCharCode > 57){\n\
    \            break;\n        }\n        digitSum += currentCharCode - 48;\n  \
    \  }\n    return digitSum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpvoy61pmq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpvoy61pmq.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpvoy61pmq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum=0;\n\tfor(var\
    \ i=0;i<s.length;i++){\n\t\tsum+=s.charCodeAt(i)-64;\n\t}\n\treturn sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp5r2n5406.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp5r2n5406.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp5r2n5406.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let n = s.split(\"\
    \").reduce((sum, c)=>sum+c.charCodeAt(0),0);\n    return n<65||n>122?0:n+(n-65)+(n-122);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpkzgmkn9j.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpkzgmkn9j.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpkzgmkn9j.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const result = [];\n\
    \  for(const c of s){\n    if(/[A-Z]/.test(c)){\n      result.push(c.charCodeAt(0)\
    \ - 'A'.charCodeAt(0));\n    } else {\n      result.push(0);\n    }\n  }\n  return\
    \ result.reduce((a, b) => a + b, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpszf4fiqe.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpszf4fiqe.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpszf4fiqe.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split(\"\"\
    ).reduce(function(sum, char){\n        return sum + String.fromCharCode(\n   \
    \         (char.charCodeAt(0) - 64) % 26 + 64\n        );\n    }, 0);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp1dm_ward.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp1dm_ward.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp1dm_ward.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let n = s.split('').map(c\
    \ => c.charCodeAt()).reduce((acc, cur)=> acc+cur);\n    return n\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpsyrvddho.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpsyrvddho.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpsyrvddho.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s.length==0) return\
    \ 0\n  if(s.length==1) return s.charCodeAt(0)-64\n  \n  var sum=s.charCodeAt(0)-64\n\
    \  for(var i=1;i<s.length-1;i++){\n    sum+=s.charCodeAt(i)-64\n  }\n  return\
    \ sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp63fcs6ci.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp63fcs6ci.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp63fcs6ci.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(function(v){\n\
    \        return v.charCodeAt(0) - 97;\n    }).reduce(function(a,b){\n        return\
    \ a + b;\n    });\n}\n</code>\n<|/ a tags=arrays,functional-programming,javascript\
    \ |>\n<| a tags=arrays,functional-programming,javascript |>\nHere is my implementation\
    \ using reduce\n<code>\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwdk0udw2.js:24\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let strArr = s.split('');\n\
    \    let result = 0;\n    for(let i=0; i<strArr.length; i++){\n        let item\
    \ = strArr[i];\n        for(let j=0; j<item.length; j++){\n            result+=item.charCodeAt(j)-64;\n\
    \        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2h74bli5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2h74bli5.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2h74bli5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(function(e){\n\
    \        return e.charCodeAt(0);\n    }).reduce(function(a,b){\n        return\
    \ a + b;\n    }, 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp4mkdex96.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp4mkdex96.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp4mkdex96.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let index = 0;\n    for(let char of s){\n        sum += char.charCodeAt(0) -\
    \ 96;\n        index++;\n        if(index === s.length){\n            index =\
    \ 0;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpnfaaf_z1.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpnfaaf_z1.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpnfaaf_z1.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tconst sum= 0;\n\tfor\
    \ (let i of s) {\n\t\tsum+= (i*1)%26;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp36m9rbsy.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp36m9rbsy.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp36m9rbsy.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const sum=0;\n   \
    \ for(const char of s)\n        if(char>=48&&char<=57)\n            sum+=char-48\n\
    \    return sum\n}\n</code>\n<|/ a tags=javascript dscore=1 |>\n<| c |>\nthanks,\
    \ I've tried this as well and it works fine. My question was about why this does\
    \ not work.\n<|/ c |>\n<| c |>\nBecause the characters of your string are not\
    \ numbers. Try `typeof 'a'`. It returns `string`. `'a'+1` returns `'b'`, but `'a'\
    \ !== 1`.\n<|/ c |>\n<| c |>\nI see, thanks! I'm new to JS and was wondering why\
    \ this does not work with a string, as I thought that it is doing the exact same\
    \ thing as the code above. Is it because strings are a special type in JS?\n<|/\
    \ c |>\n<| c |>\nYes, they are a special type in JS. And this behavior is documented\
    \ at [Mozilla Developer Network: String types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String).\n\
    <|/ c |>\n<| a dscore=0 tags=javascript |>\nThe answer provided by is correct,\
    \ and I've tried it myself.\nI suggest you read this blog post, which explained\
    \ why what you are trying to do is not possible.\nFor your case, you can modify\
    \ digitSum like this:\n<code>\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpgw4bcu_z.js:24\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').reduce(function(acc,\
    \ c, i){\n        if(c.match(/[0-9]/g)){\n            acc += c.charCodeAt(0) -\
    \ 96;\n        }\n        return acc;\n    }, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpoqsd18d5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpoqsd18d5.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpoqsd18d5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(x\
    \ => x.charCodeAt(0)).filter(x => x >= 65 && x <= 70).reduce((x,y) => x + y)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpumbx3rzv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpumbx3rzv.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpumbx3rzv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const re=/[a-z]/g;\n\
    \    let result=0;\n    s.replace(re,(x) => result+=x.charCodeAt(0));\n    return\
    \ result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp6q32bkhw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp6q32bkhw.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp6q32bkhw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(\
    \ s => s.charCodeAt(0) - 'A'.charCodeAt(0) ).reduce((a,b)=>a+b)\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmps_a280pr.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmps_a280pr.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmps_a280pr.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(function(x){return\
    \ x.match(/[0-9]/)}).reduce(function(a,b){return a+parseInt(b)});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpxamioo70.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpxamioo70.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpxamioo70.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const result = [];\n\
    \  let sum = 0;\n  for(let i=0; i<s.length; i++){\n    sum += (s[i]+32) % 96;\n\
    \  }\n  return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2dppx4il.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2dppx4il.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2dppx4il.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    if(s.charCodeAt(i) > 48 && s.charCodeAt(i)\
    \ < 57) sum += s.charCodeAt(i)-48\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp32inb7yy.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp32inb7yy.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp32inb7yy.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn s.split('').filter(char\
    \ => char >= 'A' && char <= 'Z').map(char => char.charCodeAt(0) - 'A'.charCodeAt(0)\
    \ + 1).reduce((acc, cur) => acc + cur, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpq02cu3k_.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpq02cu3k_.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpq02cu3k_.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    let x = s.charCodeAt(i);\n    if(x >= 65 &&\
    \ x <= 90){\n      sum += x;\n    } else if(x >= 97 && x <= 122){\n      sum +=\
    \ x - (x + 96);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdns_klst.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdns_klst.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdns_klst.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let s = s.replace(/\\\
    s+/g, '');\n    let sum = 0;\n    for (let i = 0; i < s.length; i++){\n      \
    \  let num = parseInt(s[i]);\n        if (!isNaN(num) && num > 0)\n          \
    \  sum += num;\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpouar2cao.js:18\n    let s = s.replace(/\\s+/g, '');\n        ^\n\
    \nSyntaxError: Identifier 's' has already been declared\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  let codes\
    \ = s.split('')\n  let i = 0\n  while (i < codes.length) {\n    sum += codes[i].charCodeAt(0)\
    \ - 'A'.charCodeAt(0)\n    i++\n  }\n  return sum\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmputno3uid.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmputno3uid.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmputno3uid.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  // Write your code in\
    \ Javascript\n  var digitSum = 0; //initial value\n\n  for (var i = 0; i < s.length;\
    \ i++){\n    var character = s[i]; //read one character at a time\n    \n    if\
    \ (character >= 'a' && character <= 'z'){ //if character is in a-z\n      digitSum\
    \ += character - 'a'; //add value of ASCII code of current character ('a' for\
    \ character 'a')\n    }\n  }\n  return digitSum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpla42g2hv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpla42g2hv.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpla42g2hv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0;\n\
    \    let len = s.length;\n    let index = 0;\n    while (index < len) {\n    \
    \    let char = s[index];\n        if (char.charCodeAt(0) > 64 && char.charCodeAt(0)\
    \ < 91){\n            result += char.charCodeAt(0);\n            index++;\n  \
    \      }\n        else {\n            index++;\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp33hji2uh.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp33hji2uh.js:33:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp33hji2uh.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(c){return\
    \ c.charCodeAt(0)-64}).reduce(function(a,b){return a+b})\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp64tobfp2.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp64tobfp2.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp64tobfp2.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if(s === \"a\" ||\
    \ s === \"A\"){\n        return 0\n    }\n    let sum = 0\n    for(let i=0; i<\
    \ s.length; i++){\n        if(s.charCodeAt(i)>=65 && s.charCodeAt(i)<=90){\n \
    \           sum += s.charCodeAt(i)-65\n        }\n    }\n    return sum\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpxj2o6juw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpxj2o6juw.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpxj2o6juw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < s.length; i++){\n\t\tsum += getCharASCII(s.charAt(i)) - 64;\n\t}\n\
    \treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpkc1w455f.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpkc1w455f.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpkc1w455f.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i = 0; i < s.length; i++) {\n        let char = s.charAt(i);\n    \
    \    if (char.match(/\\d/)) {\n            sum += char.charCodeAt(0) - 48;\n \
    \       }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp1xxpzlmp.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp1xxpzlmp.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp1xxpzlmp.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split(\"\"\
    ).reduce((acc, c)=>{\n    return acc+c.charCodeAt(0)-64;\n  }, 0);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpw08s86j0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpw08s86j0.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpw08s86j0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i=0;i<s.length;i++){\n        sum += getCharCodeAt(s, i).keyCode;\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpcu_k05og.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpcu_k05og.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpcu_k05og.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let digitSum = 0\n \
    \ for (let i = 0; i < s.length; i++){\n    digitSum += s.charCodeAt(i) - 55\n\
    \  }\n  return digitSum\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmps9n1qnv3.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmps9n1qnv3.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmps9n1qnv3.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.replace(/[A-Za-z]/g,\
    \ function(d){\n    return d.charCodeAt(0);\n  }).reduce(function(prev,next){\n\
    \    return prev + parseInt(next);\n  },0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp1nyn_cff.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp1nyn_cff.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp1nyn_cff.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar total = 0;\n\tfor\
    \ (var i = 0; i < s.length; i++){\n\t\tif (s.charCodeAt(i) > 47 && s.charCodeAt(i)\
    \ < 58){\n\t\t\ttotal = total + s.charCodeAt(i) - 48;\n\t\t}\n\t}\n\treturn total;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp9n933ypt.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp9n933ypt.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp9n933ypt.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const chars = s.replace(/[^a-z]/gi,\
    \ \"\");\n  return chars.split('').reduce((a,b)=>a+b.charCodeAt(0), 0);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpmgnofsvc.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpmgnofsvc.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpmgnofsvc.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s.charCodeAt(i) > 47){\n    \
    \        sum += s.charCodeAt(i) - 48;\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpbapvk0nd.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpbapvk0nd.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpbapvk0nd.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn s.split('').map(function\
    \ (char) {\n\t\treturn char.charCodeAt(0);\n\t}).reduce(function (acc, num) {\n\
    \t\treturn acc + num;\n\t}, 0);\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp6u7mo8uw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp6u7mo8uw.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp6u7mo8uw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(function(c){return\
    \ c.match(/[A-Z]/) ? c.charCodeAt(0)-96 : 0}).reduce(function(sum, c){return sum+c},0);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpog6nucb_.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpog6nucb_.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpog6nucb_.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let ch of s) {\n    sum += ch.codePointAt(0);\n  }\n  return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp50hlhsr5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp50hlhsr5.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp50hlhsr5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').reduce(function(sum,character){\n\
    \        return sum+character.codePointAt(0);\n    }, 0);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpk9u9w__j.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpk9u9w__j.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpk9u9w__j.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0; //init\n\
    \tfor(let i = 0; i < s.length; i++){\n\t\tsum += s.charCodeAt(i) - 96;\n\t}\n\t\
    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp4wza1g2m.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp4wza1g2m.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp4wza1g2m.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for(let\
    \ char of s.split(\"\")){\n    sum += char.charCodeAt() - 64;\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpkpk7z0gb.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpkpk7z0gb.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpkpk7z0gb.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i of s.split('')){\n        sum += i.charCodeAt(0) - 48;\n    }\n  \
    \  return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpj4qgpqip.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpj4qgpqip.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpj4qgpqip.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0; // initialize\
    \ sum\n  for(let i = 0; i < s.length; i++){\n    sum += +s.charAt(i).charCodeAt(0)\
    \ - 48;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmphfanwxf9.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmphfanwxf9.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmphfanwxf9.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        var charCode = s.charCodeAt(i);\n\
    \        sum += charCode - (charCode < 58 ? 48 : 57);\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpgp77per6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpgp77per6.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpgp77per6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let arr=[];\n    for(let\
    \ i=0;i<s.length;i++){\n        arr.push(s.charCodeAt(i)-32);\n    }\n    let\
    \ sum=0;\n    for(let i=0;i<arr.length;i++){\n        sum+=arr[i];\n    }\n  \
    \  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmprpv_avb5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmprpv_avb5.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmprpv_avb5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let res = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    res += s.charCodeAt(i) > 64 && (s.charCodeAt(i)\
    \ - 48);\n  }\n  return res;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpk_qrnvnh.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpk_qrnvnh.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpk_qrnvnh.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i = 0; i < s.length; i++){\n        let c = s.charCodeAt(i);\n    \
    \    if (c >= 97 && c <= 122){\n            sum += c - 97;\n        }\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpf0h20d0i.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpf0h20d0i.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpf0h20d0i.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(c){\n\
    \    return c.charCodeAt(0) + (c.charCodeAt(1) == 32? 1 : 0)\n  }).reduce((sum,\
    \ num) => sum + num)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp4odxehje.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp4odxehje.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp4odxehje.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return Number(s.match(/[A-Z]+/g).join(\"\
    \"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmphvdmxqlm.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmphvdmxqlm.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmphvdmxqlm.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn s.match(/[A-Z]/g).reduce((a,b)\
    \ => a+(b => b.charCodeAt(0) >= 65 ? 1 : 0), 0);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpks7wchd6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpks7wchd6.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpks7wchd6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return sum(s.match(/[a-z\\\
    d]/g).map(function(x){\n        return x.charCodeAt(0) - 64;\n    }));\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmptmew9goo.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmptmew9goo.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmptmew9goo.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(v){return\
    \ +v + 26}).reduce((a, b) => a+b, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpc1hdutkc.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpc1hdutkc.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpc1hdutkc.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tconst arr = s.split('').map(n\
    \ => n.charCodeAt(0));\n\treturn arr.reduce((pre, cur) => pre+cur);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp881ikrxf.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp881ikrxf.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp881ikrxf.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  for(let\
    \ i = 0; i < s.length; i++){\n    sum = sum + s[i].charCodeAt(0) - 64\n  }\n \
    \ return sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp97rhz8a7.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp97rhz8a7.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp97rhz8a7.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0; \n  s.split('')\n\
    \    .forEach(a => sum += a >= 'a' ? a - 'a' + 9 : 0)\n  return sum; \n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmplddy3qfs.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmplddy3qfs.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmplddy3qfs.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.match(/[a-z]+/g).reduce((sum,\
    \ word) => sum + word.length, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjymi7mlz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjymi7mlz.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjymi7mlz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let str = '';\n  \
    \  for (let i = 0; i < s.length; i++){\n        let curr = s.charCodeAt(i); //\
    \ get character at i\n        curr = curr - 32; // subtract ASCII code of 'A'\
    \ from character\n        curr = curr * curr // square it\n        str = (curr\
    \ + str) % 10; // add to str\n    }\n    return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpb126f5ed.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpb126f5ed.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpb126f5ed.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var result = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s.charCodeAt(i) > 64)\n      result += s.charCodeAt(i)\
    \ - 65;\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpvccwd0uz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpvccwd0uz.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpvccwd0uz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // Your code here\n\
    \    var sum = 0;\n    for(var i = 0; i < s.length; i++){\n        var chr = s.charCodeAt(i);\n\
    \        sum += (chr >= 65 && chr <= 90) ? chr - 65 : 0;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpfo7fx7nr.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpfo7fx7nr.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpfo7fx7nr.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if(s === null || s\
    \ === undefined){\n        return\n    }\n    let sum = 0;\n    let n = s.length;\n\
    \    for (let i=0; i<n; i++){\n        let c = s.charCodeAt(i);\n        if ((c\
    \ >= '0') && (c <= '9')){\n            sum += c - '0';\n        }\n        else{\n\
    \            sum += Math.pow(10, (s.length - i - 1)) * c;\n        }\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpor3oyayo.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpor3oyayo.js:34:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpor3oyayo.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if (s == \"\"){\n\
    \        return 0\n    }\n    var sum = 0\n    for (i = 0; i < s.length; i++){\n\
    \        let code = s.charCodeAt(i)\n        if (code >= 65 && code <= 90){\n\
    \            sum += code\n        }\n    }\n    return sum\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp22torkrq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp22torkrq.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp22torkrq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s === \"\"){\n  \
    \  return 0\n  }\n  let sum = 0;\n  let chars = [...s];\n  for(let i = 0; i <chars.length;\
    \ i++){\n    if(chars[i] === chars[i+1]){\n      sum+=chars[i]\n    }\n  }\n \
    \ return sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpa47e_1c4.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpa47e_1c4.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpa47e_1c4.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').reduce((a,b)=>a+b.codePointAt(0).toString(2).split('').reduce((a,b)=>a+=+b),\
    \ 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpqnkk0w_0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpqnkk0w_0.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpqnkk0w_0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for\
    \ (var i=0; i<s.length; i++){\n    var code = s.charCodeAt(i);\n    if (code >=\
    \ 65 && code <= 90){\n      sum = sum + code - 65;\n    }\n    else if (code >=\
    \ 97 && code <= 122){\n      sum = sum + code - 97;\n    }\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpv6fdcc31.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpv6fdcc31.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpv6fdcc31.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.match(/[a-z]+/g).reduce((acc,\
    \ val) => acc + val.toUpperCase().charCodeAt(0), 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpaz27ci_1.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpaz27ci_1.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpaz27ci_1.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0;\n\tfor\
    \ (let i = 0; i < s.length; i++){\n\t\tlet num = s.charCodeAt(i) - 96;\n\t\tif\
    \ (num < 0){\n\t\t\tnum += 9;\n\t\t}\n\t\tsum += num;\n\t}\n\treturn sum;\n}\n\
    \n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp9j5dj54j.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp9j5dj54j.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp9j5dj54j.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  // Write your code here\n\
    \  var total = 0;\n  for(var i=0;i<s.length;i++){\n    if(s.charCodeAt(i) > 64)\n\
    \      total += s.charCodeAt(i) - 48;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjc68wekz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjc68wekz.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjc68wekz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn s.split('').filter(function(char){\n\
    \t\treturn (char)>= 'A' && char <= 'Z' ? 'A' :\n\t\t\t\t(char)>= 'a' && char <=\
    \ 'z' ? 'a' :\n\t\t\t\t(char) >=='0' && char <= '9' ? '0' : false;\n\t}).reduce(function(prev,\
    \ curr){\n\t\treturn (prev) + (curr);\n\t});\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzwy7h7z2.js:21\n\t\t\t\t(char) >=='0' && char <= '9' ? '0' : false;\n\
    \t\t\t\t         ^\n\nSyntaxError: Unexpected token '='\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum=0;\n    for\
    \ (let i=0; i<s.length; i++){\n        sum+=s.charCodeAt(i);\n    }\n    return\
    \ sum;\n}\n<|/ file dstars=0 ext=.js |>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp5a8mgyws.js:24\n<|/ file dstars=0 ext=.js |>\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let str= \"\"\n  for\
    \ (let i=0; i<s.length; i++){\n    str+=String.fromCharCode(s.charCodeAt(i)+64)\n\
    \  }\n  return str.charCodeAt(0)\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpelkipnk7.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpelkipnk7.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpelkipnk7.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i = 0; i < s.length; i++){\n        if (s.charCodeAt(i) > 48 && s.charCodeAt(i)\
    \ < 58){\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp0j3yia_q.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp0j3yia_q.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp0j3yia_q.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // write code here\n\
    \    var sum = 0;\n    for(var i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i);\n\
    \    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpb2m7znmx.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpb2m7znmx.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpb2m7znmx.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').reduce(function(s,v){\n\
    \    return s+v.charCodeAt(0);\n  },0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpq_df_okq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpq_df_okq.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpq_df_okq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(c){return\
    \ c.charCodeAt(0) - 64}).reduce(function(a,b){return a + b});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpx6itmp4h.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpx6itmp4h.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpx6itmp4h.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        var code = s.charCodeAt(i);\n  \
    \      if(code < 65 || code > 90){\n            sum += code - 48;\n        } else\
    \ if(code > 122){\n            sum += code - 57;\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp_1gw3m2u.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp_1gw3m2u.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp_1gw3m2u.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // Get array of chars\
    \ [a,b,c,d]\n    let digitChars = s.split('').map(c => c.charCodeAt(0) - 'a'.charCodeAt(0));\
    \ \n    // Remove negative values\n    digitChars = digitChars.filter(c => c >\
    \ 0);\n    // Sum up all the values\n    return digitChars.reduce((total, digit)\
    \ => total + digit);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nAh. I missed that\
    \ in the problem description, but this does seem to be the most straightforward\
    \ approach. I think I'll probably stick with this for now, as I have been able\
    \ to learn more from other answers than from my own trial and error attempts :)\n\
    <|/ c |>\n<| c |>\nYou're welcome! I've been doing this type of problem problems\
    \ often enough that I'm a fan of the challenge challenge... even if it can be\
    \ solved in a few lines of code :)\n<|/ c |>\n<| a |>\n<code>\nconst sumUpper\
    \ = (str) => {\n  return str\n    .replace(/[A-Z]/g, (m) => {\n      return m.charCodeAt(0)\
    \ - 'a'.charCodeAt(0);\n    })\n    .reduce((acc, item) => acc + item, 0);\n};\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkuxv4ef6.js:25\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i=0; i< s.length; i++){\n        var c = s.charCodeAt(i);\n        if(c>=65\
    \ && c<=90) sum += c - 65;\n        if(c>=97 && c<=122) sum += c - 97;\n     \
    \   if(c>=48 && c<=57) sum += c - 48;\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpon_c091w.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpon_c091w.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpon_c091w.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i of s){\n    sum = sum + +i;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpe25_2s5g.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpe25_2s5g.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpe25_2s5g.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const sum = 0;\n \
    \   for (let i = 0; i < s.length; i++){\n        if(s.charCodeAt(i) > 64){\n \
    \           sum = sum + s.charCodeAt(i) - 65;\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp9yysw9m0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp9yysw9m0.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp9yysw9m0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return String(s.charCodeAt(0)).split('').reduce((a,b)\
    \ => a + parseInt(b), 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2zari8j0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2zari8j0.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2zari8j0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const result = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) > 9){\n      result\
    \ -= s.charCodeAt(i) - 48;\n    }else{\n      result += s.charCodeAt(i);\n   \
    \ }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmplgvubkf4.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmplgvubkf4.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmplgvubkf4.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(function(x){\n\
    \    var a = x.charCodeAt(0);\n    return (65 > a) + 10\n  }).reduce(function(prev,\
    \ cur){\n    return prev + cur;\n  }, 0)\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpu4nbpeo0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpu4nbpeo0.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpu4nbpeo0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i = 0; i<s.length; i++){\n    sum = sum + getDigit(s[i], i);\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpkuy6leuz.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpkuy6leuz.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpkuy6leuz.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const sum = 0\n  let\
    \ code\n\n  for( let index = 0; index < s.length; index++){\n    code = s.charCodeAt(index)\n\
    \    if (code < 58 || code > 122){\n      sum += 0\n    }else{\n      sum += code\
    \ - 48\n    }\n  }\n  return sum\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpwz_bwwml.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpwz_bwwml.js:32:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpwz_bwwml.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if (s === null){\n\
    \        return 0;\n    }\n\n    // Convert the string to an array of characters.\n\
    \    var chars = s.split('');\n\n    // Sum only the uppercase characters.\n \
    \   var sum = 0;\n    for (var i = 0; i < chars.length; i++) {\n        if (chars[i].match(/[A-Z]/g))\
    \ {\n            sum += chars[i].charCodeAt(0);\n        }\n    }\n\n    return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp0iwyyujx.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp0iwyyujx.js:35:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp0iwyyujx.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s\n    .split('')\n\
    \    .reduce((sum, el) => {\n      sum += el.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0);\n\
    \      return sum;\n    }, 0);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmppr2y3vc7.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmppr2y3vc7.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmppr2y3vc7.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(function(c){\
    \ return c.match(/[A-Z]/) && c.charCodeAt(0) >= 'A'.charCodeAt(0) }).reduce(function(prev,cur){return\
    \ prev+cur.charCodeAt(0)},0)\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpaj3nppa5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpaj3nppa5.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpaj3nppa5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var result = 0;\n  for\
    \ (var i=0;i<s.length;i++){\n    var char = s.charCodeAt(i);\n    result += char;\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmph8oqtcxk.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmph8oqtcxk.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmph8oqtcxk.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor\
    \ (var i = 0; i < s.length; i++){\n\t\tsum += Number(s.charAt(i)) - 48;\n\t}\n\
    \treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpps9zswtx.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpps9zswtx.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpps9zswtx.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        let c = s.charCodeAt(i);\n\
    \        if(c >= 65 && c <= 90) {\n            result += c + (c - 'A');\n    \
    \    } else if(c >= 97 && c <= 122) {\n            result += c + (c - 'a');\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpuk9nn7gd.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpuk9nn7gd.js:32:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpuk9nn7gd.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    sum=0;\n    for(let\
    \ i=0;i<s.length();i++){\n        if (s.charCodeAt(i)>64)\n        sum+=s.charCodeAt(i)\
    \ - 64;\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp1jvylg9p.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp1jvylg9p.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp1jvylg9p.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const arr = s.split(\"\
    \").map(c => c.charCodeAt());\n    return arr.reduce((a,b) => a + b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2czwba5r.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2czwba5r.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2czwba5r.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0;\n\tfor(let\
    \ i = 0; i < s.length; i++){\n\t\tsum += String.fromCharCode(s.charCodeAt(i)).charCodeAt(0);\n\
    \t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpymtsksvj.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpymtsksvj.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpymtsksvj.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i=0;i<s.length();i++) {\n        sum += (s.charAt(i) > 'z' ? 10 : 0)\
    \ + s.charAt(i) - 'a';\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp5he6n00d.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp5he6n00d.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp5he6n00d.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n      if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \        sum += (s[i] - 'A') + 10;\n      } else {\n        sum += (s[i] - '0');\n\
    \      }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpxvdi3rmw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpxvdi3rmw.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpxvdi3rmw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return sumUp(s,0,s.length-1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpmcquz_mw.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpmcquz_mw.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpmcquz_mw.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // Write your code\
    \ here\n    var sum = 0;\n    for(var i in s){\n        sum += s.charCodeAt(i)\
    \ > 64 ? s.charCodeAt(i) - 65 : s.charCodeAt(i) - 97;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpddt3wz10.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpddt3wz10.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpddt3wz10.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(function(d){return\
    \ d>=48 && d<=57}).reduce(function(p,c){return p+c;},0);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmppa74cu7d.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmppa74cu7d.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmppa74cu7d.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    if(/[a-z]/.test(s[i])){\n      sum += s.charCodeAt(i)\
    \ - 96;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpktwuk9eu.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpktwuk9eu.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpktwuk9eu.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum=0;\n  for(const\
    \ ch of s) {\n    sum+=ch.charCodeAt(0)-64;\n  }\n  return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp86a8956x.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp86a8956x.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp86a8956x.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i<s.length; i++){\n        if(s[i].toUpperCase() !== s[i]){\n\
    \            sum += s[i].charCodeAt(0);\n        }\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpfgt6mehh.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpfgt6mehh.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpfgt6mehh.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let res = 0\n  for (let\
    \ i = 0; i < s.length; i++){\n    let code = s.charCodeAt(i)\n    if (code >=\
    \ '0' && code <= '9'){\n      res += code - '0'\n    } else {\n      break\n \
    \   }\n  }\n  return res\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpd4qtk2x7.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpd4qtk2x7.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpd4qtk2x7.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(Number).reduce(function(prev,\
    \ next){\n        return prev + Math.max(prev, next);\n    }, 0);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpd4gd9hd6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpd4gd9hd6.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpd4gd9hd6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < s.length; i++){\n\t\tif(s.charAt(i) >= 'a' && s.charAt(i) <= 'z'){\n\
    \t\t\tsum += s.charCodeAt(i) - 96;\n\t\t}\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpcmu7szvh.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpcmu7szvh.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpcmu7szvh.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - \"a\".charCodeAt(0);\n\
    \  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp6qmvsc24.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp6qmvsc24.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp6qmvsc24.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0\n    for\
    \ (var i=0; i<s.length; i++){\n        var c=s.charCodeAt(i)\n        if (c>64&&c<91){sum+=c}\n\
    \    }\n    return sum\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpubcdabiv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpubcdabiv.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpubcdabiv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = String.prototype.split.call(s,\
    \ \"\").reduce((acc,i)=>(i.toUpperCase()===i)?acc+i.charCodeAt(0): acc,0);\n \
    \ return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp5a8qreag.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp5a8qreag.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp5a8qreag.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 96;\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpb1jsqcu0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpb1jsqcu0.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpb1jsqcu0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let res = 0\n  let aChar\
    \ = s[0]\n  for(let i = 0; i < s.length; i++){\n    let c = s[i].toUpperCase()\n\
    \    if( c.charCodeAt(0) >= 65 && aChar >= 65 && aChar <= 90 ){\n      res +=\n\
    \      c.charCodeAt(0)-64\n    }\n    aChar = s[i]\n  }\n  return res\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmplumnuds5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmplumnuds5.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmplumnuds5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').map(Number).reduce(function(acc,\
    \ num){\n    return acc + num\n  }, 0)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp4j8hux66.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp4j8hux66.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp4j8hux66.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) > 64){\n      sum+=s.charCodeAt(i)\
    \ - 64;\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpyk04l9ud.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpyk04l9ud.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpyk04l9ud.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var result = 0;\n\
    \    for (var i = 0; i < s.length; i++){\n        var c = s.charCodeAt(i);\n \
    \       if (c >= 33 && c <= 48){\n            result +=1;\n        }\n    }\n\
    \    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdkiwd3d6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdkiwd3d6.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdkiwd3d6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    s +='';\n    var sum\
    \ = 0;\n    for(var i = 0; i < s.length; i++){\n       sum += s.charCodeAt(i)\
    \ > 47 && s.charCodeAt(i) < 58 ? s.charCodeAt(i) - 48 : 0;\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmphvw4jvc0.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmphvw4jvc0.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmphvw4jvc0.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s == \"\"){\n   \
    \ return 0;\n  }\n  var sum = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s.charCodeAt(i)\
    \ > 64 && s.charCodeAt(i) < 91){\n      sum += s.charCodeAt(i) - 64;\n    }\n\
    \  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjml6r4a2.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjml6r4a2.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjml6r4a2.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 48;\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpraqph_zk.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpraqph_zk.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpraqph_zk.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var str = \"\" + s;\n\
    \    var sum = 0;\n    var i;\n    for (i = 0; i < str.length; i++) {\n      \
    \  var char = str.charAt(i);\n        if (char.charCodeAt(0) >= 48 && char.charCodeAt(0)\
    \ <= 57) {\n            sum += char.charCodeAt(0) - 48;\n        }\n    }\n  \
    \  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdht2pw0f.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdht2pw0f.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdht2pw0f.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const re = /^[A-Z]+$/\n\
    \  return re.test(s) ? s.match(/[A-Z]+/g).reduce( (acc,curr) => acc + curr.charCodeAt(0)\
    \ - 64\n                                                            , 0)\n   \
    \                    : 0\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpf8pw_hga.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpf8pw_hga.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpf8pw_hga.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0;\n    for(i=0;i<\
    \ s.length;i++){\n        var ch=s[i];\n        if(ch.charCodeAt(0)>47 && ch.charCodeAt(0)<58){\n\
    \            sum+=ch.charCodeAt(0)-55;\n        }\n        else if(ch.charCodeAt(0)>64\
    \ && ch.charCodeAt(0)<71){\n            sum+=ch.charCodeAt(0)-55;\n        }\n\
    \    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmprdahb904.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmprdahb904.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmprdahb904.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split(\"\"\
    ).reduce(function(prev,curr){\n      return prev + curr.charCodeAt(0);\n    },0);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpz2_3b0ov.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpz2_3b0ov.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpz2_3b0ov.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(isNaN(s.charCodeAt(i))) break;\n\
    \        sum += s.charCodeAt(i);\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpt0n8youc.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpt0n8youc.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpt0n8youc.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').map(function(s){\n\
    \      return s.charCodeAt(0)-64;\n    }).reduce(function(a,b){\n      return\
    \ a+b;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp3bn_rcx8.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp3bn_rcx8.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp3bn_rcx8.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.match(/[A-Z\\\
    d]+/g).reduce(function(a, b){\n        return +a + +b\n    }, 0);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp84qlef9c.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp84qlef9c.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp84qlef9c.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ const codes = Array.from(s, chr => chr.codePointAt(0));\n    codes.forEach(code\
    \ => sum+=code);\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmplz6rzozs.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmplz6rzozs.js:24:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmplz6rzozs.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.replace(/[^\\\
    d]/g,\"\").replace(/[\\W_]/g,\"\").replace(/[\\W_]+/g,\"\").replace(/[\\W_]+/g,\"\
    \").length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpt_dejv5j.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpt_dejv5j.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpt_dejv5j.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for (var i = 0; i < s.length; i++){\n        if (s[i] >= 'A' && s[i] <= 'Z')\n\
    \            sum += (s[i] === 'A') - ('Z' - 'A');\n        else\n            sum\
    \ += s[i];\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpghi_rzml.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpghi_rzml.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpghi_rzml.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let lastChar;\n    for(let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i)\
    \ - 64;\n        lastChar = s[i];\n        if(lastChar !== lastChar.toLowerCase())\n\
    \            sum += 32\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp20lp6pxm.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp20lp6pxm.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp20lp6pxm.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 96 && s.charCodeAt(i)\
    \ < 123){\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| c |>\nThank you, that's awesome! I'm new to coding\
    \ so I wasn't sure of the best way to tackle this.\n<|/ c |>\n<| a tags=javascript\
    \ |>\nYou dont need to convert the input to a String as in Java, Javascript doesn't\
    \ have such an operation\n<code>\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmptp6yozw3.js:26\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split(\"\"\
    ).reduce(function(sum,c){\n        return sum + c.charCodeAt(0) - 96;\n    },0);\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks, this is very helpful. Could you elaborate\
    \ on this line `return s.split(\"\").reduce(function(sum,c){\n    return sum +\
    \ c.charCodeAt(0) - 96;\n},0);\n` as I don't understand what each parameter represents.\n\
    <|/ c |>\n<| c |>\nIt uses the reduce function to run a lambda on each character\
    \ in the string. the first parameter is the sum that is returned by the reduce\
    \ function, the second parameter is the current character that is being added\
    \ to the sum (sum is initialized to 0 here), the third parameter is the array\
    \ that is currently being operated on (the current character c being added to\
    \ the sum), and the fourth parameter is the initial value of the sum (initialized\
    \ to 0 here).\n<|/ c |>\n<| c |>\nI see what you mean. I'm still learning Javascript\
    \ and I think I've made some mistakes while trying to understand how reduce works.\n\
    <|/ c |>\n<| c |>\nThis works but I'm having trouble wrapping my head around it\
    \ still. What exactly is happening? It's not very intuitive for me to understand\
    \ how `reduce` is functioning.\n<|/ c |>\n<| a tags=javascript dscore=4 |>\n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfetas1d5.js:22\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.match(/[a-z]+/g).reduce((acc,\
    \ char) => {\n        return (+char.charCodeAt(0) + acc) % 10;\n    }, 0);\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpux6i9rgs.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpux6i9rgs.js:22:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpux6i9rgs.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ s.split('').forEach(letter => {\n        sum += letter.charCodeAt(0) - 64;\n\
    \    });\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjj07jyyf.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjj07jyyf.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjj07jyyf.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.match(/[a-z]+/gi).reduce(function(a,\
    \ b){\n    return a + b.charCodeAt(0);\n  }, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpuzgis6j1.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpuzgis6j1.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpuzgis6j1.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var result=0;\n  \
    \  for (var i = 0; i < s.length; i++){\n        result+=s.charCodeAt(i);\n   \
    \ }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmptf42zcxf.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmptf42zcxf.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmptf42zcxf.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  for(let\
    \ i=0; i < s.length; i++){\n    if(s.charCodeAt(i) > 48 && s.charCodeAt(i) < 58){\n\
    \      sum += s.charCodeAt(i)\n    }\n  }\n  return sum\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpvkb0lalu.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpvkb0lalu.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpvkb0lalu.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return digitSum_aux(\"\
    \",0,s);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpc3zmuc6u.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpc3zmuc6u.js:20:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpc3zmuc6u.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var total = 0;\n \
    \   for (var i=0; i<s.length; i++){\n        if (s.charCodeAt(i) > 47 && s.charCodeAt(i)\
    \ < 58)\n            total += s.charCodeAt(i) - 48;\n    }\n    return total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpm8dq7j5y.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpm8dq7j5y.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpm8dq7j5y.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i=0;i<s.length;i++){\n    if(s.charCodeAt(i)>96){\n      sum += s.charCodeAt(i)\
    \ - 65;\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpt_96scne.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpt_96scne.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpt_96scne.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum=0;\n\tfor(let\
    \ i=0; i<s.length; i++){\n\t\tlet char = s.charCodeAt(i)-32;\n\t\tsum += char;\n\
    \t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpxbgt64gh.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpxbgt64gh.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpxbgt64gh.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tvar\
    \ i = 0;\n\t\n\twhile(i<s.length){\n\t\tif(s.charCodeAt(i)>='A'&& s.charCodeAt(i)<='Z'){\n\
    \t\t\tsum+=s.charCodeAt(i);\n\t\t}\n\t\ti++;\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpd0u92pt6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpd0u92pt6.js:30:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpd0u92pt6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const regex = /(.)\\\
    1*|./g;\n  const match = s.match(regex);\n  return match.reduce(function(sum,\
    \ match){\n    return sum + parseInt(match);\n  }, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp_njnatlq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp_njnatlq.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp_njnatlq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if ( s.length < 1 )\
    \ {\n    return 0\n  }\n  let sum = 0\n  for (let i = 0; i < s.length; i++) {\n\
    \    const char = s[i]\n    if (char.charCodeAt(0) <= 57 && char.charCodeAt(0)\
    \ >= 48) {\n      sum += char.charCodeAt(0) - 48\n    }\n  }\n  return sum\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdjzoz5ee.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdjzoz5ee.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdjzoz5ee.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let chars = s.split('')\n\
    \    let total = 0\n    for(let i = 0; i< chars.length; i++){\n        if(chars[i].match(/[0-9]/)){\n\
    \            total += chars[i].charCodeAt(0) - 64\n        }\n    }\n    return\
    \ total\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpliug6uij.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpliug6uij.js:28:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpliug6uij.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0\n  let i\
    \ = 0\n  for (let char of s) {\n    if (char > \"z\") {\n      sum += char - \"\
    A\"\n    } else {\n      sum += char - \"a\"\n    }\n    i++\n  }\n  return sum\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp9vjvu9e6.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp9vjvu9e6.js:31:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp9vjvu9e6.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for (var i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) > 47 && s.charCodeAt(i)\
    \ < 58) {\n            sum += s.charCodeAt(i) - 48;\n        } else {\n      \
    \      sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp44m5s3bv.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp44m5s3bv.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp44m5s3bv.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split(\"\"\
    ).reduce(function(total, char){\n    return total + Math.max(char.charCodeAt(0)\
    \ - 'A'.charCodeAt(0), 0)\n  }, 0)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpjo2m8swa.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpjo2m8swa.js:23:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpjo2m8swa.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let char of s) {\n        sum += char.charCodeAt(0);\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp7zhzx7io.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp7zhzx7io.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp7zhzx7io.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0\n    for\
    \ (let i=0; i<s.length; i++) {\n        let code = s.charCodeAt(i)\n        if\
    \ (code > 64 && code < 91) sum += code\n    }\n    return sum\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp2rnj1w3y.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp2rnj1w3y.js:25:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp2rnj1w3y.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor\
    \ (var i = 0; i < s.length; i++){\n\t\tsum += (s.charCodeAt(i) > 64 && s.charCodeAt(i)\
    \ < 91) ? (s.charCodeAt(i) - 65 + 10) : (s.charCodeAt(i) - 97 + 10);\n\t}\n\t\
    return sum;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpejmhhj0l.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpejmhhj0l.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpejmhhj0l.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    s=s.replace(/[^\\\
    d]/g,'');\n    var arr=s.split('');\n    var sum=0;\n    arr.forEach(function(v){\n\
    \        sum+=parseInt(v);\n    })\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpdsk34oaq.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpdsk34oaq.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpdsk34oaq.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    let char = s[i];\n    let charCode = char.charCodeAt(0);\n\
    \    if (charCode > 96 && charCode < 123) {\n      result += charCode;\n    }\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpd95kky5u.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpd95kky5u.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpd95kky5u.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for (let i=0; i < s.length; i++){\n        if (s.charAt(i) < \"A\" || s.charAt(i)\
    \ > \"Z\"){\n            sum += s.charAt(i);\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpxypbv563.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpxypbv563.js:27:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpxypbv563.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // Write your code\
    \ here\n    var sum=0\n    for(var i=0;i<s.length-1;i++){\n        sum+=s.charCodeAt(i)-s.charCodeAt(i+1);\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmphuc38z95.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmphuc38z95.js:26:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmphuc38z95.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet result = 0;\n\t\
    for( let item of s ){\n\t\tif( item === 'A' || item === 'a' ){\n\t\t\tresult +=\
    \ 10;\n\t\t}else{\n\t\t\tresult += parseInt(item);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmpepnra4mr.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmpepnra4mr.js:29:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmpepnra4mr.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.replace(/[^\\\
    d]+/g,\"\").replace(/[^\\d]/g,\"\").replace(/[^\\d]/g,\"\").replace(/[^\\d]/g,\"\
    \").replace(/[^\\d]/g,\"\").replace(/[^\\d]/g,\"\").replace(/[^\\d]/g,\"\").replace(/[^\\\
    d]/g,\"\").replace(/[^\\d]/g,\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "internal/modules/cjs/loader.js:883\n  throw err;\n  ^\n\nError: Cannot\
    \ find module 'node:assert'\nRequire stack:\n- /tmp/tmp79e61na5.js\n    at Function.Module._resolveFilename\
    \ (internal/modules/cjs/loader.js:880:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\n\
    \    at Module.require (internal/modules/cjs/loader.js:952:19)\n    at require\
    \ (internal/modules/cjs/helpers.js:88:18)\n    at Object.<anonymous> (/tmp/tmp79e61na5.js:21:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\
    \ {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/tmp/tmp79e61na5.js' ]\n\
    }\n"
  stdout: ''
  timestamp: 1659977425

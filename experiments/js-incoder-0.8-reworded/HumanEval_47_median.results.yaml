language: js
name: HumanEval_47_median
results:
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l = l.filter(function(n){\n    return n != null;\n  });\n  var arr = l.sort(function(a,b){\n\
    \    return a-b;\n  });\n  var half = Math.floor(arr.length/2);\n  return Math.ceil((arr.length%2)?arr[half]:((arr[half-1]+arr[half])/2));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n5.5\n    at test (/tmp/tmp_m2pfp2k.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_m2pfp2k.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 5.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l || [];\n  var l = l.sort(function(a,b){return a - b});\n  var len\
    \ = l.length;\n  if(len%2==0){\n    return l[(len-1)/2 | 0];\n  }\n  else if(len%2==1){\n\
    \    return (l[(len-1)/2 | 0] + l[len/2-1 | 0]) / 2.0;\n  }\n  else{\n    return\
    \ l[len/2-1 | 0];\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpsaeydvkv.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsaeydvkv.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length,\n      a = +l.sort()[0]; // Ascending since the median (at\
    \ least in one dimension) is always at 0.5.\n  if(a){\n    return (a+0.5)/n;\n\
    \  }\n  return n;\n}\n},{}],4:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar window = _dereq_('../../window');\n\nmodule.exports = function normalizeWheel(/*object*/eventObject){\n\
    \  var sX = 0,\n      sY = 0,\n      // spinX, spinY\n  eX = 0,\n      eY = 0,\n\
    \      // elementX, elementY\n  w, // window width and height\n  n = window,\n\
    \  d = document,\n  e = d.documentElement,\n  g = d.getElementsByTagName('body')[0],\n\
    \  x = e.clientWidth || e.innerWidth || g.clientWidth || g.innerWidth,\n  y =\
    \ e.clientHeight || e.innerHeight || g.clientHeight || g.innerHeight;\n  \n  if('wheelDelta'\
    \  in eventObject) sY = window.wheelDeltaY ? window.wheelDeltaY / 100 : -(window.wheelDelta\
    \ / 100);\n  // webkit\n  if('wheelDeltaX' in eventObject) sX = window.wheelDeltaX\
    \ ? window.wheelDeltaX / 100 : -(window.wheelDelta / 100);\n  // Opera & Firefox\n\
    \  if('detail'      in eventObject) sY = window.detail ? -window.detail/2 : window.detail/1;\n\
    \  if('wheelDelta'  in eventObject) eY = eventObject.wheelDelta ? eventObject.wheelDelta/120\
    \ : -(window.wheelDelta/120);\n  // IE\n  if('axis'        in eventObject) eX\
    \ = eventObject.axis == window.HORIZONTAL_AXIS ? eX : 0;\n  if('wheelDeltaY' in\
    \ eventObject) eY = eventObject.axis == window.HORIZONTAL_AXIS ? -eY*window.pageXOffset\
    \ : eY;\n  if('wheelDeltaX' in eventObject) w   = eventObject.axis == window.HORIZONTAL_AXIS\
    \ ? window.innerWidth    : document.body.offsetWidth;\n};\n\n},{\"../../window\"\
    :8}],5:[function(_dereq_,module,exports){\n'use strict';\nvar has = Object.prototype.hasOwnProperty;\n\
    var bind = function(func, scope, args){\n  var tmp, ret;\n  tmp =function(){\n\
    \    return func.apply(scope, args || []);\n  };\n  ret = tmp;\n  return ret;\n\
    };\nvar partial = function(func){\n  var args = Array.prototype.slice.call(arguments,\
    \ 1);\n  return function(){\n    return func.apply(this, args.concat(\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfy45w6pf.js:14\n},{}],4:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var m = l.length, i, x;\n    \n    if (m < 1) return null;\n    \n    for\
    \ (i = (m - 1) / 2; i > 0; i--){\n        x = l[i];\n        if (x < m){\n   \
    \         l[i] = l[m-1];\n            l[m-1] = x;\n        } else if (x > m){\n\
    \            l[i] = x;\n        }\n    }\n    return l[0];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-10\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpyai74xwu.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyai74xwu.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortArrArrArr(l).sort()[Math.ceil((l.length / 2)-1)];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpsny8wrak.js:7\n  return sortArrArrArr(l).sort()[Math.ceil((l.length\
    \ / 2)-1)];\n  ^\n\nReferenceError: sortArrArrArr is not defined\n    at median\
    \ (/tmp/tmpsny8wrak.js:7:3)\n    at test (/tmp/tmpsny8wrak.js:14:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpsny8wrak.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var m = l[0], i = 1;\n    while(l[i]<m) i++;\n    if(l[i]>m) return l[i-1];\n\
    \    while(l[i-1]<m) i--;\n    return l[i-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprvne3z1x.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprvne3z1x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    // Sort l into ascending order. Quicker than O(n*log(n)).\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    // Return the middle value or the average\
    \ of the two middle values.\n    return (l[l.length / 2 - 1] + l[l.length / 2])\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpp34igzod.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp34igzod.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tvar n = l.length, f = Math;\n\tvar m = f(n)/2 | 0;\n\twhile(n--) {\n\t\tif(l[n]\
    \ >= m) break;\n\t}\n\treturn l[(n + 1 >> 1)];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7hz7ez7g.js:8\n\tvar m = f(n)/2 | 0;\n\t        ^\n\nTypeError:\
    \ f is not a function\n    at median (/tmp/tmp7hz7ez7g.js:8:10)\n    at test (/tmp/tmp7hz7ez7g.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmp7hz7ez7g.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l === undefined){\n    return undefined;\n  }\n  if(l.length % 2 === 0){\n\
    \    return l[l.length / 2 - 1];\n  }\n  else{\n    var l = l.sort(function(a,b){\n\
    \      return a-b;\n    });\n    var half = Math.floor(l.length / 2);\n    return\
    \ l[half];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp455ki88v.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp455ki88v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return (l.reduce(function(a, b){\n    return a + Math.abs(b.value)\n  }, 0)\
    \ / l.length)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp27w5a9hf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp27w5a9hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\n\
    \  if(l.length % 2){\n    return l[(l.length / 2) - 1];\n  }\n  else{\n    return\
    \ (l[l.length / 2] + l[l.length / 2 - 1]) / 2.0;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpasi2pk8l.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpasi2pk8l.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var length = l.length,\n        mid = Math.floor(length / 2),\n        numbers\
    \ = new Array(mid);\n\n    for(var i = 0; i < mid; i++)\n        numbers[i] =\
    \ l[i];\n\n    numbers.sort(function(a, b){\n        return a - b;\n    });\n\n\
    \    return numbers[Math.ceil(length / 2)];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp5f7lhhau.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5f7lhhau.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var a = l.sort(function(a, b){return a - b;})\n    , m = a[0]\n    , n =\
    \ 1\n    ;\n    l = l.filter(function(n){\n        if(!(n in a))\n           \
    \ return false;\n        ++n;\n        return !(n in a);\n    });\n    a.forEach(function(n){\n\
    \        var m = n !== m ? m : n;\n    });\n    return m;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpl3n0x6wg.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl3n0x6wg.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var med;\n  var len = l.length;\n  if(len < 2){\n    med = l[0];\n  }else{\n\
    \    med = Math.ceil((l[1]+l[0])/2);\n  }\n  for(var i=len-1; i>1; i--){\n   \
    \ if(Math.abs(l[i] - med) <= Math.abs(l[i-1] - med)){\n      med = l[i-1];\n \
    \   }\n  }\n  return med;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfhbafz1u.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfhbafz1u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var length = l.length;\n  var idx = length / 2;\n  if(length % 2 === 0) return\
    \ l[idx];\n  if(length % 2 === 1) return (l[idx-1] + l[idx])/2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp1uwh5q3a.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1uwh5q3a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a= [[], [], [], []],\n      m= 0,\n      i= 0;\n  for (; i<l.length; i++){\n\
    \      a[i] = [+l[i]];\n      m+= +l[i];\n  }\n  a[i] = [m.divide(l)];\n  return\
    \ a[i].sort()[0]; // median of medians approximation\n}\n},{}],27:[function(require,module,exports){\n\
    var math = require(\"./math\");\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmple2cs0hw.js:17\n},{}],27:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l||[]; // make sure array l's length is defined and is not null\n\n \
    \   for(var i = 0; i < l.length; i++){\n        if((l[i] - 0) % 1 > 0){\n    \
    \        return l[i];\n        }\n    }\n\n    return undefined;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpw21046js.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpw21046js.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  let sorted = l.sort(sortAsc);\n  let medianPosition = (sorted.length / 2) -\
    \ 1;\n  let median = sorted[medianPosition];\n  return median;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdze2tvh4.js:7\n  let sorted = l.sort(sortAsc);\n              \
    \        ^\n\nReferenceError: sortAsc is not defined\n    at median (/tmp/tmpdze2tvh4.js:7:23)\n\
    \    at test (/tmp/tmpdze2tvh4.js:18:20)\n    at Object.<anonymous> (/tmp/tmpdze2tvh4.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return getMedian(l,function(v){\n        return v[0];\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqap2m86k.js:7\n    return getMedian(l,function(v){\n    ^\n\nReferenceError:\
    \ getMedian is not defined\n    at median (/tmp/tmpqap2m86k.js:7:5)\n    at test\
    \ (/tmp/tmpqap2m86k.js:17:20)\n    at Object.<anonymous> (/tmp/tmpqap2m86k.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortDouble(l.slice(0,l.length/2)).slice(1,l.length/2-1).pop();\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk74dfoa2.js:7\n  return sortDouble(l.slice(0,l.length/2)).slice(1,l.length/2-1).pop();\n\
    \  ^\n\nReferenceError: sortDouble is not defined\n    at median (/tmp/tmpk74dfoa2.js:7:3)\n\
    \    at test (/tmp/tmpk74dfoa2.js:15:20)\n    at Object.<anonymous> (/tmp/tmpk74dfoa2.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length === 0) return NaN;\n  var sorted = l.slice(0).sort(function(a,b){return\
    \ a - b});\n  var med = sorted[Math.floor(sorted.length/2)];\n  return med !==\
    \ NaN ? med : l[Math.floor(sorted.length/2)];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpdegobpfe.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdegobpfe.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortArr = l.sort();\n  return sortArr.length?\n          Math.ceil((sortArr.length-1)/2):\n\
    \          0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpx06ihqi5.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx06ihqi5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var s = l.sort(function(a, b){return a - b})\n    if(s.length % 2 == 0)\n\
    \        return s[Math.floor(s.length / 2)];\n    else\n        return (s[s.length\
    \ / 2 - 1] + s[s.length / 2]) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpiaha2clc.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiaha2clc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \treturn Math.min.apply(Math, l)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpe_yq77cr.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe_yq77cr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var _length = l.length\n  if (_length % 2 == 0)\n  {\n    var _median = (_length\
    \ >> 1) + 1\n  }\n  else\n  {\n    var _median = _length >> 1\n  }\n\n  var _begin\
    \ = 0\n  var _end = _length - 1\n\n  while (_begin < _end)\n  {\n    var _t =\
    \ _begin + _end >> 1\n\n    if (l[_t] <= l[_begin])\n    {\n      _begin = _t+1\n\
    \    }\n    else if (l[_t] > l[_end])\n    {\n      _end = _t-1\n    }\n    else\n\
    \    {\n      return l[_begin]\n    }\n  }\n  return l[_begin]\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2c69t0xo.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2c69t0xo.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if (l.length % 2){\n        return l[Math.floor(l.length/2)];\n    } else\
    \ {\n        var h = l.sort()[0];\n        var m = l[h - 1];\n        for (var\
    \ i = h; i <= l.length; i++){\n            if (l[i-1] >= m){\n               \
    \ m = l[i-1];\n            }\n        }\n        return m;\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0u_pd4ml.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0u_pd4ml.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(),\n      m = l.pop(),\n      x, i;\n\n  l.sort(function(a,b){return\
    \ b-a});\n  for(i=0; i<l.length; i++){\n    x = l[i];\n    if (x >= m)\n     \
    \ continue;\n    else if (i < l.length-1){\n      m = l[++i];\n      if((x-m)%1)\n\
    \        continue;\n    }\n    return m;\n  }\n  return m;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmplrd1l4fi.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplrd1l4fi.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n%2==0){\n    return ((l[Math.floor(l/2)]) + l[Math.ceil(l/2)])\
    \ /2;\n  }\n  else{\n    var left = l[Math.floor(l/2)],\n    right = l[Math.ceil(l/2)];\n\
    \    while(left*right<0){\n      left ++;\n    }\n    while(right*left<0){\n \
    \     right --;\n    }\n    return left+(right-left)/2;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp5y7nitx6.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5y7nitx6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = Math.ceil((l.length+1) * 0.5);\n    return l[med];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp79tthg4w.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp79tthg4w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length;\n    if (n % 2 == 0) return (l[n/2-1] + l[n/2]) / 2.0;\n\
    \    return l[n/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpg1gzu74g.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpg1gzu74g.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tvar l = l.sort(function(a,b){\n\t\treturn a-b;\n\t});\n\tvar mid = l.length/2;\n\
    \tif(l.length%2) return l[mid];\n\tif(l[mid] == l[0]) return l[mid-1];\n\tif(l[mid]\
    \ == l[l.length-1]) return l[mid];\n\treturn median(l.slice(mid));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpgtgotm_g.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgtgotm_g.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 0
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tvar sorted = l.slice().sort(function(a, b){\n\t\treturn a - b;\n\t});\n\tvar\
    \ l = sorted.length;\n\tvar middle = Math.floor(l / 2);\n\tif(l % 2){\n\t\treturn\
    \ sorted[middle];\n\t} else {\n\t\treturn (sorted[middle - 1] + sorted[middle])\
    \ / 2;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var mid = l.length/2\n  return (l[mid-1] + l[mid])/2\n}\n\nmodule.exports =\
    \ median\n\n},{}],173:[function(require,module,exports){\nvar topSort = require(\"\
    ./top-sort\")\n\nvar defaultCompare = function(a, b){\n  return a-b\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp1wfztvwk.js:13\n},{}],173:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1,\n\
    \  2,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpmkrb0ni4.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmkrb0ni4.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1, 2,\
    \ 4, 5 ],\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = l.length\n  var m = a >> 1\n  if(a % 2) return m\n  if((a & 1) ===\
    \ 0) return m\n  var i = a >> 1\n  if(l % 2) return (m - a[i - 1] + (a & 1)) /\
    \ i\n  else return (m - a[i - 1]) / i\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpl0zfcmw9.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl0zfcmw9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length\n      , a1 = [], a2 = [], l1= n-1, median,\n        i,\
    \ d, u;\n    for(i = 0; i< n; i++){\n        d = l1- i;\n        a1.push(typeof\
    \ l[i] === 'number' ? l[i] : l[i]());\n        if (d<= 0) {\n            median\
    \ = Number.POSITIVE_INFINITY;\n        }\n        else if (d > 0){\n         \
    \   u = a1[d];\n            a2[d] = a1[d-1];\n            a1[d-1] = u;\n     \
    \   }\n    }\n    l = a1.slice();\n    l = l.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    median = l[(l.length-1)/2 | 0];\n    if (median === Number.POSITIVE_INFINITY){\n\
    \        median = undefined;\n    }\n    return median;\n}\n\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmplceon1g8.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplceon1g8.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var mid = ~~(l.length / 2);\n    if(l.length % 2) return l[mid];\n    else\
    \ return (\n        median(l[mid]),\n        median(l[mid+1])\n    );\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpra2ra2wr.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpra2ra2wr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  let m = (l[0] < l[1]) ? 0 : 1;\n  let x0 = l[m-1];\n  let x1 = l[m];\n  let\
    \ x2;\n  if (m === l.length - 1) {\n    if (x0 !== (x1 > x0)) { x2 = x0; }\n \
    \   else { x2 = x1; }\n  }\n  else { x2 = (x1 > x0) ? (x1 + l[m-1]) : (x0 + l[m-1]);\
    \ }\n  let y = x2 - x1;\n  l[m] = x2;\n  l[m-1] = y; // swap x0 and x2\n  return\
    \ (y);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpakpd1d8a.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpakpd1d8a.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a,b){return a - b}) // sort descending\n  [Math.floor(l.length/2)];\n\
    }\n\nmodule.exports = median;\n\n},{}],18:[function(require,module,exports){\n\
    var compare = require('./compare');\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp0jb6y7k3.js:13\n},{}],18:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sorted = l.slice().sort(function(a, b){return a - b});\n  var size = sorted.length;\n\
    \  if(size % 2 === 0){\n    return sorted[size / 2 - 1] + sorted[size / 2];\n\
    \  }else{\n    return sorted[size / 2] + sorted[size / 2 - 1];\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp2hyvog5k.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2hyvog5k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var i = 1,\n      n = l.length;\n  if ( n === 0 ) return -1;\n  if ( n ===\
    \ 1 ) return l[0];\n  // Only odd length arrays are guaranteed to survive median\
    \ calcs below.\n  if( n & 1 ) {\n    // Sort the array and return the middle value.\n\
    \    l = l.sort();\n    return l[(n >> 1) + 1];\n  }\n\n  // If the length is\
    \ odd, then the median of the middle two elements is the median.\n  // If the\
    \ length is even, then the median is either the average of the two middle values,\n\
    \  // or, if they are equal, the value that existed in the middle row.\n  else\
    \ {\n    l = l.slice(0,(n >> 1) + 1).sort();\n    l = ( n & 1 ) ? ( l[(n >> 1)]\
    \ + l[n >> 1] ) / 2 : l[n >> 1];\n    return l;\n  }\n}\n},{\"./../functions/warn\"\
    :111}],111:[function(require,module,exports){\nmodule.exports = warn;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpuwiir2or.js:27\n},{\"./../functions/warn\":111}],111:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return sort(l).length / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6na1m7op.js:7\n    return sort(l).length / 2;\n    ^\n\nReferenceError:\
    \ sort is not defined\n    at median (/tmp/tmp6na1m7op.js:7:5)\n    at test (/tmp/tmp6na1m7op.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmp6na1m7op.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(!l || l.length === 0) return null\n  if(l.length == 1) return l[0]\n  if(l.length\
    \ == 2) return Math.max(l[0], l[1])\n  var arr = []\n  var half = Math.floor(l.length/2);\n\
    \  for(var i=0; i<l.length; i++){\n    if(i > half){\n      arr.push(l[i])\n \
    \   } else {\n      arr.push(Math.max(l[i], l[i - 1]))\n    }\n  }\n  return Math.round(Math.median(arr))\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpty58x2ht.js:19\n  return Math.round(Math.median(arr))\n       \
    \                  ^\n\nTypeError: Math.median is not a function\n    at median\
    \ (/tmp/tmpty58x2ht.js:19:26)\n    at test (/tmp/tmpty58x2ht.js:27:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpty58x2ht.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sorted_l = l.slice();\n    sorted_l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var median;\n    if(sorted_l.length % 2)\n        median\
    \ = sorted_l[(sorted_l.length / 2) - 1];\n    else\n        median = (sorted_l[(sorted_l.length\
    \ / 2) - 1] + sorted_l[(sorted_l.length / 2)]) / 2;\n    return median;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpwwajy623.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwwajy623.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if(!isArray(l)){\n        throw new Error(\"first argument must be an array\"\
    );\n    }\n\n    var sorted = l.slice().sort(function(a,b){\n        return a\
    \ - b;\n    });\n    var len = sorted.length;\n    if(len % 2){\n        return\
    \ sorted[(len / 2) - 1];\n    } else {\n        return (sorted[len / 2] + sorted[len\
    \ / 2 - 1]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7etwo64y.js:7\n    if(!isArray(l)){\n    ^\n\nReferenceError: isArray\
    \ is not defined\n    at median (/tmp/tmp7etwo64y.js:7:5)\n    at test (/tmp/tmp7etwo64y.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmp7etwo64y.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var m = l[0], e, n = l[1], r, i;\n\n    if (m.length !== n.length){\n   \
    \     throw \"Two arrays of different size.\";\n    }\n\n    for(i = 0; i < n.length;\
    \ i++){\n        e = m[i];\n        r = n[i];\n        if (e < r){\n         \
    \   m = m;\n        }else{\n            n = n;\n        }\n    }\n\n    return\
    \ m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-10\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp7bk0opk_.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7bk0opk_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return sort(l)[floor(length(l)/2)];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7cyps5wu.js:7\n    return sort(l)[floor(length(l)/2)];\n    ^\n\
    \nReferenceError: sort is not defined\n    at median (/tmp/tmp7cyps5wu.js:7:5)\n\
    \    at test (/tmp/tmp7cyps5wu.js:15:20)\n    at Object.<anonymous> (/tmp/tmp7cyps5wu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = isArray(l) ? l : [l],\n        sortMethod,\n        middle;\n\n \
    \   if(l.length < 2){\n        return l[0];\n    }\n\n    sortMethod = function(m){\n\
    \        return m && m.desc ? 1 : -1;\n    };\n    middle = Math.floor((l.length\
    \ - 1) / 2);\n\n    l.sort(sortMethod);\n\n    return sortMethod(middle) === 1\
    \ ? l[middle] : median(l);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6llfwqdj.js:7\n    var l = isArray(l) ? l : [l],\n            ^\n\
    \nReferenceError: isArray is not defined\n    at median (/tmp/tmp6llfwqdj.js:7:13)\n\
    \    at test (/tmp/tmp6llfwqdj.js:30:20)\n    at Object.<anonymous> (/tmp/tmp6llfwqdj.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    // Sort the array in descending order\n    return sort(l).reduce(function(p,\
    \ c, i, a){\n        // Check if the current median is greater than or equal to\
    \ the\n        // current element. Return current median if it is less.\n    \
    \    // If not return element\n        if( p + c >= a[i-1] ){\n            return\
    \ p + c;\n        }else{\n            return a[i-1];\n        }\n    }, 0);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpq_cu84vq.js:8\n    return sort(l).reduce(function(p, c, i, a){\n\
    \    ^\n\nReferenceError: sort is not defined\n    at median (/tmp/tmpq_cu84vq.js:8:5)\n\
    \    at test (/tmp/tmpq_cu84vq.js:25:20)\n    at Object.<anonymous> (/tmp/tmpq_cu84vq.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \   return Math.ceil(l.reduce(function (m,v){return v<0?m:Math.max(m,v)},0)*0.5+0.5);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n501\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpng57wgrz.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpng57wgrz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 501,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice().sort(function(){ return Math.random() - 0.5; });\n  var mid\
    \ = Math.floor(l.length / 2);\n  return (l[mid] > l[mid + 1]) ? l[mid - 1] : l[mid];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_xf8gqyd.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_xf8gqyd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length < 2){\n      return l[0];\n  }\n  var med = median(l);\n  var\
    \ left = med-l.length;\n  var right = l-med;\n  if (left < right){\n      return\
    \ left;\n  }\n  return right;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpizxypbv0.js:7\n  if (l.length < 2){\n        ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at median (/tmp/tmpizxypbv0.js:7:9)\n    at median\
    \ (/tmp/tmpizxypbv0.js:10:13)\n    at median (/tmp/tmpizxypbv0.js:10:13)\n   \
    \ at median (/tmp/tmpizxypbv0.js:10:13)\n    at median (/tmp/tmpizxypbv0.js:10:13)\n\
    \    at median (/tmp/tmpizxypbv0.js:10:13)\n    at median (/tmp/tmpizxypbv0.js:10:13)\n\
    \    at median (/tmp/tmpizxypbv0.js:10:13)\n    at median (/tmp/tmpizxypbv0.js:10:13)\n\
    \    at median (/tmp/tmpizxypbv0.js:10:13)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = l.length\n  if (m === 0)\n    return NaN\n  if (m % 2 == 0) return\
    \ median(l[m/2]) //return average of two medians\n  else return (l[(m+1)/2-1]\
    \ + l[m/2])/2\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpw231um_g.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw231um_g.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l.slice();\n    l.sort(function(a,b){\n        return a-b;\n    });\n\
    \    var medianIdx = (l.length + 1 >> 1)-1,\n        med = l[medianIdx];\n   \
    \ l[medianIdx] = 0;\n    return med;\n}\nexports.median = median;\n\n},{}],152:[function(require,module,exports){\n\
    'use strict';\n\nvar utils = require(15);\n\nvar defaults = {\n    amount: 4,\n\
    \    fillColor: 'rgba(111,111,111,.4)',\n    orientation: 'bottom',\n    renderer:\
    \ function(canvas){\n        canvas.strokeRect(this.x, this.y, this.width, this.height);\n\
    \    }\n};\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfc1kuhl6.js:18\n},{}],152:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length,\n        sorted = l.slice().sort(function(a, b){\n    \
    \        return a - b;\n        }),\n        mid = sorted[Math.floor(sorted.length\
    \ / 2)];\n    if (n === 1) return mid;\n    if(n === 2) return sorted[Math.floor(sorted.length/2)];\n\
    \    mid = sorted[Math.floor(sorted.length/3)];\n    if (n % 2 === 0) return mid;\n\
    \    if(n%3 === 0) return sorted[Math.floor(sorted.length/3)];\n    if(n%5 ===\
    \ 0) return mid;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpa34udwfy.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa34udwfy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  var sortedArray = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var middle = sortedArray.length / 2;\n  return sortedArray[middle];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpylk6x6xo.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpylk6x6xo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortFn = function(a, b){\n      return a - b;\n    }\n    var len = l.sort(sortFn).length,\n\
    \    num = Math.ceil(len / 2);\n    return len % 2 !== 0? num * num : num;\n \
    \ }\n  //Return median of the array l\n  // >>> median([1, 2, 3, 4, 5, 6, 7])\n\
    \  // 4.0\n  // >>> median([3, 1, 2, 4, 5])\n  // 3.5\n  function median(l){\n\
    \      var sortFn = function(a, b){\n        return a - b;\n      }\n      var\
    \ len = l.sort(sortFn).length;\n      return len & 1? len / 2 : len;\n    }\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpsoz9hwvi.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsoz9hwvi.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l = l.slice();\n  l.sort(); //Sort the array\n  var a = l[0], b = l[l.length-1],\
    \ c = l[l.length/2];\n  return (a+b+c)/3;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvbsejk31.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvbsejk31.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length % 2 === 0) {\n    return Math.median(l);\n  }\n\n  var med = l.sort()[Math.floor(l.length\
    \ / 2)];\n  if (med !== median(l)) {\n    return med;\n  }\n\n  var a = l[0],\
    \ b = l.pop(), c = l.pop(), d = l.pop();\n  if (a < b) {\n    med = b;\n  } else\
    \ {\n    med = a;\n  }\n\n  if (med === c) {\n    med = d;\n  }\n\n  if (med !==\
    \ median(l)) {\n    return med;\n  }\n\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpczm0g5xf.js:11\n  var med = l.sort()[Math.floor(l.length / 2)];\n\
    \              ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.sort\
    \ (<anonymous>)\n    at median (/tmp/tmpczm0g5xf.js:11:15)\n    at median (/tmp/tmpczm0g5xf.js:12:15)\n\
    \    at median (/tmp/tmpczm0g5xf.js:12:15)\n    at median (/tmp/tmpczm0g5xf.js:12:15)\n\
    \    at median (/tmp/tmpczm0g5xf.js:12:15)\n    at median (/tmp/tmpczm0g5xf.js:12:15)\n\
    \    at median (/tmp/tmpczm0g5xf.js:12:15)\n    at median (/tmp/tmpczm0g5xf.js:12:15)\n\
    \    at median (/tmp/tmpczm0g5xf.js:12:15)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return reduce(function(prev, cur){\n    return (prev + cur) >>> 0;\n  }, l,\
    \ Infinity);\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdvmg6adm.js:7\n  return reduce(function(prev, cur){\n  ^\n\nReferenceError:\
    \ reduce is not defined\n    at median (/tmp/tmpdvmg6adm.js:7:3)\n    at test\
    \ (/tmp/tmpdvmg6adm.js:18:20)\n    at Object.<anonymous> (/tmp/tmpdvmg6adm.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = sortByWeight(l)\n  var l = l.slice()\n  var n = l.length\n  var m =\
    \ n >> 1\n  if (n < 8){\n    return l[(n - 1)/2]\n  } else if (n < 16){\n    return\
    \ l[((n - 7)/2)|0]\n  }\n  return sortByWeight(l).pop()\n}\nmedian.order = 3\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5un50lky.js:7\n  var l = sortByWeight(l)\n          ^\n\nReferenceError:\
    \ sortByWeight is not defined\n    at median (/tmp/tmp5un50lky.js:7:11)\n    at\
    \ test (/tmp/tmp5un50lky.js:25:20)\n    at Object.<anonymous> (/tmp/tmp5un50lky.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if(l.length===0){\n        return NaN;\n    }\n    var median=l.sort()[0],\n\
    \        i,\n        l2=l.length;\n    for(i=0;i<l2;i++){\n        if(l[i]===median){\n\
    \            return l[i];\n        }\n    }\n    if(l[l2-1]===median){\n     \
    \   return l[l2-1];\n    }\n    return NaN;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpy5c4owtz.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy5c4owtz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var s = l.slice(), m = s.length % 2 ? s[s.length / 2 - 1] : (s[s.length /\
    \ 2] + s[s.length / 2 - 1]) / 2;\n    return m;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpg5_k7oux.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpg5_k7oux.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  // If the array is empty, return the negative Infinity\n  if(l.length === 0)\n\
    \    return -Infinity;\n\n  // Sort array using selection sort\n  l.sort(function(a,b){\n\
    \    return a-b;\n  });\n\n  // Return median of sorted array\n  return l[(l.length/2)-1];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmphz1hqv8s.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphz1hqv8s.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = new Array();\n    var l = l.length;\n    var m;\n    for(var i =\
    \ 0; i < l; i++){\n        n[i] = Math.floor(l[i] / 2);\n    }\n    l = n.length;\n\
    \    m = (l % 2 == 0) ? (l[l - 2] + l[l - 1]) / 2 : ((l[l - 1] + l[l - 2]) / 2);\n\
    \    for(var i = 0; i < l; i++){\n        l[i] = n[i];\n    }\n    return m;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpgc2pu37v.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgc2pu37v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sort(l).length\n    ? sort(l).length / 2\n    : 0\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0p5iu93b.js:7\n  return sort(l).length\n  ^\n\nReferenceError:\
    \ sort is not defined\n    at median (/tmp/tmp0p5iu93b.js:7:3)\n    at test (/tmp/tmp0p5iu93b.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmp0p5iu93b.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l.slice();\n    l.sort(function(a,b){\n        return a-b;\n    });\n\
    \    if (l.length == 0){\n        return NaN;\n    }\n    return l[l.length /\
    \ 2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmppdkky23l.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmppdkky23l.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l === undefined){\n    return undefined;\n  }\n  var a = [].concat(l);\n\
    \  return a.length % 2 !== 0? a[Math.ceil(a.length / 2)] : (a[Math.ceil(a.length\
    \ / 2) - 1] + a[Math.ceil(/ 2 / a.length)])/2.0;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpll144pbc.js:11\n  return a.length % 2 !== 0? a[Math.ceil(a.length\
    \ / 2)] : (a[Math.ceil(a.length / 2) - 1] + a[Math.ceil(/ 2 / a.length)])/2.0;\n\
    \                                                                            \
    \                            ^^^^^\n\nSyntaxError: missing ) after argument list\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if (l == null) return null;\n    var n = l.length, sorted = n.slice().sort(ascending),\
    \ m = +(sorted[0] || 0), am = m % 1, i = (n-2)/2, x = sorted[i+1] || 0, v = !!(x\
    \ % 1), w = (x < 0), k = !w;\n    return !v ? (w) ? (sorted[i] + sorted[i+1])\
    \ / 2 : sorted[i] : w\n        ? (x + (v) ? am : -am)\n        : ((v) ? sorted[i]\
    \ : ((sorted[i+1] || am) / 2))\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpzvkpzr0s.js:8\n    var n = l.length, sorted = n.slice().sort(ascending),\
    \ m = +(sorted[0] || 0), am = m % 1, i = (n-2)/2, x = sorted[i+1] || 0, v = !!(x\
    \ % 1), w = (x < 0), k = !w;\n                                 ^\n\nTypeError:\
    \ n.slice is not a function\n    at median (/tmp/tmpzvkpzr0s.js:8:34)\n    at\
    \ test (/tmp/tmpzvkpzr0s.js:18:20)\n    at Object.<anonymous> (/tmp/tmpzvkpzr0s.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = copy(n);\n    sort(a, function(a, b){\n        return\
    \ a - b;\n    });\n    var m = (l[n-1] + l[0]) / 2;\n    while(n < 9){\n     \
    \   if((l[n] + l[n-1]) / 2 < m) m = (l[n] + l[n-1]) / 2;\n        n++;\n    }\n\
    \    return m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw31tsfzf.js:7\n    var n = l.length, a = copy(n);\n           \
    \               ^\n\nReferenceError: copy is not defined\n    at median (/tmp/tmpw31tsfzf.js:7:27)\n\
    \    at test (/tmp/tmpw31tsfzf.js:24:20)\n    at Object.<anonymous> (/tmp/tmpw31tsfzf.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med;\n    \n    if(l.length == 0) return NaN;\n    \n    med = l.sort();\n\
    \    if(med.length % 2 != 0) med.push(med.pop());\n    \n    return med[med.length\
    \ / 2 - 1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpy3a7p0hv.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy3a7p0hv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return typeof l.length === 'number' && l.length % 2 === 1 ? sortedMedian(l)\n\
    \        : typeof l.length === 'number' && l.length % 2 === 0\n            ? sortedSecondMedian(l)\n\
    \            : typeof l.size === 'number' && l.size === 0\n            ? sortedFirstMedian(l)\n\
    \            : sortedThirdMedian(l)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw7htuxfh.js:7\n    return typeof l.length === 'number' && l.length\
    \ % 2 === 1 ? sortedMedian(l)\n                                              \
    \          ^\n\nReferenceError: sortedMedian is not defined\n    at median (/tmp/tmpw7htuxfh.js:7:57)\n\
    \    at test (/tmp/tmpw7htuxfh.js:20:20)\n    at Object.<anonymous> (/tmp/tmpw7htuxfh.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var len = l.length;\n  if(len % 2 === 0){\n    return l[Math.floor(len/2)];\n\
    \  }\n  if((len % 2) === 1){\n    return (l[Math.floor(len/2)-1] + l[Math.floor(len/2)])/2;\n\
    \  }\n  var m = 0, mid = 0;\n  for(var i = 0; i < len; i = i + 2){\n    mid =\
    \ i + (len/2);\n    if(i < mid){\n      continue;\n    }\n    if(mid % 2){\n \
    \     return l[i];\n    }\n    return (l[mid - 1] + l[mid])/2;\n  }\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpsy751xmp.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsy751xmp.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortNums(l).slice(1).slice(0, -1).sort(function(a, b){\n    return a\
    \ - b;\n  })[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3knbvppl.js:7\n  return sortNums(l).slice(1).slice(0, -1).sort(function(a,\
    \ b){\n  ^\n\nReferenceError: sortNums is not defined\n    at median (/tmp/tmp3knbvppl.js:7:3)\n\
    \    at test (/tmp/tmp3knbvppl.js:16:20)\n    at Object.<anonymous> (/tmp/tmp3knbvppl.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return Math.median(l)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa6rey2fo.js:7\n  return Math.median(l)\n              ^\n\nTypeError:\
    \ Math.median is not a function\n    at median (/tmp/tmpa6rey2fo.js:7:15)\n  \
    \  at test (/tmp/tmpa6rey2fo.js:15:20)\n    at Object.<anonymous> (/tmp/tmpa6rey2fo.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return (l.reduce(function(a, b){\n    return a + b\n  }) / l.length)\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpwlunnfa_.js:18:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpwlunnfa_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if(!Array.isArray(l) || l.length===0){\n        throw new TypeError('median\
    \ requires an array of numbers')\n    }\n    if(l.length===1) return l[0]\n  \
    \  var sorted = l.slice().sort(function(a,b){return a-b})\n    var m\n    switch(sorted.length/2){\n\
    \        case 0: return l[0]\n        case 1: return l[sorted.length-1]\n    \
    \    default:\n            sorted.sort(function(a,b){return a-b})\n          \
    \  m = sorted[(sorted.length-1)/2]\n            return (sorted[sorted.length-1]+sorted[sorted.length-2])/2\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpniylse2l.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpniylse2l.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var s = l.length\n    if(!s) return 0\n    if(s == 1) return l[0]\n    var\
    \ l = l[0], i = 1, j\n    while(i<s){\n        var x = l[j = i],\n           \
    \ m = j+i,\n            g = i+1\n        while(m < s && g < s){\n            if(l[m]\
    \ < x) l = l, m = m, g = g\n            m += g\n            g = i\n          \
    \  i += 1\n        }\n        if(m == s) return x\n        if(l == x) return m\n\
    \    }\n    return l[--s]\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpcy0fm0vz.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpcy0fm0vz.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sorted = l.slice().sort(function(a, b){return a-b})\n  if(sorted.length\
    \ % 2 !== 0) return sorted[Math.floor(sorted.length / 2)];\n  return sorted[(sorted.length\
    \ / 2) - 1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpctyw7tt1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpctyw7tt1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l.sort(function(a,b){\n        return a - b;\n    });\n    var len = (l[l.length-1]\
    \ < l[0]) ? l.length-1 : l.length;\n    if(len%2 === 0) return (l[len/2-1] + l[len/2-1])/2;\n\
    \    return l[len/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpirl54o_m.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpirl54o_m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var length = l.length, f = length / 2, i = 1, j = f.length, v = l[0] + 1 /\
    \ (j - 1) * i, c = new Array(j), d, g;\n  for(;i < j;++i) c[i] = v; \n  while(v\
    \ < --j) {\n    v.sort(function(a, b){\n      return a - b;\n    });\n    v =\
    \ c[j-1];\n    for(i = 1; i < j;++i) {\n      d = Math.abs(v - c[i]);\n      if(d\
    \ <= g) g = d;\n    }\n    d.sort(function(a, b){\n      return a - b;\n    });\n\
    \    g = c[f.slice(i-1,i)];\n  }\n  return(g + l[length]) / 2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpbbsdxfws.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbbsdxfws.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length % 2) return l[(l.length / 2) - 1]; //odd, return average of 2\
    \ middle elements\n  else return 0.5 * (l[(l.length / 2) - 1] + l[l.length / 2]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpw5au1iiy.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpw5au1iiy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = l[0];\n  for(var i = 1; i < l.length; ++i){\n    if(l[i] < m){ m =\
    \ l[i];}\n  }\n  return m;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_sf6c4bt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_sf6c4bt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = l.length, a, b = Math.floor(l/2), c = m-b, d = m-b;\n  if(l % 2) d\
    \ = -d;\n  if(m%2==0) return l; // even\n  if(m%2==1) return m; // odd\n  if(d\
    \ > 0 && a > 0 && b > 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ -1*a;\n    }\n    return -1*b;\n  }\n  if(d < 0 && a > 0 && b > 0){\n    if(Math.abs(d)\
    \ < Math.abs(a-b)/2){\n      return 1*b;\n    }\n    return 1*a;\n  }\n  if(d\
    \ < 0 && a > 0 && c > 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ 1*c;\n    }\n    return 1*a;\n  }\n  if(d > 0 && a < 0 && b < 0){\n    if(Math.abs(d)\
    \ < Math.abs(a-b)/2){\n      return -1*a;\n    }\n    return -1*b;\n  }\n  if(d\
    \ > 0 && a < 0 && c < 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ 1*c;\n    }\n    return 1*a;\n  }\n  if(d > 0 && b > 0 && c > 0){\n    if(Math.abs(d)\
    \ < Math.abs(a-b)/2){\n      return 1*c;\n    }\n    return 1*b;\n  }\n  if(d\
    \ > 0 && b > 0 && c < 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ -1*c;\n    }\n    return -1*b;\n  }\n  if(d > 0 && c > 0 && a > 0){\n    if(Math.abs(d)\
    \ < Math.abs(a-b)/2){\n      return 1*a;\n    }\n    return 1*c;\n  }\n  if(d\
    \ > 0 && c > 0 && a < 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ -1*a;\n    }\n    return -1*c;\n  }\n  if(d > 0 && c < 0 && a > 0){\n    if(Math.abs(d)\
    \ < Math.abs(a-b)/2){\n      return 1*a;\n    }\n    return 1*c;\n  }\n  if(d\
    \ > 0 && c < 0 && a < 0){\n    if(Math.abs(d) < Math.abs(a-b)/2){\n      return\
    \ -1*a;\n    }\n    return -1*c;\n  }\n  return m+(a+b+c)/2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfr__1fub.js:85:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfr__1fub.js:92:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return l.sort(function(a, b){\n        return a - b;\n    })[(l.length-1)/2];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n8\n    at test (/tmp/tmpjwjlo6vd.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjwjlo6vd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l.sort(function(a,b){ return a-b })\n    var half = Math.floor(l.length /\
    \ 2)\n    if (l.length % 2) return (l[half] + l[half-1])/2\n    else return l[half]\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp8yo45926.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8yo45926.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length,\n      a = +l[0], b = +l[n-1],\n      c = isNaN(a) || isNaN(b)\
    \ ? NaN : (a>b ? a : b),\n      m = ~~((n+0.5)>>1);\n  return (c*m + (n&1 ? m\
    \ : 0)) / (m||(n < 3||n < 1?1:n));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpe3km84pm.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe3km84pm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length === 0) {\n    throw new Error('Cannot calculate the median of\
    \ an empty array');\n  }\n\n  return l.length % 2 === 0\n    ? l[(l.length / 2)\
    \ - 1]\n    : ((l[(l.length / 2) - 1] + l[l.length / 2]) / 2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_zfc2ece.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_zfc2ece.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if (l.length % 2 === 1) return l[(l.length / 2) - 1];\n    var high = l.pop(),\
    \ low = l.pop();\n    l.push((high + low) / 2);\n    high = low;\n    for (var\
    \ i = 0; i < l.length; i++){\n        if (l[i] < low) low = l[i];\n        if\
    \ (l[i] > high) high = l[i];\n    }\n    return (high + low) / 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp2144vrt2.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp2144vrt2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if (l.length % 2 === 1){\n        throw new Error('Error: list is not even')\n\
    \    }\n    var l = l.sort();\n    var mid = l [l.length / 2];\n    return l[~~(l.length/2)];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuezkwj0w.js:8\n        throw new Error('Error: list is not even')\n\
    \        ^\n\nError: Error: list is not even\n    at median (/tmp/tmpuezkwj0w.js:8:15)\n\
    \    at test (/tmp/tmpuezkwj0w.js:20:20)\n    at Object.<anonymous> (/tmp/tmpuezkwj0w.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length===0){\n    return 0;\n  }\n  var v = l.sort(function(a,b){return\
    \ a - b;});\n  var a0 = v[0];\n  var a1 = v[Math.floor(l.length/2)];\n  return\
    \ a0+(a1-a0)*0.5;\n}\n\nmodule.exports = median;\n\n},{}],118:[function(_dereq_,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpa7w9sdyt.js:18\n},{}],118:[function(_dereq_,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length == 0){\n    return 0\n  }\n\n  var length = l.length\n  var middle\
    \ = Math.floor(length / 2)\n  var sorted = l.slice(middle).sort(function(a, b){\n\
    \    return a - b;\n  })\n  var median = sorted[length % 2 ? 0 : middle]\n\n \
    \ return median\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpbspy_fwm.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbspy_fwm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  // If the list contains only one element return it\n  if (l.length == 0) return\
    \ l[0];\n\n  // Sort and remove duplicate elements\n  var sorted = l.slice(0).sort();\n\
    \  l = sorted.filter(function(v, i, a){\n    return !(i in a);\n  });\n\n  if\
    \ (l.length % 2 == 1){\n    var center = l.length/2;\n    var left = sorted[center-1];\n\
    \    var right = sorted[center];\n    return left == right ? l/2 : left + l/2;\n\
    \  }\n  else{\n    return l[l.length/2]\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp6eagw3bx.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6eagw3bx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \treturn medianSort(l).pop();\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfp1cnsu0.js:7\n\treturn medianSort(l).pop();\n\t^\n\nReferenceError:\
    \ medianSort is not defined\n    at median (/tmp/tmpfp1cnsu0.js:7:2)\n    at test\
    \ (/tmp/tmpfp1cnsu0.js:15:20)\n    at Object.<anonymous> (/tmp/tmpfp1cnsu0.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = l.length, n = (l[--a] + l[--a]) / 2, m = a > 1 ? l[--a] : 2, b = m\
    \ < a - 1 ? l[--a] : l[--a], c = n - a + 1;\n  return Math.abs(a - b) < Math.abs(n\
    \ - b) ? c : (a < n - b) ? a : b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpjoqic4sj.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoqic4sj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sort(l).length % 2 ? sort(l)[(sort(l).length + 1)/2 - 1] : sort(l)[(sort(l).length\
    \ + 1)/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3p1rqv2o.js:7\n  return sort(l).length % 2 ? sort(l)[(sort(l).length\
    \ + 1)/2 - 1] : sort(l)[(sort(l).length + 1)/2];\n  ^\n\nReferenceError: sort\
    \ is not defined\n    at median (/tmp/tmp3p1rqv2o.js:7:3)\n    at test (/tmp/tmp3p1rqv2o.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmp3p1rqv2o.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif(l.length == 0) return undefined;\n\tvar n = l.length, n1 = n/2, n2 = n-n1;\n\
    \tvar a = new Array(n);\n\tfor(var i=0; i<n; ++i) a[i] = l[i];\n\tif(a.length%2)\
    \ return l[n/2];\n\treturn ((l[n1-n]/l[n1]) - (l[n2-n]/l[n2]));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpxxqxmnc7.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxxqxmnc7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = l.length,\
    \ m = ~~(n / 2);\n    return m && l[m-1] < l[m] ? l[m-1] : l[m];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpiy7hscpy.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiy7hscpy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sorted = l.sort(function(a,b){return a - b;});\n    if(sorted.length\
    \ % 2 == 1){\n        return sorted[(sorted.length/2)-1];\n    } else {\n    \
    \    return (sorted[sorted.length/2 - 1 ] + sorted[sorted.length/2])/2;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp77yxjxv7.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp77yxjxv7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return Math.round((l.length-1)/2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp9fxmngyp.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9fxmngyp.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = typeof l.length === 'number' ? l : Array.prototype.slice.call(l);\n\
    \  a = a.sort(function(a, b){\n    return a - b;\n  });\n  return a[(Math.floor(a.length\
    \ / 2)) || 0];\n}\n\nexports.median = median;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpxd26uruy.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxd26uruy.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif(l.length===0) return NaN;\n\tvar sort=l.slice().sort(function(a,b){\n\t\t\
    return a-b;\n\t});\n\tvar mid;\n\tif(sort[0]===sort[1]){\n\t\tmid=sort[0]+(sort[0]-sort[2])/2;\n\
    \t}else{\n\t\tmid=sort[0];\n\t}\n\treturn mid;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpitektn2d.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpitektn2d.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var data = l.slice();\n    data.sort(function(a, b){\n      return a - b;\n\
    \    });\n    if (data.length % 2 === 0) {\n      var m1 = data[Math.round(data.length\
    \ / 2)];\n      var m2 = data[Math.round((data.length / 2) - 1)];\n      return\
    \ (m1 + m2) / 2.0;\n    } else {\n      return data[Math.round(data.length / 2)];\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_mqedj1j.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_mqedj1j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return reduce(l, function(e, x){return (x%1 && e > x/1) ? x : e}, 0)\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmph7z1pzud.js:7\n  return reduce(l, function(e, x){return (x%1 &&\
    \ e > x/1) ? x : e}, 0)\n  ^\n\nReferenceError: reduce is not defined\n    at\
    \ median (/tmp/tmph7z1pzud.js:7:3)\n    at test (/tmp/tmph7z1pzud.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmph7z1pzud.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = (l.length||0)>>1, a = (l||[]).slice(0,n); \n  a.sort();\n  return (a[n-1]+a[n])/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_wwj2in2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_wwj2in2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = slice(arguments);\n  var len = l.length;\n  if (len < 2) return NaN;\n\
    \  var numbers = map(l, function(x) { return +x; });\n  var middle = floor(numbers.length\
    \ / 2);\n  var sorted = numbers.slice().sort(function(a, b){\n    return a - b;\n\
    \  });\n  var sum = 0;\n  var count = 0;\n  for (var i=0; i<middle; i++){\n  \
    \  sum += sorted[i];\n    count++;\n  }\n  return (count%2) ? sorted[middle] :\
    \ (sorted[middle-1] + sorted[middle]) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpumjrwzed.js:7\n  var l = slice(arguments);\n          ^\n\nReferenceError:\
    \ slice is not defined\n    at median (/tmp/tmpumjrwzed.js:7:11)\n    at test\
    \ (/tmp/tmpumjrwzed.js:28:20)\n    at Object.<anonymous> (/tmp/tmpumjrwzed.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = median(l.slice(0)), i = 1, N = l.length\n    while(i < N){\n  \
    \      med = median(l.slice(i, med.length)) //Subtract median from median.\n \
    \       i = med.length\n        med += l.slice(i).reduce(function(acc, x) { return\
    \ acc + x }, 0) / i\n    }\n    return med\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpju7ikqv6.js:7\n    var med = median(l.slice(0)), i = 1, N = l.length\n\
    \                       ^\n\nRangeError: Maximum call stack size exceeded\n  \
    \  at Array.slice (<anonymous>)\n    at median (/tmp/tmpju7ikqv6.js:7:24)\n  \
    \  at median (/tmp/tmpju7ikqv6.js:7:15)\n    at median (/tmp/tmpju7ikqv6.js:7:15)\n\
    \    at median (/tmp/tmpju7ikqv6.js:7:15)\n    at median (/tmp/tmpju7ikqv6.js:7:15)\n\
    \    at median (/tmp/tmpju7ikqv6.js:7:15)\n    at median (/tmp/tmpju7ikqv6.js:7:15)\n\
    \    at median (/tmp/tmpju7ikqv6.js:7:15)\n    at median (/tmp/tmpju7ikqv6.js:7:15)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l = l.filter(function(n) { return n != undefined && n != null; });\n  l.sort(function(a,\
    \ b) { return a - b; });\n  var m = (l[l.length/2 - 1] + l[l.length/2-1])/2;\n\
    \  return m;\n}\n  \nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpajo3n09w.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpajo3n09w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if (l.length === 0) {\n        throw new RangeError(\"'median' called on\
    \ empty list\");\n    }\n    var list = l.slice(0),\n        mid,\n        left,\n\
    \        right;\n\n    function _quickSort(l, i, j, k) {\n        var leftSum\
    \ = l[i],\n            rightSum = l[k],\n            median,\n            swap;\n\
    \n        if (j - i > 0) {\n            swap = l[j - i - 1];\n            l[j\
    \ - i - 1]  = l[j - i];\n            l[j - i]     = swap;\n\n            leftSum\
    \ = l[j];\n            rightSum = l[k];\n\n            median = (leftSum + rightSum)\
    \ / 2.0;\n\n            swap = l[j];\n            l[j]     = l[k];\n         \
    \   l[k]     = swap;\n        }\n        while(j > i) {\n            swap = l[j];\n\
    \            l[j]     = l[--j];\n            l[j + 1] = swap;\n\n            leftSum\
    \ = l[j];\n            rightSum = l[k];\n\n            median = (leftSum + rightSum)\
    \ / 2.0;\n\n            swap = l[j];\n            l[j]     = l[k];\n         \
    \   l[k]     = swap;\n        }\n    }\n\n    var i = list.length,\n        j,\n\
    \        k,\n        h = Math.floor(i / 2),\n        median;\n    _quickSort(list,\
    \ 0, i, h);\n    _quickSort(list, i, h + 1, Math.floor(i * 1.5 / 2));\n\n    median\
    \ = list[j - 1];\n    for (j = 1; j < list.length; ++j) {\n        median = (median\
    \ + list[j]) / 2.0;\n    }\n    list.splice(j - 1, 0, median);\n\n    return list[0];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpzm5y08l4.js:73:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzm5y08l4.js:80:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length % 2 === 0) {\n    return Math.ceil(l.length / 2);\n  } else {\n\
    \    return Math.floor(l.length / 2);\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp5pn8umxv.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5pn8umxv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \treturn quantile(l, 0.5); // median(l) = (l + r) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9_0lxeeu.js:7\n\treturn quantile(l, 0.5); // median(l) = (l + r)\
    \ / 2;\n\t^\n\nReferenceError: quantile is not defined\n    at median (/tmp/tmp9_0lxeeu.js:7:2)\n\
    \    at test (/tmp/tmp9_0lxeeu.js:14:20)\n    at Object.<anonymous> (/tmp/tmp9_0lxeeu.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = l[0], l, x = l[0], y = l[1], e = [], i, j, k;\n  for(i=l.length-1;\
    \ i>=0; i--){\n    e = l[i]; l[i] = m; m = y;\n    for(j=x; j<i; j++) x = l[j];\n\
    \    for(k = i; k>j; k--) l = k === i ? [m, l] : l[k-1];\n    for(j = i; j>k;\
    \ j--) l[j] = l;\n  }\n  return m = ( x>y ? x : y ), l[0] === m ? m : mean([m,\
    \ l[0]]), y;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdbvk5185.js:14\n  return m = ( x>y ? x : y ), l[0] === m ? m :\
    \ mean([m, l[0]]), y;\n                                           ^\n\nReferenceError:\
    \ mean is not defined\n    at median (/tmp/tmpdbvk5185.js:14:44)\n    at test\
    \ (/tmp/tmpdbvk5185.js:22:20)\n    at Object.<anonymous> (/tmp/tmpdbvk5185.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tl = l.sort(function (a, b) { return a - b; });\n\tif(l.length % 2 === 0){\n\t\
    \treturn l[Math.floor(l.length/2)];\n\t} else {\n\t\treturn (0.5 * (l[l.length/2\
    \ - 1] + l[l.length/2]));\n\t}\n}\n\nmodule.exports = median;\n\n},{}],40:[function(require,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp74n9ybu_.js:17\n},{}],40:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (isSorted){\n    return l[(l.length-1)/2];\n  }\n  var length = l.length;\n\
    \  if (length & 1){\n    return l[(length-1)/2];\n  }\n  var half = Math.floor(length/2);\n\
    \  var i = 1;\n  while (i<half){\n    if(l[i++] < l[i-1])\n      return l[i-1];\n\
    \  }\n  return l[i-1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp03d1f3vw.js:7\n  if (isSorted){\n  ^\n\nReferenceError: isSorted\
    \ is not defined\n    at median (/tmp/tmp03d1f3vw.js:7:3)\n    at test (/tmp/tmp03d1f3vw.js:28:20)\n\
    \    at Object.<anonymous> (/tmp/tmp03d1f3vw.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  let sorted = l.slice().sort(function(a,b){\n    return b-a;\n  });\n  let len\
    \ = sorted.length;\n  return len%2?(sorted[len/2] + sorted[len/2-1])/2:sorted[len/2];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpc23y4jxd.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc23y4jxd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m=l[0];\n  for(var i in l){\n    m=m>l[i]?m:l[i];\n  }\n  return m;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpyduwv788.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyduwv788.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length < 2){\n    return l[0];\n  }\n  \n  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  }).reverse();\n  \n  var mid = l.length / 2;\n  var\
    \ a1 = l[mid];\n  var a2 = l[mid+1];\n  \n  return (a1 + a2) / 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmphf8ug286.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphf8ug286.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  return len%2 !== 0 && len/2-1 || len;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpoexezczg.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoexezczg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = Array(n/2), i = n;\n    while(i--){\n        a[i] =\
    \ l[i];\n    }\n    n = a.length;\n    i = ~~(n/2);\n    return a[i] === Infinity\
    \ ? Infinity : (n > Math.floor(n/2) ? 1 : a[n/2 - 1]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp06mvuz3k.js:7\n    var n = l.length, a = Array(n/2), i = n;\n \
    \                         ^\n\nRangeError: Invalid array length\n    at median\
    \ (/tmp/tmp06mvuz3k.js:7:27)\n    at test (/tmp/tmp06mvuz3k.js:21:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp06mvuz3k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var i = 1;\n  var length = l.length;\n  if(!length || length < 2) return null;\n\
    \  while(true){\n    if(i > length / 2) return l[i - 1];\n    var h = Math.floor(i\
    \ * (i + 1) / 2);\n    var m = i - h;\n    var a = l[h];\n    var b = l[m];\n\
    \    var c = l[h - 1];\n    if(a <= b && b <= c){\n      return (a+b+c)/2;\n \
    \   }else if(a > b){\n      i++;\n    }else{\n      i--;\n    }\n  }\n};\n},{}],14:[function(require,module,exports){\n\
    var util = require('../../../util');\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmplfw1f4xg.js:26\n},{}],14:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif (l.length % 2 === 0) {\n\t\tvar half = Math.floor(l.length / 2);\n\t\tif(l[half]\
    \ == l[half-1]){\n\t\t\treturn l[half-1];\n\t\t}\n\t\telse{\n\t\t\treturn l[half];\n\
    \t\t}\n\t}\n\telse{\n\t\treturn (l[Math.floor(l.length/2)]);\n\t}\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpbub7gzsx.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbub7gzsx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l || [], n = l.length, m = l[0], k = (n + 1) >> 1, i;\n    if(n <\
    \ 2) return m;\n    if(n < 1.5) return median2(n);\n    if(n < 4) return Math.ceil(m)\
    \ + 1;\n    i = 1;\n    while(k < n) {\n      if(l[i] <= m) i++;\n      else k++;\n\
    \    }\n    return l[i - 1];\n  }\n  function median2(m) {\n    return Math.ceil((m+1)\
    \ * .5);\n  }\n  // http://jsperf.com/number-abbreviations\n  var abbrevs = {\n\
    \    Yr: 4.17e-1,\n    Nb: 9e-9,\n    I: .0166,\n    Pm: .3,\n    Sm: .03,\n \
    \   L: .01,\n    C: 100,\n    XL: 100,\n    Xc: 100,\n    Xv: 100,\n    V: .01,\n\
    \    D: .01,\n    G: .01,\n    M: +(.3 * 1),\n    B: .30e-3,\n  };\n\n  var mag\
    \ = 1e-6, norm2 = 1e3, norm = Math.pow(10, mag), noMagic;\n  if(typeof(parseFloat(Number.MAX_VALUE))\
    \ === 'number') {\n    noMagic = norm < norm2;\n    norm *= norm2;\n  } else {\n\
    \    noMagic = true;\n  }\n\n  if(typeof(Number.EPSILON) === 'number') {\n   \
    \ noMagic = norm < Number.EPSILON;\n  }\n\n  exports.mag = mag;\n  exports.norm\
    \ = norm;\n  exports.nor2 = norm2;\n  exports.noMagic = noMagic;\n\n  function\
    \ formatNumber$2(n) {\n    if(noMagic) return n;\n    return n < 0 ? (norm2 +\
    \ 'e+' + n) : (norm2 + 'e' + n);\n  }\n  exports.formatNumber = formatNumber$2;\n\
    \n  var _ = require('underscore');\n  exports.round = function(n) {\n    return\
    \ n.toFixed(exports.mag);\n  };\n  exports.round0 = function(n) {\n    if(n <\
    \ exports.norm) return exports.round(n);\n    return n;\n  };\n  exports.round1\
    \ = function(n) {\n    return exports.round0(n);\n  };\n\n  var util = require('util');\n\
    \  exports.inspect = function(x, showHidden, depth, colors) {\n    if(x === null)\
    \ return 'null';\n    if(x === undefined) return 'undefined';\n    if(_.isFunction(x))\
    \ return x.name || x.toString();\n    if(x instanceof Date) return x.toISOString();\n\
    \    if(util.isArray(x)) {\n      var xs = _.map(x, exports.inspect);\n      return\
    \ '{' + xs.join(', ') + '}';\n    }\n    if(showHidden === false) {\n      var\
    \ keys = Object.keys(x), parts = [];\n      keys.forEach(function(key) {\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6do7urxa.js:100\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l.slice(0);\n    l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var mid = l.length / 2;\n    if (l.length % 2 === 1) mid++;\n    return (-l[mid]\
    \ + l[mid-1]);\n}\n\nexports.median = median;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp61apcncc.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp61apcncc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if(l.length % 2 === 0)\n        return (l[l.length/2 - 1] + l[l.length/2])/2;\n\
    \    if(l.length % 2 !== 0) \n        throw new RangeError('The median function\
    \ only accepts even number of elements!');\n    var middle = Math.floor(l.length\
    \ / 2);\n    var left = [], right = [];\n    for(var i=0; i<l.length; i++){\n\
    \        if(i < middle) \n            left.push(l[i]);\n        else \n      \
    \      right.push(l[i]);\n    }\n    return median(left) + median(right);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp9qedn4mc.js:10\n        throw new RangeError('The median function\
    \ only accepts even number of elements!');\n        ^\n\nRangeError: The median\
    \ function only accepts even number of elements!\n    at median (/tmp/tmp9qedn4mc.js:10:15)\n\
    \    at test (/tmp/tmp9qedn4mc.js:27:20)\n    at Object.<anonymous> (/tmp/tmp9qedn4mc.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    sort(l);\n    var num = l.length>>1,\n        i = num-1,\n        j,\n  \
    \      h = (num-1)/2,\n        m,\n        a;\n    for(i=num/2-1;i>0;i--){\n \
    \       j = i;\n        while(j<h){\n            a = l[j];\n            h = j\
    \ - 1;\n            m = j + 1;\n            while(m<h){\n                if(l[m]>a)\n\
    \                    m = m;\n                else\n                    h = h +\
    \ 1;\n            }\n            if(l[m]<a)\n                j = m;\n        \
    \    else\n                break;\n        }\n        if(j>i)\n            break;\n\
    \    }\n    return l[(num>>1)-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_0qmfanp.js:7\n    sort(l);\n    ^\n\nReferenceError: sort is not\
    \ defined\n    at median (/tmp/tmp_0qmfanp.js:7:5)\n    at test (/tmp/tmp_0qmfanp.js:42:20)\n\
    \    at Object.<anonymous> (/tmp/tmp_0qmfanp.js:49:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var i = l.length,\n    mid = Math.floor(l.length / 2);\n    return mid &&\
    \ l[mid] ? l[mid] : (i? l[i-1] : undefined);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2e931rd4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2e931rd4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tvar i = 1,\n\tsum = arr.reduce(function(sum, el){\n\t\treturn sum + el;\n\t\
    }, 0),\n\tlen = l.length;\n\t\n\tif((len % 2) === 0){\n\t\treturn l[~~(len/2)];\n\
    \t}\n\t\n\twhile(i < len){\n\t\tsum += l[i];\n\t\ti += 2;\n\t}\n\t\n\treturn sum/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl289m8s.js:8\n\tsum = arr.reduce(function(sum, el){\n\t      ^\n\
    \nReferenceError: arr is not defined\n    at median (/tmp/tmpwl289m8s.js:8:8)\n\
    \    at test (/tmp/tmpwl289m8s.js:30:20)\n    at Object.<anonymous> (/tmp/tmpwl289m8s.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sort(l, function(n){\n    return -n;\n  })[0];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmph0td1nyl.js:7\n  return sort(l, function(n){\n  ^\n\nReferenceError:\
    \ sort is not defined\n    at median (/tmp/tmph0td1nyl.js:7:3)\n    at test (/tmp/tmph0td1nyl.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmph0td1nyl.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = l.slice(), b = l.slice();\n  sort(a);\n  sort(b);\n  return (b.length\
    \ - 1) * ((a[0]+ a[1])/2);\n}\nmodule.exports = median;\n\n},{\"./sort\":45}],45:[function(require,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_9q93ldt.js:14\n},{\"./sort\":45}],45:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l = l.slice()\n  l.sort()\n  var half = Math.floor(l.length/2),\n      imedian\
    \ = half,\n      lval = l[imedian],\n      rval = l[--half]\n  l[imedian] = rval\n\
    \  if(half === 1){\n    return lval\n  }\n  if(rval < lval){\n    return lval\n\
    \  }\n  else{\n    return rval\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp7kizfruq.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7kizfruq.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortArr = l.slice(), l = sortArr.length;\n  if(l % 2 == 0){\n    sortArr.sort(function(a,\
    \ b){\n      return a-b;\n    });\n  }\n  else{\n    var tmp = sortArr.sort(function(a,\
    \ b){\n      return b-a;\n    });\n    sortArr = [tmp.pop()];\n  }\n  return sortArr[Math.floor(l\
    \ / 2)];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp7nuhythl.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7nuhythl.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977478
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if( !l.length ){\n    return 0;\n  }\n\n  var arr = l.slice(0); // copy the\
    \ array so we don't alter the original array\n  var mid = Math.floor( arr.length\
    \ / 2 );\n  var m = arr[ mid+1 ] || arr[0];\n  var u = ( arr[m-1] + arr[m] ) /\
    \ 2;\n\n  while( u === ( m+1 )/2 ){\n    m++;\n    if( m >= arr.length ){\n  \
    \    mid = arr.length;\n    }\n    u = ( arr[m-1] + arr[m] ) / 2;\n  }\n\n  return\
    \ u;\n}\n},{}],24:[function(require,module,exports){\nmodule.exports = '0.3.4';\n\
    },{}],25:[function(require,module,exports){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvfd2aywg.js:26\n},{}],24:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l || [];\n    if(l.length % 2 === 0){\n        return l[l.length/2];\n\
    \    }\n    var mid = Math.floor((l.length + 1) / 2),\n        count = 0;\n  \
    \  l.forEach(function(num){\n        if(num < 0){\n            num = -num;\n \
    \       }\n        else if(num === 0){\n            return 0;\n        }\n   \
    \     else if(num > 0){\n            count++;\n            if(count === mid){\n\
    \                return num;\n            }\n        }\n    });\n    return -1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpd7ls6sv3.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd7ls6sv3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length == 0) return undefined\n  return reduce(function(acc, val){\n \
    \   return isNaN(val) ? acc : (acc + val)\n  }, 0) / l.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpoze5uqm_.js:8\n  return reduce(function(acc, val){\n  ^\n\nReferenceError:\
    \ reduce is not defined\n    at median (/tmp/tmpoze5uqm_.js:8:3)\n    at test\
    \ (/tmp/tmpoze5uqm_.js:18:20)\n    at Object.<anonymous> (/tmp/tmpoze5uqm_.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return typeof l.sort == 'function' ? l.sort() : l.sort(function(a, b){\n\
    \        return a - b;\n    }).pop();\n}\n\n},{}],7:[function(require,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcs45xo1f.js:12\n},{}],7:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    if(l.length <= 1) return l[0];\n    var m = l[0], i = 0, l = l.length-1,\
    \ v;\n    while(l[i] < m){\n        v=l[i];\n        l[i] = l[l[l.length-1]-1];\n\
    \        l[l.length-1] = v;}\n    while(i<l){\n        m = (i<l ? (l[i]+l[i-1])/2\
    \ : l[i-1]);\n        l[i-1] = m;\n        i++;\n    }\n    return m;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptc6luaxr.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptc6luaxr.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  let sortArr = l.slice(0).sort(function(a, b){\n    return a - b;\n  });\n \
    \ let len = sortArr.length;\n  let idx = len/2;\n  return sortArr[idx];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpmyreph_c.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmyreph_c.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif(l.length === 0) {\n\t\tthrow new Error('median requires an array argument')\n\
    \t}\n\treturn _median(l)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprxpmphyr.js:10\n\treturn _median(l)\n\t^\n\nReferenceError: _median\
    \ is not defined\n    at median (/tmp/tmprxpmphyr.js:10:2)\n    at test (/tmp/tmprxpmphyr.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmprxpmphyr.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){return a - b}); // Sort l in ascending order.\n\
    \  return l[(l.length-1) / 2];\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n8\n    at test (/tmp/tmpl4io0ud5.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl4io0ud5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var mid = l.length, vl;\n    if(vl === undefined) vl = median(l.slice());\n\
    \    else if(vl === Infinity || vl === -Infinity) return vl;\n    else return\
    \ vl;\n    return l[mid] >= (mid-1) && l[mid] <= (mid+1);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_2egx8jd.js:8\n    if(vl === undefined) vl = median(l.slice());\n\
    \                                       ^\n\nRangeError: Maximum call stack size\
    \ exceeded\n    at Array.slice (<anonymous>)\n    at median (/tmp/tmp_2egx8jd.js:8:40)\n\
    \    at median (/tmp/tmp_2egx8jd.js:8:31)\n    at median (/tmp/tmp_2egx8jd.js:8:31)\n\
    \    at median (/tmp/tmp_2egx8jd.js:8:31)\n    at median (/tmp/tmp_2egx8jd.js:8:31)\n\
    \    at median (/tmp/tmp_2egx8jd.js:8:31)\n    at median (/tmp/tmp_2egx8jd.js:8:31)\n\
    \    at median (/tmp/tmp_2egx8jd.js:8:31)\n    at median (/tmp/tmp_2egx8jd.js:8:31)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = isSortedArray(l)\n        ? l\n        : arrayShuffle(sort(arrayMap(l,\
    \ function(v){\n            return v\n        })))\n    return (isSorted(a, 1)\
    \ ? l[n] : medianSorted)(a, .5), n\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj498bnml.js:7\n    var n = l.length, a = isSortedArray(l)\n   \
    \                       ^\n\nReferenceError: isSortedArray is not defined\n  \
    \  at median (/tmp/tmpj498bnml.js:7:27)\n    at test (/tmp/tmpj498bnml.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmpj498bnml.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tl = l.slice();\n\tl.sort(function(a, b){return a - b});\n\tvar len = l.length;\n\
    \treturn (len % 2) ? l[len / 2 - 1] : (l[len / 2] + l[len / 2 - 1]) / 2;\n}\n\n\
    \nvar murmurHash3 = murmurHash3_32bit = (function(){\n  var MASK_HIGH = 0xffff;\n\
    \  var MASK_LOW = 0xffffffff;\n  var MASK_OVERFLOW = 0x10000;\n\n  var K_MAX_VAL\
    \ = 0x7fffffff;\n  var K_MIN_HASH_VAL = 0xffff0000;\n  var K_MAX_HASH_VAL = 0xffffffff;\n\
    \n  function Kh (h, c) {\n    h = h & MASK_HIGH;\n    c = c & MASK_LOW;\n    return\
    \ (h << 16) | (c << 8) | 0;\n  }\n\n  function Kl (l, c) {\n    l = l & MASK_LOW;\n\
    \    c = c & MASK_HIGH;\n    return (l << 16) | (c << 8) | 0;\n  }\n\n  var l\
    \ = K_MAX_VAL;\n  var c = K_MIN_HASH_VAL;\n  var h = K_MAX_HASH_VAL;\n  var n\
    \ = 0;\n  var m = 0;\n  var k = 0;\n\n  while (n !== 0 && m < 4) {\n    var j\
    \ = 0;\n    var w = 0;\n\n    while (j <= m) {\n      if (j == n) {\n        j\
    \ = 0;\n        w = n + 1;\n      } else if (w == n) {\n        j += 2;\n    \
    \    w = n + 2;\n      } else {\n        j += 1;\n        w = (n + 1) / 2;\n \
    \     }\n\n      var c0 = c & MASK_LOW;\n      var c1 = MASK_OVERFLOW;\n     \
    \ var c2 = l & MASK_LOW;\n      var c3 = MASK_OVERFLOW;\n\n      l = Kh(l & MASK_HIGH,\
    \ c0);\n      c = Kh(c, (c0 & c0) == c0 ? c1 : c0);\n      l ^= c;\n      m =\
    \ ((l ^ l) - l) >>> 0;\n      l ^= l;\n      m = ((l ^ l) - l) >>> 0;\n      l\
    \ ^= l;\n\n      n = w;\n      c = Kh(c, (c0 & c0) == c0 ? c1 : c0);\n      w\
    \ ^= c;\n      m = ((w ^ w) - w) >>> 0;\n      w ^= w;\n      m = ((w ^ w) - w)\
    \ >>> 0;\n      w ^= w;\n\n      j++;\n    }\n\n    k += j;\n    m += j;\n\n \
    \   if (m < 4) m = 4 - m;\n  }\n\n  return k + MASK_OVERFLOW | 0;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpulwmg3ak.js:90\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: -1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var i = 1,\n      n = l.length;\n  if ( n <= 1 )\n    return l[(n - 1) / 2];\n\
    \  var m = l[(n - 1) / 2];\n  while ( i < n ) {\n    while ( m < l[i] )\n    \
    \  m = ( i + 1 ) % n;\n    while ( m === l[i] )\n      m = ( i + 1 ) % n;\n  \
    \  if ( m === 0 )\n      return i;\n    i++;\n  }\n  return l;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977483
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var numbers = l\n    .filter(function(n){\n      return typeof n != 'undefined'\
    \ && n !== null\n    }).sort(function(a, b){\n      return b-a\n    })\n    \n\
    \  return numbers[Math.floor(numbers.length / 2)]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpp2u2gytx.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp2u2gytx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = (l||[]).length;\n  if (n < 1)\n    return undefined;\n  var odd = n\
    \ % 2 === 1;\n  return !odd ? l[n / 2 - 1] : ((l[n / 2] + l[n / 2 - 1]) / 2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpp2cmyq6z.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp2cmyq6z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = l.slice()\n  if(l.length===0) return NaN\n  if(l.length===1) return\
    \ a[0]\n  a.sort()\n  var m1 = (l.length-1)/2\n  if(a[m1]===a[m1]) return median(a.slice(0,m1))\n\
    \  return (a[m1]+a[m1])/2\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_g5w1ogw.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_g5w1ogw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    return Math.max.apply(Math, l.map(function(v){return +v}))/l.length;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfxgywhtr.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfxgywhtr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortUnique(l.sort(function(a, b){\n    return a - b;\n  })).slice(0,\
    \ ~~(l.length / 2));\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqdsupydw.js:7\n  return sortUnique(l.sort(function(a, b){\n  ^\n\
    \nReferenceError: sortUnique is not defined\n    at median (/tmp/tmpqdsupydw.js:7:3)\n\
    \    at test (/tmp/tmpqdsupydw.js:18:20)\n    at Object.<anonymous> (/tmp/tmpqdsupydw.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = void 0;\n    var len = l.length;\n    if(len === 0){\n        med\
    \ = NaN;\n    }\n    else if(len % 2 === 1){\n        var a = l[len-1];\n    \
    \    med = l[Math.floor((len-1)/2)];\n        if(med !== void 0){\n          \
    \  med = Math.ceil(med / a);\n        }\n    }\n    else {\n        var a = l[Math.floor(len/2)];\n\
    \        var b = l[len-1];\n        med = Math.ceil(a + ((len-1-Math.floor(len/2))/2));\n\
    \        if(med !== void 0){\n            med = Math.ceil(med / b);\n        }\n\
    \    }\n    if(isNaN(med)){\n        med = NaN;\n    }\n    return med;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpo14i51j2.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo14i51j2.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  var m = l.pop();\n  var currentMedian;\n  while (l.length\
    \ > 0) {\n    currentMedian = l.sort(function(a, b) {\n      if (a < b) return\
    \ -1;\n      if (a > b) return 1;\n      return 0;\n    }).pop();\n    if (currentMedian\
    \ === m) {\n      return m;\n    }\n    if (currentMedian < m) {\n      m.push.apply(m,\
    \ currentMedian);\n    } else {\n      m.push.apply(m, currentMedian.slice().reverse());\n\
    \    }\n  }\n  return m.pop();\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphj_bjwaq.js:20\n      m.push.apply(m, currentMedian);\n       \
    \      ^\n\nTypeError: Cannot read properties of undefined (reading 'apply')\n\
    \    at median (/tmp/tmphj_bjwaq.js:20:14)\n    at test (/tmp/tmphj_bjwaq.js:33:20)\n\
    \    at Object.<anonymous> (/tmp/tmphj_bjwaq.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length < 2){\n    return l[0];\n  }\n  l = new Array(l.length);\n  var\
    \ med = l[0];\n  var index = l.length - 1;\n  while(index > 0){\n    var m = (index\
    \ > 1) ? l[index-1] : median(l.slice(index-1,index));\n    l[index] = m;\n   \
    \ index--;\n    if(Math.abs(m-l[index]) < Math.abs(med-l[index])){\n      med\
    \ = l[index];\n    }\n  }\n  return med;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp_eleih5r.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_eleih5r.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m=l[0], \n      r=[], \n      n=l.length, \n      i;\n\n  while(n){\n \
    \   i=(n-1)/2; //Find index of element in the array\n    r[i]=(l[i]<0)?l[i]*-1:l[i];\n\
    \    r[i]=(r[i]>l[i])?r[i]*-1:r[i]; //If left element is less than or equal to\
    \ the right element, swap left and right elements\n    n--;\n  }\n\n  //Return\
    \ median of the array\n  if(r.length)\n    return(r[m]<0?r[m]*-1:r[m]);\n  else\n\
    \    return(r[0]);\n}\n</code>\n<|/ a tags=javascript |>\n<| c |>\nThanks. But\
    \ can you please help me in understanding the algorithm behind it?\n<|/ c |>\n\
    <| c |>\nThis solution only works for positive numbers. What happens if there\
    \ is negative numbers?\n<|/ c |>\n<| c |>\nThat's what the code is trying to solve,\
    \ and why I said \"if your array contains negative numbers\" - it does work for\
    \ **all** positive numbers **and** negative numbers.\n<|/ c |>\n<| c |>\nI still\
    \ don't understand. What if the array is {-2, 10, 0, -10, -5} ?\n<|/ c |>\n<|\
    \ c |>\nI see, the example I gave was wrong - I thought that meant \"If your array\
    \ contains negative numbers\". I made a change to my code above to make it work\
    \ as intended. Thanks for pointing out your error!\n<|/ c |>\n<| a tags=javascript\
    \ dscore=3 |>\nIf you have already sorted your array of numbers, you could do\
    \ this:\n<code>\nvar median = numbers[Math.floor(numbers.length/2)];\n</code>\n\
    <|/ a |>\n<| c |>\nThis would give the wrong result if the array was sorted descending\n\
    <|/ c |>\n<| c |>\nYes, that is true.  You could also do a quick check to see\
    \ if numbers.length is even first.  Then get the index for even numbers and odd\
    \ numbers.  See my answer for a complete solution.\n<|/ c |>\n<| a |>\nThe median\
    \ is the value that appears more than half the times in the array. If you have\
    \ an array of numbers, all you have to do is find the median of the array and\
    \ find its index. \n<code>\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp__y70gmq.js:25\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l){\n    l = l.slice(0); // copy arguments array so we can sort\n    l.sort(function(a,\
    \ b){return a-b});\n    return l[(l.length/2)]; // median of copy\n  }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpokj1jovj.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpokj1jovj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = l;\n  var l = m.length;\n  var n = 0;\n  if((l%2===0) && (l!==0)){\n\
    \    n = l/2;\n  } else {\n    n = l+l/2;\n  }\n  while(n--){\n    if(m[n]<m[n-1])\
    \ m[n] = m[n-1];\n  }\n  if(m[n]==Infinity) return Infinity;\n  return m[n];\n\
    }\n\n},{}],7:[function(_dereq_,module,exports){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpgzzcmr3r.js:22\n},{}],7:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.filter(function(n){\n    return !isNaN(n);\n  });\n  if(l.length==0)\
    \ return null;\n  var sorted = l.slice().sort(function(a, b){\n    return a -\
    \ b;\n  });\n  var median = (l[Math.floor(l.length/2)-1]+l[Math.floor(l.length/2)])/2;\n\
    \  return sorted[Math.floor(sorted.length/2)];\n}\n  \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp0jc029yc.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0jc029yc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return findMedian(l,function(a){\n    return (a%1)*a;\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6nbql4zh.js:7\n  return findMedian(l,function(a){\n  ^\n\nReferenceError:\
    \ findMedian is not defined\n    at median (/tmp/tmp6nbql4zh.js:7:3)\n    at test\
    \ (/tmp/tmp6nbql4zh.js:17:20)\n    at Object.<anonymous> (/tmp/tmp6nbql4zh.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sorted = l.slice().sort(function(a, b){\n            return a - b;\n\
    \        }),\n        mid = sorted.length/2,\n        left = sorted.slice(0, mid),\n\
    \        right = sorted.slice(mid);\n\n    return mid<left.length? l[mid]: median(left)\
    \ + median(right);\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpz1kfttvp.js:7\n    var sorted = l.slice().sort(function(a, b){\n\
    \                   ^\n\nRangeError: Maximum call stack size exceeded\n    at\
    \ Array.slice (<anonymous>)\n    at median (/tmp/tmpz1kfttvp.js:7:20)\n    at\
    \ median (/tmp/tmpz1kfttvp.js:14:37)\n    at median (/tmp/tmpz1kfttvp.js:14:37)\n\
    \    at median (/tmp/tmpz1kfttvp.js:14:37)\n    at median (/tmp/tmpz1kfttvp.js:14:37)\n\
    \    at median (/tmp/tmpz1kfttvp.js:14:37)\n    at median (/tmp/tmpz1kfttvp.js:14:37)\n\
    \    at median (/tmp/tmpz1kfttvp.js:14:37)\n    at median (/tmp/tmpz1kfttvp.js:14:37)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var s = l.sort(function(a, b){return a-b});\n    var half = Math.floor(s.length/2);\n\
    \    if (s.length%2){\n        return s[half];\n    } else {\n        return (s[s.length-1]\
    \ + s[half]) / 2;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n505\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpy7fws_rc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy7fws_rc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 505,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        med = l.sort()[Math.floor((l.length-2)/2)]\n\
    \    if (med == l[l.length-1]) return l[Math.floor((l.length-1)/2)]\n    return\
    \ med;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpm63ko026.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm63ko026.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var arr = l.slice()\n  var sorted = arr.slice().sort(function(a,b){return a-b})\n\
    \  if(arr.length % 2){\n    return sorted[(arr.length/2)-1]\n  } else {\n    return\
    \ sorted[((arr.length)/2)-1]\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpjyvy75qf.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjyvy75qf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    // Assume this is a sorted array\n    if (l.length === 0) {\n        throw\
    \ new Error('Cannot determine median of an empty array');\n    }\n    return l[Math.floor(l.length\
    \ / 2)];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp88jy93g_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp88jy93g_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = sort(l);\n  if(a.length % 2 == 1)\n    return (a[a.length/2-1] + a[a.length/2])/2;\n\
    \  else\n    return a[Math.floor(a.length/2-1)];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp407l0059.js:7\n  var a = sort(l);\n          ^\n\nReferenceError:\
    \ sort is not defined\n    at median (/tmp/tmp407l0059.js:7:11)\n    at test (/tmp/tmp407l0059.js:19:20)\n\
    \    at Object.<anonymous> (/tmp/tmp407l0059.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l.sort(function(a, b){return a-b});\n    var a = (l.length-2)/2;\n    return\
    \ l[Math.ceil(a)];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpxuvpa6b_.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxuvpa6b_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length === 0) {\n    throw Error('Cannot calculate median of an empty\
    \ array');\n  }\n  return quickSelect(l, l.length / 2, 0, l.length-1);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3mdub103.js:10\n  return quickSelect(l, l.length / 2, 0, l.length-1);\n\
    \  ^\n\nReferenceError: quickSelect is not defined\n    at median (/tmp/tmp3mdub103.js:10:3)\n\
    \    at test (/tmp/tmp3mdub103.js:18:20)\n    at Object.<anonymous> (/tmp/tmp3mdub103.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var m = 0, l = l.length, i = l;\n    if(l % 2 === 1){\n        if(l){\n \
    \           while(i && l[m] === i[m--]);\n            --m;\n        }\n    } else\
    \ {\n        while(--i > 0 && l[i]);\n    }\n    return m ? l[m-1] : 0;\n}\nmodule.exports\
    \ = median;\n\n},{}],141:[function(require,module,exports){\nvar random = require('../random');\n\
    var sum = require('./sum');\nvar isArrayLike = require('./isArrayLike');\nvar\
    \ isObject = require('../lang/isObject');\n\nvar min = Math.min;\nvar max = Math.max;\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp0hxh4t7i.js:20\n},{}],141:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif (l.length < 2){\n\t\treturn l[0];\n\t}\n\tvar sortArray = [];\n\tfor (var\
    \ i = 0; i < l.length; i++){\n\t\tsortArray.push(l[i]);\n\t}\n\treturn median(sortArray);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp69ayygf6.js:6\nfunction median(l){\n               ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmp69ayygf6.js:6:16)\n\
    \    at median (/tmp/tmp69ayygf6.js:14:9)\n    at median (/tmp/tmp69ayygf6.js:14:9)\n\
    \    at median (/tmp/tmp69ayygf6.js:14:9)\n    at median (/tmp/tmp69ayygf6.js:14:9)\n\
    \    at median (/tmp/tmp69ayygf6.js:14:9)\n    at median (/tmp/tmp69ayygf6.js:14:9)\n\
    \    at median (/tmp/tmp69ayygf6.js:14:9)\n    at median (/tmp/tmp69ayygf6.js:14:9)\n\
    \    at median (/tmp/tmp69ayygf6.js:14:9)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 0
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length\
    \ / 2);\n  if (l.length % 2) return l[half];\n  else return (0.5 * (l[half - 1]\
    \ + l[half]));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tl=l.slice();\n\tif(l.length<2||l.length===0){\n\t\treturn NaN;\n\t}\n\tif(l.length%2===0){\n\
    \t\tl.sort(function(a,b){\n\t\t\treturn a-b;\n\t\t});\n\t}\n\tvar h=Math.floor(l.length/2);\n\
    \tvar m=l[h];\n\tl.pop();\n\tl.sort(function(a,b){\n\t\treturn a-b;\n\t});\n\t\
    h=l.length;\n\tl.pop();\n\treturn m=(h===0)?NaN:m+(l.length%2?l/2:l/2);\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmplp25c9wi.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplp25c9wi.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return quantile(l, 0.5);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzpsqiwqv.js:7\n  return quantile(l, 0.5);\n  ^\n\nReferenceError:\
    \ quantile is not defined\n    at median (/tmp/tmpzpsqiwqv.js:7:3)\n    at test\
    \ (/tmp/tmpzpsqiwqv.js:15:20)\n    at Object.<anonymous> (/tmp/tmpzpsqiwqv.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, i, sorted;\n  if(n <= 1) return l[0];\n  if(n === 0) return\
    \ null;\n  sorted = sort(l);\n  if((sorted.length % 2) === 1) return sorted[(sorted.length\
    \ / 2) - 1];\n  return sorted[((sorted.length / 2) - 1)];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp31yi9nxg.js:10\n  sorted = sort(l);\n  ^\n\nReferenceError: sort\
    \ is not defined\n    at median (/tmp/tmp31yi9nxg.js:10:3)\n    at test (/tmp/tmp31yi9nxg.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmp31yi9nxg.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \treturn Math.max.apply(Math, l.filter(function (n){ return n > 0 }));\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpnmn5zn4k.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnmn5zn4k.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = l.sort(function(a, b){return a - b;}),\n      m = ~~(l.length/2),\n\
    \      b = a[0];\n  return a.length > 1 && l[m] - (l[m-1] + l[m+1]) / 2 < b ?\
    \ b : b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpankenxpu.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpankenxpu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortFn = function(a, b){return a - b};\n  var len = l.length, i;\n  if(len\
    \ % 2)\n    return l[len/2 - 1];\n  var a = l.sort(sortFn), mid = len/2;\n  for(i\
    \ = mid; i<len; i++){\n    if(l[i] - a[i] > a[i] - l[mid])\n      a[i] = l[mid];\n\
    \    else if(l[i] - a[i] < a[i] - l[mid])\n      a[i] = a[mid];\n    else\n  \
    \    a[i] = a[i] - l[mid];\n  }\n  if(a[len-1] < a[len/2])\n    return a[len/2];\n\
    \  return a[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp8xhb9df3.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8xhb9df3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = l.sort()[l.length/2];\n    if (l.length%2==0){\n        return\
    \ (med);\n    } else {\n        return med;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp5agsuois.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5agsuois.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = l[0],\n        i = 1;\n    for(; i < l.length; i++){\n        med\
    \ = (med.val < l[i].val) ? med.val : l[i].val;\n    }\n    return med;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpxz7h_tmy.js:10\n        med = (med.val < l[i].val) ? med.val :\
    \ l[i].val;\n                   ^\n\nTypeError: Cannot read properties of undefined\
    \ (reading 'val')\n    at median (/tmp/tmpxz7h_tmy.js:10:20)\n    at test (/tmp/tmpxz7h_tmy.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmpxz7h_tmy.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tif(l.length==0) return undefined;\n\tl.sort();\n\tvar w=l.length, a=w%2==0?l/2:l[w/2];\n\
    \treturn l[w/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpjweyh1le.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjweyh1le.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  // sort array before using binary search\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  // return average of middle elements\n  var mid = parseInt(l.length\
    \ / 2);\n  return (sum(l, 0, mid) + sum(l, mid)) /2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpym497w37.js:13\n  return (sum(l, 0, mid) + sum(l, mid)) /2;\n \
    \ ^\n\nReferenceError: sum is not defined\n    at median (/tmp/tmpym497w37.js:13:3)\n\
    \    at test (/tmp/tmpym497w37.js:21:20)\n    at Object.<anonymous> (/tmp/tmpym497w37.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length <= 1) return l[0];\n  var h = l.length / 2;\n  var a = l[h];\n\
    \  var b = l[h - 1];\n  return (a + b) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp5svap6a8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5svap6a8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = [l[0], l[1]];\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var x = l[a.length-1];\n  for(var i=a.length-2; i>=0; i--){\n    if(a[i] !==\
    \ x){\n      break;\n    }\n  }\n  return a[i-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp8hzni8m5.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8hzni8m5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  l = l.slice(0); // copy l to avoid altering the input\n  var n = l.length;\
    \ // ensure there are an even number of elements\n  return (n%2 == 0)? Math.ceil((n/2)*((l[n/2-1]\
    \ + l[n/2])/2)): n>>1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp7nnykb5z.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7nnykb5z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var a = sortArray(l),\n      n = a.length,\n      m = ~~(n / 2);\n\n  return\
    \ m % 2 == 0 ? a[m] : (a[m-1] + a[m]) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpa5zzt4ua.js:7\n  var a = sortArray(l),\n          ^\n\nReferenceError:\
    \ sortArray is not defined\n    at median (/tmp/tmpa5zzt4ua.js:7:11)\n    at test\
    \ (/tmp/tmpa5zzt4ua.js:19:20)\n    at Object.<anonymous> (/tmp/tmpa5zzt4ua.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = 0;\n  if (typeOf(l) === 'array'){\n    n = l.length;\n  }\n  else if\
    \ (typeOf(l) === 'number'){\n    n = l;\n  }\n  else{\n    throw 'Cannot determine\
    \ median from an unspecified data type.';\n  }\n  if(n%2 === 0){\n    return l[n/2];\n\
    \  }\n  else{\n    return (l[n-1] + l[n])/2;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpquzviou0.js:8\n  if (typeOf(l) === 'array'){\n  ^\n\nReferenceError:\
    \ typeOf is not defined\n    at median (/tmp/tmpquzviou0.js:8:3)\n    at test\
    \ (/tmp/tmpquzviou0.js:29:20)\n    at Object.<anonymous> (/tmp/tmpquzviou0.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var _l = l.sort(function(a, b){\n        return a-b\n    })\n    return _l[Math.floor(_l.length/2)];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpp8vhkhr_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp8vhkhr_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var m = 0;\n  for (var i = 0; i < l.length; i++){\n    m += l[i];\n  }\n  return\
    \ m / l.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmp0pifbby1.js:20:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp0pifbby1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    l = l.sort(function(a, b){\n        return a - b;\n    });\n    var a = l[Math.floor((l.length)/2)];\n\
    \    var b = l[l.length-1];\n    if(a === undefined){\n        return b;\n   \
    \ }\n    if(a > b){\n        return b;\n    }\n    return a;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmprql_tg61.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprql_tg61.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var m = l[0], n = l[1], i, x;\n    if(n < m){\n        return NaN;\n    }\n\
    \    for(i=1;i<l.length;i++){\n        x = l[i];\n        if(x<m){\n         \
    \   m += 1;\n        }\n        else{\n            n = n + 1;\n        }\n   \
    \ }\n    return m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpl47cp9zd.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl47cp9zd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a,b){return a - b;});\n    var a = l[l.length-1];\n\
    \    var b = l[0];\n    return Math.abs((a - b) / 2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpv8nkka3s.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv8nkka3s.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if (l.length % 2 === 0){\n    return Math.median(l);\n  }\n  var a1 = new Array();\n\
    \  var a2 = new Array();\n  var a3 = new Array();\n  for (var i = 0; i < l.length;\
    \ i++){\n    a1[i] = l[i];\n    a2[i] = l[Math.ceil(i*0.5)];\n    a3[i] = l[Math.ceil(i*0.66)];\n\
    \  }\n  a1 = median(a1);\n  a2 = median(a2);\n  a3 = median(a3);\n  return Math.min(a1,\
    \ a2, a3);\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk5zceek5.js:6\nfunction median(l){\n               ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmpk5zceek5.js:6:16)\n\
    \    at median (/tmp/tmpk5zceek5.js:18:8)\n    at median (/tmp/tmpk5zceek5.js:18:8)\n\
    \    at median (/tmp/tmpk5zceek5.js:18:8)\n    at median (/tmp/tmpk5zceek5.js:18:8)\n\
    \    at median (/tmp/tmpk5zceek5.js:18:8)\n    at median (/tmp/tmpk5zceek5.js:18:8)\n\
    \    at median (/tmp/tmpk5zceek5.js:18:8)\n    at median (/tmp/tmpk5zceek5.js:18:8)\n\
    \    at median (/tmp/tmpk5zceek5.js:18:8)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortedArray = sort(l).slice(0); // Clone array and sort it.\n    var\
    \ len = sortedArray.length;\n    if(len%2 == 0){\n        return (sortedArray[(len-1)/2\
    \ - 1] + sortedArray[len/2]) / 2.0;\n    } else {\n        return sortedArray[Math.ceil(len\
    \ / 2)];\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpno_vcvfx.js:7\n    var sortedArray = sort(l).slice(0); // Clone\
    \ array and sort it.\n                      ^\n\nReferenceError: sort is not defined\n\
    \    at median (/tmp/tmpno_vcvfx.js:7:23)\n    at test (/tmp/tmpno_vcvfx.js:21:20)\n\
    \    at Object.<anonymous> (/tmp/tmpno_vcvfx.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l == null) return null;\n  if(l == 0) return 0;\n  if(l % 2 == 0) return\
    \ (l/2)\n  \n  var mid = Math.floor(l.length/2);\n  \n  var left = median(l.slice(0,\
    \ mid));\n  var right = median(l.slice(mid));\n  \n  return (( l.length%2) ? left\
    \ : right);\n  \n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp9vntxt1l.js:8\n  if(l == 0) return 0;\n       ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at Array.join (<anonymous>)\n    at Array.toString\
    \ (<anonymous>)\n    at median (/tmp/tmp9vntxt1l.js:8:8)\n    at median (/tmp/tmp9vntxt1l.js:13:14)\n\
    \    at median (/tmp/tmp9vntxt1l.js:14:15)\n    at median (/tmp/tmp9vntxt1l.js:14:15)\n\
    \    at median (/tmp/tmp9vntxt1l.js:14:15)\n    at median (/tmp/tmp9vntxt1l.js:14:15)\n\
    \    at median (/tmp/tmp9vntxt1l.js:14:15)\n    at median (/tmp/tmp9vntxt1l.js:14:15)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.reduce(function(a, b){\n    return (a + b)/2;\n  }, l.length < 3 ?\
    \ l.length : (l.length - 1)/2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.96875\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp4_vtupdg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4_vtupdg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.96875,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var med = l.sort(function(a,b){return a - b;});\n  var l = med.length;\n  if(l%2==0){\n\
    \    return med[l/2]; \n  }\n  else{\n    return med[(l-1)/2] + med[(l-2)/2];\n\
    \  }\n}\nmodule.exports = median;\n\n},{}],51:[function(require,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpxu3s11w1.js:18\n},{}],51:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  if(l.length === 0){\n    return 0;\n  }\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var median1 = l[l.length/2];\n  var median2 = l[l.length/2-1];\n\
    \  var median;\n  if(median1 > median2){\n    median = median1;\n  }else{\n  \
    \  median = median2;\n  }\n  return median;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpdpn4uf05.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdpn4uf05.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = sortBy(l, function(it){\n        return it;\n    }).length / 2;\n\
    \    return med;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpnqmmeh_p.js:7\n    var med = sortBy(l, function(it){\n        \
    \      ^\n\nReferenceError: sortBy is not defined\n    at median (/tmp/tmpnqmmeh_p.js:7:15)\n\
    \    at test (/tmp/tmpnqmmeh_p.js:18:20)\n    at Object.<anonymous> (/tmp/tmpnqmmeh_p.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \tl = l.sort(function (a, b){\n\t\treturn a-b;\n\t});\n\tvar mid = l[l.length/2];\n\
    \tif (l.length % 2) return mid;\n\telse return (l[l.length/2-1] + l[l.length/2])\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp9tsosajl.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9tsosajl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var mid = l.length/2, l = l.slice(), a = l[0], b = l[mid];\n  return Math.abs(a\
    \ - b) < 1e-10 ? a : b < 0 ? b : a + Math.round(b/2 - mid)*2\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp6j278fwt.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6j278fwt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var arr = [];\n  var i = 1;\n  \n  if (Array.isArray(l)){\n    l = l.filter(function(e){\n\
    \      return e !== undefined;\n    });\n  }\n  \n  while(i < l.length){\n   \
    \ arr.push(l[i]);\n    i += 1;\n  }\n  \n  return isFinite(arr.reduce(function(a,\
    \ b){\n    return a + b;\n  })/arr.length) ? arr.reduce(function(a, b){\n    return\
    \ a + b;\n  })/arr.length : undefined;\n}\n\nmodule.exports = median;\n\n},{}],16:[function(require,module,exports){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp93px530b.js:30\n},{}],16:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length\n    if (n < 1) return 0\n    if (n < 2) return l[0]\n \
    \   var i = (n - 1) >> 1\n    return ((l[i] + l[i+1]) / 2) >> 0\n}\n},{}],3:[function(require,module,exports){\n\
    var util = require(\"util\")\n\nvar BaseNode = require(\"./BaseNode\")\n\nmodule.exports\
    \ = UnionFind\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpsr4hrx1h.js:13\n},{}],3:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var data = l.slice(0), l = data.length, m = l % 2 == 0 ? l+1 : l/2;\n   \
    \ var k = (l-m)/2;\n    return data[m-1] < 0 ? (data[k] > data[m-1] ? data[k]\
    \ : data[m-1]) :\n         data[k] > data[m-1 ? m-1 : m] ? data[m-1] : data[m];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpddb8b65h.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpddb8b65h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length,\n        a,\n        sort,\n        i,\n        m,\n  \
    \      median;\n    if(n % 2 === 0){\n        sort = a.sort(function(a, b){\n\
    \            return a - b;\n        });\n        median = sort[(n - 1) / 2];\n\
    \    }else{\n        sort = [Math.max(l[0], l[1])];\n        for(i = 1; i < n;\
    \ i++){\n            sort.push(Math.min(l[i], sort[(i - 1) / 2]));\n        }\n\
    \        sort = sort.concat(sort.slice((n - 1) / 2).sort(function(a, b){\n   \
    \         return a - b;\n        }));\n        a = sort[(n - 1) / 2];\n      \
    \  for(i = 0; i < n; i++){\n            if(l[i] > a){\n                a = l[i];\n\
    \            }\n        }\n        median = a;\n    }\n    return median;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpk_spsmnb.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk_spsmnb.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977479

language: js
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let evenArray\
    \ = [];\n    let oddArray = [];\n    for(let i = 1; i <= num; i++){\n        if(num\
    \ % i === 0){\n            evenArray.push(i);\n        }\n        else{\n    \
    \        oddArray.push(i);\n        }\n    }\n    return [evenArray, oddArray];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    7\n  ],\n  [\n    2,\n    3,\n    4,\n    5,\n    6\n  ]\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpz3k6wjp8.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpz3k6wjp8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 7 ],\
    \ [ 2, 3, 4, 5, 6 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let arr\
    \ = [];\n    let even = 0;\n    let odd = 0;\n    while(num > 0){\n        arr.push(num%10);\n\
    \        num = (num-num%10)/10;\n    }\n    arr.forEach((item)=>{\n        if\
    \ (item%2 === 0){\n            even+=1;\n        }\n        if (item%2 === 1){\n\
    \            odd+=1;\n        }\n    })\n    return even===arr.length/2 ? [even,odd]\
    \ : false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphdmsw66m.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmphdmsw66m.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  while (num > 0){\n    let mod = num % 10;\n    if (mod % 2 == 0){\n\
    \      count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4x5dqvkr.js:24:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4x5dqvkr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while(num > 0){\n        arr.push(num % 10);\n        num = Math.floor(num/10);\n\
    \    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp5k6ewc0o.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5k6ewc0o.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if (num\
    \ < 0) {\n    return [-1, -1];\n  }\n  let count = 0;\n  let odd_num = 0;\n  let\
    \ even_num = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even_num++;\n\
    \    } else {\n      odd_num++;\n    }\n    num = parseInt(num / 10);\n  }\n \
    \ return [even_num, odd_num];\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmptwihj8fm.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmptwihj8fm.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -1 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var odd_count=0;\n\
    \  var even_count=0;\n  if(num < 0){\n    num=-num;\n  }\n  for(var i = 0; i<num.length;\
    \ i++){\n    if(num % 2 === 0){\n      even_count++;\n    }else{\n      odd_count++;\n\
    \    }\n  }\n  return [even_count, odd_count];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpc1if0r_w.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc1if0r_w.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0\n  for(var i=1;i<=num;i++){\n    count += (num%2 == 0) ? 0 : 1;\n    num\
    \ = Math.floor(num/2);\n  }\n  return count;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplh1_5x5x.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmplh1_5x5x.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar res\
    \ = [];\n\twhile(num > 0){\n\t\tvar num = num % 10;\n\t\tres.push(num);\n\t\t\
    num = parseInt(num / 10);\n\t}\n\treturn res;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpszpk4zu2.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpszpk4zu2.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var odd_digits\
    \ = [];\n    var even_digits = [];\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even_digits.push(num[i]);\n       \
    \ }else{\n            odd_digits.push(num[i]);\n        }\n    }\n    return [even_digits,\
    \ odd_digits];\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpck40yxsk.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpck40yxsk.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0){\n    num = num % 10;\n    if (num %\
    \ 2 == 0){\n      even = even+1;\n    }\n    num = Math.floor(num / 10);\n   \
    \ if (num % 2 == 1){\n      odd = odd+1;\n    }\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpxxiu_mu6.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxxiu_mu6.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7\n  ]\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpsmpq9bpq.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsmpq9bpq.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n      0, 1, 2, 3,\n      4, 5, 6, 7\n    ]\n  ],\n  expected: [ 0, 1 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  for(var i = num;  i >= 0; num -= i , i = i / 10){\n    arr.push(i);\n\
    \  }\n  return arr;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffd54a38310\n 1: 0x2b9d5a78b727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b9d5b32028e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b9d5ac5c4a2  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b9d5adef373  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b9d5adf18f0  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b9d5afde7db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b9d5a93d7f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = 0;\n    let odd = 0;\n\n    while(num > 0){\n        if (num % 2 === 0){\n\
    \            even++;\n        }\n        else{\n            odd++;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpu1hlhxm0.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu1hlhxm0.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = []\n  for(let i = 1;i <= num;i++){\n    let rem = num % i;\n    if(rem ==\
    \ 0){\n      count.push(1)\n    }else{\n      count.push(2)\n    }\n    num =\
    \ num / i\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4kv19osa.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4kv19osa.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 2\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var evens\
    \ = [];\n  var odds = [];\n  var count = 0;\n  while (num){\n    if (num % 2 ===\
    \ 0){\n      evens.push(count);\n    }\n    else{\n      odds.push(count);\n \
    \   }\n    count++;\n    num /= 2;\n  }\n  return [evens, odds];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n\
    \    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n\
    \    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n\
    \    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n\
    \    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n\
    \    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n\
    \    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n   ...\n\
    \nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpg639_r92.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg639_r92.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n       0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,\n      12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23,\n      24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35,\n      36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n      48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n      60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71,\n      72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,\n\
    \      84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,\n      96, 97, 98, 99,\n\
    \      ... 978 more items\n    ]\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even_count\
    \ = 0;\n  let odd_count = 0;\n  let arr = [];\n  while (num > 0){\n    let temp\
    \ = num % 10;\n    if (temp % 2 == 0) {\n      even_count += 1;\n    } else {\n\
    \      odd_count += 1;\n    }\n    num = Math.floor(num / 10);\n  }\n  arr.push(even_count);\n\
    \  arr.push(odd_count);\n  return arr;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpk0fm8tsk.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk0fm8tsk.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 1;\n  for (var i = 0; i < num; i++){\n    even = (num / 10)\
    \ % 2;\n    odd = (num / 10 + 1) % 2;\n  }\n  return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0.7,\n  1.7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp3f2am7in.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3f2am7in.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0.7, 1.7\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even_odd\
    \ = []\n  let even = 1\n  let odd = 1\n  while(num >= 0){\n    let n = num % 10\n\
    \    if(n < even){\n      even_odd.push(n) \n      even++\n    }else{\n      odd\
    \ = odd + n\n    }\n    num = Math.floor(num / 10)\n  }\n  return [even, odd]\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffcf176a3d0\n 1: 0x2ab99b590727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2ab99c12528e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2ab99ba5ff8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2ab99bbf1760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2ab99bbf90cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2ab99bde37db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2ab99b7427f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977365
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n   let result\
    \ = [];\n   for(let i =0; i<=Math.ceil(Math.log10(Math.abs(num))); i++){\n   \
    \   if(num/Math.pow(10,i) % 2 ===0 ){\n         result.push(i);\n      }\n   }\n\
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpbmt9api6.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpbmt9api6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = [0,1];\n  while (num > 0){\n    const mod = num % 10;\n    const index = count.findIndex(x\
    \ => x === mod);\n    if (index === -1){\n      count.push(mod);\n    } else {\n\
    \      count[index] = 1 + count[index];\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  7\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvfxh86qd.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvfxh86qd.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 7\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  while(num){\n    arr.push(num%2 ? 1 : 2);\n    num /= 10;\n  }\n  return\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  ...\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  1\n]\n    at test (/tmp/tmpjej8qqxp.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjej8qqxp.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\
    \    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1,\n    1, 1, 1, 1,\n    ... 225 more items\n  ],\n  expected: [\
    \ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [], odd = [];\n  while(num > 0){\n    if(num%2 === 0){\n      even.push(num%10);\n\
    \      num = (num/10) | 0;\n    }else{\n      odd.push(num%10);\n      num = (num/10)\
    \ | 0;\n    }\n  }\n  \n  return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpe4tr98i6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe4tr98i6.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    const\
    \ digits = String(num).split('');\n    const len = digits.length;\n    const odd_digits\
    \ = digits.filter(d => d % 2 === 0);\n    const even_digits = digits.filter(d\
    \ => d % 2 !== 0);\n\n    return [ odd_digits.length, even_digits.length ];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpk7fi60a5.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk7fi60a5.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar count\
    \ = 0;\n\twhile(num>0){\n\t\tcount += num%2 == 0 ? 0 : 1;\n\t\tnum = Math.floor(num/2);\n\
    \t}\n\treturn [count, count];\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp6jnckq1v.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6jnckq1v.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if (num\
    \ === 0){\n    return [0, 0];\n  }\n  if (num > 0){\n    return even_odd_count(num\
    \ / 10) + [num % 10 === 0 ? 1 : 0];\n  }\n  return even_odd_count(num / 10) +\
    \ [num % 10 === 0 ? 1 : 0];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0,00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmprw730lck.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmprw730lck.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0,00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // write\
    \ code here\n  let arr = [];\n  let len = num.toString().length;\n  for(let i=0;\
    \ i< len;i++){\n    if(num%2===0 && num!==0){\n      arr.push(num%10);\n    }\n\
    \    if(num%2!==0 && num!==0){\n      arr.push(num%10);\n    }\n  }\n  return\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpod3z4jkj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpod3z4jkj.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tlet count\
    \ = []\n\twhile (num > 0){\n\t\tcount.push(num % 2 == 0 ? 2 : 1)\n\t\tnum = Math.floor(num\
    \ / 10)\n\t}\n\treturn count\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp80p730ss.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp80p730ss.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let arr\
    \ = [];\n  for(let i = num; i >= 0; i--){\n    arr.push((i % 2 == 0)? (++num)\
    \ : (--num));\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  7,\n\
    \  6,\n  7,\n  6,\n  7,\n  6,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  0,\n\
    \  1\n]\n    at test (/tmp/tmpapc8oz4v.js:20:10)\n    at Object.<anonymous> (/tmp/tmpapc8oz4v.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    6,\
    \ 7, 6, 7,\n    6, 7, 6, 7\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  while (num > 0){\n    count++;\n    num /= 10;\n  }\n  return [count%2,\
    \ count%2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppiymxthb.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppiymxthb.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = [],\n\t\todd = [],\n\t\tstr = (num < 0) ? \"-\" : num+\"\";\n\n\tfor(var i\
    \ = 0, len = str.length; i < len; i++){\n\t\tif(i % 2 == 0){\n\t\t\teven.push(str[i]);\n\
    \t\t}\n\t\telse{\n\t\t\todd.push(str[i]);\n\t\t}\n\t}\n\n\treturn [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    '7'\n\
    \  ],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpe8ift2j2.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe8ift2j2.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ '7' ],\
    \ [] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0, odd = 0, temp, i;\n  if(num === 0){\n    return [0, 0];\n  }\n  for(let\
    \ i = 1; i < num; i++){\n    temp = num % 10;\n    if(temp === 0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  6\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpizevyvix.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpizevyvix.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 6 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = [],\n\t\todd = []; \n\tfor(var i=1;i<=num;i++){\n\t\tvar mod = num % i;\n\t\
    \tif(i%2==0){\n\t\t\teven.push(i);\n\t\t}else{\n\t\t\todd.push(mod);\n\t\t}\n\t\
    }\n\treturn [even,odd];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n\
    \    4,\n    6\n  ],\n  [\n    0,\n    1,\n    2,\n    0\n  ]\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpuimhzaqq.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpuimhzaqq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4,\
    \ 6 ], [ 0, 1, 2, 0 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let evenCount\
    \ = 0;\n    let oddCount = 0;\n    while(num > 0){\n        evenCount++;\n   \
    \     num -= Math.floor(num / 10);\n    }\n    while(num != 0){\n        oddCount++;\n\
    \        num -= Math.floor(num / 10);\n    }\n    return [evenCount, oddCount];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977366
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0, odd = 0, digit;\n  while(num != 0){\n    digit = num % 10;\n    digit =\
    \ digit % 2 === 0 ? digit : digit + 1;\n    num = Math.floor(num / 10);\n    even\
    \ = even + digit;\n    odd = odd + 1 - digit;\n  }\n  return [even, odd];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  8,\n  -7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpsoqcyar8.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsoqcyar8.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 8, -7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar odd\
    \ = 0;\n\tvar even = 0;\n\tvar n= num.toString();\n\twhile (n.length){\n\t\tvar\
    \ digit = n.substring(n.length-1);\n\t\tif (digit == \"1\"){\n\t\t\teven++;\n\t\
    \t} else {\n\t\t\todd++;\n\t\t}\n\t\tn = n.substring(0,n.length-1);\n\t}\n\treturn\
    \ [even,odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp72w_0m48.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp72w_0m48.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tlet evens\
    \ = [];\n\tlet odds = [];\n\tfor(let i = 0; i < num.toString().length; i++){\n\
    \t\t\n\t\tif(num.toString()[i] == '0'){\n\t\t\tevens.push(0);\n\t\t}else{\n\t\t\
    \tevens.push(1);\n\t\t}\n\t\tif(num.toString()[i] == '1'){\n\t\t\todds.push(1);\n\
    \t\t}else{\n\t\t\todds.push(0);\n\t\t}\n\t}\n\treturn [...evens, ...odds];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpg0iimgk6.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg0iimgk6.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  var evenNum = 0;\n  var oddNum = 0;\n\n  while(num > 0){\n    var last\
    \ = num%10;\n    arr.push(last);\n    num = num/10;\n  }\n\n  for(var i =0; i<arr.length;\
    \ i++){\n    if(arr[i]%2==0){\n      evenNum++;\n    }else{\n      oddNum++;\n\
    \    }\n  }\n\n  return [evenNum, oddNum];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  325\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp5j0hr7dc.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5j0hr7dc.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  for(var i = 1; i <= Math.abs(num); i++){\n    arr.push(Math.abs(num)\
    \ %i === 0 ? 1 : 2);\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  2,\n  2,\n  2,\n  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n\
    ]\n    at test (/tmp/tmp2_r_a0m9.js:20:10)\n    at Object.<anonymous> (/tmp/tmp2_r_a0m9.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 2, 2,\n    2, 2, 1\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  while(num >= 1){\n    if(num%2 ==0){\n      count++;\n    }\n    num\
    \ = Math.floor(num / 2);\n  }\n  return [count,count+1];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpuesb7ud3.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuesb7ud3.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // use\
    \ while loop\n  var even = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num%2\
    \ == 0){\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp6h5u5qb3.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6h5u5qb3.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let result\
    \ = [0,0];\n    while (num > 0){\n        let temp = Math.floor(num / 10);\n \
    \       result[temp % 2 === 0 ? (result[temp % 2] !== 0 ? result[temp % 2] + 1\
    \ : result[temp % 2]) : 1]++;\n        num = Math.floor(num / 10);\n    }\n  \
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpaj0gqqlo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaj0gqqlo.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0;\n  let odd = 0;\n  num = Math.abs(num);\n  for (let i = num; i >= 0; i--){\n\
    \    if (num % 2 === 0){\n      even++;\n    } else {\n      odd++;\n    }\n \
    \ }\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  8\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmptujfc82t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmptujfc82t.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 8 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var even_count=0;\n\
    \    var odd_count=0;\n    if (num < 0){\n        throw new Error(\"Invalid Input\"\
    );\n    }\n    else{\n        num = Math.abs(num);\n    }\n    for (var i = num\
    \ ; i >= 1; i--){\n        var remainder=i%2;\n        if (remainder===1){\n \
    \           even_count+=1;\n        }\n        else{\n            odd_count+=1;\n\
    \        }\n    }\n    return [even_count,odd_count];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplyjefik_.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmplyjefik_.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var even\
    \ = [];\n    var odd = [];\n\n    if(num < 0){\n        odd.push(Math.abs(num));\n\
    \    }\n    num = Math.abs(num);\n    while(num){\n        even.push(num%10);\n\
    \        num = Math.floor(num / 10);\n    }\n\n    while(even.length){\n     \
    \   if(even[even.length-1] % 2 === 0){\n            even.pop();\n        }\n \
    \       else{\n            odd.push(even[even.length-1]);\n        }\n    }\n\n\
    \    while(odd.length){\n        if(odd[odd.length-1] % 2 === 1){\n          \
    \  odd.pop();\n        }\n        else{\n            even.push(odd[odd.length-1]);\n\
    \        }\n    }\n\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7fff26391ba0\n 1: 0x2b83f6e8c727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b83f7a2128e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b83f735bf8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b83f74ed760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b83f74f50cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b83f76df7db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b83f703e7f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [], odd = [];\n    for(let i=0; num!=0; i++){\n        even.push(num%10);\n\
    \        num = Math.floor(num/10);\n    }\n    for(let i=0; i<even.length; i++){\n\
    \        if(even[i]%2==0){\n            odd.push(even[i]);\n        }else{\n \
    \           odd.push(even[i]-1);\n        }\n    }\n    return [even, odd]\n}\n\
    </code>\n<|/ a dscore=0 tags=arrays,javascript |>\n<| a |>\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpndn3rl43.js:22\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var res\
    \ = [0,0];\n  for(var i=0; i <= num.length/2; i++){\n    if(num.charAt(i) == '-')\
    \ continue;\n    if(num.charAt(i) % 2 === 0)\n      res[0]++;\n    else\n    \
    \  res[1]++;\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpsj1ahx4d.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsj1ahx4d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  var odd_count = 0;\n  for(var i =0; i<=num; i++){\n    if(num%2 ===\
    \ 0){\n      count++;\n    }else{\n      odd_count++;\n    }\n  }\n  return [count,\
    \ odd_count];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  8\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpjxp1u559.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjxp1u559.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 8 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenCount=0;\n\
    \  let oddCount=0;\n  while(num > 0){\n    let remain = num % 10;\n    evenCount\
    \ = evenCount + remain % 2 === 0 ? evenCount : evenCount+1;\n    oddCount = oddCount\
    \ + remain % 2 === 0 ? oddCount : oddCount+1;\n    num = Math.floor(num/10);\n\
    \  }\n  return [evenCount, oddCount];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpuer1ghur.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuer1ghur.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var even\
    \ = [];\n  var odd = [];\n  var count = num;\n  while(num > 0){\n    count = (num\
    \ % 10 === 0) ? count + 1 : count;\n    num = num / 10;\n  }\n  if(count % 2 ===\
    \ 0){\n    even.push(count);\n  } else {\n    odd.push(count);\n  }\n  return\
    \ even.concat(odd);\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppl2op9g9.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmppl2op9g9.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num===0){\n\
    \    return [0, 0];\n  }\n\n  const odd = Math.ceil(Math.log10(num));\n  const\
    \ even = Math.ceil(odd);\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphn4ow595.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmphn4ow595.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  while(num != 0){\n    count += num%2 == 0 ? 1 : 0;\n    num /= 10;\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpcl795xko.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpcl795xko.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let temp\
    \ = [];\n  while(num > 0){\n    temp.push(num%10);\n    num = Math.floor(num/10);\n\
    \  }\n  let even = 0;\n  let odd = 0;\n  for(let i=0; i<temp.length; i++){\n \
    \   if(temp[i]%2 === 0){\n      even+=1;\n    }else{\n      odd+=1;\n    }\n \
    \ }\n  return [even, odd];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp53d7q5mq.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp53d7q5mq.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var result\
    \ = [];\n    var n = 0;\n    while (num > 0){\n        if (num % 2 == 0){\n  \
    \          result.push(n);\n        }\n        num = Math.floor(num / 10);\n \
    \       n++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpwpp8zn49.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpwpp8zn49.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = [], odd = [], i; //Loop through num's digits and count the number of even\
    \ and odd ones.\n\tnum = Math.abs(num); //Convert the number into a positive number.\n\
    \tfor (i = 0; i<num.length; i++){\n\t\teven.push(num[i]%2 ? 1 : 0); //Check if\
    \ the current number being checked is even or odd.\n\t\todd.push(num[i]%2 ? 0\
    \ : 1);\n\t}\n\treturn [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpkm68v3nh.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkm68v3nh.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let result\
    \ = [];\n  let even = 0;\n  let odd = 0;\n  while (num >= 0){\n   num = (num-even)\
    \ % 10;\n   result.push(num);\n   even = (even+1) % 2;\n   odd = (odd+num) % 2;\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  6,\n\
    \  6,\n  5,\n  5,\n  4,\n  4,\n  3,\n  3,\n  2,\n  2,\n  1,\n  1,\n  0,\n  0,\n\
    \  -1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphiqwbml3.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphiqwbml3.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\
    \ 6, 6,  5, 5, 4,\n    4, 3, 3,  2, 2, 1,\n    1, 0, 0, -1\n  ],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let array\
    \ = []\n    while(num > 0){\n        let digit = num % 10\n        if(digit %\
    \ 2 === 0){\n            array.push(digit)\n        }\n        num = num / 10\n\
    \    }\n    return array\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpdnrbfv67.js:23:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpdnrbfv67.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var numArray\
    \ = num.toString().split('');\n  var evenCount = 0;\n  var oddCount = 0;\n\n \
    \ for (var i = 0; i < numArray.length; i++){\n    if (numArray[i] == '1') {\n\
    \      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n\n  return [evenCount,\
    \ oddCount];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpyo6kxzu3.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyo6kxzu3.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num\
    \ === 0)\n    return [1,1];\n  else\n    return [1,num%2]\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4_sa2x2j.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4_sa2x2j.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr=[];\n\
    \    while(num>0){\n        arr.push(num%2);\n        num= Math.floor(num/2);\n\
    \    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpbf1mg8by.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbf1mg8by.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [], odd = [];\n    for(let i = num; i > 0; i--){\n        if(num % 2 === 0){\n\
    \            even.push(i)\n        } else {\n            odd.push(i)\n       \
    \ }\n    }\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  6,\n\
    \  5,\n  4,\n  3,\n  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n\
    ]\n    at test (/tmp/tmptilnrfc7.js:24:10)\n    at Object.<anonymous> (/tmp/tmptilnrfc7.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\
    \ 6, 5, 4,\n    3, 2, 1\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let evens\
    \ = 0;\n    let odds = 0;\n    while(num != 0){\n        let x = num % 10; //The\
    \ remainder of dividing by 10.\n        if(x % 2 === 0){\n            evens +=\
    \ 1;\n        } else {\n            odds += 1;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evens, odds]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977366
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  while(num > 0){\n    count += num%2 == 0 ? 1 : 0;\n    num = Math.floor(num/10);\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp9mgbyds_.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp9mgbyds_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var even\
    \ = [1, 0], odd = [1, 1];\n    while(num > 0) {\n        even[even.length] = num\
    \ % 2;\n        num = num / 2;\n    }\n    return even.concat(odd);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0,\n\
    \  1,\n  1.5,\n  1.75,\n  0.875,\n  0.4375,\n  0.21875,\n  0.109375,\n  0.0546875,\n\
    \  0.02734375,\n  0.013671875,\n  0.0068359375,\n  0.00341796875,\n  0.001708984375,\n\
    \  0.0008544921875,\n  0.00042724609375,\n  0.000213623046875,\n  0.0001068115234375,\n\
    \  0.00005340576171875,\n  0.000026702880859375,\n  0.0000133514404296875,\n \
    \ 0.00000667572021484375,\n  0.000003337860107421875,\n  0.0000016689300537109375,\n\
    \  8.344650268554688e-7,\n  4.172325134277344e-7,\n  2.086162567138672e-7,\n \
    \ 1.043081283569336e-7,\n  5.2154064...\n\nshould loosely deep-equal\n\n[\n  0,\n\
    \  1\n]\n    at test (/tmp/tmpq5dmuri9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpq5dmuri9.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\n\
    \    0,\n    1,\n    1.5,\n    1.75,\n    0.875,\n    0.4375,\n    0.21875,\n\
    \    0.109375,\n    0.0546875,\n    0.02734375,\n    0.013671875,\n    0.0068359375,\n\
    \    0.00341796875,\n    0.001708984375,\n    0.0008544921875,\n    0.00042724609375,\n\
    \    0.000213623046875,\n    0.0001068115234375,\n    0.00005340576171875,\n \
    \   0.000026702880859375,\n    0.0000133514404296875,\n    0.00000667572021484375,\n\
    \    0.000003337860107421875,\n    0.0000016689300537109375,\n    8.344650268554688e-7,\n\
    \    4.172325134277344e-7,\n    2.086162567138672e-7,\n    1.043081283569336e-7,\n\
    \    5.21540641784668e-8,\n    2.60770320892334e-8,\n    1.30385160446167e-8,\n\
    \    6.51925802230835e-9,\n    3.259629011154175e-9,\n    1.6298145055770874e-9,\n\
    \    8.149072527885437e-10,\n    4.0745362639427185e-10,\n    2.0372681319713593e-10,\n\
    \    1.01863406598"
  stdout: ''
  timestamp: 1659977361
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let count\
    \ = 0;\n    if(num === 0) return [num, num];\n\n    while(num > 0){\n        num\
    \ = (num%10) + 1;\n        count++;\n    }\n\n    return [count, count+num];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977366
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num\
    \ < 0){\n    throw \"num can't be negative\"\n  }\n  const evenDigits = [];\n\
    \  const oddDigits = [];\n  let digit;\n  do {\n    digit = num % 10;\n    if(digit\
    \ % 2 === 0){\n      evenDigits.push(digit);\n    }else{\n      oddDigits.push(digit);\n\
    \    }\n    num /= 10;\n  } while (num > 0);\n  return [evenDigits, oddDigits];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7,\n    0.7,\n    0.06999999999999999,\n    0.006999999999999999,\n    0.0006999999999999999,\n\
    \    0.00007,\n    0.000006999999999999999,\n    6.999999999999999e-7,\n    6.999999999999999e-8,\n\
    \    6.999999999999999e-9,\n    6.999999999999999e-10,\n    6.999999999999999e-11,\n\
    \    6.999999999999999e-12,\n    6.999999999999999e-13,\n    6.999999999999999e-14,\n\
    \    6.999999999999999e-15,\n    6.999999999999999e-16,\n    6.999999999999999e-17,\n\
    \    7e-18,\n    6.999999999999999e-19,\n    6.999999999999999e-20,\n  ...\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp69whdzsl.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp69whdzsl.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n                            7,                    0.7,    0.06999999999999999,\n\
    \         0.006999999999999999,  0.0006999999999999999,                0.00007,\n\
    \      0.000006999999999999999,   6.999999999999999e-7,   6.999999999999999e-8,\n\
    \         6.999999999999999e-9,  6.999999999999999e-10,  6.999999999999999e-11,\n\
    \        6.999999999999999e-12,  6.999999999999999e-13,  6.999999999999999e-14,\n\
    \        6.999999999999999e-15,  6.999999999999999e-16,  6.999999999999999e-17,\n\
    \                        7e-18,  6.999999999999999e-19,  6.999999999999999e-20,\n\
    \        6.999999999999999e-21,  6.999999999999999e-22,  6.999999999999999e-23,\n\
    \                        7e-24, 6.9999999999999995e-25,                  7e-26,\n\
    \                        7e-27,                  7e-28,                  7e-29,\n\
    \   "
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const even\
    \ = new Array();\n  const odd = new Array();\n  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while (num > 0){\n    if (num % 2 == 0){\n      even[evenCount] = num\
    \ % 10;\n      evenCount++;\n    }\n    else {\n      odd[oddCount] = num % 10;\n\
    \      oddCount++;\n    }\n    num /= 10;\n  }\n  return { even, odd };\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  even: [],\n\
    \  odd: [\n    7,\n    0.7,\n    0.06999999999999999,\n    0.006999999999999999,\n\
    \    0.0006999999999999999,\n    0.00007,\n    0.000006999999999999999,\n    6.999999999999999e-7,\n\
    \    6.999999999999999e-8,\n    6.999999999999999e-9,\n    6.999999999999999e-10,\n\
    \    6.999999999999999e-11,\n    6.999999999999999e-12,\n    6.999999999999999e-13,\n\
    \    6.999999999999999e-14,\n    6.999999999999999e-15,\n    6.999999999999999e-16,\n\
    \    6.999999999999999e-17,\n    7e-18,\n    6.999999999999999e-19,\n    6.999999999999...\n\
    \nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp7n3j32ah.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7n3j32ah.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    even:\
    \ [],\n    odd: [\n                            7,                    0.7,    0.06999999999999999,\n\
    \         0.006999999999999999,  0.0006999999999999999,                0.00007,\n\
    \      0.000006999999999999999,   6.999999999999999e-7,   6.999999999999999e-8,\n\
    \         6.999999999999999e-9,  6.999999999999999e-10,  6.999999999999999e-11,\n\
    \        6.999999999999999e-12,  6.999999999999999e-13,  6.999999999999999e-14,\n\
    \        6.999999999999999e-15,  6.999999999999999e-16,  6.999999999999999e-17,\n\
    \                        7e-18,  6.999999999999999e-19,  6.999999999999999e-20,\n\
    \        6.999999999999999e-21,  6.999999999999999e-22,  6.999999999999999e-23,\n\
    \                        7e-24, 6.9999999999999995e-25,                  7e-26,\n\
    \                        7e-27,                  7e-28,                 "
  stdout: ''
  timestamp: 1659977362
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var result\
    \ = [];\n    var temp = Math.abs(num);\n    while(temp>1){\n        result.unshift(temp%2);\n\
    \        temp = parseInt(num/2,10);\n    }\n    return result\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977366
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tif(num\
    \ < 0) return [-1,-1];\n\tvar even = [num%2, 0];\n\tvar odd = [1, num%2];\n\t\
    var result = [even, odd];\n\tvar i = 1;\n\twhile(num > 0){\n\t\ti++;\n\t\tnum\
    \ = Math.floor(num / 10);\n\t\tif(num%2 == 0){\n\t\t\teven.push(num%2);\n\t\t\
    }else{\n\t\t\todd.push(num%2);\n\t\t}\n\t}\n\treturn result;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    0,\n    0\n  ],\n  [\n    1,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  1\n]\n    at test (/tmp/tmpmvvm73tx.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmvvm73tx.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 0,\
    \ 0 ], [ 1, 1 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    \n  \
    \  let evenNum;\n    let oddNum;\n    let evenCount = 0;\n    let oddCount = 0;\n\
    \    \n    if (num > 0){\n        num = Math.abs(num);\n        \n        let\
    \ even = num.toString().split('');\n        evenNum = even.length;\n        \n\
    \        let odd = num.toString().split('');\n        oddNum = odd.length;\n \
    \       \n        if (evenNum >= oddNum){\n            evenCount++;\n        \
    \    while (evenNum > 0 && odd.indexOf(even[evenNum - 1]) > -1){\n           \
    \     evenNum--;\n                evenCount++;\n            }\n        } else\
    \ {\n            oddCount++;\n            while (odd.indexOf(odd[oddNum - 1])\
    \ > -1){\n                oddNum--;\n                oddCount++;\n           \
    \ }\n        }\n    }\n    \n    return evenCount.concat({even: evenNum, odd:\
    \ oddCount});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpx_h8k_0z.js:38\n    return evenCount.concat({even: evenNum, odd:\
    \ oddCount});\n                     ^\n\nTypeError: evenCount.concat is not a\
    \ function\n    at even_odd_count (/tmp/tmpx_h8k_0z.js:38:22)\n    at test (/tmp/tmpx_h8k_0z.js:46:20)\n\
    \    at Object.<anonymous> (/tmp/tmpx_h8k_0z.js:56:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977361
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  num.toString().split('').sort().reverse();\n\
    \  let even = [],odd = []\n  for(let i = 0; i < num.length; i++){\n    if(i%2\
    \ == 0){\n      even.push(num[i])\n    }else{\n      odd.push(num[i])\n    }\n\
    \  }\n  return{even,odd}\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  even: [],\n\
    \  odd: []\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpfucii1pt.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfucii1pt.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [],\
    \ odd: [] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    var count = 0;\n    while(num > 0){\n        var mod = num % 10;\n\
    \        num = Math.floor(num/10);\n        if(mod % 2 == 0){\n            arr.push(mod);\n\
    \        }\n        else{\n            arr.push(mod - 1);\n        }\n    }\n\
    \    for(var i=0;i<arr.length;i++){\n        if(arr[i] != arr[i+1]){\n       \
    \     count = count + 1;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp00vfc3nb.js:33:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp00vfc3nb.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [];\n  let odd = [];\n\n  for(let i = 0; i < num.toString().length; i++){\n\
    \    if(num.toString().substring(i, i + 1).match(/^(ev|odd)$/i)){\n      if(num.toString().substring(i,\
    \ i + 1).match(/ev/i)){\n        even.push(num.toString().substring(i, i + 1));\n\
    \      }\n      else{\n        odd.push(num.toString().substring(i, i + 1));\n\
    \      }\n    }\n  }\n  console.log(even);\n  console.log(odd);\n  return [even,\
    \ odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp0bywvbf8.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0bywvbf8.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[]

    []

    '
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar arr\
    \ = [];\n\tvar count = 0;\n\twhile(num > 0){\n\t\tarr.push(num%10);\n\t\tnum =\
    \ Math.floor(num/10);\n\t\tcount++;\n\t}\n\t\n\tif(count == 0){\n\t\treturn arr;\n\
    \t}\n\t\n\twhile(count > 0){\n\t\tif(arr[count] == 0){\n\t\t\tarr.splice(0, 1);\n\
    \t\t\tcount--;\n\t\t}\n\t\telse{\n\t\t\tcount--;\n\t\t}\n\t}\n\t\n\treturn arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpe_e672jo.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe_e672jo.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [],\n      odd = [];\n  if (num === 0) {\n    odd.push(0);\n    even.push(1);\n\
    \  } else {\n    while (num > 0) {\n      const remainder = num % 2;\n      odd.push(remainder);\n\
    \      even.push(remainder + 1);\n      num = Math.floor(num / 2);\n    }\n  }\n\
    \  return { even, odd };\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  even: [\n\
    \    2,\n    2,\n    2\n  ],\n  odd: [\n    1,\n    1,\n    1\n  ]\n}\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4aprrew2.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4aprrew2.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [\
    \ 2, 2, 2 ], odd: [ 1, 1, 1 ] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = 0;\n    let odd = 1;\n    while(num > 0){\n       if(num % 2 === 0){\n   \
    \        even++;\n       }else{\n           odd++;\n       }\n       num = Math.floor(num/2);\n\
    \    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpo0a7ouir.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo0a7ouir.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var count=[];\n\
    \    for(var i=0;i<num;i++){\n        if((num % 2)===0){\n            count.push(1);\n\
    \        }else{\n            count.push(0);\n        }\n        num=num/2;\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzhtwz2_s.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzhtwz2_s.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar count\
    \ = 0;\n\tvar newNum = 0;\n\n\twhile(num > 0){\n\t\tnewNum = num%10;\n\t\tif(newNum%2\
    \ === 0){\n\t\t\tcount++;\n\t\t}\n\t\tnum = parseInt(num/10);\n\t}\n\treturn [count,\
    \ count+1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpuvd8w0hn.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuvd8w0hn.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var result\
    \ = [];\n  var temp = 0;\n  for(var i = 0;i<num.length;i++){\n    temp = num[i]%10;\n\
    \    if(temp%2 == 0){\n      result.push(1);\n    } else {\n      result.push(0);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp3_0gs5sl.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp3_0gs5sl.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let evenArray\
    \ = [];\n    let oddArray = [];\n    for(let i = 0; i < num.length; i++){\n  \
    \      if(num[i] % 2 === 0){\n            evenArray.push(num[i]);\n        }else{\n\
    \            oddArray.push(num[i]);\n        }\n    }\n    return evenArray.concat(oddArray);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpmo23cumn.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpmo23cumn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0){\n    let result = num%10;\n  \
    \  if (result %2 == 0){\n      evenCount++;\n    }else{\n      oddCount++;\n \
    \   }\n    num = Math.floor(num/10);\n  }\n  return [evenCount, oddCount];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpuit_8cdt.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuit_8cdt.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num<0){\n\
    \    return []\n  }\n  if(num===0){\n    return [0]\n  }\n  if(num===-1){\n  \
    \  return [1]\n  }\n  let result=[]\n  for(let i=1;i<num;i++){\n    let even=num%2===0\n\
    \    let odd=num%2===1\n    if(even){\n      result.push(even)\n    }\n    if(odd){\n\
    \      result.push(odd)\n    }\n    num-=i\n  }\n  return result\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  true,\n \
    \ true,\n  true\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test\
    \ (/tmp/tmpepf23lns.js:37:10)\n    at Object.<anonymous> (/tmp/tmpepf23lns.js:47:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ true, true,\
    \ true ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [];\n    let odd = [];\n    let i = Math.floor(Math.log10(num) / 3);\n   \
    \ let result = [];\n    while(i--){\n        if(num%Math.pow(10,i) === 0){\n \
    \           result.push(i);\n            even.push(num/Math.pow(10,i));\n    \
    \    }\n        if(num%Math.pow(10,i) === 0){\n            result.push(i);\n \
    \           odd.push(num/Math.pow(10,i));\n        }\n    }\n    return [even,\
    \ odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmprz0fftss.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmprz0fftss.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar result\
    \ = [];\n\twhile(num > 0){\n\t\tvar mod = num % 10;\n\t\tnum = parseInt(num /\
    \ 10);\n\t\tif(mod % 2 === 0){\n\t\t\tresult.push(mod);\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpnmjg2myo.js:24:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpnmjg2myo.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = []\n  let odd = []\n\n  while (num > 0){\n    if(num%2 === 0){\n      even.push(num)\n\
    \    } else {\n      odd.push(num)\n    }\n    num /= 10\n  }\n  return [even,\
    \ odd]\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7,\n    0.7,\n    0.06999999999999999,\n    0.006999999999999999,\n    0.0006999999999999999,\n\
    \    0.00007,\n    0.000006999999999999999,\n    6.999999999999999e-7,\n    6.999999999999999e-8,\n\
    \    6.999999999999999e-9,\n    6.999999999999999e-10,\n    6.999999999999999e-11,\n\
    \    6.999999999999999e-12,\n    6.999999999999999e-13,\n    6.999999999999999e-14,\n\
    \    6.999999999999999e-15,\n    6.999999999999999e-16,\n    6.999999999999999e-17,\n\
    \    7e-18,\n    6.999999999999999e-19,\n    6.999999999999999e-20,\n  ...\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpdiz9v1w8.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdiz9v1w8.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n                            7,                    0.7,    0.06999999999999999,\n\
    \         0.006999999999999999,  0.0006999999999999999,                0.00007,\n\
    \      0.000006999999999999999,   6.999999999999999e-7,   6.999999999999999e-8,\n\
    \         6.999999999999999e-9,  6.999999999999999e-10,  6.999999999999999e-11,\n\
    \        6.999999999999999e-12,  6.999999999999999e-13,  6.999999999999999e-14,\n\
    \        6.999999999999999e-15,  6.999999999999999e-16,  6.999999999999999e-17,\n\
    \                        7e-18,  6.999999999999999e-19,  6.999999999999999e-20,\n\
    \        6.999999999999999e-21,  6.999999999999999e-22,  6.999999999999999e-23,\n\
    \                        7e-24, 6.9999999999999995e-25,                  7e-26,\n\
    \                        7e-27,                  7e-28,                  7e-29,\n\
    \   "
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tlet even_count\
    \ = 0\n\tlet odd_count = 0\n\tfor(let num2 = num; num2 > 0; num2 /= 10){\n\t\t\
    if(num2 % 2 == 0){\n\t\t\teven_count += 1;\n\t\t}\n\t\telse{\n\t\t\todd_count\
    \ += 1;\n\t\t}\n\t}\n\treturn [even_count,odd_count]\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  325\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpuxgj6w74.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuxgj6w74.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const array\
    \ = [];\n  for(let i=1; i<=num; i++){\n    array.push(i);\n    array[(num-i)%10-1]\
    \ = array[(num-i)%10-1]+1;\n  }\n  return array;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  NaN,\n\
    \  NaN,\n  NaN,\n  NaN,\n  NaN,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  '-1': NaN\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmptoyj6s10.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmptoyj6s10.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    2,\
    \         NaN,\n    NaN,       NaN,\n    NaN,       NaN,\n    2,         3,\n\
    \    4,         5,\n    6,         7,\n    '-1': NaN\n  ],\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  while(num){\n    count++;\n    num = parseInt(num/10);\n  }\n  return\
    \ [count, count%2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpjz1hk_ne.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjz1hk_ne.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar evenCount\
    \ = 0;\n\tvar oddCount = 0;\n\n\twhile(num >= 0){\n\t\tnum = num % 10;\n\t\tif(num\
    \ == 0){\n\t\t\tbreak;\n\t\t}\n\t\tif(num % 2 === 0){\n\t\t\tevenCount ++;\n\t\
    \t}\n\t\telse {\n\t\t\toddCount ++;\n\t\t}\n\t}\n\treturn [evenCount, oddCount];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977367
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var sum\
    \ = 0;\n  while(num > 0){\n    sum += num % 2;\n    num /= 2;\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.999999999999999\n\
    \nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppi15ulch.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppi15ulch.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.999999999999999,\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = [];\n\tvar odd = [];\n\twhile(num > 0){\n\t\tvar temp = num%10;\n\t\teven.push(temp);\n\
    \t\tnum = parseInt(num/10);\n\t}\n\twhile(num > 0){\n\t\tvar temp = num%10;\n\t\
    \todd.push(temp);\n\t\tnum = parseInt(num/10);\n\t}\n\treturn [even,odd];\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    7\n\
    \  ],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp5_kv42hg.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5_kv42hg.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 7 ], []\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  let arr = [];\n  while (num != 0) {\n    arr.push(num % 10);\n    num\
    \ = Math.floor(num/10);\n  }\n  arr.forEach(item => {\n    if(item % 2 === 0){\n\
    \      count += 1;\n    } else {\n      count -= 1;\n    }\n  });\n  return [count,\
    \ arr];\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\nA solution that uses Array.prototype.some()\n\n<code>\nconst isEven = (n)\
    \ => n % 2 === 0\nconst isOdd = (n) => n % 2 === 1\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvguhfaci.js:23\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var even\
    \ = 0, odd = 1;\n  if(num < 0){\n    num = -num;\n    even = 1;\n  }\n  while\
    \ (num > 0) {\n    num = num / 10;\n    if (num % 2 === 0){\n      even++;\n \
    \   } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  325\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpp0_i68_9.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp0_i68_9.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 325 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var odd\
    \ = 0, even = 0;\n    \n    while (num > 0){\n        num = Math.floor(num / 10);\n\
    \        if(num % 2 === 0){\n            even++;\n        }\n        else{\n \
    \           odd++;\n        }\n    }\n    \n    return [odd, even];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpp3xxbp09.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp3xxbp09.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenOddCountArray\
    \ = [];\n  let currentNum = num;\n  while(currentNum > 0) {\n    if (currentNum\
    \ % 2 == 0) {\n      evenOddCountArray.push(1);\n    }\n    else {\n      evenOddCountArray.push(0);\n\
    \    }\n    currentNum = currentNum / 2;\n  }\n  return evenOddCountArray;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  ...\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  1\n]\n    at test (/tmp/tmpbun10vhu.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbun10vhu.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\
    \    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0,\n    0, 0, 0, 0,\n    ... 978 more items\n  ],\n  expected: [\
    \ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let digits\
    \ = String(num).split(\"\");\n    let even = [],odd = [];\n    let evenCount =\
    \ 0,oddCount = 0;\n    digits.forEach((digit,index) => {\n        if(index%2 ==\
    \ 0){\n            even.push(digit);\n            evenCount++;\n        }else\
    \ {\n            odd.push(digit);\n            oddCount++;\n        }\n    });\n\
    \    return [evenCount,oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp944m2ien.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp944m2ien.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  return\
    \ [Math.floor(num / 10), num % 10];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpaqsmdzng.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaqsmdzng.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evens\
    \ = [];\n  let odds = [];\n  while(num > 0){\n    if(num % 2 == 0){\n      evens.push(num);\n\
    \    }\n    else{\n      odds.push(num);\n    }\n    num = Math.floor(num/2);\n\
    \  }\n  return [evens, odds]\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7,\n    3,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n\
    ]\n    at test (/tmp/tmp793_d8cr.js:27:10)\n    at Object.<anonymous> (/tmp/tmp793_d8cr.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7,\
    \ 3, 1 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num<0){\n\
    \    num*=-1\n  }\n  const arr=Array(num+1).fill(0)\n  for(let i=0;i<num;i++){\n\
    \    arr[i]+=i%2?0:1\n  }\n  return arr\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0,\n\
    \  1,\n  0,\n  1,\n  0,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n\
    \  1\n]\n    at test (/tmp/tmpd_zjp4cy.js:23:10)\n    at Object.<anonymous> (/tmp/tmpd_zjp4cy.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 0, 1, 0,\n    1, 0, 1, 0\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even_count=0;\n\
    \  let odd_count=0;\n  while(num>0){\n    let remainder=num%10;\n    if(remainder%2==0){\n\
    \      even_count+=1;\n    }else{\n      odd_count+=1;\n    }\n    num=Math.floor(num/10);\n\
    \  }\n  return [even_count,odd_count];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjq11rmp5.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjq11rmp5.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  return\
    \ Number(num.toString()).split('').reduce((a,b)=>{\n    var c = Number(a)\n  \
    \  c += Number(b)\n    return c\n  }, 0)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7h2ztvtf.js:8\n  return Number(num.toString()).split('').reduce((a,b)=>{\n\
    \                                ^\n\nTypeError: Number(...).split is not a function\n\
    \    at even_odd_count (/tmp/tmp7h2ztvtf.js:8:33)\n    at test (/tmp/tmp7h2ztvtf.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmp7h2ztvtf.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let arr\
    \ = []\n  while(num!=0){\n    arr.push(num%2)\n    num = Math.floor(num/2)\n \
    \ }\n  return arr\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4a84_zmc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4a84_zmc.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenArray\
    \ = [];\n  let oddArray = [];\n  if(num < 0){\n    evenArray = [1, 1];\n    oddArray\
    \ = [1, -1];\n  }\n  else {\n    let currentNum = num;\n    while (currentNum\
    \ > 0){\n      evenArray.push(num % 2);\n      currentNum /= 2;\n    }\n    currentNum\
    \ = num;\n    while (currentNum > 0){\n      oddArray.push(num % 2);\n      currentNum\
    \ /= 2;\n    }\n  }\n  return evenArray.concat(oddArray);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  ...\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  1\n]\n    at test (/tmp/tmpxc3mskq_.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxc3mskq_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\
    \    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1,\n    1, 1, 1, 1,\n    ... 2056 more items\n  ],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while(num){\n    if(num%2===0){\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 2);\n  }\n\
    \  return [evenCount,oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpdly0ccgd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdly0ccgd.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var n\
    \ = Math.abs(num);\n    var array = [];\n    var isEven = (n%2==0); // if number\
    \ even\n    if(isEven){\n        array.push(n); //push the even number into the\
    \ array\n    }\n    for(var i = 3; i<= Math.abs(n); i+=2){ // for all the odd\
    \ numbers (starting from 3) \n        if(isEven){ //if the number is even\n  \
    \          array.push(i);\n        }\n        else { //if the number is odd\n\
    \            array.push(-i);\n        }\n        isEven = !isEven; //invert the\
    \ boolean value\n    }\n    return array; //return an array containing the even\
    \ and odd numbers\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -3,\n  5,\n\
    \  -7\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpbios1opv.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbios1opv.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -3, 5, -7\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num\
    \ < 0){\n    return [0]\n  }\n  \n  let even = []\n  let odd = []\n  \n  while(num){\n\
    \    let temp = num % 10\n    num = Math.floor(num/10)\n    \n    if(temp ===\
    \ 2){\n      even.push(temp)\n    }else{\n      odd.push(temp)\n    }\n  }\n \
    \ \n  return [even, odd]\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpunv3vztr.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpunv3vztr.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var odd\
    \ = [];\n  var even = [];\n\n  while(num > 0){\n    var mod = num % 10;\n    odd.push(mod);\n\
    \    num -= mod;\n  }\n\n  while(num > 0){\n    var mod = num % 10;\n    if(mod\
    \ % 2 === 0){\n      even.push(mod);\n      num -= mod;\n    } else {\n      even.push(0);\n\
    \    }\n  }\n\n  return [even,odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpmazytf7r.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmazytf7r.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [];\n    let odd = [];\n    while(num){\n        if(num%2 == 0){\n       \
    \     even.push(num);\n        }else{\n            odd.push(num);\n        }\n\
    \        num = num/2;\n    }\n    return [even,odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7,\n    3.5,\n    1.75,\n    0.875,\n    0.4375,\n    0.21875,\n    0.109375,\n\
    \    0.0546875,\n    0.02734375,\n    0.013671875,\n    0.0068359375,\n    0.00341796875,\n\
    \    0.001708984375,\n    0.0008544921875,\n    0.00042724609375,\n    0.000213623046875,\n\
    \    0.0001068115234375,\n    0.00005340576171875,\n    0.000026702880859375,\n\
    \    0.0000133514404296875,\n    0.00000667572021484375,\n    0.000003337860107421875,\n\
    \    0.0000016689300537109375,\n    8.344650268554688e-7,\n    4.172325134277344e-7,\n\
    \    2.086...\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmps2o61zmp.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmps2o61zmp.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n      7,\n      3.5,\n      1.75,\n      0.875,\n      0.4375,\n     \
    \ 0.21875,\n      0.109375,\n      0.0546875,\n      0.02734375,\n      0.013671875,\n\
    \      0.0068359375,\n      0.00341796875,\n      0.001708984375,\n      0.0008544921875,\n\
    \      0.00042724609375,\n      0.000213623046875,\n      0.0001068115234375,\n\
    \      0.00005340576171875,\n      0.000026702880859375,\n      0.0000133514404296875,\n\
    \      0.00000667572021484375,\n      0.000003337860107421875,\n      0.0000016689300537109375,\n\
    \      8.344650268554688e-7,\n      4.172325134277344e-7,\n      2.086162567138672e-7,\n\
    \      1.043081283569336e-7,\n      5.21540641784668e-8,\n      2.60770320892334e-8,\n\
    \      1.30385160446167e-8,\n      6.51925802230835e-9,\n      3.259629011154175e-9,\n\
    \      1.6298145055770874e-9,\n      8.149072527885437e-10,\n     "
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const odd\
    \ = num % 2;\n  if(odd == 0){\n    return [num, 1];\n  }else{\n    const even\
    \ = num - odd;\n    return [even, odd];\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpg56iexdt.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg56iexdt.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 6, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    const\
    \ result = [];\n    while(num > 0){\n        result.push(num%2 ? 2 : 1);\n   \
    \     num = parseInt(num/2);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp00ii8dvd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp00ii8dvd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var even\
    \ = 0, odd = 0, arr = [];\n    num = Math.abs(num);\n    while(num > 0){\n   \
    \     arr.push(num % 10);\n        num = Math.floor(num / 10);\n    }\n    for(var\
    \ i = 0, len = arr.length; i < len; i++){\n        if((i % 2) === 0){\n      \
    \      even++;\n        }else{\n            odd++;\n        }\n    }\n    return\
    \ [even, odd];\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpepq4tj71.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpepq4tj71.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [];\n    let odd = [];\n    while(num > 0){\n        let last_digit = num\
    \ % 10;\n        if(last_digit % 2 === 0){\n            even.push(last_digit);\n\
    \            num = Math.floor(num / 10);\n        }else{\n            odd.push(last_digit);\n\
    \            num = Math.floor(num / 10);\n        }\n    }\n    return [even,\
    \ odd];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp6wv6r9lq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6wv6r9lq.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let result\
    \ = [];\n  for(let i = 0; i < num.length; i++){\n    let even = num.charCodeAt(i)\
    \ % 2;\n    let odd = (num.charCodeAt(i) + 1) % 2;\n    result.push(even, odd);\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpfj5doonv.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfj5doonv.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar result\
    \ = [];\n\tvar sign = 1;\n\tif(num < 0){\n\t\tsign = -1;\n\t\tnum = -num;\n\t\
    }\n\twhile(num > 0){\n\t\tif(num % 2 === 0){\n\t\t\tresult.push(1);\n\t\t} else\
    \ {\n\t\t\tresult.push(0);\n\t\t}\n\t\tnum = Math.floor(num / 2);\n\t}\n\treturn\
    \ [sign, result.reverse()];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  [\n\
    \    0,\n    0,\n    0\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n\
    ]\n    at test (/tmp/tmpg0g8gfxa.js:30:10)\n    at Object.<anonymous> (/tmp/tmpg0g8gfxa.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, [ 0,\
    \ 0, 0 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let arr=[];\n\
    \  while(num > 0){\n    if (num % 2 == 0){\n      arr.push(num);\n    }\n    if\
    \ (num % 2 == 1){\n      arr.push(num);\n    }\n    num--;\n  }\n  return arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  6,\n\
    \  5,\n  4,\n  3,\n  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n\
    ]\n    at test (/tmp/tmpvm6arwn6.js:26:10)\n    at Object.<anonymous> (/tmp/tmpvm6arwn6.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\
    \ 6, 5, 4,\n    3, 2, 1\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = [];\n  for(let i = 0; i < num.length; i++){\n    if(num[i] % 2 === 0 && num[i]\
    \ % 10 == 0){\n      count.push(1);\n    }\n    if(num[i] % 2 !== 0 && num[i]\
    \ % 10 != 0){\n      count.push(2);\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpl_iwobly.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpl_iwobly.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  var odd = 0;\n  var even = 0;\n  while (num > 0) {\n    count = (num\
    \ % 10) % 2;\n    num = Math.floor(num / 10);\n    odd = (odd % 10) + count;\n\
    \    even = (even % 10) + count;\n  }\n  return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpwquja9q7.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwquja9q7.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var array\
    \ = [];\n  for(var i = 0; i <= num; i += 2){\n    array.push(i);\n  }\n  return\
    \ array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  2,\n\
    \  4,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp_4nc_17b.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_4nc_17b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 2, 4,\
    \ 6 ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // initialize\
    \ an array that contains the even and odd numbers \n  var evenodd = []\n  \n \
    \ // loop through num and count the even and odd digits\n  for(var i = 0; i <=\
    \ num; i++){\n    // if i is an even digit\n    if(num % 2 === 0){\n      evenodd.push(i)\n\
    \    }\n    // else if i is an odd digit\n    else if(num % 2 !== 0){\n      evenodd.push(num-i)\n\
    \    }\n  }\n  // return the array\n  return evenodd\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  6,\n\
    \  5,\n  4,\n  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n\
    \  1\n]\n    at test (/tmp/tmpvcaiw9k3.js:31:10)\n    at Object.<anonymous> (/tmp/tmpvcaiw9k3.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\
    \ 6, 5, 4,\n    3, 2, 1, 0\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [];\n  let odd = [];\n  let len = num.length;\n  for(let i = 0; i< len; i++){\n\
    \    const current_digit = num[i];\n    if(current_digit % 2 == 0){\n      even.push(current_digit);\n\
    \    } else {\n      odd.push(current_digit);\n    }\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpq3_k1l1e.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq3_k1l1e.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var even_count\
    \ = 0;\n  var odd_count = 0;\n  num = Math.abs(num);\n  if(num >= 1){\n    if(num\
    \ % 2 === 0){\n      even_count++;\n    }else{\n      odd_count++;\n    }\n  }\n\
    \  return [even_count, odd_count];\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpltq3_5uw.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpltq3_5uw.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0){\n    even = num%2;\n    odd = num%2;\n\
    \    num = Math.floor(num/2);\n  }\n  return [even,odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp9e76zb8n.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e76zb8n.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    if(num\
    \ < 0){\n        return [-1,-1];\n    }\n    \n    var digits_array = [],\n  \
    \      i = num.toString().length;\n    \n    while(num){\n        digits_array.push([num\
    \ % 10,0]);\n        num = parseInt(num / 10);\n    }\n    \n    digits_array.forEach(function(item){\n\
    \        if(item[1] === 0){\n            item[1] = 1;\n        }\n    });\n  \
    \  \n    return digits_array;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    7,\n\
    \    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpoumyh5h5.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoumyh5h5.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 7, 1 ]\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    if(num\
    \ < 0) return []\n    let evens = []\n    let odds = []\n    while(num > 0){\n\
    \        num -= Math.floor(num / 10)\n        if(num % 2 === 0) evens.push(num\
    \ / 10)\n        else odds.push(num / 10)\n    }\n    return [evens, odds]\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7fff85e8e770\n 1: 0x2b5aa0f05727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b5aa1a9a28e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b5aa13d64a2  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b5aa1569373  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b5aa156b8f0  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b5aa17587db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b5aa10b77f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977364
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ Math.abs(num);\n    let even_odds = [];\n    if(num > 0){\n        let count\
    \ = 0;\n        while(num > 0){\n            count = count + Math.floor(num/2);\n\
    \            num = num%2;\n        }\n        even_odds.push(-count);\n      \
    \  even_odds.push(count);\n    }\n    return even_odds;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977367
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = 0, odd = 1;\n    while (num > 0) {\n       if ((num % 10) === 0) {\n     \
    \     even++;\n       }\n       else {\n          odd++;\n       }\n       num\
    \ = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4ktq_evv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4ktq_evv.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = 1,\n        odd = 0;\n    while( num > 0 ){\n        num = num % 10;\n   \
    \     if( num == 0 ){\n            even++;\n        } else {\n            odd++;\n\
    \        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977367
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  num +=\
    \ '';\n  var numArr = num.split(\"\");\n  var evenArr = [];\n  var oddArr = [];\n\
    \  var evenIndex = 1;\n  var oddIndex = 1;\n  for(var i = 0; i < numArr.length;\
    \ i++){\n    if(numArr[i] % 2 == 0){\n      evenArr.push(numArr[i]);\n      evenIndex++;\n\
    \    }\n    else{\n      oddArr.push(numArr[i]);\n      oddIndex++;\n    }\n \
    \ }\n  return [evenArr, oddArr];\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    '7'\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test\
    \ (/tmp/tmpnjehbam9.js:31:10)\n    at Object.<anonymous> (/tmp/tmpnjehbam9.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ '7'\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var count\
    \ = 0;\n    var digit;\n    for(var i=0;i<num.length;i++){\n        digit = num\
    \ % 10;\n        if(digit % 2 === 0)\n            count++;\n        num = num\
    \ / 10;\n    }\n    return [count, num];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpqd8zvgsk.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqd8zvgsk.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even_odd_count\
    \ = []\n    for(let i = 1; i < (Math.floor(Math.log10(num))+1); i++){\n      \
    \  if(num % i === 0 && num % i !== 0){\n            even_odd_count.push(i)\n \
    \       }\n    }\n    return even_odd_count\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvbuzd_r4.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpvbuzd_r4.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0,\n      odd = 0;\n  while (num > 0) {\n    if (num%2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num = Math.floor(num/10);\n  }\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmprtqj4gqp.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmprtqj4gqp.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let [even_digits,\
    \ odd_digits] = num.toString().split('').map(Number)\n    return [even_digits%2,\
    \ odd_digits%2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  NaN\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpci77v3n6.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpci77v3n6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, NaN ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while(num){\n        arr.push(num%2===0 ? 1 : num%2===1 ? 2 : 0);\n\
    \        num = Math.floor(num/10);\n    }\n    return arr;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp_fplbo_7.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_fplbo_7.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    var exp = num.toString().length;\n    for(var i = 0; i < exp; i++){\n\
    \        var num = num / 10;\n        num = parseInt(num.toString());\n      \
    \  if(num % 2 == 0){\n            arr.push(num);\n        }else{\n           \
    \ arr.push(-num);\n        }\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpf9uqm5os.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf9uqm5os.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar arr\
    \ = [];\n\tvar even_index = 0;\n\tvar odd_index = 0;\n\tnum = num.toString();\n\
    \tfor(var i = num.length-1; i >= 0; i--){\n\t\tif((num[i] % 2 === 0) || (num[i]\
    \ % 2 === 1)){\n\t\t\tif(num[i] % 2 === 0){\n\t\t\t\tarr[ even_index ] = num[i];\n\
    \t\t\t\teven_index ++;\n\t\t\t}else{\n\t\t\t\tarr[ odd_index ] = num[i];\n\t\t\
    \t\todd_index ++;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '7'\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpbl4se9jh.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbl4se9jh.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '7' ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [], odd = []\n  while(num > 0){\n    if(num % 2 === 0) even.push(num);\n \
    \   else odd.push(num);\n    num = Math.floor(num / 10);\n  }\n  return [even,odd]\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppju1igsx.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppju1igsx.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let numDigits\
    \ = num.toString().split('').reduce(function(a, b){\n        return a*10+b*1\n\
    \    })\n\n    let evenDigits = numDigits - (numDigits % 2)\n    let oddDigits\
    \ = (numDigits % 2)\n    return [evenDigits, oddDigits]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpt95rwwin.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt95rwwin.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 6, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [];\n    let odd = [];\n    for(let i = 0; i < num.toString(10).length; i++){\n\
    \        \n        if(num % 2 === 0 && num % 10 !== 0){\n            even.push(num%10);\n\
    \        }\n        \n        if(num % 2 === 0 && num % 10 === 0){\n         \
    \   odd.push(num%10);\n        }\n        \n        num/=10;\n    }\n    return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpso4okl2h.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpso4okl2h.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var result\
    \ = [];\n  while(num > 0){\n    result.push(num % 2 == 0 ? 1 : 2);\n    num =\
    \ Math.floor(num / 10);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpff0c8aa2.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpff0c8aa2.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ String(num);\n    let even = [];\n    let odd = [];\n    let numArr = num.split('');\n\
    \    for(let i=0; i<numArr.length; i++){\n        let digit = numArr[i];\n   \
    \     if(digit==='0'){\n            even.push(0);\n        }else if(digit==='1'){\n\
    \            even.push(1);\n        }else{\n            odd.push(digit);\n   \
    \     }\n    }\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '7'\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpm250apxm.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm250apxm.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '7' ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  var evenCount = 0;\n  var oddCount = 0;\n  while(num!=0){\n    if(num%2==0){\n\
    \      evenCount++;\n    }\n    else{\n      oddCount++;\n    }\n    num=num/2;\n\
    \  }\n  if(evenCount==1){\n    arr.push(evenCount);\n  }\n  else if(oddCount==1){\n\
    \    arr.push(oddCount);\n  }\n  else{\n    arr.push(evenCount,oddCount);\n  }\n\
    \  return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpb4qpw85k.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb4qpw85k.js:46:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let count\
    \ = 0;\n    while(num > 0){\n        num /= 10;\n        count++;\n    }\n   \
    \ return [count, count % 2];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  325,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpu445bqux.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu445bqux.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 325, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  return\
    \ [num%2 === 0 ? 1 : 2, num%2 === 1 ? 2 : 0]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzyfjnukn.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzyfjnukn.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let evenCount\
    \ = 0;\n    let oddCount = 0;\n    for(let i=0; i< num.length;i++){\n        if(num\
    \ % 2 === 0){\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n    }\n    return [evenCount,oddCount]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvl0o1una.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvl0o1una.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ num.toString();\n    var arr = [];\n    arr.push(num.charAt(0));\n    arr.push(num.charAt(num.length-1));\n\
    \    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '7',\n  '7'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppwr4eyca.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmppwr4eyca.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '7', '7'\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n   var arr\
    \ = new Array();\n   var num = num.toString();\n   for (var i = 0; i < num.length;\
    \ i++) {\n      if (num[i].toString().indexOf('.') > -1){\n         arr.push(num[i].toString().split('.')[0]);\n\
    \      }\n      else{\n         arr.push(num[i]);\n      }\n   }\n   \n   var\
    \ evenCount = 0;\n   var oddCount = 0;\n   arr.forEach(function(i){\n      if(i.includes('0')\
    \ && i.includes('1')) {\n         evenCount++;\n      }\n      if(i.includes('1')\
    \ && i.includes('0')) {\n         oddCount++;\n      }\n   })\n   \n   return[evenCount,\
    \ oddCount];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpjuwia5d1.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjuwia5d1.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ num.toString();\n    for(var i=0;i<num.length;i++){\n        var n = num.length\
    \ - 1 - i;\n        if((num[n]%2)===0){\n            return [1,0];\n        }\n\
    \        else{\n            return [0,1];\n        }\n    }\n}\n</code>\n<|/ a\
    \ tags=javascript,recursion |>\n<| a dscore=0 |>\nMy code using recursion \n<code>\n\
    var numbers = [];\nvar i = 0;\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ubidh66.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var result\
    \ = [];\n  while(num > 0){\n    if(num % 2 == 0){\n      result.push(1)\n    }\n\
    \    else{\n      result.push(2)\n    }\n    num = Math.floor(num / 2)\n  }\n\
    \  return result\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp090z_p__.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp090z_p__.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    \n  \
    \  let even = [];\n    let odd = [];\n    for(let i = num; i >= 0; i--){\n   \
    \     if(i % 2 == 0){\n            even.push(i);\n        }else{\n           \
    \ odd.push(i);\n        }\n    }\n    return [even,odd]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n\
    \    4,\n    2,\n    0\n  ],\n  [\n    7,\n    5,\n    3,\n    1\n  ]\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpdsj_n9ou.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdsj_n9ou.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 4,\
    \ 2, 0 ], [ 7, 5, 3, 1 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  return\
    \ [num%2, num%2==0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  false\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpi8i43sjc.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi8i43sjc.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, false\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const res=num.toString().split('');\n\
    \  let even=0,odd=0;\n  for(let i=0;i<res.length;i++){\n    if((res[i]%2)==0){\n\
    \      even+=1;\n    }else{\n      odd+=1;\n    }\n  }\n  return [even,odd];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpxmmsej9r.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxmmsej9r.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = num / 10000;\n\tvar odd = num % 10000 / 1000;\n\tvar n = num % 1000 / 10000;\n\
    \tif(even){\n\t\teven.push(0);\n\t}\n\tif(odd){\n\t\todd.push(1);\n\t}\n\tif(n){\n\
    \t\todd.push(0);\n\t}\n\tif(odd.length + even.length > 1){\n\t\todd.unshift(0);\n\
    \t}\n\tif(even.length + odd.length > 1){\n\t\teven.unshift(0);\n\t}\n\treturn\
    \ {\n\t\teven: even,\n\t\todd: odd\n\t};\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7zd2hb9p.js:12\n\t\teven.push(0);\n\t\t     ^\n\nTypeError: even.push\
    \ is not a function\n    at even_odd_count (/tmp/tmp7zd2hb9p.js:12:8)\n    at\
    \ test (/tmp/tmp7zd2hb9p.js:37:20)\n    at Object.<anonymous> (/tmp/tmp7zd2hb9p.js:47:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0;\n  let odd = 0;\n  while (num > 0){\n    if (num % 2 == 0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n    num/=10;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  325\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpru7tj5a8.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpru7tj5a8.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var digit\
    \ = String(num);\n  var evenCount = 0;\n  var oddCount = 0;\n  for (var i =0;\
    \ i<digit.length; i++){\n    if (digit[i]%2 === 0) {\n      evenCount++;\n   \
    \ } else {\n      oddCount++;\n    }\n  }\n  return [evenCount,oddCount];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpdeatlg5h.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdeatlg5h.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var even_count\
    \ = 0;\n    var odd_count = 0;\n    while (num != 0) {\n        num = num / 10;\n\
    \        if (num % 2 === 0) {\n            even_count++;\n        } else {\n \
    \           odd_count++;\n        }\n    }\n    return [even_count, odd_count];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  324\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpmrq3f520.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmrq3f520.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let arr\
    \ = [0,0]\n    if(num < 0){\n        return [1,1]\n    }\n    for(let i = 1; i<=num;\
    \ i++){\n        if((num % 2) == 0){\n            arr[0] += 1\n        }else{\n\
    \            arr[1] += 1\n        }\n    }\n    return arr\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpsuoely_g.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsuoely_g.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0;\n  let odd = 0;\n\n  while (num > 0){\n    num % 2 === 0 && even++;\n \
    \   num % 2 !== 0 && odd++;\n    num = parseInt(num / 2);\n  }\n\n  return [even,odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp60qc0rz_.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp60qc0rz_.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n   let evenCount\
    \ = 0;\n   let oddCount = 0;\n   let numberArray = [];\n   \n   while (num > 0)\
    \ {\n      if (num%2 == 0) {\n         evenCount++;\n      }else {\n         oddCount++;\n\
    \      }\n      numberArray.push(num%10);\n      num = Math.floor(num/10);\n \
    \  }\n   \n   console.log(numberArray);\n   return numberArray;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphukjvf_o.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmphukjvf_o.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 7 ]

    '
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar odd_count\
    \ = 0;\n\tvar even_count = 0;\n\tfor(var i = 1; i <= num; i++){\n\t\tif(i%2 !=\
    \ 0){\n\t\t\teven_count += 1;\n\t\t}else{\n\t\t\todd_count += 1;\n\t\t}\n\t}\n\
    \tconsole.log(\"odd_count: \" + odd_count);\n\tconsole.log(\"even_count: \" +\
    \ even_count);\n\treturn [even_count,odd_count]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpk8dmivpc.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk8dmivpc.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'odd_count: 3

    even_count: 4

    '
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  return\
    \ [num%2, num&1];\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp4ms7gr58.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4ms7gr58.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var result\
    \ = [0,0];\n    var count = 0;\n    while( num>0 ){\n        count += num%2;\n\
    \        num = Math.floor(num/2);\n        result[count]++;\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test\
    \ (/tmp/tmpc0zznfzm.js:23:10)\n    at Object.<anonymous> (/tmp/tmpc0zznfzm.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, NaN,\
    \ NaN ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = [], odd = [];\n    let count = (num.toString()).split('').reduce((a, b)=>{\n\
    \        if(b === '0') even.push(a);\n        else odd.push(a);\n        return\
    \ a + 1;\n    });\n    return {\n        'even': even,\n        'odd': odd\n \
    \   };\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  even: [],\n\
    \  odd: []\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpq9d7tc9f.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq9d7tc9f.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [],\
    \ odd: [] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var arr\
    \ = [];\n  for(var i = 0; i<num;i++){\n    var mod = num % 10;\n    if(i%2==0\
    \ && mod==0){\n      arr.push(mod);\n    }\n    else if(mod==0){\n      arr.push(mod);\n\
    \    }\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpuh_e79n6.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpuh_e79n6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0, odd = 1;\n  for(let i=num; i>0; i--){\n    if(i%2 === 0){\n      even++;\n\
    \    }else{\n      odd++;\n    }\n  }\n  return [even, odd]\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvdthqyyt.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvdthqyyt.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 5 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977362
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0) {\n    evenCount += Math.floor(num/2);\n\
    \    oddCount += num%2;\n    num /= 10;\n  }\n  return [evenCount, oddCount]\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1.7777777777777777\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpfsnqmipl.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfsnqmipl.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1.7777777777777777\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ Math.abs(num);\n    let even = [];\n    let odd = [];\n    for(let i = 0; i\
    \ <= 9; i++){\n        if(num % 2 === 0){\n            even.push(i);\n       \
    \ } else {\n            odd.push(i);\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9\n  ],\n  [\n  \
    \  0\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmptuxn5ia_.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptuxn5ia_.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n\
    \      1, 2, 3, 4, 5,\n      6, 7, 8, 9\n    ],\n    [ 0 ]\n  ],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while(num > 0){\n        var mod = num % 10;\n        if(mod % 2\
    \ === 0){\n            arr.push(mod);\n        }\n        num /= 10;\n    }\n\
    \    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpws5wkkfe.js:24:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpws5wkkfe.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const sum\
    \ =[];\n  for (let i = 0; i < num.length; i++) {\n    sum.push(num[i] % 2 ===\
    \ 0 ? 1 : 2);\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpotl1o9am.js:20:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpotl1o9am.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while (num) {\n        arr.unshift(num % 10);\n        num = parseInt(num\
    \ / 10);\n    }\n    if (arr.length % 2 === 0){\n        return arr;\n    }else{\n\
    \        return arr.concat( arr[arr.length-1]);\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpbb6po11b.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbb6po11b.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7, 7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even\
    \ = 0\n    let odd = 1\n    for(let i = num; i > 0; i = i / 2){\n        even\
    \ = even * 2\n    }\n    for(let i = num; i > 0; i = i / 2){\n        odd = odd\
    \ * 2\n    }\n    return [even, odd]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  Infinity\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplnlvwhvs.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmplnlvwhvs.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, Infinity\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let arr\
    \ = []\n    let even = 0\n    let odd = 0\n    let n = num.toString()\n    for(var\
    \ i = 0; i < n.length; i++){\n        if(n % 2 === 0){\n            even++\n \
    \       }else{\n            odd++\n        }\n        arr.push(even)\n       \
    \ arr.push(odd)\n    }\n    return arr\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0,\n\
    \  2,\n  0,\n  3,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n  \
    \  at test (/tmp/tmp078e30e7.js:30:10)\n    at Object.<anonymous> (/tmp/tmp078e30e7.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0, 2,\
    \ 0, 3, 0 ],\n  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    const\
    \ odd_count=num%2;\n    const even_count=num-odd_count;\n    return [even_count,\
    \ odd_count];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp3mv9m_mm.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3mv9m_mm.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 6, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var evens\
    \ = 0;\n    var odds = 0;\n\n    for(var i = 0; i < num.length; i++){\n      \
    \  switch(num[i]){\n            case 0:\n            evens++;\n            break;\n\
    \            case 1:\n            odds++;\n            break;\n        }\n   \
    \ }\n\n    return [evens, odds];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpgpzryul5.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgpzryul5.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = num.toString().split(\"\").filter((x)=>{return x%2===0}).length;\n  let odd\
    \ = num.toString().split(\"\").filter((x)=>{return x%2!==0}).length;\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpy6ywmhvl.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy6ywmhvl.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while(num >= 0){\n        arr.push(num%2);\n        num = Math.floor(num/2);\n\
    \    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffc13ec0c00\n 1: 0x2ba1534fe727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2ba15409328e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2ba1539cdf8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2ba153b5f760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2ba153b670cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2ba153d517db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2ba1536b07f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977366
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr=[];\n\
    \    var odds=0;\n    var evens=0;\n    while(num!==0){\n       if(num%2==0){\n\
    \          evens++;\n       }else{\n          odds++;\n       }\n       num=num/2;\n\
    \    }\n    if(evens>odds){\n        arr[0]=evens;\n        arr[1]=odds;\n   \
    \ }else{\n        arr[0]=odds;\n        arr[1]=evens;\n    }\n    return arr;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1078,\n \
    \ 0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpucer7clo.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpucer7clo.js:43:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1078, 0\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  let even = [];\n  let odd = [];\n  if(num == 0){\n    return even;\n\
    \  }\n  while(num != 0){\n    if(num%2 == 0){\n      even.push(num%10);\n    }\n\
    \    else{\n      odd.push(num%10);\n    }\n    num = Math.floor(num/10);\n  }\n\
    \  if(even.length > odd.length){\n    count = even.length;\n  }\n  else{\n   \
    \ count = odd.length;\n  }\n  return [even,odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp3hwuwken.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3hwuwken.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7\
    \ ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    let even_odd\
    \ = [];\n    while(num>0){\n        if(num % 2 === 0){\n            even_odd.push(num);\n\
    \        }\n        else{\n            even_odd.unshift(num);\n        }\n   \
    \     num = Math.floor(num/2);\n    }\n    return even_odd;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n\
    \  7\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp_wl4ojxj.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_wl4ojxj.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 7\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var res\
    \ = [];\n  var num = Math.abs(num);\n  while(num > 0){\n    res.push(num % 10);\n\
    \    num = Math.floor(num / 10);\n  }\n  var odd_count = res.length;\n  res.forEach(function\
    \ (digit, index){\n    if(index % 2 === 1){\n      odd_count--;\n    }\n  });\n\
    \  if(odd_count > 0){\n    res.push(1);\n  }\n  return res;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp86kdhy0q.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp86kdhy0q.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var count\
    \ = 0;\n  while(num != 0){\n    count++;\n    num= num/10;\n  }\n  return count;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n325\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpnshqomzi.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnshqomzi.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 325,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var arr\
    \ = [];\n    while(num >= 0){\n        if (num%2 === 0){\n            arr.push(num);\n\
    \        }\n        else{\n            arr.push(num%10);\n        }\n        num\
    \ = Math.floor(num/10);\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffcdd5c3370\n 1: 0x2aedc87fa727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2aedc938f28e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2aedc8cc9f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2aedc8e5b760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2aedc8e630cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2aedc904d7db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2aedc89ac7f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977365
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while (num > 0){\n    evenCount += (num % 2 ===\
    \ 0);\n    oddCount += (num % 2 !== 0);\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpg0e668ma.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg0e668ma.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar i,\
    \ count = [], oddSum = 0, evenSum = 0;\n\n\tfor(i = 1; i <= num; i++){\n\t\tif(num\
    \ % i == 0){\n\t\t\tcount[i%2]++;\n\t\t\toddSum += i; \n\t\t} else {\n\t\t\tcount[i%2-1]++;\n\
    \t\t\tevenSum += i;\n\t\t}\n\t}\n\n\treturn [evenSum, oddSum];\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  20,\n  8\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpcrfg8llw.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcrfg8llw.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 20, 8 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // Your\
    \ code here\n  var numStr = num.toString();\n  var evenCount = numStr.length -\
    \ (numStr.length % 2);\n  var oddCount = numStr.length - (evenCount + 1);\n  return\
    \ [evenCount, oddCount];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp75fevw7l.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp75fevw7l.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    if(num===0)\
    \ return [0,0];\n    \n    let evenCount = 0;\n    let oddCount = 0;\n    for(let\
    \ i=0; i<num.toString().length; i++){\n        let val = num % 10;\n        if(val\
    \ === 0 || val === 1){\n            evenCount++;\n        }else{\n           \
    \ oddCount++;\n        }\n        num = Math.floor(num/10);\n    }\n    return\
    \ [evenCount, oddCount];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpozrbg0gk.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpozrbg0gk.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let arr\
    \ = [];\n  while (num) {\n    arr.push((num%2 === 0 )?1:0);\n    num /= 2;\n \
    \ }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n\
    \  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  ...\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  1\n]\n    at test (/tmp/tmp39v8dswc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp39v8dswc.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\
    \    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0,\n    0, 0, 0, 0,\n    ... 978 more items\n  ],\n  expected: [\
    \ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // Declare\
    \ an array to store the even and odd digits.\n  var even = [];\n  var odd = [];\n\
    \  // A simple loop will do the trick.\n  for(var i = 0; i< num; i++){\n    if((num\
    \ % 10) % 2 === 0){\n      even.push(num % 10);\n    } else {\n      odd.push(num\
    \ % 10);\n    }\n  }\n  \n  return [even, odd]\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n\
    \    7,\n    7,\n    7,\n    7,\n    7,\n    7,\n    7\n  ]\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpavz536sx.js:27:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpavz536sx.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [],\n\
    \    [\n      7, 7, 7, 7,\n      7, 7, 7\n    ]\n  ],\n  expected: [ 0, 1 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    const\
    \ numStr = String(num)\n    const evenCountArr = []\n    const oddCountArr = []\n\
    \    let evenStr = \"\"\n    let oddStr = \"\"\n\n    for(let index = 0; index\
    \ < numStr.length; index++){\n        const char = numStr.charAt(index)\n    \
    \    if(char === \"-\"){\n            oddCountArr.push(index)\n        }else{\n\
    \            evenCountArr.push(index)\n        }\n    }\n\n    evenCountArr.forEach(index\
    \ => {\n        const char = numStr.charAt(index)\n        if(char === \"-\"){\n\
    \            oddStr += char\n        }else{\n            evenStr += char\n   \
    \     }\n    })\n\n    return [evenStr.length, oddStr.length]\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp54v2lwb3.js:40:10)\n\
    \    at Object.<anonymous> (/tmp/tmp54v2lwb3.js:50:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    num =\
    \ Math.abs(num);\n    let even = 0, odd = 0;\n    while (num >= 1){\n        if\
    \ (num % 2 === 0){\n            even++;\n        }else{\n            odd++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmpxdjmdriy.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxdjmdriy.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let res\
    \ = [];\n  while (num > 0){\n    res.push(num % 2 ? 1 : 2);\n    num = Math.floor(num\
    \ / 10);\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp7_8bfk_5.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7_8bfk_5.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = 0,\n    odd = 1;\n  while(num >= 0){\n    if(num % 2 === 0){\n      even++;\n\
    \    }\n    else if(num % 2 !== 0){\n      odd++;\n    }\n    num/=2;\n  }\n \
    \ return [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977368
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  if(num\
    \ === 0) return [0, 0];\n  var even = num % 2 === 0 ? 1 : 0;\n  var odd = num\
    \ % 2 === 1 ? 1 : 0;\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp_yd0oou2.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_yd0oou2.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  var digits\
    \ = Math.floor(Math.log10(num))+1;\n  var even_digits = Math.ceil(digits/2);\n\
    \  var odd_digits = digits - even_digits;\n  return [even_digits,odd_digits]\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp041i75l5.js:13\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  const oddCountArr\
    \ = new Array(num).fill(0);\n  let evenCountArr = new Array(num).fill(0);\n  for\
    \ (let i = 0; i < num; i++) {\n    if (num % 2 === 0) {\n      evenCountArr[i]\
    \ = evenCountArr[i] + 1;\n    } else {\n      oddCountArr[i] = oddCountArr[i]\
    \ + 1;\n    }\n  }\n  return [evenCountArr, oddCountArr];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    0,\n\
    \    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ],\n  [\n    1,\n    1,\n  \
    \  1,\n    1,\n    1,\n    1,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n\
    [\n  0,\n  1\n]\n    at test (/tmp/tmpy3382ul7.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy3382ul7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n\
    \      0, 0, 0, 0,\n      0, 0, 0\n    ],\n    [\n      1, 1, 1, 1,\n      1,\
    \ 1, 1\n    ]\n  ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  num = Math.abs(num);\n  for (let i = 9; i >= 0; i--){\n    if (num %\
    \ i === 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp9hmmqnw5.js:23:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp9hmmqnw5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n    var evens\
    \ = [];\n    var odds = [];\n    for (var i = 0; i <= num; i++){\n        var\
    \ mod = i % 10;\n        if (mod > 0){\n            evens.push(mod);\n       \
    \ } else {\n            odds.push(mod);\n        }\n    }\n    return [evens,\
    \ odds];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    3,\n    4,\n    5,\n    6,\n    7\n  ],\n  [\n    0\n  ]\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpsrpxxw2e.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsrpxxw2e.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n\
    \      1, 2, 3, 4,\n      5, 6, 7\n    ],\n    [ 0 ]\n  ],\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even\
    \ = [0,0], odd = [0,0];\n  for(let i = num.length-1; i >= 0; i--){\n    if( num[i]%2\
    \ ==0){\n      even[even.length-1] = num[i];\n    }else{\n      odd[odd.length-1]\
    \ = num[i];\n    }\n  }\n  return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpiyi78cjg.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiyi78cjg.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0 ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: -1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let count\
    \ = 0;\n  while (num >= 0){\n    count++;\n    num = num/10;\n  }\n  return [count,count-1];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977368
- exit_code: -5
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n\tvar even\
    \ = [];\n\tvar odd = [];\n\twhile(num > 0){\n\t\tvar val = Math.floor(num / 10);\n\
    \t\tif(val % 2 === 0){\n\t\t\teven.push(val);\n\t\t}else{\n\t\t\todd.push(val);\n\
    \t\t}\n\t\tnum = num % 10;\n\t}\n\treturn [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffd87285c20\n 1: 0x2b1e88ee2727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b1e89a7728e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b1e893b1f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b1e89543760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b1e8954b0cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b1e897357db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b1e890947f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1659977367
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  // Convert\
    \ it to string since JavaScript will automatically cast it\n  num = num.toString();\n\
    \  //Check first to see if it contains '-' then remove it.\n  if(num.indexOf('-')>0){\n\
    \    num = num.substring(0,num.indexOf('-'));\n  }\n  //Get all the even and odd\
    \ numbers in the string and count them.\n  var even = num.filter(function(c){\n\
    \    if(c%2==0){\n      return true;\n    }\n  });\n  var odd = num.filter(function(c){\n\
    \    if(c%2==1){\n      return true;\n    }\n  });\n  //Return the array\n  return\
    \ [even.length, odd.length];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpxenuvie8.js:15\n  var even = num.filter(function(c){\n        \
    \         ^\n\nTypeError: num.filter is not a function\n    at even_odd_count\
    \ (/tmp/tmpxenuvie8.js:15:18)\n    at test (/tmp/tmpxenuvie8.js:34:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpxenuvie8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num){\n  let even_count\
    \ = 0;\n  let odd_count = 1;\n  while (num > 0){\n    if (num % 2 === 0) {\n \
    \     even_count++;\n    } else {\n      odd_count++;\n    }\n    num = Math.floor(num\
    \ / 2);\n  }\n  return [even_count, odd_count];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp604u7kf2.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp604u7kf2.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977363

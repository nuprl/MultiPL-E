name: HumanEval_146_specialFilter
language: js
prompt: "//Write a function that takes an array of numbers as input and returns \n\
  // the number of elements in the array that are greater than 10 and both \n// first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// >>>\
  \ specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2, -3, 45,\
  \ 21, 109])\n// 2\nfunction specialFilter(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
  \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
  \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
  \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
  }\n\ntest();"
completions: ["    let newNums = nums.filter(num => num > 10 && num % 2 === 1 && num\
    \ % 5 === 1);\n    return newNums.length;\n}\n</code>\n<|/ a |>\n<| a |>\nYou\
    \ could use Array.prototype.reduce() with a logical OR expression. For example:\n\
    <code>\nconst input = [15, -73, 14, -15]\nconst result = input.reduce((acc, x)\
    \ => acc || x >= 10 && (x%2===1 || x%5===1), 0)\n</code>\nThis will return 1 when\
    \ the array contains any elements x >= 10 and both first and last digits are odd.\n\
    The logical OR expression will return true when at least one of the terms is true,\
    \ and false when all of the terms are false.\n<|/ a dscore=0 tags=filter,arrays,javascript,loops,foreach\
    \ |>\n<| a dscore=0 |>\n<code>", "    // code here\n}", "\tvar count = 0;\n\t\
    var i = 0;\n\twhile(i < nums.length){\n\t\tif( nums[i] > 10 ){\n\t\t\tcount++;\n\
    \t\t\tif( nums[i] % 2 == 0 ){\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ti++;\n\
    \t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\ti++;\n\t\t\tif( i == nums.length\
    \ ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "    var count\
    \ = 0;\n    for (var i=0; i < nums.length; i++) {\n        if(nums[i] > 10 &&\
    \ nums[i] % 2 == 1 && nums[i-1] % 2 == 1)\n        count++;\n    }\n    return\
    \ count;\n}\n</cell>\n<cell>", "  return nums.filter((num) => {\n    let arr =\
    \ [];\n    let str = num.toString();\n    for(let i=0;i<str.length;i++){\n   \
    \   if(arr[i] === undefined){\n        if(str.charAt(i) === '-'){\n          arr.push(str.charAt(i));\n\
    \        }\n        if(str.charAt(i) !== ','){\n          arr.push(str.charAt(i));\n\
    \        }\n      }\n      else{\n        if(str.charAt(i) !== ','){\n       \
    \   arr.push(str.charAt(i));\n        }\n      }\n    }\n    if(arr.length ===\
    \ 0){\n      return true;\n    }\n    let flag = true;\n    if(arr.length ===\
    \ 1){\n      flag = false;\n    }\n    let firstOdd = arr.findIndex((num) => {\n\
    \      return num % 2 === 1;\n    });\n    let lastOdd = arr.length - firstOdd\
    \ - 1;\n    if((arr.length-1) === lastOdd){\n      return flag;\n    }\n    return\
    \ false;\n  });\n}\n", "  var newNums = [];\n  var first = 0;\n  var last = 0;\n\
    \  var number = 0;\n  nums.forEach(function(num){\n    var digits = num.toString().split('')\n\
    \    if (digits.length === 1 && digits[0] === '+')\n      digits = num.toString().split('-')\n\
    \    if (digits.length === 1 && digits[0] === '-')\n      return\n    first =\
    \ Math.abs(parseInt(digits[0]))\n    last = Math.abs(parseInt(digits[1]))\n  \
    \  number = Math.abs(parseInt(digits[2]))\n    \n    if(number > 10 && first %\
    \ 2 === 1 && last % 2 === 1){\n      newNums.push(number)\n    }\n  });\n  return\
    \ newNums.length\n}\n", "    var i, len;\n    var odd = 0, even = 0, result =\
    \ 0;\n    for (i = 0, len = nums.length; i < len; i++){\n        if (nums[i] %\
    \ 2 == 1){\n            odd++;\n        }else{\n            even++;\n        }\n\
    \    }\n    if (even > 1 && odd > 1){\n        result = odd;\n    } else if (even\
    \ < 1 && odd > 1){\n        result = even;\n    }\n    return result;\n}\n", " \
    \   var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ < 10)\n            sum += nums[i];\n        else if(nums[i] > 10){\n       \
    \     sum += nums[i];\n            sum += nums[i-1];\n        }\n    }\n    return\
    \ sum;\n}\n", "    // TODO: Implement this function yourself\n    // Filter through\
    \ the array and count the elements that are greater than 10\n    var filtered\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        var num = nums[i];\n\
    \        if (num > 10){\n            filtered.push(num);\n        }\n    }\n \
    \   // Loop through each array and determine how many are odd numbers and how\
    \ many are even\n    var oddCount = 0;\n    var evenCount = 0;\n    for (var i\
    \ = 0; i < filtered.length; i++){\n        var num = filtered[i];\n        if\
    \ (num % 2 === 0){\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n    }\n    return oddCount * evenCount;\n}\n", "    for(var i = 0;\
    \ i < nums.length; i++){\n        if(nums[i] < 10){\n            continue;\n \
    \       }\n        if(nums[i] > 10 && nums[i] % 2 === 1 && nums[i-1] % 2 === 1){\n\
    \            return i;\n        }\n    }\n    return -1;\n}\n", "\tvar out = 0;\n\
    \tfor(var i = 0; i < nums.length; i++){\n\t\tif(nums[i] > 10 && nums[i]%2 == 1\
    \ && nums[i]%2 == 1){\n\t\t\tout = out + 1;\n\t\t}\n\t}\n\treturn out;\n}\n",
  "    var filteredNums = [];\n    for(var i = 0; i<nums.length; i++){\n        if(nums[i]>10\
    \ && nums[i]%2 === 1){\n            filteredNums.push(nums[i]);\n        }\n \
    \   }\n    return filteredNums.length;\n}\n", "  var sum=0;\n  for(i=0;i<nums.length;i++){\n\
    \    sum+=nums[i];\n  }\n  if(sum<10){\n    return 0;\n  }\n  if(sum<10000){\n\
    \    return 1;\n  }\n  if(sum<1000000){\n    return 2;\n  }\n  if(sum<1000000000){\n\
    \    return 3;\n  }\n  return 4;\n}\n", "    // Return the number of elements\
    \ in the array that are greater than 10\n    // and both first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    return nums.filter(function(num){\n\
    \        return (num > 10) && \n            (num % 1) && \n            (num %\
    \ 3 === 0 && num % 5 !== 0);\n    }).length;\n}\n", "\tnums = nums.sort();\n\t\
    let oddSum = 0;\n\tlet evenSum = 0;\n\tfor (let i = 0; i < nums.length; i++){\n\
    \t\tif (nums[i] >= 10 && nums[i]%2 === 1){\n\t\t\toddSum++;\n\t\t} else if (nums[i]\
    \ >= 10 && nums[i]%2 === 0){\n\t\t\tevenSum++;\n\t\t}\n\t}\n\tif (oddSum === evenSum){\n\
    \t\treturn evenSum;\n\t}\n\treturn oddSum;\n}\n", "    var count = 0;\n    for\
    \ (var i=0; i<nums.length; i++){\n        if (nums[i] > 10 && nums[i]%1 === 0\
    \ && nums[i]%100 == 1 && nums[i]%1000 == 1){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "  var len = (nums.length)\n  for(var i=0; i<len;\
    \ i++){\n    if(nums[i]>10 && nums[i]%1==1){\n      if(nums[i]%2==1){\n      \
    \  return len\n      }else{\n        return len - 1\n      }\n    }\n  }\n  return\
    \ -1\n}\n", "  var count = 0;\n  for(var i=0; i < nums.length; i++){\n    if(nums[i]\
    \ > 10 && nums[i]%2 === 1 && nums[i]%10%2 === 1){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n</cell>\n<text>\nTo visualize the above function, we can\
    \ use our new $specialFilter$ function above to count the number of numbers in\
    \ our $nums$ array that satisfy our $specialFilter$ requirements. We will create\
    \ another $specialFilter$ function called $specialFilter2$ that will accept another\
    \ $nums$ array and count the number of numbers in the $nums$ array that are both\
    \ greater than 10 and first and last digits are odd.\n\n\n</text>\n<cell>", " \
    \   let n = nums.length;\n    for(let i = 0; i < n; i++){\n        if (nums[i]\
    \ >= 10 && nums[i]%2 === 1 && nums[i]%10 !== 10) return 1;\n    }\n    return\
    \ 0;\n}\n", "    let count = nums.reduce((acc, curr)=>{\n        if(curr > 10\
    \ && curr%2 === 1){\n            acc++;\n        }\n        return acc;\n    },\
    \ 0)\n    return count;\n}\n", "  // Your code here!\n}\n", "    for(var i=0;\
    \ i<nums.length; i++){\n        if (nums[i]>10 && nums[i]%2==1 && nums[i]%3==1\
    \ && nums[i]%5==1){\n            console.log(nums[i]);\n        }\n    }\n}\n\
    </code>\n<|/ a tags=algorithm,javascript,arrays |>\n<| c |>\nPlease provide some\
    \ explanation as to how your code works and why it is better than the other answers.\n\
    <|/ c |>\n<| c |>\nI used the code posted by the OP as a starting point to learn\
    \ how to do this - I then used the other two answers as starting points to improve\
    \ my own code. This was the only way I could really figure out how to write and\
    \ understand the solution. I don't know if there is a way to learn from this though.\n\
    <|/ c |>\n<| c |>\nIf you have time to look at this: how does this approach improve\
    \ the speed of sorting a list by putting its values in an array first?\n<|/ c\
    \ |>\n<| c |>\nI used a dictionary in the code to do a binary search on the keys\
    \ of the dictionary. On smaller lists (say a list of 1000 numbers) it might take\
    \ less time than my own code, but it would make your sorting code faster. On larger\
    \ lists (say a list of 10000 numbers) it would take more time, since it would\
    \ make more dictionary lookups than the sort code does.\n<|/ c |>\n<| c |>\nOh\
    \ I see, I never thought of that. Thanks for clarifying.\n<|/ c |>\n<| a tags=algorithm,javascript,arrays\
    \ |>\nThe answer by Boris is correct, but there's a way to make it faster in the\
    \ general case, which is to count how many times each digit appears.  Here's an\
    \ example in Python with the digits being in a list:\n<code>\ndigits = [1, 3,\
    \ 5, 7, 9]\n\ndef count_odd_digits(digits):\n    counts = [0] * len(digits)\n\
    \    for d in digits:\n        counts[d] += 1\n    return counts\n\nodds = count_odd_digits(digits)\n\
    print(odds)\n</code>\noutputs [1, 1, 1, 1, 1].  Each time the digit appears, we\
    \ add one to the corresponding entry in the counts list.  The last thing we do\
    \ is return that list.  We could make a more general function by adding an additional\
    \ parameter for the digit.\n<|/ a dscore=2 |>\n<| a tags=algorithm,javascript,arrays\
    \ |>\nI agree with Boris' answer. However you could just use a set and check if\
    \ each number is a member of the set.\n<code>\nconst set = new Set([2, 5, 7, 11]);\n\
    \nif (set.has(1)) {\n    // do stuff\n}\n</code>\n", "  return nums.filter(function(num){\n\
    \    return (num > 10 && num % 2 === 1 && (num % 100 !== 11 || num > 200)) ? true\
    \ : false;\n  });\n}\n", "    //Write your code here\n}\n</cell>\n<text>\nWrite\
    \ a function to check if a number is between 10 and 100 inclusive.\nFor example:\n\
    >>> myNum = 50\n>>> myNum >= 10 && myNum <= 100\nTrue\n>>> myNum = 20\n>>> myNum\
    \ >= 10 && myNum <= 100\nFalse\n\n\n</text>\n<cell>", "  nums.filter(function(num){\n\
    \    return num>10 && num%2==1 && num%2==0\n  }).length\n}", "  var result = 0;\n\
    \  for(var i=0; i<nums.length; i++){\n    if(nums[i] > 10){\n      result = result\
    \ + nums[i];\n    }\n  }\n  return result;\n}\n", "  var n = nums.length;\n  var\
    \ count = 0;\n  for(var i=0; i<n; i++){\n    if(nums[i]>10 && (nums[i] %1 ===\
    \ 1 || nums[i] %1 === 0)){\n      count++;\n    }\n  }\n  return count;\n}\n",
  "  // Write your implementation here\n}\n</cell>\n<cell>\n#\n# **Test your implementation\
    \ by calling the function with the values you provided in the question**\n#\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nIn the following cell, we\
    \ define a function that tests for even numbers in a given array.\n\n\n</text>\n\
    <cell>\n# Write a function that takes an array of numbers as input and returns\
    \ \n# the number of elements in the array that are greater than 10 and both \n\
    # first and last digits of a number are odd (1, 3, 5, 7, 9).", "  nums.forEach(function(num){\n\
    \    if (num%10 == 1 && num%100 != 11){\n      nums.push(num);\n    }\n  });\n\
    \  nums.forEach(function(num){\n    if (num%10 == 1 && num%100 != 11){\n     \
    \ nums.unshift(num);\n    }\n  });\n  nums.forEach(function(num){\n    if (num%10\
    \ == 1 && num%100 != 11){\n      nums.unshift(num);\n    }\n  });\n  return nums.filter(function(num){\n\
    \    return num%2 != 0;\n  }).length;\n}\n", "\tlet count = 0;\n\tfor(let num\
    \ of nums){\n\t\tcount+= num > 10 && num % 2 === 1;\n\t}\n\treturn count;\n}\n",
  "  for(var i=0;i<nums.length;i++){\n    var num = nums[i];\n    if(num>10){\n  \
    \    var first_digit = num%10;\n      var last_digit = (num-first_digit)%10;\n\
    \      if(last_digit%2==1 && first_digit%2==1){\n        return i;\n      }\n\
    \    }\n  }\n}\n", "    var i, j, arr = [], counter = 0, jMax = nums.length, num;\n\
    \    for(i = 0; i < jMax; i++){\n        num = nums[i];\n        if(num > 10 &&\
    \ (num % 2 === 1 && num % 10 !== 1)){\n            arr.push(num);\n        } else\
    \ {\n            counter++;\n        }\n    }\n    return counter;\n}\n", "  var\
    \ i, len=nums.length, cnt=0, odd=false, even=false, oddSum=false, evenSum=false,\
    \ sum=0, num=0;\n  for (i=0; i<len; i++){\n    num=nums[i];\n    oddSum=(num&1)&&(odd===false);\n\
    \    evenSum=(num&2)&&(even===false);\n    if (oddSum&&evenSum){\n      cnt++;\n\
    \    }else if (oddSum){\n      odd=true;\n    }else if (evenSum){\n      even=true;\n\
    \    }\n    sum+=num;\n  }\n  return cnt;\n}", "  let result = 0;\n  for(let i\
    \ = 0; i < nums.length; i++){\n    if(nums[i] <= 10 && nums[i]%2 === 1){\n   \
    \   result++;\n    }\n  }\n  return result;\n}\n", "    let ans = nums.length;\n\
    \    for (let i=0; i < nums.length; i++){\n        if (nums[i] < 10 && nums[i].toString().substr(0,\
    \ 1) %2 === 1) ans++;\n        if (nums[i] > 10 && nums[i-1].toString().substr(0,\
    \ 1) %2 === 1 && nums[i+1].toString().substr(0, 1) %2 === 1) ans++;\n    }\n \
    \   return ans;\n}\n", "    var odds = nums.filter(function(n){\n        return\
    \ n%2 === 1;\n    });\n    var first = nums.filter(function(n){\n        return\
    \ n%2 === 0;\n    });\n    var last = nums.filter(function(n){\n        return\
    \ n%2 === 1;\n    });\n    return odds.length + first.length + last.length;\n\
    }\n", "  let sum = 0;\n  for(let n=0; n<nums.length; n++){\n    sum += nums[n];\n\
    \  }\n  if(sum > 10){\n    for(let n=0; n<nums.length; n++){\n      if (nums[n]\
    \ > 10 && nums[n] % 2 == 1 && nums[n] % 3 == 0){\n        return nums.length;\n\
    \      }\n    }\n  }\n  return nums.length;\n}\n", "  var sum = 0;\n  for (var\
    \ i = 0; i < nums.length; i++){\n    sum += nums[i];\n  }\n  return nums.filter(function(num){\n\
    \    return num > 10 && sum % 2 == 1;\n  }).length;\n}\n", "    let result = 0;\n\
    \    nums.forEach((num) => {\n        if(num > 10 && num.toString().slice(1, 3)\
    \ % 2 === 1 && num.toString().slice(-1) % 2 === 1){\n            result += 1;\n\
    \        }\n    });\n    return result;\n}", "    let sum = 0;\n    for (let num\
    \ of nums){\n        if (num > 10 && num % 2 === 1 && num % 10 % 2 === 1){\n \
    \           sum++;\n        }\n    }\n    return sum;\n}\n", "   var num;\n  \
    \ var length;\n   var odd;\n   var oddSum = 0;\n\n   for (var i=0; i <= nums.length;\
    \ i++){\n       nums[i] = parseInt(nums[i]);\n   }\n   nums = nums.slice();\n\
    \   nums.sort();\n   length = nums.length;\n\n   for (var i=1; i <= length; i++){\n\
    \       num = nums[i];\n       odd = nums[i - 1] % 2;\n       oddSum += (odd &&\
    \ num > 10);\n   }\n\n   return nums.length - (oddSum);\n}\n", "    let numsLength\
    \ = nums.length;\n    let total = 0;\n    for(let i = 0; i < numsLength; i++){\n\
    \        total += nums[i];\n        if(total > 10 && nums[i] % 2 === 0){\n   \
    \         total -= nums[i];\n        }\n        if(total < 10 && nums[i] % 2 !==\
    \ 0){\n            total += nums[i];\n        }\n        if(total === 10 && nums[i]\
    \ % 2 === 0){\n            return i;\n        }\n        if(total === 10 && nums[i]\
    \ % 2 !== 0){\n            return i;\n        }\n    }\n}\n", "    var evenNumbers\
    \ = [];\n    var oddNumbers = [];\n    var count = 0;\n    nums.forEach(function(num){\n\
    \        console.log(num);\n        if(num%2 === 0){\n            evenNumbers.push(num);\n\
    \        }\n        else if(num%2 === 1){\n            oddNumbers.push(num);\n\
    \        }\n    });\n    console.log(evenNumbers);\n    console.log(oddNumbers);\n\
    \    return count;\n}\n", "    let num;\n    let count = 0;\n    for(num of nums){\n\
    \        if(num > 10 && num%2 === 1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    var result = 0;\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var num = nums[i];\n        if(num >= 10 && num % 2 === 1 &&\
    \ num % 2 === 0 && num % 4 === 0){\n            result++;\n        }\n    }\n\
    \    return result;\n}\n", "    for(var i=0;i<nums.length;i++){\n        if(nums[i]<-10&&nums[i]>-10&&nums[i]%2==1&&nums[i]%10<5){\n\
    \            return 1;\n        }\n    }\n    return 0;\n}\n", "  return nums.reduce(function(acc,\
    \ num){\n    return acc + (num > 10 && num > parseInt(num/10) && num % 2 === 1);\n\
    \  }, 0)\n}\n", "    var count = 0;\n    for (var i=0; i<nums.length; i++){\n\
    \        var num = nums[i];\n        if (num > 10 && nums[0] % 2 === 1 && nums[nums.length-1]\
    \ % 2 === 1) count++;\n    }\n    return count;\n}\n", "    for(var i = 0; i <\
    \ nums.length; i++){\n        if(nums[i] > 10 && nums[i]%2 != 0 && nums[i]%2 !=\
    \ nums[nums.length-1]%2){\n            return i;\n        }\n    }\n}\n</cell>\n\
    <text>\nProblem 2b\nGiven a list nums, return a list containing the two numbers\
    \ occurring \nonly once in nums. So for example, if nums is [2, 3, 3, 3], you\
    \ should \nreturn [3, 3] because both 2 and 3 occur only once in nums.\nWrite\
    \ a function that takes in a list of numbers and returns a list containing \n\
    all of the pairs of numbers that occur only once in nums. For example:\n>>> pairs([2,\
    \ 3, 3, 3])\n[([2], [3])]\n>>> pairs([-1, 4, 2, -3, 5, 2])\n[([-1], [-2, -3]),\
    \ ([5], [2])]\nWrite a function that takes in a list of numbers and returns a\
    \ list containing \nall of the pairs of numbers that occur only once in nums.\
    \ For example:\n>>> pairs([2, 3, 3, 3])\n[([2], [3])]\n>>> pairs([-1, 4, 2, -3,\
    \ 5, 2])\n[([-1], [-2, -3]), ([5], [2])]\nYou may assume that each input will\
    \ contain at least one pair of numbers.\n\n\n</text>\n<cell>", "  return nums.filter(function(num){\n\
    \    return num > 10 && num % 2 === 1 && num % 5 === 1;\n  }).length;\n}\n", " \
    \   var total = 0;\n    var num;\n    for(var i = 0; i < nums.length; i++){\n\
    \        num = nums[i];\n        if(num > 10 && num % 2 === 1 && num % Math.floor(num)\
    \ === 0){\n            total++;\n        }\n    }\n    return total;\n}\n", " \
    \   // Write your code here\n}\n", "  // Write your code here\n  return nums.filter((e)\
    \ => {\n    const s = String(e)\n    return Number(s) > 10 && (s[0] % 2 == 1 ||\
    \ s[0] % 2 == 0)\n  })\n}\n", "  // Write your code here\n}\n", "  var i, len=nums.length;\n\
    \  var count=0, sum=0;\n  for(i=0;i<len;i++)\n  {\n    if (nums[i]>10 && nums[i]%2\
    \ ==1 && nums[i]%2 ==0)\n    {\n      sum+=nums[i]-10;\n      count++;\n    }\n\
    \  }\n  return count;\n}\n", "    let counter = 0;\n    for (let num of nums)\
    \ {\n        if (num > 10 && (num%2 === 1 && num%4 === 0)){\n            counter++;\n\
    \        }\n    }\n    return counter;\n}\n", "\tvar newNums = nums.slice();\n\
    \tfor (var i = 0; i < newNums.length; i++){\n\t\tif (newNums[i] > 10 && newNums[i]%2\
    \ === 1 && newNums[newNums.length -1 -i] % 2 === 1){\n\t\t\treturn i;\n\t\t}\n\
    \t}\n\treturn 0;\n}\n", "  var l = nums.length;\n  var result = 0;\n  var temp;\n\
    \  for (var i = 0; i < l; i++){\n    temp = nums[i];\n    if(temp > 10 && temp\
    \ % 2 === 1 && (nums[i] + nums[l - i - 1]) % 2 === 1){\n      result += 1;\n \
    \   }\n  }\n  return result;\n}\n", "    let arr = [];\n    nums.map(num => {\n\
    \        if (num > 10 && num > num % 10 && num % 2 === 1) arr.push(num);\n   \
    \ });\n    return arr.length;\n}\n", "  var count = 0;\n  for(var i=0;i<nums.length;i++){\n\
    \    if(nums[i]>10){\n      count++;\n      if(nums[i]%2==1 && nums[i]!=nums[i+1]){\n\
    \        count++;\n      }\n    }\n  }\n  return count;\n}\n", "    //Write code\
    \ here\n    let count = 0;\n    for(let i = 0; i < nums.length; i++){\n      \
    \  if(nums[i] >= 10 && nums[i]%2 === 1 && nums[i]%2 === 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}", "    let count = 0\n    for (let num\
    \ of nums){\n        if (num > 10 && ((num % 2 === 1 && num % 4 !== 0) || (num\
    \ % 2 === 0 &&  num % 4 === 1))){\n            count++\n        }\n    }\n   \
    \ return count\n}\n", "  var i, sum = 0, oddSum = 0, evenSum = 0, num;\n  for(i\
    \ = 0; i < nums.length; i++){\n    num = nums[i];\n    sum += num;\n    if(sum\
    \ > 10 && num % 2 === 1){\n      oddSum++;\n    }\n    if(num % 2 === 0 && num\
    \ > 10){\n      evenSum++;\n    }\n  }\n  return oddSum + evenSum;\n}\n", "  \
    \  var count = 0;\n    for(var i=0;i<nums.length;i++){\n        if(nums[i] > 10\
    \ && nums[i]%2 ==1){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    var count = 0;\n    for(var i in nums)\n    {\n        if(nums[i]>10\
    \ && nums[i].toString().charAt(0)%2 && nums[i].toString().charAt(nums[i].toString().length-1)%2)\n\
    \        {\n            count+=1;\n        }\n    }\n    return count;\n}\n</cell>\n\
    <cell>", "    var count = 0;\n    for(var i=0;i<nums.length;i++){\n        if(nums[i]>10\
    \ && nums[i]%2==1 && nums[i]%10==1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    var count = 0;\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] > 10 && nums[i] % 2 == 1 && nums[i] % 7 == 1){\n\
    \            count += 1;\n        }\n    }\n    return count;\n}\n", "    var\
    \ newNums = []\n    for(var i = 0; i < nums.length; i++){\n        var tempNum\
    \ = nums[i]\n        if (tempNum > 10 && i % 2 == 1 && i % 2 != 0 && nums[i-1]\
    \ != 0 && nums[i+1] != 0){\n            newNums.push(tempNum)\n        }\n   \
    \ }\n    return newNums.length\n}", "    let count = 0;\n    for (const i of nums)\
    \ {\n        if (i%2 != 0 && i%2 != 1) {\n            count++;\n        }\n  \
    \  }\n    return count;\n}\n", "  // Only process positive numbers.\n  return\
    \ nums.filter(function(num){\n    return num >= 0;\n  }).length;\n}\n", "    var\
    \ len = nums.length;\n    var count = 0;\n    for (var i = 0; i < len; i++){\n\
    \        var num = nums[i];\n        if(num > 10){\n            count++;\n   \
    \     }\n        if(num % 2 == 0){\n            count++;\n        }\n        if(num%2\
    \ != 0 && num % 2 != 0 && num%2 != 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    //Return an empty array if nums is an empty array\n\
    \    if(!nums || nums.length == 0) return [];\n    //Store the even digits in\
    \ an array\n    let evenDigits = [];\n    //Store the odd digits in an array\n\
    \    let oddDigits = [];\n    //Run through each number in the nums array\n  \
    \  for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n       \
    \ let firstDigit = num.toString().charAt(0);\n        let lastDigit = num.toString().charAt(num.toString().length\
    \ - 1);\n        if(lastDigit == '1' && firstDigit == '0'){\n            //Store\
    \ the odd digits in the oddDigits array\n            oddDigits.push(num);\n  \
    \      }\n        else if(lastDigit == '1' || firstDigit == '0'){\n          \
    \  //Store the even digits in the evenDigits array\n            evenDigits.push(num);\n\
    \        }\n    }\n    //Return an empty array if nums is an empty array\n   \
    \ if(nums.length == 0) return [];\n    //Calculate the sum of the even and odd\
    \ digits\n    let evenSum = 0;\n    let oddSum = 0;\n    //Run through each number\
    \ in the nums array\n    for(let i = 0; i < nums.length; i++){\n        let num\
    \ = nums[i];\n        let firstDigit = num.toString().charAt(0);\n        let\
    \ lastDigit = num.toString().charAt(num.toString().length - 1);\n        if(lastDigit\
    \ == '1' && firstDigit == '0'){\n            evenSum += num;\n        }\n    \
    \    else if(lastDigit == '1' || firstDigit == '0'){\n            oddSum += num;\n\
    \        }\n    }\n    //Return an array of the odd sum and even sum\n    return\
    \ [oddSum, evenSum];\n}\n", "\t\n}\n\n", "  var result = 0;\n  nums.forEach(function(num){\n\
    \    if (num > 10){\n      if (num % 2 === 1){\n        result++;\n      }\n \
    \     if (num % 2 === 0 && num % 100 === 0){\n        result++;\n      }\n   \
    \ }\n  });\n  return result;\n}\n", "  //Write your code here\n}\n", "    var\
    \ count = 0;\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ > 10 && nums[i] % 2 === 0 && nums[i] % 5 === 0) count++;\n    }\n    return\
    \ count;\n}\n", "  // TODO: Complete this function\n};\n", "    var i, \n    \
    \    count = 0;\n\n    for (i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ % 2 === 0 && nums[i] % 100 % 2 === 1 &&\n            nums[i] % 100 % 100 ===\
    \ 1 && nums[i] % 100 % 100 === 1 &&\n            nums[i] % 100 === 1){\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n", "  var count = 0;\n\
    \  for(var i in nums){\n    var n = nums[i];\n    if(n > 10 && n%2 == 0 && n%4\
    \ == 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "    // Write your\
    \ code here.\n    return nums.filter(function(num){\n        var sum = (num +\
    \ \"\").split('').map(Number);\n        sum[0] = sum[0] % 2;\n        sum[sum.length-1]\
    \ = sum[sum.length-1] % 2;\n        return sum.every(function(num){\n        \
    \    return num == 1;\n        });\n    }).length;\n}\n", "    // Write a for\
    \ loop to go through the array.\n    for(var i = nums.length - 1; i >= 0; i--){\n\
    \        // If num is positive, check if the first and last digits are odd\n \
    \       if(nums[i] > 10){\n            if (nums[i] % 2 === 0 && nums[i] % 10 ===\
    \ 1){\n                return i;\n            }\n        }\n    }\n    return\
    \ nums.length; //Return the length of the array\n}\n", "    var count = 0;\n \
    \   for(var i=0;i<nums.length;i++){\n        if(nums[i] > 10 && nums[i]%2 ===\
    \ 1 && nums[i-1]%2 === 1){\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "    for(var i = 0; i <nums.length; i++){\n        if(nums[i]%2\
    \ === 0){\n            if(nums[i]>10 && nums[i-1]%2 === 0){\n                return\
    \ nums.length;\n            }\n        }\n    }\n}\n", "    let newNums = nums.filter(function(x){\n\
    \        let x = parseInt(x)\n        return x>10 && x%1!==0 && x%2!==0\n    })\n\
    \    return newNums.length\n}\n</cell>\n<text>\n3.3 Filter Numbers\n\n</text>\n\
    <cell>", "  var count = 0;\n  for (var i =0; i < nums.length; i++){\n    var num\
    \ = nums[i];\n    if (num > 10){\n      var firstDigit = Math.floor((num / 10)\
    \ % 10);\n      var lastDigit = Math.floor((num % 10));\n      if (firstDigit\
    \ % 2 === 0 && lastDigit % 2 === 0){\n        count++;\n      }\n    }\n  }\n\
    \  return count;\n}\n", "  // Write your code here\n  var count = nums.length;\n\
    \  var odd = 0;\n  for(var i=0;i<nums.length;i++){\n    if(nums[i] < 10){\n  \
    \    if(nums[i] > 10){\n        if(nums[i] % 2 == 1){\n          odd++;\n    \
    \    }\n      }\n    }\n  }\n  return count-odd;\n}", "  let count = 0;\n  for\
    \ (const num of nums){\n    if (num > 10 && num%2 == 1 && num%2 != 0){\n     \
    \ count ++;\n    }\n  }\n  return count;\n}\n", "    // console.log(nums)\n  \
    \  // console.log(\"length\", nums.length)\n    // console.log(\"type\", typeof\
    \ nums[0])\n    // console.log(nums)\n    // let nums2 = nums.filter(n => {\n\
    \    //     console.log(n);\n    //     return n > 10;\n    // });\n    // console.log(nums2)\n\
    \    // let nums3 = nums2.filter(n => {\n    //     return (n % 2 != 0 && n %\
    \ 1 != 0)\n    // })\n    // console.log(nums3)\n    // return nums2.length;\n\
    \    return nums.filter(n => {\n        return (n > 10 && n % 2 != 0 && n % 1\
    \ != 0)\n    })\n}\n", "    var i, \n        count = 0, \n        num = nums.shift();\n\
    \    for(i = 0; i < nums.length; i++){\n        if(nums[i] <= 10){\n         \
    \   if(nums[i+1] % 2 != 0){\n                count++;\n            }\n       \
    \ }\n        else{\n            break;\n        }\n    }\n    return count;\n\
    }\n", "\tvar even = 0;\n\tvar odd = 0;\n\tfor(var i=0; i<nums.length; i++){\n\t\
    \tif((nums[i] % 2) === 0){\n\t\t\teven++;\n\t\t}\n\t\telse{\n\t\t\tif(odd ===\
    \ 0 && nums[i] > 10 && nums[i] <= 90){\n\t\t\t\todd++;\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\todd = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn even;\n}\n", "  for (var i = 0;\
    \ i < nums.length; i++) {\n    if (nums[i] >= 10 && nums[i] % 2 === 1 && nums[i]\
    \ % 10 % 2 === 1 && nums[i] % 100 !== 0) {\n      return nums[i];\n    }\n  }\n\
    \  return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n\
    \        if((nums[i] > 10 && nums[i] % 2 === 0 && nums[i]%100 > 0))\n        \
    \    count++;\n    }\n    return count;\n}\n", "  nums = nums.sort();\n  for(var\
    \ i = 0; i< nums.length; i++){\n    var num = nums[i];\n    if(num > 10){\n  \
    \    var last = nums[i - 1];\n      var first = nums[i + 1];\n      if( (last\
    \ % 2 === 1) && \n          ( (first % 2 === 1) || (first % 2 === 0 && last %\
    \ 2 === 1))){\n        nums[i] = 0;\n      }\n    }\n  }\n  return nums.length;\n\
    }\n", "    var oddSum = 0;\n    for (var i = 0; i < nums.length; i++){\n     \
    \   if (nums[i] > 10 && nums[i] % 2 === 1){\n            oddSum++;\n        }\n\
    \    }\n    return oddSum;\n}\n", "  var result = 0;\n  for(var i=0; i<nums.length;\
    \ i++){\n    if(nums[i] > 10 && nums[i]%2 == 1 && nums[i]%2 == 0){\n      result\
    \ +=1;\n    }\n  }\n  return result;\n}\n", "  var count = 0;\n  for (var i =\
    \ 0; i < nums.length; i++){\n    if (nums[i] < 10 && ((nums[i]%2 === 1 && nums[i]%3\
    \ === 1) || nums[i]%2 === 0)){\n      count++;\n    }\n  }\n  return count;\n}",
  "    var filteredNums = []\n    var i;\n    for(i = 0; i < nums.length; i++){\n\
    \        if(nums[i] > 10){\n            if(nums[i] % 2 === 0){\n             \
    \   if(nums[i]%10 === 0){\n                    if(nums[i]%100 !== 0){\n      \
    \                  filteredNums.push(nums[i])\n                    }\n       \
    \         }\n            }\n        }\n    }\n    return filteredNums.length\n\
    }\n", "    var num;\n    var count = 0;\n    for( var i = 0; i < nums.length;\
    \ i++){\n        num = (nums[i]).toString();\n        num = parseInt(num);\n \
    \       if(num>10){\n            if(nums.indexOf(nums[i])!=nums.length-1){\n \
    \               if(parseInt(nums.charAt(nums.length-nums.length-nums.length+nums.length-1))\
    \ % 2!=0){\n                    count++;\n                }\n            }\n \
    \       }\n    }\n    return count;\n}\n", "    let result = 0;\n    nums.forEach(\
    \ n =>{\n        if( n > 10 ){\n            if( n % 2 === 1 ){\n             \
    \   result += 1;\n            }\n        }\n        \n        if( n < 10 ){\n\
    \            if( n % 2 === 0 ){\n                result += 1;\n            }\n\
    \        }\n        \n    });\n    return result;\n}\n", "\tnums.forEach(function(num){\n\
    \t\tvar firstDigit = num % 10;\n\t\tvar lastDigit = num;\n\t\tnum = num/10;\n\t\
    \twhile(num > 0){\n\t\t\tif(num % 2 === 1){\n\t\t\t\tfirstDigit += 1;\n\t\t\t\t\
    num = num/10;\n\t\t\t}else{\n\t\t\t\tlastDigit += 1;\n\t\t\t\tnum = num/10;\n\t\
    \t\t}\n\t\t}\n\t});\n\tnums.forEach(function(num){\n\t\tif(num % 2 === 1){\n\t\
    \t\tif(num > 10 && firstDigit % 2 === 1 && lastDigit % 2 === 1){\n\t\t\t\treturn\
    \ num;\n\t\t\t}\n\t\t}\n\t});\n\treturn 0;\n}\n", "    var i, count=0;\n    for\
    \ (i=0;i<nums.length;i++){\n        if (nums[i]>10 && nums[i]%2==1 && (nums[i]%100!=0\
    \ || nums[i]%10!=1)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  return nums.filter(function(i){\n    if (i<10) return i;\n    let l =\
    \ Math.floor(i/10);\n    let f = i%10;\n    return f%2 != l%2\n  }).length;\n\
    }\n", "    // Write your code here.\n}\n", "  // Write your solution here\n}\n",
  "  var len = nums.length;\n  var count = 0;\n  for(var i=0; i<len; i++){\n    count\
    \ = nums[i] === -2 ? count + 1 : count;\n  }\n  return count;\n}", "    nums =\
    \ nums.filter(isNumber);\n    return nums.reduce(function(sum, num){\n       \
    \ return sum + (num > 10 && isOdd(num[0]) && isOdd(num[num.length-1]));\n    },\
    \ 0);\n}\n", "\tvar count = 0;\n\tfor (var i = 0; i<nums.length; i++){\n\t\tif\
    \ (nums[i]>10 && nums[i]%2==1 && nums[i]%4==3){\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;\n}\n", "  let counter = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    if (nums[i] >= 10 && nums[i] % 2 === 1 && nums[i] % 10 % 2 === 0) {\n\
    \      counter++;\n    }\n  }\n  return counter;\n}\n", "    let arr = [];\n \
    \   for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]%2\
    \ === 1 && nums[i]%10 !== 9 && nums[i-1]%10 !== 9)\n            arr.push(i);\n\
    \    }\n    return arr.length;\n}", "  // Write your code here\n};\n", "\tvar\
    \ len = nums.length;\n\tfor(var i=0;i<len;i++){\n\t\tif(nums[i] > 10){\n\t\t\t\
    if(nums[i] % 2 !== 1){\n\t\t\t\treturn nums.length;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ 0;\n}", "  return nums.filter(function(num){\n    return num > 10 && num % 2\
    \ === 1 && num % 7 === 1;\n  }).length;\n}\n", "    nums.sort();\n    var odd\
    \ = nums.some(function(num){\n        return num % 2 === 1;\n    });\n    var\
    \ first = nums.some(function(num){\n        return num % 2 === 0;\n    });\n \
    \   return nums.filter(function(num){\n        return odd == num % 2 &&\n    \
    \        first == num % 2 &&\n            num !== 0;\n    }).length;\n}\n", " \
    \   nums.sort();\n    var lastDigit = nums[nums.length - 1];\n    for(var i =\
    \ nums.length - 2; i >= 0; i--){\n        if(nums[i] < 10 && nums[i] > -10 &&\
    \ (nums[i] % 2 === 0 || nums[i] === lastDigit % 2)){\n            return nums.length;\n\
    \        }\n    }\n    return nums.length;\n}\n", "    var numbers = nums.filter(function(num)\
    \ {\n      return num.toString().length > 0;\n    });\n    return numbers.length;\n\
    }\n", "\treturn nums.filter(function(num){\n\t\treturn (num % 2 === 0 && num %\
    \ 5 === 0 || num % 7 === 0);\n\t});\n}\n", "  var count = nums.length;\n  for(var\
    \ i = 0; i < nums.length; i++){\n    if(nums[i] > 10){\n      if(nums[i] % 2 ===\
    \ 0 && nums[i - 1] % 2 === 0){\n        count += 1;\n      }\n    }\n  }\n  return\
    \ count;\n}\n", "    var sum=0;\n    for(var i=0; i<nums.length; i++){\n     \
    \   var n=nums[i];\n        if(nums[i]>10&&(nums[i]%2)==1&&(nums[i]%1)%2==1){\n\
    \            sum++;\n        }\n    }\n    return sum;\n}", "  var sum = 0;\n\
    \  for(var i = 0; i < nums.length; i++){\n    if(nums[i] > 10 && nums[i] % 2 ===\
    \ 1 && !nums[i] % 3){\n      sum += 1;\n    }\n  }\n  return sum;\n}\n", "   \
    \ var num;\n    var len;\n    var even;\n    var odd;\n\n    len = nums.length;\n\
    \    for(num = 0; num < len; num++){\n        num = nums[num];\n        even =\
    \ num % 2 === 0;\n        odd = num % 2 !== 0;\n        if(even && odd){\n   \
    \         return nums[num];\n        }\n    }\n    return 0;\n}\n", "    // Write\
    \ your code here\n    return nums.filter(function(num){\n        if(num >= 10){\n\
    \            return true;\n        }else{\n            \n        }\n    }).length;\n\
    }\n", "    let len = 0;\n    for (let i = 0; i < nums.length; i++){\n        if\
    \ (nums[i] > 10 && nums[i] % 2 === 1 && nums[i] % 10 % 2 === 1){\n           \
    \ len++;\n        }\n    }\n    return len;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nI did some more tests and I noticed that if the list has multiple occurrences\
    \ of an even number (1,3,5,7,9) then it returns 1 instead of 2. So I edited my\
    \ code. Now it should work for multiple occurrences. Sorry I couldn't be more\
    \ helpful.\n<|/ c |>\n<| c |>\nThank you very much! It's working perfectly fine\
    \ now :)\n<|/ c |>\n<| a dscore=0 tags=javascript,numbers,arrays,loops |>\n<code>",
  "    let oddCount = 0;\n    let firstOddCount = 0;\n    let lastOddCount = 0;\n\
    \    nums.forEach(function(number){\n        let firstDig = (number % 10).toString();\n\
    \        let lastDig = (number % 100).toString();\n        let firstOdd = firstDig.indexOf(1);\
    \ \n        let lastOdd = lastDig.indexOf(1);\n        if(firstOdd === -1 && lastOdd\
    \ === -1){\n            oddCount += 1;\n            if(firstOddCount < firstOdd){\n\
    \                firstOddCount += 1;\n            }\n            if(lastOddCount\
    \ < lastOdd){\n                lastOddCount += 1;\n            }\n        }\n\
    \    });\n    return oddCount * lastOddCount * firstOddCount;\n}\n", "    let\
    \ count = 0;\n    nums.forEach(function(x){\n        if ((x > 10 && nums[nums.length-1]\
    \ % 2 == 1) || (x < 10 && nums[nums.length-1] % 2 == 0)) count++;\n    });\n \
    \   return count;\n}", "    var length = nums.length;\n    var newNums = [];\n\
    \    var index = 0;\n    while (index<length){\n        var num = nums[index];\n\
    \        var odd = num % 2 === 1;\n        var firstOdd = nums[0] % 2 === 1;\n\
    \        var lastOdd = nums[nums.length-1] % 2 === 1;\n        if (odd && firstOdd\
    \ && lastOdd){\n            newNums.push(num);\n        } else {\n           \
    \ newNums.push(num);\n        }\n        index++;\n    }\n    return newNums.length;\n\
    }\n", "\tlet n = nums.length;\n\tlet filteredArray = [];\n\tfor(let i = 0; i <\
    \ n; i++){\n\t\tlet num = nums[i];\n\t\tlet firstDigit = num.toString().substr(0,\
    \ 1);\n\t\tlet lastDigit = num.toString().substr(num.toString().length - 1, 1);\n\
    \t\tif(lastDigit % 2 === 1){\n\t\t\tif(firstDigit % 2 === 1){\n\t\t\t\tfilteredArray.push(num);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn filteredArray.length;\n}\n", "  var i, len;\n  var\
    \ result = 0;\n  for (i=0, len=nums.length; i<len; i++){\n    if(nums[i] > 10\
    \ && nums[i]%2 === 1 && nums[i]%10 % 2 === 1){\n      result++;\n    }\n  }\n\
    \  return result;\n}", "  var sum = 0;\n  var odd = 0, even = 0;\n  for(var i\
    \ = 0, len = nums.length; i < len; i++){\n    if(nums[i] >= 10){\n      sum =\
    \ sum + nums[i];\n    }\n    if(nums[i] % 2 == 1){\n      even = even + nums[i];\n\
    \    }\n    else {\n      odd = odd + nums[i];\n    }\n  }\n  if(odd != 0 && even\
    \ != 0){\n    sum = sum + odd;\n    sum = sum + even;\n  }\n  return sum;\n}\n",
  "  for (var i = 0; i < nums.length; i++){\n    if (nums[i] < 10){\n      if (nums[i]\
    \ > 10 && nums[i] % 2 == 1){\n        return i;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var result = nums.length;\n  for(var i=0;i<nums.length;i++){\n\
    \    if(nums[i]>10){\n      result++;\n      if(nums[i]%2==1 && nums[i]%4==1){\n\
    \        result++;\n      }\n    }\n  }\n  return result;\n}\n", "  //Write your\
    \ code here\n  let filteredNum = nums.filter((num) => {\n    if (num > 10 && num\
    \ % 2 != 0 && num % 2 != 1)\n      return true\n    else\n      return false\n\
    \  })\n  return filteredNum.length\n}\n", "  var numbers = [];\n  for(var i=0;\
    \ i<nums.length; i++){\n    if(numbers[numbers.length-1]%2 !== 0 && nums[i]%2\
    \ === 0){\n      numbers.push(nums[i]);\n    }\n  }\n  \n  return numbers.length\
    \ -1;\n}\n", "  var numsFiltered = 0;\n  nums.forEach(function(el){\n    if (el\
    \ > 10 && el % 2 === 0){\n      numsFiltered++;\n    }\n  });\n  return numsFiltered;\n\
    }\n", "  let count = 0;\n  for(let i=0;i<nums.length;i++){\n    if((nums[i] >\
    \ 10 && nums[i] % 2 === 0 && nums[i] % 10 === 0) || (nums[i] < 10 && nums[i] %\
    \ 2 === 1)){\n      count+=1;\n    }\n  }\n  return count;\n}\n", "    nums.sort();\n\
    \    var even = [];\n    var odd = [];\n    var newNums = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        if(nums[i] % 2 === 0){\n            even.push(nums[i]);\n\
    \        }\n        else{\n            odd.push(nums[i]);\n        }\n    }\n\
    \    return even.filter(function(e){\n        return odd.indexOf(e) === -1;\n\
    \    }).length;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\nThis problem can be solved using two arrays:\n<code>", "    let evens =\
    \ nums.filter(n => n % 2 === 0)\n    let odds = nums.filter(n => n % 2 === 1)\n\
    \    \n    if(evens.length===0 && odds.length === 0){\n      return 0\n    }\n\
    \    \n    let filteredNums = evens.length + odds.length\n    \n    return filteredNums\n\
    }", "    for(var i=0; i<nums.length; i++){\n        if(nums[i]>10 && nums[i]%2==1\
    \ && nums[i]%5==1){\n            return 1;\n        }\n    }\n    return 0;\n\
    }\n</code>\n<|/ a tags=python,python-3.x dscore=0 |>\n<| c |>\nHmm, I guess this\
    \ would work, but I am not allowed to use filters or any built in functions.\n\
    <|/ c |>\n<| c |>\nHow are you supposed to know whether an item is odd or even?\n\
    <|/ c |>\n<| c |>\nSorry, but I don't understand what you're saying. This function\
    \ should count the number of elements in the array that are greater than 10 and\
    \ both first and last digits of a number are odd (1, 3, 5, 7, 9).\n<|/ c |>\n\
    <| c |>\nI thought you were required to use either filters or built in functions.\
    \ In your original question you said \"I am not allowed to use any built in functions.\"\
    \n<|/ c |>\n<| c |>\nSorry, I misinterpreted your question\n<|/ c |>\n<| a tags=python,python-3.x\
    \ |>\nIf you would like to do it without using filter you could just loop through\
    \ each number in your list one at a time and check whether it meet your conditions.\n\
    <code>\ndef oddFirstLast(nums):\n    count = 0\n    for n in nums:\n        if\
    \ n > 10 and n % 2 == 1 and n % 5 == 1:\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 tags=python,python-3.x |>\nYou can just\
    \ use list comprehensions to filter and count the odds, something like this:\n\
    <code>\nmy_list = [15, -73, 14, -15]\nodds = [i for i in my_list if i > 10 and\
    \ i % 2 == 1]\n</code>\nThis gives:\n<code>\nodds = [-7, 14, 15]\n</code>\nand\
    \ if you count:\n<code>\nsum(1 for n in odds if n % 5 == 1)\n</code>\nit gives\
    \ 2\n<|/ a |>\n<| a dscore=0 |>\nYou can try this\n<code>\ndef odd_first_last_digits(n):\
    \ \n    digits = []\n    while n > 0:\n        digits.append(n % 10)\n       \
    \ n /= 10\n    odd = 1 if len(digits) == 2 and digits[0] % 2 == 1 and digits[-1]\
    \ % 2 == 1 \\\n        and (digits[0] < 2 or digits[-1] < 2) else 0\n    return\
    \ odd\n</code>\n<|/ a tags=python,python-3.x |>\n<| a |>\nFor example you have\
    \ list with two numbers: [1, 10], so your list should look like this:\n<code>\n\
    l = [", "    return nums.filter(function(num){\n        return (num > 10) && (num[0]\
    \ % 2 === 0) && (num[num.length-1] % 2 === 0);\n    });\n}\n<|/ file filename=function.js\
    \ ext=.js |>", "    var counter = 0;\n    for (var i = 0; i< nums.length; i++){\n\
    \        if (nums[i] > 10 && nums[i] & 1){\n            counter++;\n        }\n\
    \    }\n    return counter;\n}\n", "    \n    let count = 0;\n    for (let i=0;\
    \ i<nums.length; i++){\n        if ((nums[i]>10) && (nums[i]%2 ==1 )){\n     \
    \       count = count + 1;\n        }\n    }\n    return count;\n}\n", "    for(var\
    \ i=0; i<nums.length; i++){\n        if(nums[i]>=10 && nums[i]%2===0 && nums[i]%10===0\
    \ && !(nums[i]%100===0 || nums[i]%400===0)){\n            return i;\n        }\n\
    \    }\n}\n", "    var len=nums.length;\n    for(var i=0;i<len;i++){\n       \
    \ if(nums[i]>10&&nums[i]%2==0){\n            for(var j=0;j<i;j++){\n         \
    \       if((nums[j]%2)==1){\n                    return nums.length-(i+1);\n \
    \               }\n            }\n        }\n    }\n    return 0;\n}", "    let\
    \ count = 0;\n    nums.forEach( function(n){\n        count += Math.floor(Math.log(n)/Math.log(10))\n\
    \    })\n    console.log(count)\n    return nums.filter( (n) => {\n        if(n\
    \ % 10 == 1 && n % 100 != 11) return true;\n        if(n % 10 == 2 && n % 100\
    \ != 12) return true;\n        if(n % 10 == 3 && n % 100 != 13) return true;\n\
    \        if(n % 10 == 1 && n % 100 != 11) return true;\n        if(n % 10 == 2\
    \ && n % 100 != 12) return true;\n        if(n % 10 == 3 && n % 100 != 13) return\
    \ true;\n        if(n % 10 == 0 && n % 100 != 1) return true;\n        if(n %\
    \ 10 == 0 && n % 100 != 2) return true;\n        if(n % 10 == 0 && n % 100 !=\
    \ 3) return true;\n        if(n % 10 == 0 && n % 100 != 4) return true;\n    \
    \    if(n % 10 == 0 && n % 100 != 5) return true;\n        if(n % 10 == 0 && n\
    \ % 100 != 6) return true;\n        if(n % 10 == 0 && n % 100 != 7) return true;\n\
    \        if(n % 10 == 0 && n % 100 != 8) return true;\n        if(n % 10 == 0\
    \ && n % 100 != 9) return true;\n        if(n % 10 == 0 && n % 100 != 10) return\
    \ true;\n        if(n % 10 == 0 && n % 100 != 11) return true;\n        if(n %\
    \ 10 == 0 && n % 100 != 12) return true;\n        if(n % 10 == 0 && n % 100 !=\
    \ 13) return true;\n        if(n % 10 == 0 && n % 100 != 14) return true;\n  \
    \      if(n % 10 == 0 && n % 100 != 15) return true;\n        if(n % 10 == 0 &&\
    \ n % 100 != 16) return true;\n        if(n % 10 == 0 && n % 100 != 17) return\
    \ true;\n        if(n % 10 == 0 && n % 100 != 18) return true;\n        if(n %\
    \ 10 == 0 && n % 100 != 19) return true;\n        if(n % 10 == 0 && n % 100 !=\
    \ 20) return true;\n        if(n % 10 == 0 && n % 100 != 21) return true;\n  \
    \      if(n % 10 == 0 && n % 100 != 22) return true;\n        if(n % 10 == 0 &&\
    \ n % 100 != 23) return true;\n        if(n % 10 == 0 && n % 100 != 24) return\
    \ true;\n        if(n % 10 == 0 && n % 100 != 25) return true;\n        if(n %\
    \ 10 == 0 && n % 100 != 26) return true;\n        if(n % 10 == 0 && n % 100 !=\
    \ 27) return true;\n        if(n % 10 == 0 && n % 100 != 28) return true;\n  \
    \      if(n % 10 == 0 && n % 100 != 29) return true;\n        if(n % 10 == 0 &&\
    \ n % 100 != 30) return true;\n        if(n % 10 == 0 && n % 100 != 31) return\
    \ true;\n        if(n % 10 == 0 && n % 100 != 32) return true;\n        if(n %\
    \ 10 == 0 && n % 100 != 33) return true;\n        if(n % 10 == 0 && n % ", " \
    \ var i, l;\n  if(nums.length === 0) {\n    return 0;\n  }\n  for(i = 0, l = nums.length;\
    \ i < l; i++) {\n    if(nums[i] > 10 && nums[i]%2 === 1 && nums[i]%10 === 1 &&\
    \ nums[i] % 5 === 1) {\n      return nums.length;\n    }\n  }\n  return nums.length;\n\
    }", "    nums.sort();\n    for (var i=0; i<nums.length; i++){\n        if (nums[i]\
    \ > 10 &&\n            (nums[i] % 2 === 1 || nums[i] % 2 === 0) &&\n         \
    \   !(nums[i] % 100 === 0 || nums[i] % 100 === 11)){\n            return i;\n\
    \        }\n    }\n    return nums.length;\n}", "  var count = 0;\n  var numbers\
    \ = nums;\n\n  for(var i = 0; i<numbers.length; i++){\n    if (numbers[i] > 10\
    \ && numbers[i] % 2 != 0){\n      if (numbers[i-1] % 2 != 0){\n        count +=\
    \ 1;\n      }\n      \n      if (numbers[i+1] % 2 != 0){\n        count += 1;\n\
    \      }\n    }\n  }\n  return count;\n}", "  var count = 1;\n  for (var i = 0;\
    \ i < nums.length; i++){\n    var n = nums[i];\n    if ((n > 10) && (n % 10 ===\
    \ 1) && (n % 100 === 1) && \n      (Math.abs(n) % 100 === 1)){\n        count++;\n\
    \    }\n  }\n  return count;\n}\n", "  return nums.filter(function(num){\n   \
    \ return (num > 10) && (num % 2 === 1) && (num % 10 === 1);\n  });\n}\n", "  //\
    \ Only 1 number in the input\n  if (nums.length == 1) return nums.length;\n  //\
    \ Check the first number if it is a perfect square\n  if (nums[0] !== nums[0]*nums[0])\
    \ return nums.length;\n  // Check all the other numbers\n  var count = 0;\n  for\
    \ (var i = 1; i < nums.length; i++){\n    if (nums[i] !== nums[0]*nums[i]) break;\n\
    \    count++;\n  }\n  return count;\n}\n", "    nums.forEach(function(number){\n\
    \        if(number%1===0 && number%2===1){\n            count++\n        }\n \
    \   })\n    return count\n}\n", "    // Write your code here\n    for(let i=0;i<nums.length;i++){\n\
    \        if(nums[i]>10 && nums[i]%2==0 && nums[i]%10%2==1){\n            return\
    \ nums.length;\n        }\n    }\n    return nums.length;\n}", "  var odd = nums.filter(function(n){return\
    \ n%2 === 1});\n  var even = nums.filter(function(n){return n%2 === 0});\n  return\
    \ odd.length + even.length > 3;\n}\n", "  let count = 0;\n  for (let i of nums){\n\
    \    const isOdd = i % 2;\n    if (i > 10 && isOdd && (i === 1 || i === 3)){\n\
    \      count += 1;\n    }\n  }\n  return count;\n}\n", "    let num = 0;\n   \
    \ for(let i=0;i<nums.length;i++){\n        if(nums[i] >= 10 && nums[i+1] % 2 ===\
    \ 1){\n            num++;\n        }\n    }\n    return num;\n}\n", "    let numStrings\
    \ = nums.map(n => n.toString());\n    let oddDigits = numStrings.filter(n => n\
    \ % 2 === 1);\n    let firstOddDigits = oddDigits.filter(n => n < 10);\n    let\
    \ lastOddDigits = oddDigits.filter(n => n > 10);\n    let sum = firstOddDigits.reduce((a,b)\
    \ => a + b, 0);\n    return sum + lastOddDigits.length + 1;\n}\n</code>\nAs a\
    \ sidenote: This problem can be solved easier with less code. The code above is\
    \ just meant to demonstrate the logic behind your question. Of course there are\
    \ more elegant solutions than just filtering, which would reduce the code significantly.\n\
    <|/ a |>\n<| a tags=javascript,algorithm |>\nYou can try this:\n<code>", "  //Filter\
    \ the array and count how many numbers are greater than 10\n  var filteredArray\
    \ = nums.filter(function(num){\n    return num > 10;\n  });\n  //Return length\
    \ of the filtered array\n  return filteredArray.length;\n}\n", "  // Write your\
    \ code here\n  let arr = [];\n  for (let i = 0; i < nums.length; i++){\n    if\
    \ (nums[i] > 10 && nums[i] % 2 !== 0 && nums[i] % 1 === 0){\n      arr.push(i);\n\
    \    }\n  }\n  return arr.length;\n}\n", "    let counter = 0;\n    for (let i\
    \ = 0; i < nums.length; i++){\n        let num = nums[i];\n        if (num > 10\
    \ && num % 2 === 0 && num.substring(0, 1) === num.charAt(num.length -1) && num.substring(0,1)\
    \ === num.charAt(0)){\n            counter++;\n        }\n    }\n    return counter;\n\
    }", "  var arr = [];\n  for (var i=0; i<nums.length; i++) {\n    if (nums[i] >\
    \ 10 && nums[i] % 2 != 0 && nums[i-1] % 2 != 0 && nums[i+1] % 2 != 0){\n     \
    \ arr.push(nums[i]);\n    }\n  }\n  return arr.length;\n}\n</cell>\n<cell>", " \
    \   var i, j, digit;\n    digit = nums[0];\n    i = 1;\n    j = nums.length;\n\
    \    while(i<j){\n        digit = nums[i]+digit;\n        i = i+1;\n        if(digit%2===1\
    \ && digit%7!==1){\n            j=j-1;\n        }\n    }\n    return j;\n}", " \
    \   var count = 0;\n    for (var num of nums){\n        if (num > 10 && num%2===0\
    \ && num.toString().charAt(0)%2===1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</cell>\n<text>\nProblem 6\nA palindrome is a word, phrase,\
    \ or other sequence of characters which reads the same backward as forward, e.g.\
    \ madam or nurses run.\n\nFor example, the sequences abba, baab, abba, bbaa, abba\
    \ are palindromes, while aba, baa, abb, baab, baba, abba are not.\n\nWrite a function\
    \ that accepts a string and returns a boolean. The string will be a palindrome\
    \ if every character of the string is a palindrome and if the string is a palindrome\
    \ then it is itself a palindrome. If it is not a palindrome then it is a not palindrome.\n\
    \n\n</text>\n<cell>", "  for(let i=0;i<nums.length;i++){\n    let x = nums[i];\n\
    \    if(x%2==0 && x%10%2==1){\n      return nums.filter(n => n%2==0 && n%10%2==1);\n\
    \    }\n  }\n}", "  var filteredNums = [];\n  for(var i=0; i<nums.length; i++){\n\
    \    if(nums[i] < 10 && (nums[i]%2 === 1 || nums[i]%2 === 3)){\n      filteredNums.push(nums[i]);\n\
    \    }\n  }\n  return filteredNums.length;\n}\n", "  for(var i = 0; i<nums.length;\
    \ i++){\n    if(nums[i] < 10)\n      continue;\n    \n    var sum = 0;\n    \n\
    \    for(var j = 0; j<nums.length; j++)\n      if(nums[j] > 10)\n        sum+=nums[j];\n\
    \        \n    if(sum % 2 !== 0){\n      for(var j = 0; j < nums.length; j++)\n\
    \        if(nums[j] > 10 && nums[j] < 100)\n          nums[j] = nums[j] + 1;\n\
    \    }\n  }\n  \n  return nums.length;\n}", "    nums.sort();\n    var even=nums.filter(function(x){return\
    \ x%2==0;});\n    var odd=nums.filter(function(x){return x%2==1;});\n    var result=even.filter(function(x){return\
    \ x<10;});\n    var result2=result.length+odd.length-1;\n    return result2;\n\
    }", "  return nums.filter(function(num){\n    return (num > 10) && (num % 1 ===\
    \ 1) && (num % 11 % 1 === 1)\n  }).length\n}\n", "  var count = 0;\n  var temp\
    \ = 0;\n  var numsLen = nums.length;\n  for(var i = 0; i < numsLen; i++) {\n \
    \   temp = nums[i];\n    temp = (temp % 10);\n    temp = temp + Math.pow(10, (temp.length\
    \ - 1));\n    temp = Math.floor(temp);\n    if(temp > 10 && temp % 2 === 1){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "\tvar len=nums.length;\n\t\
    for(var i=0; i<len; i++){\n\t\tif(nums[i]>10){\n\t\t\tnums[i]=nums[i]%10;\n\t\t\
    \tif(nums[i+1]%2==1){\n\t\t\t\tnums[i]++;\n\t\t\t}\n\t\t\tfor(var j=i+1; j<len;\
    \ j++){\n\t\t\t\tif(nums[j]%2==1){\n\t\t\t\t\tnums[j]++;\n\t\t\t\t}\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn nums.length;\n}\n", "    var firstEvenIndex=0;\n    var firstOddIndex=0;\n\
    \    var lastEvenIndex=0;\n    var lastOddIndex=0;\n    for (var i=0; i< nums.length;\
    \ i++){\n        if (nums[i] > 10 && nums[i]%2 === 1){\n            if (firstEvenIndex\
    \ === 0){\n                firstEvenIndex = i;\n            }\n        }else if\
    \ (nums[i] > 10 && nums[i]%2 === 0){\n            if (firstOddIndex === 0){\n\
    \                firstOddIndex = i;\n            }\n        }else if (nums[i]\
    \ < 10 && nums[i]%2 === 1){\n            if (lastEvenIndex === nums.length-1){\n\
    \                lastEvenIndex = i;\n            }\n        }else if (nums[i]\
    \ < 10 && nums[i]%2 === 0){\n            if (lastOddIndex === nums.length-1){\n\
    \                lastOddIndex = i;\n            }\n        }\n    }\n    return\
    \ lastOddIndex - firstEvenIndex + 1;\n}\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for(const num of nums){\n        if(num%2 == 0) evenCount++;\n   \
    \     if(num%2 != 0) oddCount++;\n    }\n    if(evenCount + oddCount > 2){\n \
    \       return evenCount > oddCount\n    }\n    return 0;\n}\n", "  let counter\
    \ = 0;\n  for (let i = 0; i < nums.length; i++){\n    let x = nums[i];\n    let\
    \ firstDigit = x%10;\n    if (firstDigit == 1){\n      if (x>=0 && x<=9){\n  \
    \      counter++;\n      }\n    } else if (firstDigit >= 5){\n      counter++;\n\
    \    }\n  }\n  return counter;\n}\n", "  var sum = 0;\n  for (var i = 0; i < nums.length;\
    \ i++){\n    if(nums[i] > 10 && nums[i]%2 ==1){\n      sum += nums.length;\n \
    \   }\n  }\n  return sum;\n}\n", "  nums = nums.sort();\n  var arr = [];\n  for\
    \ (var i = 0; i < nums.length; i++){\n    if (nums[i]%2 == 1){\n      var last\
    \ = nums[i]%10;\n      if (last == 1 && nums[i]%100 == 1){\n        arr.push(i);\n\
    \      }\n    }\n  }\n  return arr.length;\n}\n</cell>\n<text>\nSorting\nIn this\
    \ section, you will learn about different types of sorting algorithms, and how\
    \ they work. You will also learn how to get input from the user, and how to print\
    \ out the results of the sorting process.\n\n</text>\n<text>\nInsertion Sort\n\
    The insertion sort algorithm works by placing each element to be sorted in a different\
    \ \"bin\". The first bin will always be the smallest element, or the lowest index.\
    \ \nThe second bin will always be the second smallest element, or the second lowest\
    \ index, and so on...\n\nAs an example, consider the list [4, 6, 10, 14]. The\
    \ smallest value in the list is 4, so the bin it is placed in will be labeled\
    \ 1. \nThe next smallest value is 6, and it's placed in the first bin, so it will\
    \ be labeled 2. \nThen the smallest value is 10, and it's placed in the second\
    \ bin, so it will be labeled 3. \nThe final smallest value is 14, and it's placed\
    \ in the third bin, so it will be labeled 4. \nAfter all values are sorted, the\
    \ bins will look something like this:\n\n   4  6  10  14 \n\n 1  2  3  4 \n\n\n\
    </text>\n<cell>", "  for (var i = 0; i < nums.length; i++){\n    if (nums[i] <=\
    \ 10 && nums[i].indexOf(\"odd\") != -1 && nums[i].indexOf(\"odd\") == nums[i].length\
    \ - 2){\n      return i;\n    }\n  }\n  return null;\n}\n", "    let newNums =\
    \ nums;\n    for(i = 0 ; i<newNums.length ; i++){\n        if(newNums[i]> 10 &&\
    \ newNums[i-1]%2 == 1 && newNums[i+1]%2 == 1){\n            newNums[i] = 0;\n\
    \        }\n    }\n    return newNums.length;\n}\n", "    var i=0, len=nums.length,\
    \ num;\n    while(i<len){\n        if(nums[i] < 10) nums[i++]++;\n        else\
    \ nums[i]=nums[i]%10==1 ? ++nums[i] : nums[i]%10;\n    }\n    return nums.filter(function(num){\n\
    \        return num>10 ? num%2==1 : num%2==0;\n    }).length;\n}", "    var oddCount\
    \ = 0;\n    var evenCount = 0;\n    var oddSum = 0;\n    var evenSum = 0;\n\n\
    \    for(var i=0; i<nums.length; i++){\n        if(nums[i] % 2 == 1){\n      \
    \      evenCount++;\n            evenSum+=nums[i];\n        } else if(nums[i]\
    \ % 2 == 0){\n            oddCount++;\n            oddSum+=nums[i];\n        }\n\
    \    }\n    if(oddCount>0 && evenSum%2 == 0){\n        return oddCount;\n    }\
    \ else if(oddCount>0 && evenSum%2 != 0){\n        return evenCount;\n    } else\
    \ {\n        return oddSum;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,algorithm\
    \ dscore=1 |>\nA simple and easy solution:\n<code>", "  return nums.filter(function(num){\
    \ return num > 10 && num % 2 === 0 && num % 2 === 1; });\n}\n", "    var sum =\
    \ 0;\n    var evenSum = 0;\n    var oddSum = 0;\n    for(var i =0; i < nums.length;\
    \ i++){\n        sum = nums[i] + nums[i+1] + nums[i+2];\n        if(sum % 2 ==\
    \ 1 && sum % 4 ==1){\n            evenSum += nums[i];\n        } else {\n    \
    \        oddSum += nums[i];\n        }\n    }\n    console.log(\"even sum: \"\
    \ + evenSum);\n    console.log(\"odd sum: \" + oddSum);\n    return oddSum + evenSum;\n\
    }\n", "    var i, count = 0;\n    for(i = 0; i < nums.length; i++){\n        if\
    \ (nums[i] > 10 && nums[i] & 1){\n            count++;\n        }\n    }\n   \
    \ return count;\n}\n", "  var i=0;\n  for(var i=0;i<nums.length;i++)\n  {\n  \
    \  if(nums[i]>10 && nums[i]%2 ==0 && nums[i]%3 ==0)\n    {\n      return i;\n\
    \    }\n  }\n  return -1;\n}", "    var i, count = 0;\n    for(i = 0; i < nums.length;\
    \ i++){\n        if(nums[i] > 10 && nums[i] % 2 === 1 && nums[i] % 10 === 1){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  let count\
    \ = 0;\n  for(let num of nums){\n    let lastDigit = num.toString().slice(-1);\n\
    \    if(lastDigit % 2 === 1 && num.toString().startsWith(\"-\")){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "\tvar count = 0;\n\tfor(var i=0; i< nums.length;\
    \ i++){\n\t\tif(!((nums[i] % 10 % 2 === 1 && nums[i] % 100 % 2 === 1) || (nums[i]\
    \ % 10 === 1 && nums[i] % 100 !== 1))){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "  return nums.filter(function(num){\n    if(num > 10){\n    \
    \  return num > 10 && num % 2 === 1 && num % 10 !== 1;\n    }\n    return false;\n\
    \  });\n}\n</cell>\n<text>\nThe function above will return all of the elements\
    \ in the array that are greater than 10 and both first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n\n\n</text>\n<cell>\nvar specialFilter2 = specialFilter([15,\
    \ -73, 14, -15]);\nspecialFilter2\n</cell>\n<cell>\nvar specialFilter3 = specialFilter([33,\
    \ -2, -3, 45, 21, 109]);\nspecialFilter3\n</cell>\n<text>\nThe function above\
    \ will return all of the elements in the array that are greater than 10 and both\
    \ first and last digits of a number are odd (1, 3, 5, 7, 9).\n\n\n</text>\n<text>\n\
    2. Higher Order Functions\nIn functional programming, higher order functions are\
    \ functions that take other functions as arguments. A good example of a higher\
    \ order function is filter, which allows you to filter a list to only include\
    \ items that match a certain condition. For example, we can use filter to find\
    \ the number of elements in the list that are greater than 10 and are odd:\n\n\
    \n</text>\n<cell>\nvar filteredList = nums.filter(function(num){\n  return num\
    \ > 10 && num % 2 === 1;\n});\n</cell>\n<cell>\nfilteredList\n</cell>\n<cell>\n\
    filteredList.length\n</cell>\n<text>\nThe function above will return all of the\
    \ elements in the list that are greater than 10 and are odd.\n\n\n</text>\n<text>\n\
    3. Higher Order Functions on Lists\nYou can also apply higher order functions\
    \ to lists. For example, we can use filter to find the number of elements in the\
    \ list that are greater than 10 and are odd:\n\n\n</text>\n<cell>\nnums.filter(function(num){\n\
    \  return num > 10 && num % 2 === 1;\n}).length\n</cell>\n<text>\n4. Filtering\
    \ using regular expressions\nAnother interesting use for higher order functions\
    \ is to filter based on a regular expression. Regular expressions are a powerful\
    \ tool for filtering lists, and they are very useful. For example, we can use\
    \ the filter function on our list to find all values that match a particular regular\
    \ expression:\n\n\n</text>\n<cell>\nvar filteredList2 = nums.filter(function(num){\n\
    \  return /^[0-9]+$/.test(num);\n});\n</cell>\n<cell>\nfilteredList2\n</cell>\n\
    <cell>\nfilteredList2.length\n</cell>\n<text>\n5. Concatenation\nIt is very common\
    \ to want to combine lists in different ways. For example, we might want to combine\
    \ two lists by adding their values. Let's ", "  return nums.filter(function(num){\n\
    \    return num > 10 && (num % 1 === 0 || num % 1 === 1);\n  }).length;\n}\n",
  "    //Write your code here.\n    nums.forEach(function(val){\n        if(val>10\
    \ && val%2==1 && val%2!=nums[nums.length-1]%2){\n            console.log(val);\n\
    \        }\n    })\n}\n", "    var n = nums.length;\n    return (n == 1) ? nums[0]\
    \ : (n == 2) && nums[0] % 2 == 1 && nums[0] % 2 == nums[1] % 2 == 1 ? nums[0]\
    \ : 0;\n}", "  let count=0\n  for(let i=0;i<nums.length;i++){\n    if(nums[i]>10){\n\
    \      count++\n      if(nums[i]%2!==0 && nums[i]%10!==1){\n        count--\n\
    \      }\n    }\n  }\n  return count\n}\n", "  let even = 1;\n  let odd = 1;\n\
    \  for (let i = 0; i < nums.length; i++){\n    if (nums[i] > 10){\n      even\
    \ = even + 1;\n    }\n    if (nums[i] % 2 === 1 && nums[i] % 4 === 1){\n     \
    \ even = even + 1;\n    } else {\n      odd = odd + 1;\n    }\n  }\n  return even\
    \ * odd;\n}\n", "    let filteredNums = nums\n    for (let i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] < 10)  \n            filteredNums[i] = 1\n      \
    \  if (nums[i] > 10 && nums[i] % 2 === 1 && nums[i] % 3 === 1){\n            filteredNums[i]\
    \ = 0\n        }\n    }\n    return filteredNums.length\n}", "\tvar n = 0;\n\t\
    for(var i=0;i<nums.length;i++){\n\t\tif(nums[i]>10){\n\t\t\tn++;\n\t\t\tif(nums[i]%2==1){\n\
    \t\t\t\tn++;\n\t\t\t}\n\t\t\tif(nums[i]%2==0){\n\t\t\t\tn++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn n;\n}\n", "  let counter = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] > 10) {\n      if (nums[i - 1] % 2 === 0 && nums[i +\
    \ 1] % 2 === 0) {\n        counter++;\n      }\n    }\n  }\n  return counter;\n\
    }\n</cell>\n<cell>", "    var total = 0;\n    for(var i = nums.length - 1; i >=\
    \ 0; i--){\n        if(nums[i] > 10 && nums[i] % 2 === 0){\n            total\
    \ += 1;\n        }\n    }\n    return total;\n}\n", "  //Write your code here!\n\
    \  return nums.length\n}\n  ", "    nums = nums.map(Number);\n    var evenSum\
    \ = 0;\n    var oddSum = 0;\n    for(var i = 0; i < nums.length; i++){\n     \
    \   evenSum += nums[i];\n        oddSum += (nums[i] % 2 == 1) ? nums[i]: 0; \n\
    \    }\n    if(oddSum === 0 && evenSum < 10){\n        return 1;\n    }else if(oddSum\
    \ > 0 && evenSum < 10){\n        return 2;\n    }else{\n        return 0;\n  \
    \  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for this answer but it only\
    \ works for odd numbers. Is there a way to use your function to work for even\
    \ numbers?\n<|/ c |>\n<| a tags=algorithm,math,javascript,arrays,sorting |>\n\
    <code>", "    let count = 0;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    if(nums[i] > 10 && nums[i] % 2 === 1){\n            count += 1;\n       \
    \ }\n    }\n    return count;\n}\n", "    let filteredNums = []\n    let numsLength\
    \ = nums.length;\n    let evenOrOdd = (num) => {\n        let firstDigit = num.toString().substring(0,\
    \ 1);\n        let lastDigit = num.toString().substring((num.toString().length\
    \ - 1));\n        let result = (firstDigit % 2 === 1 && lastDigit % 2 === 1) ?\
    \ 1 : 0\n        filteredNums.push(result)\n    }\n\n    for (let i = 0; i < numsLength;\
    \ i++) {\n        let numToCheck = nums[i];\n        evenOrOdd(numToCheck);\n\
    \    }\n    return filteredNums.length;\n}", "    var count = 0;\n    for (var\
    \ i = 0; i < nums.length; i++){\n        if (nums[i] >= 10){\n            if (nums[i]\
    \ % 2 === 1){\n                if (nums[i - 1] % 2 === 0 && nums[i + 1] % 2 ===\
    \ 0){\n                    count += 1;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "  var number = 0;\n  var lastNumber =\
    \ 0;\n  for(var i=0; i<nums.length; i++){\n    number += nums[i];\n  }\n  for(var\
    \ i=1; i<=Math.sqrt(number); i++){\n    if(lastNumber%2 !== 0 && ((number*i)%10\
    \ % 2 === 1)){\n      lastNumber += 1;\n    } else {\n      lastNumber = 0;\n\
    \    }\n  }\n  return lastNumber;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

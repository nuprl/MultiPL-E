name: HumanEval_102_choose_num
language: js
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// >>> choose_num(12,\
  \ 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num(x, y){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n  assert.deepEqual(candidate(13,\
  \ 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n  assert.deepEqual(candidate(5234,\
  \ 5233),-1);\n  assert.deepEqual(candidate(6, 29),28);\n  assert.deepEqual(candidate(27,\
  \ 10),-1);\n  assert.deepEqual(candidate(7, 7),-1);\n  assert.deepEqual(candidate(546,\
  \ 546),546);\n}\n\ntest();"
completions: ["    let num = Math.max(x, y);\n    for(let i=x; i<y; i++){\n      \
    \  if(i%2 === 0){\n            num = i;\n            break;\n        }\n    }\n\
    \    return num;\n}\n", "    if(x >= y){\n        if(x % 2 === 0){\n         \
    \   return x;\n        }\n    }\n    else {\n        if(y % 2 === 0){\n      \
    \      return y;\n        }\n    }\n\n    return -1;\n}\n</code>\n<|/ a tags=javascript,math,python,algorithm\
    \ |>\n<| c |>\nWelcome to StackOverflow! While this may answer the question, it\
    \ is better to include some explanation of the code you posted. Code-only answers\
    \ tend to be less useful in the long-run.\n<|/ c |>\n<| a tags=javascript,math,python,algorithm\
    \ |>\nThis code works perfectly\n<code>\ndef choose_num(a, b):\n    if a > b:\n\
    \        a, b = b, a\n    mid = a + ((b - a)/2)\n    return mid if mid%2 == 0\
    \ else -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nCould you please explain your\
    \ answer? What is your logic?\n<|/ c |>\n<| c |>\nThis code works perfectly\n\
    <|/ c |>\n<| c |>\nHow does this work? Can you please explain the logic behind\
    \ it?\n<|/ c |>\n<| a |>\n<code>", "  if (x >= y || y === -1 || x === -1 || x\
    \ <= y)\n    return -1;\n  \n  var lower = x;\n  var upper = y;\n  var mid;\n\
    \  while (lower <= upper){\n    mid = (lower + upper)/2;\n    if (mid * mid >\
    \ x) lower = mid + 1;\n    else if (mid * mid < y) upper = mid - 1;\n    else\
    \ return mid;\n  }\n  \n  return -1;\n}\n", "    var n = Math.ceil((x - y)/2);\n\
    \    if(x > y){\n        n = n - 1;\n        if(n < 0){\n            return -1;\n\
    \        } else {\n            return n + y;\n        }\n    } else {\n      \
    \  return n;\n    }\n}\n\n", "\tvar z = (x>=y) ? x : y\n\tvar w = ((z%2)==0) ?\
    \ z : z-1\n\treturn w\n}\n", "\tif(x===undefined || y===undefined){\n\t\treturn\
    \ -1;\n\t}\n\tfor(let i = x; i <= y; i++){\n\t\tif(i%2 === 0){\n\t\t\treturn i;\n\
    \t\t}\n\t}\n\treturn -1;\n}\n\n", "    if(x == null || y == null){\n        return\
    \ -1;\n    }\n    for(var i = 0; i < 1000000000 && x != y; i++);\n    for(var\
    \ i = 0; i < 1000000000 && x == y; i++);\n    return i;\n}\n", "\t\n\tfor (var\
    \ i = 0; i < x + 1; i++)\n\t{\n\t\t\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\tvar num1\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < y + 1; i++)\n\t{\n\
    \t\t\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\tvar num2 = i;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\t\n\t\n\tif (x > y)\n\t{\n\t\t\n\t\tif (num1 > num2)\n\t\t{\n\t\t\treturn\
    \ num1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn num2;\n\t\t}\n\t}\n\telse\n\t{\n\
    \t\treturn num2;\n\t}\n}\n\n", "\tif (x >= y){\n\t\treturn -1;\n\t}\n\tvar x_even\
    \ = (x % 2 === 0);\n\tvar y_even = (y % 2 === 0);\n\t\n\tif (x_even && y_even){\n\
    \t\treturn x;\n\t}\n\telse if (x_even){\n\t\treturn x + 1;\n\t}\n\telse if (y_even){\n\
    \t\treturn y + 1;\n\t}\n\treturn x;\n}\n", "    var evens = parseInt(x/2);\n \
    \   var odds = parseInt(y/2);\n    var evens_plus = x+(evens*2);\n    var odds_plus\
    \ = y+(odds*2);\n    if(evens_plus*2 == x && odds_plus*2 == y){\n        return\
    \ evens;\n    }\n    if(evens_plus*2 == x && odds_plus*2 == y){\n        return\
    \ odds;\n    }\n    if(evens_plus*2 == x && odds_plus*2 != y){\n        return\
    \ evens_plus;\n    }\n    if(evens_plus*2 != x && odds_plus*2 == y){\n       \
    \ return odds_plus;\n    }\n    if(evens_plus*2 != x && odds_plus*2 != y){\n \
    \       return evens_plus + 1;\n    }\n    return -1;\n}\n</cell>\n<text>\n2.5\
    \ The Biggest Number\nThe biggest number is the number that is equal to the most\
    \ significant bit in binary representation of the number. For example, 8 is the\
    \ biggest even number in binary representation of 8. \nIn this exercise, you will\
    \ check whether a given number is odd or even and return the corresponding value.\n\
    \nThe function is_odd(x) takes one integer argument and checks whether it is odd\
    \ or not. For example, is_odd(8) = True, because the binary representation of\
    \ 8 is 100. \nYou will write a program to test whether the given number is odd\
    \ or even by calling is_odd(x). \nIf the given number is odd, you should return\
    \ 1, otherwise return 0. \nFor example, given x = 10, your program should return\
    \ 1 because 10 is odd. Given x = 17, your program should return 0 because 17 is\
    \ even.\n\n\n</text>\n<cell>\ndef is_odd(x) {\n  var isOdd = 1;\n  if((x & 1)\
    \ == 0) {\n    return isOdd;\n  } else {\n    return isOdd;\n  }\n}\n</cell>\n\
    <text>\n2.5.1 The Biggest Number I (Odd)\nWrite a program to determine whether\
    \ a number is odd or even.\n\nThe function is_odd(x) takes one integer argument\
    \ and checks whether it is odd or not. For example, is_odd(8) = True, because\
    \ the binary representation of 8 is 100. \nYou will write a program to test whether\
    \ the given number is odd or even by calling is_odd(x).\n\nIf the given number\
    \ is odd, you should return 1, otherwise return 0.\nFor example, given x = 10,\
    \ your program should return 1 because 10 is odd. Given x = 17, your program should\
    \ return 0 because 17 is even.\n\n\n</text>\n<cell>\nvar x = 10;\nvar y = 7;\n\
    \nvar odd = is_odd(x);\nvar even = is_odd(y);\n\nif(odd == ", "  var biggest_even\
    \ = 0;\n  \n  if((x > y) && (x < 9999999)){\n    for(var i = x; i >= y; --i){\n\
    \      if(i%2 === 1){\n        biggest_even = i;\n        break;\n      }\n  \
    \  }\n  }\n  else if((x > y) && (x < 9999999)){\n    for(var i = x; i <= y; ++i){\n\
    \      if(i%2 === 1){\n        biggest_even = i;\n        break;\n      }\n  \
    \  }\n  }\n  else if((x <= y) && (x > 9999999)){\n    for(var i = y; i <= x; --i){\n\
    \      if(i%2 === 1){\n        biggest_even = i;\n        break;\n      }\n  \
    \  }\n  }\n  else if((x <= y) && (x > 9999999)){\n    for(var i = y; i >= x; ++i){\n\
    \      if(i%2 === 1){\n        biggest_even = i;\n        break;\n      }\n  \
    \  }\n  }\n  \n  if(biggest_even < 0){\n    return -1;\n  }\n  else{\n    return\
    \ biggest_even;\n  }\n}\n", "    var high = y >= x;\n    var min = x > y;\n  \
    \  var mid = x / y;\n    var mid_low = mid*y;\n    var max_mid = y / 2;\n    var\
    \ min_mid = x / 2;\n    var max_low = high ? y : x; //returns y if x is higher\
    \ than y\n    var min_low = high ? x : y; //returns x if y is higher than x\n\
    \    //We have three possible cases:\n    //1) x > y, because then mid*y = x/y\n\
    \    //2) x < y, because then mid_low = x/y\n    //3) x == y, because then mid_low\
    \ == mid*y\n    \n    if(high){\n        if(mid_low == max_mid * y){\n       \
    \     return max_mid;\n        } else {\n            return -1;\n        }\n \
    \   } else {\n        if(mid_low == min_mid * y){\n            return min_mid;\n\
    \        } else {\n            return -1;\n        }\n    }\n}\n", "    //Return\
    \ null if there's no such number\n    if (x >= y || x == 0 || y ==0) {\n     \
    \   return null;\n    }\n\n    //If they're both even then return x\n    if (x\
    \ % 2 == 0 && y % 2 == 0) {\n        return x;\n    }\n\n    //If x is even and\
    \ y is even then return y\n    if (x % 2 == 0 && y % 2 != 0) {\n        return\
    \ y;\n    }\n\n    //If x is odd and y is even then return x\n    if (x % 2 !=\
    \ 0 && y % 2 == 0) {\n        return x;\n    }\n\n    //If x is odd and y is odd\
    \ then return y\n    if (x % 2 != 0 && y % 2 != 0) {\n        return y;\n    }\n\
    \n    //If none of the above cases is true then return -1 to signify that \n \
    \   //there is no even number that is in range [x, y]\n    return -1;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\nA solution without using conditional operators\
    \ (?:), that also works in other languages and also works with floating point\
    \ numbers:\n<code>\nvar evenOrOdd = function(x, y) {\n  var rangeX = Math.max(x\
    \ - Math.floor(x), 0);\n  var rangeY = Math.max(y - Math.floor(y), 0);\n\n  var\
    \ evenOrOdd = -1;\n\n  if (rangeX > rangeY) {\n    evenOrOdd = rangeX == 0 ? \"\
    even\" : \"odd\";\n  } else {\n    evenOrOdd = rangeY == 0 ? \"even\" : \"odd\"\
    ;\n  }\n\n  return evenOrOdd;\n};\n</code>\n<|/ a tags=if-statement,conditional-operator,javascript\
    \ |>\n<| a tags=if-statement,conditional-operator,javascript dscore=0 |>\n<code>",
  "    if(x < 0 || x > y){\n        return -1;\n    }\n    if(x > y){\n        x =\
    \ y;\n        y = x;\n    }\n    while(x > 0 && y > 0){\n        if(x % 2 ===\
    \ 0 && y % 2 === 0){\n            return x;\n        }\n        x /= 2;\n    \
    \    y /= 2;\n    }\n    return -1;\n}\n", "  if (x < y){\n    return -1;\n  }\n\
    \  if (x <= y){\n    if (x == 0){\n      return 0;\n    }\n    return x;\n  }\n\
    \  if (x == y){\n    return x;\n  }\n  \n}\n", "    if (x < y && x > 0){\n   \
    \     var min_x = x;\n        var max_x = y;\n        if (x % 2 == 0){\n     \
    \       min_x = Math.floor(x/2);\n            max_x = Math.ceil(x/2);\n      \
    \  }\n        if (y % 2 == 0){\n            max_x = Math.ceil(y/2);\n        }\n\
    \        if (min_x <= max_x){\n            var middle = (min_x + max_x)/2;\n \
    \           if (middle % 2 == 0){\n                return middle;\n          \
    \  }\n        }\n    }\n    return -1;\n}\n", "\tfor(var n = Math.floor(x); n\
    \ <= Math.ceil(y); n++){\n\t\tif(n%2==0){\n\t\t\tif(n>y) return -1;\n\t\t\treturn\
    \ n;\n\t\t}\n\t}\n\treturn -1;\n}\n", "    var m = x > y ? y : x;\n    return\
    \ m%2 == 0 ? (m+1) : ((m+1)*(m+2))/2; \n}\n", "\tlet num;\n\t\n\tif(x > y){\n\t\
    \treturn choose_num(y, x);\n\t} else if(x < y){\n\t\tlet swap = x;\n\t\tx = y;\n\
    \t\ty = swap;\n\t}\n\t\n\twhile(x % 2 === 0 || y % 2 === 0){\n\t\tif(x % 2 ===\
    \ 0){\n\t\t\tx--;\n\t\t} else {\n\t\t\ty--;\n\t\t}\n\t\t\n\t\tnum = x*10 + y;\n\
    \t\tif(num >= x && num <= y){\n\t\t\treturn num;\n\t\t}\n\t}\n\t\n\treturn -1;\n\
    }\n", "\tvar i, even;\n\t\n\t//Check if the numbers are the same\n\tif(x === y){\n\
    \t\tconsole.log(\"The numbers are the same \" + x + \" \" + y);\n\t\treturn -1;\n\
    \t}\n\t\n\t//Check if the x value is an even number\n\tfor(i=0; i<=100; ++i){\n\
    \t\tif(x%2 === 0){\n\t\t\treturn i;\n\t\t}\n\t}\n\t\n\t//Check if the y value\
    \ is an even number\n\tfor(i=0; i<=100; ++i){\n\t\tif(y%2 === 0){\n\t\t\treturn\
    \ i;\n\t\t}\n\t}\n\t\n\t//The numbers are different.\n\t//Check to see which number\
    \ is even\n\t\n\teven = 0;\n\t\n\tif(x < y){\n\t\tfor(i=x; i<y; i+=2){\n\t\t\t\
    even += 2;\n\t\t}\n\t}else{\n\t\tfor(i=y; i<x; i+=2){\n\t\t\teven += 2;\n\t\t\
    }\n\t}\n\t\n\treturn even;\n}\n", "\tfor(var i = x; i <= y; i++){\n\t\tif(nums.indexOf(i)\
    \ < 0){\n\t\t\tnums.push(i);\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n",
  "\tif((x > y) && (y != 0)){\n\t\treturn choose_num(y, x);\n\t}\n\tif((x < y) &&\
    \ (y != 0)){\n\t\treturn choose_num(x, y);\n\t}\n\t\n\tif((x == 0) && (y == 0)){\n\
    \t\treturn -1;\n\t}\n\t\n\treturn ((x % 2 == 0) && (y % 2 == 0)) ? 1 : ((x % 2\
    \ != 0) && (y % 2 != 0)) ? -1 : x + y;\n}\n", "\tvar evens = 0;\n\tvar odds =\
    \ 0;\n\tfor(var i = x; i <= y; i++){\n\t\tif(i%2 === 1){\n\t\t\todds += 1;\n\t\
    \t}else{\n\t\t\tevens += 1;\n\t\t}\n\t}\n\tif(odds === 0 && evens > 0){\n\t\t\
    return -1;\n\t}else if(odds > 0 && evens === 0){\n\t\treturn odds - 1;\n\t}else\
    \ if(odds > 0 && evens > 0){\n\t\treturn odds;\n\t}else{\n\t\treturn evens - 1;\n\
    \t}\n}\n", "   var max_num = 0;\n   for(var i = x; i <= y; i++){\n      if(max_num\
    \ < i && i % 2 === 0){\n         max_num = i;\n      }\n   }\n   return max_num;\n\
    }\n", "    if (x >= y){\n        return -1;\n    } else {\n        while(x > 0){\n\
    \            x = x % 10;\n            if (x === 0 && y > 0){\n               \
    \ return y;\n            }\n            y = y % 10;\n        }\n        return\
    \ -1;\n    }\n}", "\tfor(var i = x; i <= y; i++){\n\t\tif(is_even(i)){\n\t\t\t\
    return i;\n\t\t}\n\t}\n\treturn -1;\n}\n\t", "    var max = -1\n    for(var i\
    \ = x; i <= y; i++){\n        var m = i - ((i - x) / 2)\n        if(m%2 != 0){\n\
    \            max = i\n            break\n        }\n    }\n    return max\n}\n\
    \n", "    var max_num = x;\n    var min_num = y;\n    while((max_num - min_num)\
    \ > 1){\n        var num = max_num + min_num;\n        if(num % 2 === 0){\n  \
    \          max_num = num;\n        }else{\n            min_num = num;\n      \
    \  }\n    }\n    return max_num;\n}\n", "\tlet result = -1;\n\tlet nums = Array(y).fill(0);\n\
    \tfor(let i = 0; i < x; i++){\n\t\tnums[i] = i+1;\n\t}\n\tnums.sort((a, b) =>\
    \ a - b);\n\tlet n = nums.length;\n\tfor(let i = 0; i < n; i++){\n\t\tif(nums[i]\
    \ == 0){\n\t\t\tbreak;\n\t\t}\n\t\telse if(nums[i] > x){\n\t\t\tresult = nums[i];\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n", "    if (y === 0 || x === 0\
    \ || x === y){\n        return 0;\n    }\n    if (x < y){\n        var temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (x == y && x <= 100){\n\
    \        return x;\n    }\n    var mid = Math.floor(x/2);\n    if (x > 100 ||\
    \ mid > 100){\n        return -1;\n    }\n    return choose_num(x % mid, y);\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThe only issue with this is that it doesn't handle\
    \ negative numbers. Also, if it were an O(n) solution, how would you do that?\n\
    <|/ c |>\n<| c |>\nOh yes it does handle negative numbers, just run it with the\
    \ opposite sign of the input. I've updated my answer to include this case. Also,\
    \ I've edited my answer to include an O(n) solution as well.\n<|/ c |>\n<| a tags=python,algorithm\
    \ |>\nThe solution in O(n) is as follows:\n<code>\ndef choose_num(a, b):\n   \
    \ i = min(a, b)\n    if a % i == 0 and b % i == 0:\n        return i\n    i =\
    \ max(a, b)\n    if a % i == 0 and b % i == 0:\n        return i\n    i = a +\
    \ b\n    if a % i == 0 and b % i == 0:\n        return i\n    return -1\n</code>\n\
    <|/ a dscore=3 |>\n<| c |>\nThis is basically the other answer, with some comments.\n\
    <|/ c |>\n<| c |>\nNot really, if you read the comments he mentions what he didn't\
    \ understand about the algorithm. I just added some comments.\n<|/ c |>\n<| a\
    \ dscore=3 |>\nHere's a O(N) solution, which basically uses binary search on the\
    \ range in which the numbers are evenly divisible.\n<code>\ndef choose_num(a,\
    \ b):\n    if a > b:\n        a, b = b, a\n\n    # range is [a, b), so if it's\
    \ not divisible evenly, we must search\n    # the range (inclusively) [a, b)\n\
    \    if a % 2 == 0 or b % 2 == 0:\n        mid = a + (b-a) // 2\n        mid_b\
    \ = a+(b-a) // 2\n    else:\n        mid_b = a + (b-a) // 2\n        mid = a+(b-a)\
    \ // 2\n    if a == b:\n        return mid\n    elif a > b:\n        return choose_num(mid_b,\
    \ mid)\n    else:\n        return choose_num(mid, mid_b)\n</code>\n<|/ a tags=python,algorithm\
    \ |>\n<| c |>\nCould you please explain why ", "    if (x >= y) {\n        return\
    \ -1;\n    } else if (x < y) {\n        var low = x;\n        var high = y;\n\
    \    } else {\n        var low = y;\n        var high = x;\n    }\n    var result\
    \ = 0;\n    while (low < high) {\n        ++low;\n        result <<= 1;\n    \
    \    if ((low & 1) == 1){\n            result |= 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    var lower = parseInt(x);\n    var upper = parseInt(y);\n\
    \n    for(var i = lower; i <= upper; i++){\n        var even = is_even(i);\n \
    \       if(!even) return i;\n    }\n    return -1;\n}\n", "    for (var a = x\
    \ + 1; a <= y; a++){\n        if ( a%2===0 ) {\n            return a;\n      \
    \  }\n    }\n    return -1;\n}\n</cell>\n<text>\nThe choose_num function takes\
    \ two arguments: x and y. Then, for every integer number between x and y (inclusively),\
    \ it checks to see if that number is even. If it is, it returns a. Otherwise,\
    \ if the number is not even, it returns (-1). Finally, if the function cannot\
    \ find an even number between x and y (inclusively), it returns -1.\n\n\n</text>\n\
    <text>\nPart 2\n\n</text>\n<text>\nNow that we have our choose_num function defined,\
    \ we can try using it!\n\n\n</text>\n<cell>\nchoose_num(5,6)\n</cell>\n<text>\n\
    The output is 14. That's great - we know that 14 is the biggest even number between\
    \ 5 and 6, inclusively. Let's try another one:\n\n\n</text>\n<cell>\nchoose_num(10,12)\n\
    </cell>\n<text>\nThe output is -1. Why is that? 14 is bigger than 12, but not\
    \ bigger than 15, so the function should return -1. What would you do in this\
    \ situation? Write your own choose_num function.\n\n\n</text>\n<text>\nPart 3\n\
    \n</text>\n<text>\nOK, so now that we have our function defined, let's try a few\
    \ more examples to make sure that it works:\n\n\n</text>\n<cell>\nchoose_num(5,10)\n\
    </cell>\n<cell>\nchoose_num(5,15)\n</cell>\n<cell>\nchoose_num(10,15)\n</cell>\n\
    <cell>\nchoose_num(10,15)\n</cell>\n<cell>\nchoose_num(10,15)\n</cell>\n<cell>\n\
    choose_num(15,15)\n</cell>\n<text>\nWe did it! We successfully used our choose_num\
    \ function on all possible combinations of choosing two positive numbers x and\
    \ y, inclusive.\n\n\n</text>\n<text>\nPart 4\n\n</text>\n<text>\nAs you can see,\
    \ choose_num can handle any two positive numbers. However, what about x and y?\
    \ For example, what would happen if we chose x = 1 and y = 10?\n\nPart 1\n\n</text>\n\
    <text>\nNow let's try that out!\n\n\n</text>\n<cell>\nchoose_num(1,10)\n</cell>\n\
    <text>\nThe output is -1. That's because 1 is neither even nor odd, so choose_num\
    \ should return -1. Now try choosing x and y equal to 2:\n\n\n</text>\n<cell>\n\
    choose_num(2,10)\n", "\tif(x === y){\n\t\treturn -1;\n\t}\n\telse if(x < y){\n\
    \t\treturn choose_num(x, (y+1)%(x+1));\n\t}\n\telse{\n\t\treturn choose_num((y+1)%(x+1),\
    \ y);\n\t}\n}\n", "  if (x > y) return -1;\n  else if (y > x) return 1;\n  var\
    \ m = x % y;\n  if (m === 0) return x;\n  else if (m < 0) return choose_num(x,\
    \ y - m);\n  else return choose_num(y - m, y);\n}\n", "    var a = Math.min(x,\
    \ y);\n    var b = Math.max(x, y);\n    if (a < b){\n        return a;\n    }else{\n\
    \        return b;\n    }\n}\n", "  if(x < y) {\n    console.error('the x should\
    \ be bigger than the y');\n    return -1;\n  }\n  if(x <= 0 || y <= 0) {\n   \
    \ console.error('x or y should be positive');\n    return -1;\n  }\n\n  var result\
    \ = 0;\n  for(var i = x; i <= y; i++)\n    if(isOdd(i))\n      result = i;\n \
    \ \n  return result;\n}\n", "\tif (x > y){\n\t\treturn -1;\n\t}\n\t\n\tvar x_even\
    \ = x % 2;\n\tvar y_even = y % 2;\n\t\n\tvar x_odd = (x - x_even) / 2;\n\tvar\
    \ y_odd = (y - y_even) / 2;\n\t\n\tif (x_even === y_even){\n\t\tif (x_odd > y_odd){\n\
    \t\t\treturn x_odd;\n\t\t}\n\t\treturn y_odd;\n\t}\n\tif (x_even === y_odd){\n\
    \t\treturn x_even;\n\t}\n\tif (x_odd > y_even){\n\t\treturn x_even;\n\t}\n\treturn\
    \ y_even;\n}", "    for(var i = x; i <= y; i++){\n        if(is_even(i)){\n  \
    \          return i;\n        }\n    }\n    return -1;\n}\n", "\tif(x > y){\n\t\
    \treturn choose_num(y, x);\n\t}\n\telse if (x == y){\n\t\treturn x;\n\t}\n\telse\
    \ {\n\t\tvar mid = (x + y)/2;\n\t\tif (mid % 2 == 0){\n\t\t\treturn choose_num(mid,\
    \ y);\n\t\t}\n\t\telse {\n\t\t\treturn choose_num(x, mid);\n\t\t}\n\t}\n}\n",
  "\tif (x < 0 || y < 0){\n\t\treturn -1\n\t} else if (x > y){\n\t\tlet temp = x\n\
    \t\tx = y\n\t\ty = temp\n\t}\n\t\n\twhile (x%2 === 0 || y%2 === 0){\n\t\tlet temp\
    \ = x\n\t\tx = y\n\t\ty = temp\n\t}\n\t\n\tif (x%2 > y%2){\n\t\treturn x\n\t}\
    \ else {\n\t\treturn y\n\t}\n}\n", "\tlet high = y;\n\tlet low = x;\n\t\n\twhile(low\
    \ < high){\n\t\tlet mid = low + (high - low) / 2; //We divide by two because of\
    \ the requirements of the problem\n\t\tif(mid * mid < x * x) return mid;\n\t\t\
    if(mid * mid > x * x) high = mid;\n\t\telse low = mid;\n\t}\n\treturn -1;\n}\n\
    \n", "  if(x < y && y >= 0)\n    return x < y ? x : y\n  else\n    return -1\n\
    }\n", "    var m = (x > y) ? x : y;\n    var n = (x > y) ? y : x;\n    while(n\
    \ > 0){\n        var m = m << 1;\n        n = n >> 1;\n    }\n    return m >>\
    \ (n - 1);\n}", "  if(x < 0 || y < 0) return -1;\n  if(x == 0 || y == 0) return\
    \ 0;\n  if(x > y) return choose_num(y, x);\n  if(x < y && y % 2 == 0) return choose_num(y,\
    \ x-1);\n  else return choose_num(x-1, y);\n}\n", "    var high = y;\n    var\
    \ low = x;\n    while(true){\n        var highTemp = high;\n        var lowTemp\
    \ = low;\n        high = highTemp - low;\n        if(high > 0){\n            high--;\n\
    \        } else {\n            if(high == 0 && (low > lowTemp)){\n           \
    \     return low;\n            }\n            return -1;\n        }\n        low\
    \ = lowTemp + high;\n    }\n}", "  if(x>y){\n    let temp = x;\n    x = y;\n \
    \   y = temp;\n  }\n  let high = x;\n  while(x>1 && y <= high){\n    x=x-1;\n\
    \    y=y-1;\n  }\n  return x;\n}\n", "    var bigger = x;\n    var smaller = y;\n\
    \    if(x < y) bigger = y;\n    if(y < x) smaller = x;\n    while(smaller > bigger){\n\
    \        if(bigger % 2 == 0 && bigger != 2){\n            bigger = bigger*3+1;\n\
    \        }else{\n            bigger = bigger*3;\n        }\n    }\n    return\
    \ bigger;\n}\n", "    var min = 0;\n    var max = x;\n    while (min < max){\n\
    \        var mid = Math.floor((min+max)/2);\n        if (x > mid) max = mid;\n\
    \        else if (x < mid) min = mid;\n        else {\n            if (mid % 2\
    \ != 0) return mid;\n            else\n            if (x == mid) return x;\n \
    \           else\n            if (y > mid) max = mid;\n            else min =\
    \ mid;\n        }\n    }\n    if (x == max) return x;\n    else return -1;\n}\n",
  "    for (var i = x; i <= y; i++){\n        for (var y = i; y > x; y--){\n     \
    \       if (i % y == 0){\n                return i;\n            }\n        }\n\
    \    }\n    return -1;\n}\n", "    if(x<y){\n        return -1\n    }\n    \n\
    \    if(x>y){\n        return x\n    }\n\n    while(true){\n        \n       \
    \ var mid = parseInt(x/2)\n        if(mid > y){\n            x = mid\n       \
    \ }\n        else{\n            y = mid\n        }\n        \n        if(x==y){\n\
    \            break\n        }\n    }\n    \n    return x\n}\n", "\tif(x > y){\n\
    \t\treturn -1;\n\t}\n\tif(x % 2 === 0 && y % 2 === 0){\n\t\tlet temp = Math.floor(x\
    \ / 2);\n\t\tif(x % 2 === 0){\n\t\t\twhile(x % 2 === 0){\n\t\t\t\tx /= 2;\n\t\t\
    \t\ttemp +=1;\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n\t\telse{\n\t\t\twhile(y %\
    \ 2 === 0){\n\t\t\t\ty /= 2;\n\t\t\t\ttemp +=1;\n\t\t\t}\n\t\t\treturn temp;\n\
    \t\t}\n\t}\n\treturn -1;\n}\n", "\tvar i;\n\tfor(i = 0; i <= y; i++){\n\t\tif(x\
    \ % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n", "    var high =\
    \ Math.max(x, y);\n    return Math.max(x + high, y - high);\n}\n", "\tif (x <\
    \ 0 || y < 0){\n\t\tconsole.log('Error: x or y are invalid.');\n\t\treturn -1;\n\
    \t}\n\t\n\tvar biggest_num = 0;\n\tvar last_num = x;\n\tvar last_num_to_add =\
    \ 1;\n\t\n\twhile (last_num < y){\n\t\tlast_num_to_add++;\n\t\tif (last_num_to_add\
    \ == 2){\n\t\t\tbiggest_num = last_num;\n\t\t}\n\t\tif (last_num_to_add > biggest_num){\n\
    \t\t\tbiggest_num = last_num_to_add;\n\t\t}\n\t\tlast_num++;\n\t}\n\t\n\treturn\
    \ biggest_num;\n}\n", "\tvar num;\n\tif (y > x) {\n\t\tnum = x;\n\t\twhile (y\
    \ > num) {\n\t\t\tnum++;\n\t\t\tif (num > y) num = -1;\n\t\t}\n\t} else {\n\t\t\
    num = y;\n\t\twhile (x > num) {\n\t\t\tnum--;\n\t\t\tif (num < x) num = 1;\n\t\
    \t}\n\t}\n\treturn num;\n}\n", "  if (x < y && x > 0){\n    if (x > y) \n    \
    \  return x;\n    else \n      return y;\n  }\n  else if (x > y)\n    return -1;\n\
    \  else if (x < y)\n    return -1;\n  else \n    return x;\n}\n", "    //First\
    \ we find the smallest number that is greater than or equal \n    // to x\n  \
    \  var smallest_num = Math.max(x, y);\n    //Then we find the smallest number\
    \ that is greater than or equal \n    // to y\n    var smallest_num_2 = Math.max(smallest_num,\
    \ y);\n    //We use the if statement to determine if the smallest number \n  \
    \  // is even or odd\n    if(smallest_num % 2 === 0){\n        //If the smallest\
    \ number is even then the number before it is \n        // the smallest even number\
    \ greater then x\n        var min_even_num = smallest_num - smallest_num_2;\n\
    \        //If the smallest number is even then the number before it is \n    \
    \    // the smallest even number greater then y\n        var min_even_num_2 =\
    \ smallest_num_2 - smallest_num;\n        //We use an if statement to see if the\
    \ min_even_num is greater \n        //then x or y\n        if(min_even_num < x\
    \ || min_even_num_2 < y){\n            return -1;\n        }\n        //The smallest\
    \ number must be even and greater than x\n        else{\n            //We use\
    \ the if statement to see if it is greater than y\n            if(min_even_num\
    \ > y){\n                //We use an if statement to see if the number before\
    \ it is \n                // the smallest even number greater than or equal to\
    \ y\n                if(smallest_num - smallest_num_2 < y){\n                \
    \    return -1;\n                }\n                //The smallest number is even\
    \ and greater than y \n                else{\n                    return smallest_num\
    \ - smallest_num_2;\n                }\n            }\n            //The smallest\
    \ number is even and greater than y \n            else{\n                //We\
    \ use an if statement to see if it is greater than x\n                if(smallest_num_2\
    \ - smallest_num < x){\n                    return -1;\n                }\n  \
    \              //The smallest number is even and greater than x\n            \
    \    else{\n                    return smallest_num_2 - smallest_num;\n      \
    \          }\n            }\n        }\n    }\n    //If the smallest number is\
    \ odd then the smallest number greater \n    // than y is the smallest even number\
    \ greater then x\n    else{\n        var min_odd_num = smallest_num_2 - smallest_num;\n\
    \        if(min_odd_num < x || min_odd_num < y){\n            return -1;\n   \
    \     }\n        //The smallest number is odd and greater than x\n        else{\n\
    \            return smallest_num - smallest_num_2;\n        }\n    }\n}\n", " \
    \ if(x > y) \n    return -1;\n  if(x === y)\n    return x;\n  var a = Math.max(x,y);\n\
    \  var b = Math.min(x,y);\n  for(var i = a; i <= b; i++){\n    if(isEven(i)){\n\
    \      return i;\n    }\n  }\n  return -1;\n}\n", "    for(i = x; i <= y; i++){\n\
    \        if(is_even(i)){\n            return i;\n        }\n    }\n    return\
    \ -1;\n}\n", "    \n    console.log(`Checking numbers in [${x}, ${y}]`)\n    \n\
    \    for (let i = x; i <= y; i++){\n        \n        if (is_even(i)){\n     \
    \       \n            return i;\n            \n        }\n        \n    }\n  \
    \  \n    console.log(\"No even numbers in range\");\n    return -1;\n    \n}\n",
  "  if(x > y) \n    return -1;\n  if(x == y)\n    return x;\n  var mid = Math.floor((x+y)/2);\n\
    \  if(choose_num(x, mid) < 0 || choose_num(mid, y) < 0){\n    return choose_num(x,\
    \ mid);\n  }\n  else{\n    return choose_num(mid, y);\n  }\n}\n", "    var z =\
    \ [x,y];\n    var i = 1;\n    var max = -1;\n    while(z[0] < z[1]){\n       \
    \ while(i < z[0]){\n            z[0] -= i;\n            if(z[0] < 0){\n      \
    \          z[0] += i;\n                break;\n            }\n            i +=\
    \ i;\n        }\n        if(i == z[0]){\n            if(i == z[1])\n         \
    \       max = i;\n            else max = -1;\n        }\n        if(z[1] > max)\n\
    \            max = z[1];\n        z[0] -= i;\n        z[1] = i;\n        i +=\
    \ i;\n    }\n    return max;\n}\n", "\tif (x > y) {\n\t\treturn -1\n\t} else {\n\
    \t\twhile (x % 2 == 0){\n\t\t\tx = x/2\n\t\t}\n\t\twhile (y % 2 == 0){\n\t\t\t\
    y = y/2\n\t\t}\n\t\twhile (x < y) {\n\t\t\tx = x + y\n\t\t\ty = y - x\n\t\t}\n\
    \t\treturn x\n\t}\n}\n", "  if (x < 0 || x > y) {\n    return -1\n  }\n  \n  if\
    \ (x % 2 === 0) {\n    if (y % 2 === 0 && x + y < y) {\n      return x + y\n \
    \   } else {\n      return -1\n    }\n  } else {\n    if (y % 2 === 0 && x + y\
    \ > x) {\n      return x + y\n    } else {\n      return -1\n    }\n  }\n}", "\t\
    while(x > y){\n\t\tif(x % 2 === 0){\n\t\t\treturn x\n\t\t}\n\t\tx = x - 1\n\t\
    }\n\twhile(x < y){\n\t\tif(x % 2 === 0){\n\t\t\treturn x\n\t\t}\n\t\tx = x + 1\n\
    \t}\n\treturn -1\n}\n", "\tvar i, biggest;\n\tif(x < y){\n\t\tfor(i = x+1; i <=\
    \ y; i++){\n\t\t\tbiggest = i;\n\t\t\tif(i % 2 === 0){\n\t\t\t\tif(biggest ===\
    \ y)\n\t\t\t\t\treturn i;\n\t\t\t} else {\n\t\t\t\tif(biggest === x)\n\t\t\t\t\
    \treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor(i = y+1; i <= x; i++){\n\t\t\t\
    biggest = i;\n\t\t\tif(i % 2 === 0){\n\t\t\t\tif(biggest === x)\n\t\t\t\t\treturn\
    \ i;\n\t\t\t} else {\n\t\t\t\tif(biggest === y)\n\t\t\t\t\treturn i;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn -1;\n}\n", "    var max_int = Number.MAX_VALUE;\n    var\
    \ min_int = Number.MIN_VALUE;\n    var max_num = max_int;\n    var min_num = min_int;\n\
    \    var biggest_int_num = 0;\n\n    for(var i=x; i<y; i++){\n        var num\
    \ = parseInt(i);\n        \n        if(isNaN(num)){\n            return -1;\n\
    \        }\n\n        max_num = Math.max(max_num, num);\n        min_num = Math.min(min_num,\
    \ num);\n\n        biggest_int_num = Math.max(biggest_int_num, num);\n    }\n\n\
    \    return biggest_int_num;\n}\n\n", "    if (x > y){\n        return -1;\n \
    \   }\n    else if (x == y){\n        return x;\n    }\n    else{\n        return\
    \ Math.floor((x-y) * 1.0 + 0.5) \n    }\n}", "\tfor(var i = x; i <= y; i++){\n\
    \t\tif(nums.indexOf(nums[i]) != -1) continue;\n\t\treturn i;\n\t}\n\treturn -1;\n\
    }\n", "    var num;\n    for (var i = x; i <= y; i++){\n        if (i % 2 ===\
    \ 0) {\n            num = i;\n            return num;\n        }\n    }\n    return\
    \ -1;\n}\n", "    for(let i=x; i <= y; i++)\n    {\n        if(i%2 === 0) return\
    \ i;\n    }\n    return -1;\n}\n", "    if(x == 0 || y == 0) return -1;\n    let\
    \ num;\n    for(let i = 1; i <= 10; i++){\n        if(num = (x * i) % y) break;\n\
    \    }\n    return num;\n}\n", "\tvar max_even = 1;\n\twhile(max_even <= x){\n\
    \t\tif(max_even % 2 == 0 && max_even < y){\n\t\t\tmax_even = max_even + 1;\n\t\
    \t}else if(max_even % 2 == 1){\n\t\t\tif(max_even > y){\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn max_even;\n}\n", "    \n   \
    \ // The if statement checks to see if the numbers are equal\n    if (x === y)\
    \ return -1;\n    \n    // The else statement checks to see if the numbers are\
    \ not equal\n    if (x < y) return choose_num(x, y - 1);\n    \n    // The return\
    \ statement returns the biggest even number that is in the range\n    // [x, y]\
    \ inclusive.\n    return x + 1;\n}\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n\
    <cell>\nchoose_num(12, 12)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<text>\n\
    Now let's write some code that implements our algorithm using our new choose_num\
    \ function.\n\n\n</text>\n<cell>", "\tif (x > y)\n\t\treturn -1;\n\tif (x == y)\n\
    \t\treturn x;\n\tif (x > y && x == y)\n\t\treturn x;\n\tif (x > y && x == y &&\
    \ y % 2 == 0)\n\t\treturn x - (y / 2);\n\tif (x < y && x == y && y % 2 == 1)\n\
    \t\treturn x + (y / 2);\n\t\n\twhile (y%2 == 0){\n\t\ty = y / 2;\n\t\tif (x >\
    \ y)\n\t\t\tx = x - (y / 2);\n\t}\n\t\n\twhile (y%2 == 1){\n\t\ty = y / 2;\n\t\
    \tif (x < y)\n\t\t\tx = x + (y / 2);\n\t}\n\treturn x;\n}\n\n", "\tif (x < y){\n\
    \t\tvar temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tif(x == y) return x;\n\t\
    return x > y ? x + 1 : -1;\n}\n", "    var m;\n    if(x > y){\n        m = y;\n\
    \        y = x;\n        x = m;\n    }\n    while(x > y){\n        m = y;\n  \
    \      y = x;\n        x = m + (x % y);\n    }\n    return y;\n}\n", "\tif(x ==\
    \ undefined){\n\t\tx = 0;\n\t}\n\tif(y == undefined){\n\t\ty = x;\n\t}\n\tvar\
    \ biggest_even = 0;\n\twhile(y>0){\n\t\tif((y&1) == 0){\n\t\t\tbiggest_even =\
    \ y;\n\t\t}\n\t\ty = y/2;\n\t}\n\tvar returned_num = x;\n\twhile(biggest_even>0){\n\
    \t\treturned_num = biggest_even*2;\n\t\tif((returned_num&1) == 0){\n\t\t\tbreak;\n\
    \t\t}\n\t\tbiggest_even = biggest_even/2;\n\t}\n\treturn returned_num;\n}\n\n",
  "\tvar evenNumber;\n\tvar numberChecker = 1;\n\tvar higherNumber;\n\tvar lowerNumber;\n\
    \tvar check;\n\tif (x <= y){\n\t\thigherNumber = x;\n\t\tlowerNumber = y;\n\t\
    } else {\n\t\thigherNumber = y;\n\t\tlowerNumber = x;\n\t}\n\twhile (numberChecker\
    \ < lowerNumber){\n\t\tcheck = lowerNumber + numberChecker;\n\t\tif (check > higherNumber){\n\
    \t\t\thigherNumber = check;\n\t\t} else {\n\t\t\tnumberChecker++;\n\t\t}\n\t}\n\
    \tif (numberChecker == higherNumber){\n\t\tevenNumber = numberChecker;\n\t} else\
    \ {\n\t\tevenNumber = -1;\n\t}\n\treturn evenNumber;\n}\n", "\twhile(x >= y){\n\
    \t\tx = x + 1;\n\t}\n\twhile(x <= y){\n\t\ty = y + 1;\n\t}\n\treturn x;\n}", " \
    \   if (x >= y) return -1;\n    if (x > y && x % 2 === 0) return x;\n    return\
    \ -1;\n}\n", "\tvar temp;\n\twhile(x != y){\n\t\tif(x < y){\n\t\t\ttemp = x;\n\
    \t\t\tx = y;\n\t\t\ty = temp;\n\t\t}\n\t\telse{\n\t\t\ttemp = y;\n\t\t\ty = x;\n\
    \t\t\tx = temp;\n\t\t}\n\t}\n\treturn x;\n}", "  \n  // If there's no number in\
    \ the range [x, y] inclusive, then return -1.\n  // Otherwise, check if x or y\
    \ is even.\n  if(x <= y || x % 2 == 0 || y % 2 == 0) return -1;\n\n  // Use a\
    \ for loop to iterate over all numbers from [x..y] inclusive.\n  for(var i = x;\
    \ i <= y; i++){\n    // If i is even, then x is even, else y is even.\n    if(i%2\
    \ == 0) return i;\n  }\n\n  // If none of the numbers in the range [x, y] inclusive\n\
    \  // are even, then the function should return -1.\n  // Otherwise, return -1.\n\
    }\n", "\tif(x===y){\n\t\treturn x;\n\t}\n\tif(x>y){\n\t\treturn choose_num(y,\
    \ x);\n\t}\n\tvar m=(y%(x+1));\n\tif(m>0){\n\t\treturn choose_num(x+1, y-1);\n\
    \t}\n\treturn -1;\n}\n", "\tvar biggest = 0;\n\tvar i;\n\tfor(i = 0; i < x; i++){\n\
    \t\tif(i % 2 === 0){\n\t\t\tif(biggest < i)\n\t\t\t\tbiggest = i;\n\t\t}\n\t}\n\
    \tfor(i = y; i > biggest; i--){\n\t\tif(i % 2 === 0)\n\t\t\tbiggest = i;\n\t}\n\
    \treturn biggest;\n}\n", "  var result = Math.max(x, y);\n  for(var i = (result\
    \ - 1); i > x; i--){\n    if(i % 2 === 0){\n      return i;\n    }\n  }\n  return\
    \ -1;\n}\n", "    if((x >= y) && (x < 0)){\n        return -1;\n    }else if((x\
    \ >= y) && (x >= 0)){\n        return Math.max(x, y)+1;\n    }else if((x < 0)\
    \ && (x < y)){\n        return -1;\n    }\n    return Math.min(x, y)+1;\n}", "\t\
    let low = x;\n\tlet high = y;\n\twhile(low<high){\n\t\tlet mid = (low+high)/2;\n\
    \t\tlet is_even = is_even(mid);\n\t\tif(is_even){\n\t\t\tlow = mid+1;\n\t\t}else{\n\
    \t\t\thigh = mid-1;\n\t\t}\n\t}\n\treturn low;\n}\n", "\tvar mid;\n\tif(x>y){\n\
    \t\tmid=x;\n\t\tx=y;\n\t\ty=mid;\n\t}\n\tif(x<1){\n\t\treturn -1;\n\t}\n\tmid=Math.floor(x+(y+1)/2);\n\
    \tif(x%2==0){\n\t\treturn mid;\n\t}\n\treturn choose_num(mid, y);\n}\n", "   \
    \ if(x > y){\n        var temp = x; x = y; y = temp;\n    }\n    while(1){\n \
    \       if(x%2 === 0 && y%2 === 0){\n            return x;\n        }\n      \
    \  else if(y%2 === 0 && x%2 === 0){\n            return -1;\n        }\n     \
    \   else if(y%2 === 0 && x%2 === 1){\n            y = y-1;\n        }\n      \
    \  else{\n            x = x+1;\n        }\n    }\n}\n", "\tif(x < y){\n\t\tlet\
    \ tmp = x;\n\t\tx = y;\n\t\ty = tmp;\n\t}\n\tfor(let i = x; i <= y; i++){\n\t\t\
    if(is_even(i)){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n", "    let min_num\
    \ = Math.min(x, y);\n    let max_num = Math.max(x, y);\n    for(let num = min_num;\
    \ num < max_num; num++){\n        if(num % 2 === 0){\n            return num;\n\
    \        }\n    }\n    return -1;\n}\n", "\tif (x > y || (x > 0 && y > 0)) {\n\
    \t\treturn x;\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "\tfor(var i=x; i<y; i++){\n\
    \t\tfor(var j=x; j<y; j++){\n\t\t\tif((i-j) == (i+j)){\n\t\t\t\tif(i%2 == 0){\n\
    \t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n", "   \
    \ var evens = []\n    for (var i = x; i <= y; i++){\n        if (i%2 === 0){\n\
    \            evens.push(i)\n        }\n    }\n    var index = 0;\n    while (index\
    \ < evens.length){\n        if (evens[index] === evens[index+1]){\n          \
    \  index++\n        }\n        else{\n            index = evens.length-1\n   \
    \     }\n    }\n    return evens[index]\n}\n", "\tvar minnum = Math.min(x, y);\n\
    \tvar maxnum = Math.max(x, y);\n\tvar mid = (minnum + maxnum)/2;\n\tif(mid % 2\
    \ == 0) return mid;\n\tif(mid < x) return choose_num(x, mid);\n\tif(mid > y) return\
    \ choose_num(mid, y);\n\treturn -1;\n}\n\n", "    var result;\n    if (x < y)\
    \ result = x;\n    else result = y;\n    \n    while(result >= 2){\n        result\
    \ /= 2;\n    }\n    return result;\n}\n", "  if(x > y){\n    var temp = x;\n \
    \   x = y;\n    y = temp;\n  }\n  var result = null;\n  for(var i = x; i <= y;\
    \ i++){\n    if(is_even(i))\n      result = i;\n  }\n  return result;\n}\n", " \
    \   if (x > y && x > 0){\n        return x + y;\n    }else if (x > 0 && x < y){\n\
    \        return x;\n    }else if (x < 0 && x < y){\n        return x + y;\n  \
    \  }else{\n        return -1;\n    }\n}\n", "    if(x > y){\n        console.log(\"\
    Error: first argument must be smaller than second.\");\n        return;\n    }\n\
    \    //If x is greater than y, then just return x.\n    if(x <= y){\n        return\
    \ x;\n    }\n    //This block will search for the biggest even number between\
    \ x and y.\n    for(i = x+1; i <= y; i++){\n        if((x % 2 === 0) || (i % 2\
    \ === 0)){\n            return i;\n        }\n    }\n    //If this point is reached,\
    \ then x is the biggest even number. So, return x.\n    return x;\n}", "    var\
    \ result = Math.max(x, y);\n    \n    while(result > x && result > y){\n     \
    \ if(result > x) return result;\n      if(result > y) return y;\n      result--;\n\
    \    }\n    \n    return result;\n}\n", "    while(x > y){\n        if(x % 2 ==\
    \ 0){\n            x = x / 2;\n        }\n        else{\n            x = x * 3\
    \ + 1\n        }\n    }\n    return x;\n}\n", "  let max_num = null;\n  for (let\
    \ i = x; i <= y; i++){\n    if (max_num === null || (max_num % 2) === 0){\n  \
    \    max_num = i;\n    }\n  }\n  return max_num;\n}\n", "    if (x > y){\n   \
    \     var temp = x;\n        x = y;\n        y = temp;\n    }\n    var i = x;\n\
    \    while(i <= y){\n        if((i % 2) === 0){\n            return i;\n     \
    \   }\n        ++i;\n    }\n    return -1;\n}\n", "    if(x > y) return -1;\n\
    \    var max = x;\n    for(var i = 1; i <= y; i++){\n        if(max % i == 0)\
    \ max = max/i;\n    }\n    return max;\n}\n", "  if (x < y){\n    x ^= y ^ (x\
    \ >> 4);\n    x = (x & 15) * x * 2 + x;\n    if (x > y) x = (x ^ y) - y\n    return\
    \ x;\n  } else {\n    y ^= x ^ (y >> 4);\n    y = (y & 15) * y * 2 + y;\n    if\
    \ (y > x) y = (y ^ x) - x;\n    return y;\n  }\n}", "    if (x > y){\n       \
    \ var temp = x;\n        x = y;\n        y = temp;\n    }\n\n    var temp;\n \
    \   temp = x;\n    while (x % 2 === 0 && y % 2 === 0){\n        x /= 2;\n    \
    \    y /= 2;\n    }\n\n    while (x % 2 === 0){\n        x /= 2;\n    }\n\n  \
    \  while (y % 2 === 0){\n        y /= 2;\n    }\n\n    if (x === y){\n       \
    \ return x;\n    } else {\n        if (x > y){\n            temp = x;\n      \
    \      x = y;\n            y = temp;\n        }\n\n        return x * y;\n   \
    \ }\n}\n", "\tif((x === 0) || (y === 0)){\n\t\treturn -1;\n\t}\n\twhile(x <= y){\n\
    \t\tvar temp = (x+y)/2;\n\t\tif(x % 2 === 0 && y % 2 === 0){\n\t\t\treturn temp;\n\
    \t\t}\n\t\telse if(x % 2 === 0){\n\t\t\tx = temp;\n\t\t}\n\t\telse{\n\t\t\ty =\
    \ temp;\n\t\t}\n\t}\n\treturn -1;\n}\n\n", "\tconst x_is_bigger = ((x > y) ? true\
    \ : false);\n\treturn (((x_is_bigger ? x : y) * 2) >> ((x_is_bigger ? 0 : 1) <<\
    \ 2)); // a bitwise operation will return the biggest even number\n}\n\n", "\t\
    if(x < y){\n\t\tif(x == 0)\n\t\t\treturn y;\n\t\telse if(y % x == 0)\n\t\t\treturn\
    \ x;\n\t\telse{\n\t\t\treturn choose_num(x / 2, y);\n\t\t}\n\t} else {\n\t\tif(y\
    \ == 0)\n\t\t\treturn x;\n\t\telse if(x % y == 0)\n\t\t\treturn y;\n\t\telse{\n\
    \t\t\treturn choose_num(x, y / 2);\n\t\t}\n\t}\n}", "    if (x > y)\n        return\
    \ -1;\n\n    if (x <= 0)\n        return 0;\n\n    if (y <= 0)\n        return\
    \ 0;\n\n    var x_even = (x % 2 == 0); // whether x is even or not\n    var y_even\
    \ = (y % 2 == 0); // whether y is even or not\n\n    if (x_even == y_even)\n \
    \       return -1; // there is no even number in the range\n\n    if (x_even)\n\
    \        return x + 1; // the even number is the largest even integer number \n\
    \                     // in the range [x, y]\n\n    else\n        return y; //\
    \ the even number is the largest even integer number \n                   // in\
    \ the range [x, y]\n}\n</cell>\n<cell>", "\tlet n = x;\n\twhile ( n <= y ){\n\t\
    \tn = n+2;\n\t}\n\treturn n;\n}\n\n", "    \n    if(x > y) \n        { \n    \
    \        var temp = x; \n            x = y; \n            y = temp; \n       \
    \ }\n\n    return Math.max(x,y) + Math.min(x,y) //the + turns the numbers into\
    \ strings\n}\n", "    var min;\n    if(x > y){\n        var temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    if(x > 0){\n        min = x;\n    }else{\n\
    \        min = y - 1;\n    }\n    var max = x;\n    var mid = (min + max) >> 1;\n\
    \    while(min < max){\n        mid = (min + max) >> 1;\n        if(mid % 2 ==\
    \ 0){\n            max = mid + 1;\n        }else{\n            min = mid - 1;\n\
    \        }\n    }\n    return min;\n}\n", "  if(x>=y){\n    return -1;\n  }\n\
    \  if(y%2==1){\n    return choose_num(y, x-1);\n  }\n  var temp=y;\n  while(temp%2==0){\n\
    \    temp-=1;\n  }\n  return choose_num(temp, x);\n}\n", "\tvar max_num = Number.MIN_VALUE;\n\
    \tvar max_num_index = 0;\n\t\n\tfor(var i = x; i <= y; i++){\n\t\tif(max_num <\
    \ i){\n\t\t\tmax_num = i;\n\t\t\tmax_num_index = i;\n\t\t}\n\t}\n\t\n\treturn\
    \ max_num_index;\n}\n\t", "  if (x > y){\n    x = y;\n    y = x;\n  }\n  for (var\
    \ i = y; i >= 0; i--){\n    for (var j = i; j >= 0; j--){\n      if (i + j ==\
    \ x || i + j == y){\n        var x = i + j;\n        var y = i + j;\n        break;\n\
    \      }\n    }\n  }\n  return y;\n}", "    var max_num;\n    var i = 1;\n   \
    \ for(; i < x; ++i){\n        if(i % 2 === 0){\n            if(max_num === undefined\
    \ || max_num < x){\n                max_num = x;\n            }\n        }\n \
    \       else{\n            if(max_num === undefined || max_num > x){\n       \
    \         max_num = x;\n            }\n        }\n    }\n    for(; i < y; ++i){\n\
    \        if(i % 2 === 0){\n            if(max_num === undefined || max_num < y){\n\
    \                max_num = y;\n            }\n        }\n        else{\n     \
    \       if(max_num === undefined || max_num > y){\n                max_num = y;\n\
    \            }\n        }\n    }\n    return max_num;\n}\n", "    if (x < y &&\
    \ x % 2 != 0) return x;\n    if (y < x && y % 2 != 0) return y;\n    if (x > y\
    \ && x % 2 == 0 && y % 2 == 0) return x;\n    if (y > x && x % 2 == 1 && y % 2\
    \ == 1) return y;\n    return -1;\n}\n</code>\nAnd that's it! \nNow let's see\
    \ what our functions do:\n<code>", "\tif (x >= y || x > 100000 || y > 100000){\n\
    \t\treturn -1;\n\t}\n\tif (x === y) {\n\t\treturn x;\n\t}\n\tif((x % 2) === 0\
    \ && (y % 2) === 0){\n\t\tvar temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tx =\
    \ Number(x);\n\ty = Number(y);\n\tvar a = 1;\n\tvar b = 1;\n\tvar c = x;\n\tvar\
    \ d = y;\n\twhile (true) {\n\t\tc = (a*b) % d;\n\t\td = (a*b) - c;\n\t\tif (Math.abs(d)\
    \ <= 1){\n\t\t\treturn d;\n\t\t}\n\t\tif (a === c) {\n\t\t\tbreak;\n\t\t}\n\t\t\
    a = c;\n\t\tb = d;\n\t}\n\treturn -1;\n}", "    let maxX = Math.floor(x / 2);\n\
    \    let maxY = Math.floor(y / 2);\n    let result = 0;\n    for (let x = maxX;\
    \ x <= maxY; x++){\n        if (x % 2 == 0) {\n            result = x;\n     \
    \   }\n    }\n    return result\n}\n", "\tfor(var i=1; i<=x+y; i++){\n\t\tif((x-i)%2\
    \ ==0 && y%2 ==0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}", "    if( x\
    \ > y ){\n        var temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  \n    var n = (Math.floor(x) + Math.floor(y)) * Math.pow(10, Math.ceil(Math.log(x)\
    \ / Math.LN10));\n    var even = 0;\n    var odd = 0;\n    \n    for(var i = Math.ceil(Math.log(x)\
    \ / Math.LN10); i >= 0; i--){\n        if( n % Math.pow(10, i) === 0 ){\n    \
    \        even++;\n        } else {\n            odd++;\n        }\n    }\n   \
    \ \n    if( even > odd ){\n        return n;\n    }\n    \n    return -1;\n}\n",
  "\tx = Math.round(x);\n    y = Math.round(y);\n\t\n\tvar xdiff = x - y;\n\t\n\t\
    if(xdiff == 0){\n\t\treturn x;\n\t}\n\telse if(xdiff > 0){\n\t\treturn y;\n\t\
    }\n\telse{\n\t\treturn x;\n\t}\n}\n", "\tvar biggest = x;\n\tvar diff = y-x;\n\
    \n\tif(diff < 0){\n\t\tbiggest = y;\n\t\tdiff = x + y-x;\n\t}\n\t\n\twhile(diff\
    \ > 0){\n\t\tif(biggest%2 == 0){\n\t\t\tbiggest = biggest/2;\n\t\t}else{\n\t\t\
    \tbiggest = biggest*3 + 1;\n\t\t}\n\t\tdiff--;\n\t}\n\treturn biggest;\n}\n",
  "  var evens = false;\n  var found = 0;\n  for(var i = x; i >= y; i--){\n    if\
    \ (evens)\n      if (i % 2 === 0){\n        found++;\n        evens = false;\n\
    \      }\n    else\n      evens = true;\n  }\n  return found;\n}\n", "    if(x\
    \ > y) \n        return -1;\n    \n    var max_so_far = x;\n    for(var i = y;\
    \ i; i--){\n        var num = Math.floor(max_so_far/i);\n        if(num % 2 ==\
    \ 0)\n            return num;\n        max_so_far -= num;\n    }\n    return -1;\n\
    }\n", "    var max_num;\n    if(x > y){\n        if(x % 2 === 0 && y % 2 === 0){\n\
    \            max_num = x;\n        }\n        else if(x % 2 === 0 && y % 2 !==\
    \ 0){\n            max_num = x;\n        }\n        else{\n            max_num\
    \ = y;\n        }\n    }\n    else{\n        if(x % 2 !== 0 && y % 2 === 0){\n\
    \            max_num = y;\n        }\n        else if(x % 2 !== 0 && y % 2 !==\
    \ 0){\n            max_num = x;\n        }\n        else{\n            max_num\
    \ = y;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y){\n      \
    \  var temp = x;\n        x = y;\n        y = temp;\n    }\n    var low = x;\n\
    \    var high = y;\n    while (low < high) {\n        var mid = Math.floor((low+high)/2);\n\
    \        if (even_nums[mid] > 0 && even_nums[mid+1] > 0 && even_nums[mid-1] >\
    \ 0){\n            high = mid;\n        } else {\n            low = mid+1;\n \
    \       }\n    }\n    if (high == low){\n        return -1;\n    }\n    return\
    \ low;\n}\n", "\tif (x < y && x > 0){\n\t\tif (y > x && y <= Math.pow(2, 32))\n\
    \t\t\treturn Math.pow(2, 32) - y;\n\t\telse\n\t\t\treturn Math.pow(2, x) - y;\n\
    \t} else if (x > y){\n\t\treturn -1;\n\t} else {\n\t\treturn x;\n\t}\n}\n\n",
  "    if(x <= y)\n    {\n        return x;\n    }\n    else if(x >= y)\n    {\n \
    \       return -1;\n    }\n    else\n    {\n        for(var i = x; i <= y; i++)\n\
    \        {\n            if(x % 2 == 0 && y % 2 == 0)\n            {\n        \
    \        return i;\n            }\n            else if(x % 2 == 0 && y % 2 !=\
    \ 0)\n            {\n                return -1;\n            }\n            else\
    \ if(x % 2 != 0 && y % 2 == 0)\n            {\n                return -1;\n  \
    \          }\n        }\n    }\n}\n", "    if (x <= y) {\n        return -1\n\
    \    }\n    while (y > 0 && x <= y){\n        var t = y;\n        y = x;\n   \
    \     x = t;\n    }\n    return y;\n}", "  if (x > y){\n    return -1;\n  }\n\
    \  let even = 1;\n  while (even < x || even < y) {\n    if (even % 2 != 0) {\n\
    \      even += 2;\n    } else {\n      even += 1;\n    }\n  }\n  return even;\n\
    }\n", "\tif (x >= y){\n\t\tvar temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tfor\
    \ (var i = x; i <= y; i++){\n\t\tif (i % 2 == 0){\n\t\t\treturn i;\n\t\t}\n\t\
    }\n\treturn -1;\n}\n", "    var biggest = x;\n    var diff = y - biggest;\n  \
    \  \n    // While loop to determine which number should be returned\n    while(true){\n\
    \        if(diff % 2 == 0){\n            biggest = biggest + 1;\n            diff\
    \ = diff / 2;\n        }\n        else{\n            biggest = biggest - 1;\n\
    \            diff = diff / 2;\n        }\n        \n        // If there's no such\
    \ number in the range, return -1\n        if(biggest >= y){\n            return\
    \ -1;\n        }\n        \n        // Else the biggest number is in the range\
    \ [x, y]\n    }\n}\n", "    if (x >= y){\n        x = x;\n        y = y;\n   \
    \ }\n    var even = x*x + y*y;\n    \n    return ((even % 2) == 1) ? x : -1;\n\
    }\n", "\tfor(let z = x; z<y; z++){\n\t\tfor(let i=0; i<=9; i++){\n\t\t\tlet a\
    \ = x + 10*i + Math.floor((Math.random()*10)%10);\n\t\t\tif (a===z) return z;\n\
    \t\t}\n\t}\n\treturn -1;\n}\n", "\tlet xMin = Math.min(x, y);\n\tlet xMax = Math.max(x,\
    \ y);\n\tif(xMin > xMax){\n\t\treturn -1;\n\t}\n\tlet result = 0;\n\twhile(xMin\
    \ <= xMax){\n\t\tresult += xMin;\n\t\txMin++;\n\t}\n\twhile(xMax >= xMin){\n\t\
    \tresult += xMax;\n\t\txMax--;\n\t}\n\treturn result;\n}\n", "  if (x >= y){\n\
    \    return -1\n  }\n  if (x <= 0){\n    return -1\n  }\n  if (y >= x){\n    return\
    \ -1\n  }\n  if (x <= y){\n    return Math.max(x, y)\n  }\n  if (y <= x){\n  \
    \  return Math.min(x, y)\n  }\n  //The next step is to compute all the even numbers\
    \ smaller than x.\n  var evens = []\n  for (var i = x; i < y; i++){\n    if (i\
    \ % 2 === 0){\n      evens.push(i)\n    }\n  }\n  //Now we know all the even numbers\
    \ smaller than x. We can choose the\n  //biggest even number that is in the range\
    \ [x, y]. If there's no such\n  //number, then the function should return -1.\n\
    \  //\n  //For example:\n  // >>> choose_num(12, 15)\n  // 14\n  // >>> choose_num(13,\
    \ 12)\n  // -1\n  return evens[evens.length - 1]\n}", "\tvar result = -1;\n\t\n\
    \t//Find first even number not larger than x and smaller than y\n\tfor(var i =\
    \ x; i != y; i = i + 2){\n\t\t\n\t\t//If the number is even, return it\n\t\tif(i\
    \ % 2 == 0){\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n\
    }\n", "    if (x > y){\n        var temp1 = x;\n        var temp2 = y;\n     \
    \   x = temp2;\n        y = temp1;\n    }\n    while (x<y){\n        if (x%2 ==\
    \ 0){\n            x = x+y;\n            y = x-y;\n        }\n        else{\n\
    \            x = x-y;\n            y = x-y;\n        }\n    }\n    return x;\n\
    }\n", "    var num;\n    if (x >= y){\n        if (x % 2 == 0){\n            num\
    \ = x;\n        } else {\n            num = y - 1;\n        }\n    } else {\n\
    \        if (y % 2 == 0){\n            num = y - 1;\n        } else {\n      \
    \      num = x;\n        }\n    }\n    return num;\n}", "\tif((x === 0 || y ===\
    \ 0) || (x == 0 && y == 0))\n\t\treturn -1;\n\t\n\tvar biggest = x;\n\tvar smaller\
    \ = y;\n\twhile(smaller > 0){\n\t\tbiggest++;\n\t\tsmaller -= biggest;\n\t}\n\t\
    return biggest;\n}\n", "\tif(x===y){\n\t\treturn x;\n\t} else if(x>y){\n\t\tx=x;\n\
    \t\ty=y;\n\t}\n\treturn (y*Math.pow(2,x)) + (x*Math.pow(2,y-1))%Math.pow(2,y);\n\
    }", "  if(x <= 0 || y <= 0){\n    return -1;\n  }\n  var z = Math.floor(y/x);\n\
    \  return x > y ? z*x + (z*z*z-1)*Math.floor(x/z) : z;\n}\n", "\tlet min_number\
    \ = x;\n\tlet max_number = y;\n\tif (x < y) min_number = y;\n\tif (x > y) max_number\
    \ = x;\n\tlet counter = 0;\n\twhile(min_number <= max_number){\n\t\tcounter =\
    \ counter + 1;\n\t\tmin_number = (min_number * 2) / 2;\n\t\tif (min_number > max_number)\
    \ min_number = max_number;\n\t}\n\treturn counter;\n}\n", "  var mid = Math.floor((x\
    \ + y) / 2);\n  if (x == mid) return mid;\n  if (y == mid) return mid;\n  return\
    \ choose_num(mid, y);\n}\n", "    var mid = Math.floor((x+y)/2);\n    if(mid ==\
    \ 0){\n        mid = 1;\n    }\n    if(x > y){\n        var temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    if(y > mid){\n        choose_num(y,mid);\n\
    \    }\n    else{\n        choose_num(mid,y);\n    }\n    var counter = 0;\n \
    \   while(x <= y){\n        counter++;\n        if(x == y){\n            break;\n\
    \        }\n        x = x + y;\n        choose_num(mid,y);\n    }\n    return\
    \ counter;\n}\n", "    while(x <= y) {\n        if (x % 2 == 0) {\n          \
    \  x = x + 1;\n            return x;\n        } else if (x % 2 == 1) {\n     \
    \       x = x + 1;\n            return x;\n        } else {\n            x = x\
    \ + 1;\n            return x;\n        }\n    }\n    return -1;\n}\n", "    var\
    \ biggest_number = Math.max(x, y);\n    for(var number = x; number <= y; number++){\n\
    \        if(is_even(number)){\n            biggest_number = Math.max(biggest_number,\
    \ number);\n        }\n    }\n    return biggest_number;\n}\n", "\t//Initialize\
    \ min and max variables to -infinity. \n\tvar min = Number.NEGATIVE_INFINITY;\n\
    \tvar max = Number.POSITIVE_INFINITY;\n\t//If x < y then swap them\n\tif(x<y){\n\
    \t\tvar temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\t//Iterate through every number\
    \ in range [x, y] inclusive.\n\tfor(var i=x; i<=y; i++){\n\t\t//If this number\
    \ is an even number then set min to x and max to y\n\t\tif(i%2==0){\n\t\t\tmin\
    \ = i;\n\t\t\tmax = y;\n\t\t}\n\t\t//If this number is odd then set min to y and\
    \ max to x\n\t\telse{\n\t\t\tmin = y;\n\t\t\tmax = i;\n\t\t}\n\t\t//Return this\
    \ number\n\t\tif(i==min){\n\t\t\treturn i;\n\t\t}\n\t\tif(i==max){\n\t\t\treturn\
    \ i;\n\t\t}\n\t}\n\t//If min and max are equal and x is greater than y then return\
    \ -1\n\tif(min==max){\n\t\treturn -1\n\t}\n\t//If max is greater than x, then\
    \ return -1\n\tif(max>x){\n\t\treturn -1;\n\t}\n\t//If min is greater than y,\
    \ then return -1\n\tif(min>y){\n\t\treturn -1;\n\t}\n\t//If x and y are equal,\
    \ then return x\n\treturn x;\n}\n", "\tif((x % 2 == 0) && (y % 2 == 0)){\n\t\t\
    return -1\n\t}\n\tvar num1 = 0\n\tvar num2 = 1\n\twhile(true){\n\t\tnum3 = num1\
    \ * num2\n\t\tnum1 = num2\n\t\tnum2 = num3\n\t\tif(num2 >= x){\n\t\t\tbreak\n\t\
    \t}\n\t}\n\tnum3 = num1 * num2\n\tnum1 = num2\n\tnum2 = num3\n\tif(num2 < y){\n\
    \t\treturn -1\n\t}\n\treturn num2\n}\n", "\tvar bigger = (x > y) ? x : y;\n\t\
    var smaller = (x < y) ? x : y;\n\twhile(smaller > bigger){\n\t\tbigger = (smaller\
    \ > bigger) ? bigger : smaller;\n\t}\n\treturn bigger;\n}\n", "\tif(x>y){\n\t\t\
    const temp=x;\n\t\tx=y;\n\t\ty=temp;\n\t}\n\tfor(let i=x;i<=y;i++)\n\t\tif(i%2==0)\n\
    \t\t\treturn i;\n\treturn -1;\n}\n", "    var z = x * y; //This stores the product\
    \ of the two numbers.\n    if(z > 0){\n        return z; \n    }\n    else if(z\
    \ == 0){\n        return -1;\n    }\n    else if(z < 0){\n        return -choose_num(choose_num(z,\
    \ x), y); \n    }\n}\n", "    var even = biggest(x, y)\n    if (even >= 0) return\
    \ even\n    return -1\n}", "    var max_num = 0;\n    for(var i = x; i <= y; i++){\n\
    \        max_num = Math.max(max_num, i);\n    }\n    return max_num;\n}\n", "\t\n\
    \tvar max_num = Math.max(x,y)\n\tvar min_num = Math.min(x,y)\n\tvar result = 0;\n\
    \t\n\tfor(var i = min_num; i <= max_num; i++){\n\t\tif(i % 2 === 0){\n\t\t\tresult\
    \ = i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n", "\tif(x > y){\n\t\treturn choose_num(y,\
    \ x);\n\t}\n\telse if(y > x){\n\t\treturn choose_num(x, y);\n\t}\n\telse{\n\t\t\
    for(var i = x; i <= y; i++){\n\t\t\tif((x % 2) == (y % 2)){\n\t\t\t\treturn i;\n\
    \t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n}", "    if(x <= y){\n        return -1;\n\
    \    }\n    \n    var biggest = y;\n    \n    var dividend = x;\n    var divisor\
    \ = 2;\n    \n    while(divisor <= biggest){\n        if(dividend % divisor ===\
    \ 0){\n            dividend = dividend / divisor;\n            biggest = divisor;\n\
    \        }\n        \n        divisor++;\n    }\n    \n    return dividend;\n\
    }\n", "\tlet x_num = Math.floor(x / y);\n\tlet y_num = Math.floor(y / x);\n\t\
    let num;\n\n\tfor (num = 1; num < x_num * y_num; num++){\n\t\tif (x % num == 0\
    \ && y % num == 0){\n\t\t\treturn num;\n\t\t}\n\t}\n\treturn -1;\n}\n", "    if\
    \ (x > y) {\n        var temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    for (var i = 1; i <= y; i++) {\n        if ((i % 2 === 0) && (x % 2 === 0))\
    \ {\n            return i;\n        }\n    }\n    return -1;\n}\n", "    if(x\
    \ > y){\n        var temp = x;\n        x = y;\n        y = temp;\n    }\n\n \
    \   for(var i = 0; i <= y; i++){\n        if(x % i == 0){\n            x = x -\
    \ i;\n            return i;\n        }\n    }\n\n    return -1;\n}\n", "\twhile(y\
    \ >= x && y > 0){\n\t\tx = x + 1; \n\t\tif(x % 2 === 0){\n\t\t\treturn x; \n\t\
    \t}\n\t}\n\treturn -1; \n}\n", "\tlet max_num = Number(0);\n\tlet min_num = Number(0);\n\
    \twhile(min_num < x && max_num < y){\n\t\tif(max_num < x){\n\t\t\tmax_num = x;\n\
    \t\t}\n\t\tif(min_num > y){\n\t\t\tmin_num = y;\n\t\t}\n\t}\n\treturn max_num;\n\
    }\n", "\tif(x>y)\n\t\treturn -1;\n\telse if(x==y)\n\t\treturn x;\n\telse if(y>x)\n\
    \t\treturn -1;\n\telse{\n\t\twhile(true){\n\t\t\tconst a = x;\n\t\t\tx = y;\n\t\
    \t\ty = a;\n\t\t\tif(x>y)\n\t\t\t\tbreak;\n\t\t\telse if(x==y)\n\t\t\t\treturn\
    \ x;\n\t\t}\n\t\treturn -1; \n\t}\n}\n", "\tvar num;\n\tvar diff;\n\tif(x < y){\n\
    \t\tdiff = y - x;\n\t\tnum = (x + y) / 2;\n\t\twhile(num <= diff){\n\t\t\tif(isEven(num)\
    \ == true){\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tnum += x;\n\t\t\t}\n\t\t}\n\
    \t\treturn num;\n\t}else{\n\t\tdiff = x - y;\n\t\tnum = (y + x) / 2;\n\t\twhile(num\
    \ <= diff){\n\t\t\tif(isEven(num) == true){\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\
    \t\tnum += y;\n\t\t\t}\n\t\t}\n\t\treturn num;\n\t}\n}", "\tlet x_even = Math.floor(x/2);\n\
    \tlet y_even = Math.floor(y/2);\n\t\n\twhile (x_even >= y_even){\n\t\tlet temp_x\
    \ = x_even;\n\t\tlet temp_y = y_even;\n\t\tx_even = x_even-y_even;\n\t\ty_even\
    \ = y_even-temp_y;\n\t}\n\treturn x_even;\n}\n", "\tif (x > y){\n\t\tvar temp\
    \ = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tvar lower = x;\n\tvar higher = y;\n\t\
    while(lower < higher){\n\t\tvar mid = Math.floor((lower + higher) / 2);\n\t\t\
    if (mid * mid > x) lower = mid + 1;\n\t\telse higher = mid;\n\t}\n\treturn lower;\n\
    }", "\tif (x >= y){\n\t\treturn -1;\n\t}\n\tif (x == y){\n\t\treturn x;\n\t}\n\
    \tif (y % x == 0){\n\t\treturn x;\n\t}\n\treturn choose_num(x, y-1);\n}\n", " \
    \   if (x > y){\n        var temp = y;\n        y = x;\n        x = temp;\n  \
    \  }\n    if (x < 0 || y > x || y % 2 === 0 || x % 2 === 0){\n        return -1;\n\
    \    }\n    var result = 0;\n    while (x < y){\n        result = Math.floor(y/x)\
    \ * x;\n        if (result > y){\n            y = result;\n        }\n       \
    \ x++;\n    }\n    return result;\n}\n", "\tvar a = Math.max(x, y);\n\tvar b =\
    \ Math.min(x, y);\n\tvar c = Math.floor(a / 2);\n\tvar d = Math.floor(b / 2);\n\
    \tif (a >= b){\n\t\treturn a;\n\t}\n\tif (a < 0 && c >= 0){\n\t\tc = c;\n\t}\n\
    \tif (c < 0 && d >= 0){\n\t\td = d;\n\t}\n\treturn Math.max(d, c);\n}\n", "  \
    \  var m = Math.max(x,y)\n    m = Math.abs(m)\n    return m % 2 == 0 ? m : -1;\n\
    }\n", "\tfor (var i = x; i <= y; i++){\n\t\tif (isEven(i)){\n\t\t\treturn i;\n\
    \t\t}\n\t}\n\treturn -1;\n}\n", "    if(x<y) return -1;\n    if(x>y) return choose_num(y,\
    \ x);\n    for(var i=(x+y)/2; i>0; i--){\n        if(nums[i]===nums[i-1]) return\
    \ i;\n    }\n    return -1;\n}\n", "    for(var i = x; i <= y; i++){\n       \
    \ if((x & i) == (y & i)){\n            return i;\n        }\n    }\n    return\
    \ -1;\n}\n", "  if (x < y){\n    return -1;\n  }\n  if (x == y){\n    return x;\n\
    \  }\n\n  var max  = x >> 1;\n  var min = max << 1;\n\n  while (min < max){\n\
    \    var mid = min + max >> 1;\n    if (is_even(mid)){ \n      max = mid;\n  \
    \  }\n    else{\n      min = mid;\n    }\n  }\n  return min;\n}", "    for(var\
    \ i = 0; i < Math.floor(y/2); i++){\n        if(x % i == 0){\n            var\
    \ even = i + (x/i);\n            return even;\n        }\n    }\n    return -1;\n\
    }", "    if (x >= y || y <= 0){\n        return -1;\n    }\n    for (let i = x;\
    \ i < y; i++){\n        if (is_even(i)){\n            return i;\n        }\n \
    \   }\n    return -1;\n}\n", "\tfor (var i = 0; i < 4; i++){\n\t\tvar z = x +\
    \ i;\n\t\tif (z > y){\n\t\t\treturn -1;\n\t\t}\n\t\tif (z % 2 === 0){\n\t\t\t\
    return z;\n\t\t}\n\t}\n\treturn -1;\n}\n", "\tvar largest = x;\n\tvar smallest\
    \ = y;\n\tvar counter = 0;\n\tvar temp_var;\n\n\twhile(smallest < largest){\n\t\
    \ttemp_var = smallest + 1 / (largest - smallest + 1);\n\t\tif(smallest * temp_var\
    \ <= y){\n\t\t\tsmallest = temp_var;\n\t\t} else {\n\t\t\tlargest = temp_var;\n\
    \t\t}\n\t\tcounter++;\n\t}\n\tif(largest - smallest + 1 >= counter && largest\
    \ - smallest + 1 < x){\n\t\treturn largest;\n\t} else {\n\t\treturn -1;\n\t}\n\
    }\n", "\tlet z = x;\n\twhile(y > z){\n\t\ty = y - z;\n\t\tz = z + z;\n\t}\n\t\
    if(z > y){\n\t\tz = z - z;\n\t\treturn z;\n\t}\n\treturn -1;\n}\n\n", "    var\
    \ x_min = Math.ceil(x);\n    var x_max = Math.floor(x);\n    var y_min = Math.ceil(y);\n\
    \    var y_max = Math.floor(y);\n    \n    for(var i = x_min; i <= x_max; i++){\n\
    \        for(var j = y_min; j <= y_max; j++){\n            if(i*i + j*j == x*y)\n\
    \                return i * j;\n        }\n    }\n    return -1;\n}\n", "    for(var\
    \ i = 0; i <= (y*y - x + x + 1); i++)\n        if((x + i) % 2 == 0 && \n     \
    \      (y + i) % 2 == 0 && \n           ((x * y) % i) == 0 && ((i * i) - x) %\
    \ y == 0)\n            return i;\n    return -1;\n}\n</code>\nThe recursive function\
    \ takes the number of rows x and the number of columns y. \nTo find the value\
    \ of z (the value the function should return) we solve the problem for z and we\
    \ get the result for x. We need to find a value for y such that z is also valid\
    \ (which happens when the result is negative which means we got out of the recursion\
    \ tree somewhere). \nOnce we get x, we have two cases: either the number is even\
    \ (so we go on to the next iteration with x) and the number is odd (we return\
    \ x - 1). \nIn the other case, we have x (which is even) and y (which is odd),\
    \ so we solve the problem for x and y (x and y are x and y of the biggest even\
    \ integer numbers in the range [x, y] inclusive) and then we add the result for\
    \ x and y together (the result of the previous iteration of x and y, since we've\
    \ already returned from them) to get the new value for z.\nIf we got out of the\
    \ recursion tree (which means we got out of the problem for z or we didn't find\
    \ any solution since we got out of the recursion tree because we got out of the\
    \ problem for y)\nthen we return -1 as the value for z.\nIn order to avoid returning\
    \ -1 as a value for z, we check if the result of z is negative (because that means\
    \ we got out of the recursion tree somewhere). If we get to the point where z\
    \ is negative (i.e. we didn't get out of the recursion tree for some reason and\
    \ we get out of the problem for z), then we return -1 to indicate that we didn't\
    \ find any solution.\nIf all went as planned, then we return the final result\
    \ which is the value of z (which we got by solving one problem for z and one problem\
    \ for x and y, and then adding them).\n<|/ a dscore=4 |>\n<| c |>\nThis code is\
    \ awesome but I am not sure if I can make it work for large values of x and y\
    \ i.e. for large values greater than 10000.\n<|/ c |>\n<| c |>\nThis is by far\
    \ the best answer I have read on SO for the question \"What is this number\" It\
    \ really solves the problem very well.\n<|/ c |>\n<| a |>\nHere's a simple recursive\
    \ version for N = 5\n<code>", "\tvar biggest = -1;\n\tvar evensOfFirstHalf = 0;\n\
    \tvar evensOfSecondHalf = 0;\n\t\n\tfor(var i = x; i <= y; i++){\n\t\tevensOfFirstHalf\
    \ += parseInt(i.toString().length / 2);\n\t\tevensOfSecondHalf += parseInt(i.toString().length\
    \ % 2);\n\t}\n\t\n\tif((evensOfFirstHalf - evensOfSecondHalf) % 2 != 0){\n\t\t\
    biggest = Math.max(biggest, evensOfFirstHalf - evensOfSecondHalf + 1);\n\t}\n\t\
    \n\treturn biggest;\n}\n", "    let min = Math.min(x, y)\n    let max = Math.max(x,\
    \ y)\n    let mid = Math.floor(min/2)\n    \n    let counter = min + 1\n    while\
    \ (counter < max){\n        if (checkMult(mid, counter)){\n            return\
    \ mid\n        }\n        counter ++\n    }\n    return -1\n}\n", "    let x =\
    \ Number(x);\n    let y = Number(y);\n    let low = x;\n    let high = y;\n  \
    \  let guess = 1;\n\n    while(true){\n        guess = (guess * guess + low) %\
    \ high;\n\n        if (guess > high) {\n            high = guess;\n        }\n\
    \        else{\n            low = guess;\n        }\n\n        if(low == high){\n\
    \            return guess;\n        }\n    }\n}\n", "    if (x > y){\n       \
    \ var temp = x;\n        x = y;\n        y = temp;\n    }\n    \n    if (x ===\
    \ y){\n        return -1;\n    }\n    \n    var xEven = x % 2 === 0;\n    var\
    \ yEven = y % 2 === 0;\n    \n    if (xEven === yEven){\n        console.log(\"\
    The given numbers are not even.\");\n        return -1;\n    }\n    \n    return\
    \ x + y + (x-y) * 2;\n}\n", "    return x % 2 ? x : x + y;\n}\n", "    var x_even,\
    \ x_odd;\n\n    if ( x > y ){\n        return choose_num(y, x);\n    }\n\n   \
    \ x_even = x % 2;\n    x_odd = x % 2 - 1;\n\n    for(var i = y; i > 0; i--){\n\
    \        if( x_odd % 2 === 1 && x_even % 2 === 0 ){\n            return i;\n \
    \       }\n        x_even += 1;\n        x_odd -= 1;\n    }\n    return -1;\n\
    }\n", "\twhile (x < y){\n\t\tx = (x + y)/2;\n\t\tif (x > y){\n\t\t\tx = x;\n\t\
    \t}\n\t}\n\treturn x;\n}\n", "\tif(x%2==0 && y%2==0){\n\t\tvar biggest = Math.max(x,y);\n\
    \t\tif(x == biggest){\n\t\t\treturn y;\n\t\t}\n\t\telse if(y == biggest){\n\t\t\
    \treturn x;\n\t\t}\n\t\telse{\n\t\t\treturn biggest;\n\t\t}\n\t}\n\telse{\n\t\t\
    return -1;\n\t}\n}\n", "    // return x if x > y; otherwise return y\n    return\
    \ ((x > y)? x : y);\n}\n", "    var even = false;\n    for(var i = 1; i < y; i++){\n\
    \        if(i % 2 === 0){\n            if(i === x || i === y){\n             \
    \   even = true;\n            }else{\n                return i;\n            }\n\
    \        }\n    }\n    if(!even){\n        return -1;\n    }\n}\n", "    var m\
    \ = (x + y)/2;\n    while(m >= 0 && m < x){\n        x -= m*m;\n        m /= 2;\n\
    \    }\n    if(x > y){\n        return -1;\n    }\n    return m;\n}\n", "  if\
    \ (x > y) {\n    let temp = x;\n    x = y;\n    y = temp;\n  }\n  while (x >=\
    \ y) {\n    if (x % 2 === 0) {\n      x = x - 2;\n    }\n    else {\n      x =\
    \ x - 1;\n    }\n  }\n  return x;\n}\n", "\tlet num1 = Math.max(x, y);\n\tlet\
    \ num2 = Math.min(x, y);\n\tlet even = num2 % 2 != 0;\n\tlet even2 = num1 % 2\
    \ != 0;\n\tif (even && !even2){\n\t\treturn num1;\n\t} else if (even2 && even){\n\
    \t\treturn num2;\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "\tif(x < y){\n\t\treturn\
    \ choose_num(y, x)\n\t}\n\telse if(x % 2 === 0){\n\t\treturn x\n\t}\n\telse if(y\
    \ % 2 === 0){\n\t\treturn y\n\t}\n\telse{\n\t\tvar biggest_number\n\t\tfor(var\
    \ i = x; i <= y; i++){\n\t\t\tif(i % 2 === 0){\n\t\t\t\tbiggest_number = i\n\t\
    \t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn biggest_number\n\t}\n}\n", "\tvar max;\n\
    \tif(x>y){\n\t\tmax=x;\n\t}else{\n\t\tmax=y;\n\t}\n\twhile(max>0){\n\t\tvar num=max%2;\n\
    \t\tif(num<0){\n\t\t\tnum=Math.pow(2,-num);\n\t\t}\n\t\tmax=Math.floor(max/2);\n\
    \t\tif(max==x){\n\t\t\treturn num;\n\t\t}\n\t}\n\treturn -1;\n}\n\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

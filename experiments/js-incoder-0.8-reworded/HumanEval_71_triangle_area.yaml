name: HumanEval_71_triangle_area
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// >>> triangle_area(3,\
  \ 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction triangle_area(a,\
  \ b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
  \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
completions: ["  var s = 0;\n  if((a + b > c) || (a < b + c) || (c < a + b)){\n  \
    \  return -1;\n  }\n  s = (b - a) * (c - b);\n  return Math.sqrt(s);\n}\n</code>\n\
    <|/ a |>\n<| a tags=geometry,javascript dscore=0 |>\n<code>", "    if((a===0 &&\
    \ b===0 && c===0) || (a===0 && b===0 && c===1 || a===0 && c===1 && a===1)){\n\
    \        return 0;\n    }\n    if(a===0 || b===0 || c===0){\n        return -1;\n\
    \    }\n    if((a===a && b===b && c===c) || (a===a && b===b && c===c && a===1)){\n\
    \        return 0;\n    }\n    if(a===a && b===b){\n        return c;\n    }\n\
    \    if(a===b && b===c){\n        return a;\n    }\n    return -1;\n}\n", "  \
    \  if(b === 0){\n        return 0;\n    }\n    if(b === c){\n        return (a\
    \ * (b - a))/2;\n    }\n    var area = 0;\n    var sqrt_a = Math.sqrt(a);\n  \
    \  var sqrt_b = Math.sqrt(b);\n    var sqrt_c = Math.sqrt(c);\n    if(sqrt_a >\
    \ sqrt_b){\n        if(sqrt_a > sqrt_c){\n            area = Math.sqrt((sqrt_a\
    \ * sqrt_a) - (sqrt_b * sqrt_c));\n        }\n        else{\n            area\
    \ = -Math.sqrt((sqrt_a * sqrt_a) - (sqrt_c * sqrt_b));\n        }\n    }\n   \
    \ else{\n        if(sqrt_b > sqrt_c){\n            area = -Math.sqrt((sqrt_b *\
    \ sqrt_b) - (sqrt_c * sqrt_a));\n        }\n        else{\n            area =\
    \ Math.sqrt((sqrt_c * sqrt_c) - (sqrt_a * sqrt_a));\n        }\n    }\n    return\
    \ area;\n}\n", "  if((a + b + c) < 0){\n    return -1;\n  }\n  var x = 0;\n  var\
    \ y = 0;\n  var s = a + b + c;\n  var t = Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n  var u = (a + b + c) / 2;\n  while(u){\n    var v = ((a + b) / 2 +\
    \ c) / 2;\n    var uc = v - u;\n    if(uc >= a && uc <= b){\n      x += uc;\n\
    \    }else{\n      if(uc >= c && uc <= a){\n        y += uc;\n      }else{\n \
    \       if(uc >= b && uc <= c){\n          x -= uc;\n        }\n      }\n    }\n\
    \    u -= 1;\n  }\n  return Math.round(x * 100) / 100 + Math.round(y * 100) /\
    \ 100;\n}\n", "  let triangle_perimeter = a + b + c;\n  if((b + c) < a || (b +\
    \ c) < b){\n    return -1\n  }\n  if((a + c) < b || (a + c) < c){\n    return\
    \ -1\n  }\n  if(b > c){\n    return -1\n  }\n  if(((b + c) < a) || ((b + c) <\
    \ b) || ((a + c) < b) || ((a + c) < c)){\n    return -1\n  }\n  if(triangle_perimeter\
    \ === 0){\n    return -1\n  }\n  return Math.round(triangle_perimeter*0.57/Math.sqrt(3))\
    \ \n}\n</code>\n<|/ a |>\n<| c |>\nI don't understand, why do I need to check\
    \ the other sides? You have to return the area of a triangle if all three are\
    \ greater than the other two. Is that not true for all triangles regardless of\
    \ order?\n<|/ c |>\n<| c |>\nI got it. Thanks! The explanation was very helpful.\n\
    <|/ c |>\n<| c |>\nNo problem! If the answer helped, could you please mark it\
    \ as accepted? Thanks!\n<|/ c |>\n<| c |>\nThe function returns the area of the\
    \ triangle if all three sides are greater than the other two. If one side is greater\
    \ than the others, it returns -1. Do you see how the function returns -1 if the\
    \ sum of the other two sides is less than the sum of all three sides?\n<|/ c |>\n\
    <| c |>\nNope. You need to check the other two sides, because the sides can not\
    \ be greater than the third side. Take a look at this example: if the other sides\
    \ are 6, 3, and 8, then the third side must be 8 as well.\n<|/ c |>\n<| a tags=area,algorithm,geometry\
    \ |>\n<code>\npublic static void main(String[] args) {\n    double a, b, c;\n\
    \    a = Double.parseDouble(args[0]);\n    b = Double.parseDouble(args[1]);\n\
    \    c = Double.parseDouble(args[2]);\n    double area = getTriangleArea(a, b,\
    \ c);\n    System.out.println(area);\n}\npublic static double getTriangleArea(double\
    \ a, double b, double c) {\n    if (Math.abs(a * b * c - a * b - a * c) < 0.0001)\
    \ {\n        return Math.abs(Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2)));\n  \
    \  }\n    if (Math.abs(a * b * c - a * b - c * c) < 0.0001) {\n        return\
    \ Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)));\n    }\n    if (Math.abs(a\
    \ * b * c - a * c - b * c) < 0.0001) {", "    var s = a+b+c\n    if( s > ( 2*b\
    \ ) ){\n        return -1\n    }\n    else if( s < b || s < c ){\n        return\
    \ -1\n    }\n    else{\n        var area = Math.sqrt( s * ( s-a ) * ( s-b ) *\
    \ ( s-c ) )\n        return Math.round( area *100) / 100\n    }\n}\n", "  if(a+b\
    \ > c || a+c > b || b+c > a){\n    return -1;\n  }\n  return Math.abs((a+b+c)/2);\n\
    }\n", "  \n  if((a + b > c) && (a + c > b) && (b + c > a)){\n    \n    var area\
    \ = a + b + c;\n    \n    if(area % 2 == 0){\n      \n      return Math.sqrt(area\
    \ / 2)\n    }else{\n      return -1\n    }\n  }\n  return -1\n}\n", "  var sSum\
    \ = a+b+c\n  var length = Math.sqrt(sSum*(sSum-(a+b+c)))\n  var area = length*length*length\n\
    \  return area\n}\n", "  if((a + b !== c) && (b + c !== a) && (a + c !== b)){\n\
    \    return -1;\n  }\n  var s = (a+b+c)/2;\n  return (s >= (a + b + c))? s : -1;\n\
    }\nmodule.exports = triangle_area;\n\n},{}],111:[function(require,module,exports){",
  "    var s = (a + b + c) / 2;\n    if (s > 0){\n        return Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    } else {\n        return -1;\n    }\n}\n", " \
    \ let valid_length = (a + b > c) || (b + c > a) || (a + c > b);\n  let area_rounded;\n\
    \  \n  if(valid_length){\n    area_rounded = ((a / 2) + (b / 2) + (c / 2)) * 0.5;\n\
    \  }\n  \n  return valid_length ? area_rounded : -1;\n}\n", "  let sidesArea =\
    \ Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2)\n  let numSides = Math.sqrt(sidesArea)\n\
    \  return Math.round(numSides * 100) / 100\n}\n", "\tvar area = 0;\n\tif((a +\
    \ b > c) && (a + c > b) && (b + c > a)){\n\t\tarea = (a+b+c)/2;\n\t}\n\telse if((a\
    \ + c > b) && (b + c > a)){\n\t\tarea = (a+b+c)/2;\n\t}\n\telse if((b + c > a)){\n\
    \t\tarea = (a+b+c)/2;\n\t}\n\telse{\n\t\tarea = -1;\n\t}\n\treturn area;\n}\n",
  "  return Math.abs((a+b+c) - (a+b+c+b+c+a))\n}\n", "\treturn (a+b+c) / 2.0;\n}\n",
  "\tif(a>b + c) return -1;\n\telse if(a+b>c) return -1;\n\telse if(a+c>b) return\
    \ -1;\n\telse if(b+c>a) return -1;\n\telse if(a+b+c>1) return -1;\n\telse return\
    \ a * b * c / 2;\n}\n\t", "\tvar sum = a+b+c; // sum of all sides\n\tvar s = (a\
    \ + b > c) ? a : b; // first side\n\tvar t = (b > c) ? b : c; // second side\n\
    \tvar u = (a + c > b) ? a : c; // third side\n\tvar area = (s*(s-t)*(s-u)) / ((s-t)*(b-t));\
    \ //area of the triangle\n\treturn Math.round(area*100)/100; // round to 2 decimal\
    \ places if possible\n}\n\t", "  // Validate that all arguments are numbers\n\
    \  if(!type.isNumber(a) || !type.isNumber(b) || !type.isNumber(c)){\n    return\
    \ -1;\n  }\n  \n  // Validate that all arguments are positive\n  if(a <= 0 ||\
    \ b <= 0 || c <= 0){\n    return -1;\n  }\n  \n  // Calculate area\n  return Math.sqrt(\
    \ ((a + b + c) / 2) / Math.sqrt( Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2) ) );\n}\n", "    return (a+b+c) > Math.sqrt(a*a + b*b + c*c);\n}\n", "\t\
    if(a+b>c){\n\t\tif(a+c>b){\n\t\t\treturn a*b*c/2\n\t\t}else{\n\t\t\treturn -1\n\
    \t\t}\n\t}else if(a+b==c){\n\t\treturn a * b/2\n\t}else if(b+c>a){\n\t\treturn\
    \ -1\n\t}else{\n\t\treturn -1\n\t}\n}\n", "  if(Math.pow(a, 2) + Math.pow(b, 2)\
    \ + Math.pow(c, 2) >= Math.pow(a+b+c, 2)){\n    return Math.sqrt(Math.pow(a, 2)\
    \ * Math.pow(b,2) * Math.pow(c, 2) - Math.pow(a, 2)*Math.pow(b, 2)+Math.pow(a,\
    \ 2)*Math.pow(c, 2))\n  }else{\n    return -1\n  }\n}", "  if(a < b + c){\n  \
    \  if(a > b + c){\n      return -1\n    }\n    return (b + c) / 2\n  }\n  else{\n\
    \    if(a > b){\n      return -1\n    }\n    return (b + c) / 2\n  }\n}", "  if((b\
    \ - a)*(c - b) < 0){\n    return -1\n  }\n  if(Math.pow(b,2) + Math.pow(c,2) >=\
    \ Math.pow(a, 2)){\n    return ((b*c) - (b*a) + Math.pow(a, 2))/Math.pow(b, 2)\n\
    \  }\n  return -1\n}\n", "  if(a+b>c)return triangle_area(a,b,c);\n  if(b+c>a)return\
    \ triangle_area(a,b,c);\n  return a*b*c/2;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n#include<iostream>\nusing namespace std;\nint main()\n\
    {\n    int a=1, b=2, c=3;\n    int x,y,z;\n    x=a*b*c;\n    y=(a+b)*c;\n    z=(a*b+c*b);\n\
    \    if(z==x-y)\n    {\n        cout<<\"Triangle is equilateral\"<<endl;\n   \
    \ }\n    else if(x==y-z)\n    {\n        cout<<\"Triangle is isosceles\"<<endl;\n\
    \    }\n    else if(x==y-x)\n    {\n        cout<<\"Triangle is scalene\"<<endl;\n\
    \    }\n    else\n    {\n        cout<<\"Triangle is not triangle\"<<endl;\n \
    \   }\n    return 0;\n}\n</code>\n<|/ a tags=c++ |>\n<| c |>\nWhile this code\
    \ may answer the question, providing additional context regarding how and/or why\
    \ it solves the problem would improve the answer's long-term value.\n<|/ c |>\n\
    <| c |>\nIt would also help if you explained how the code works to solve the problem.\n\
    <|/ c |>\n<| a tags=c++ dscore=0 |>\n<code>\n#include<iostream>\nusing namespace\
    \ std;\nint main()\n{\n    int side1 = 0, side2 = 0, side3 = 0;\n\n    cout <<\
    \ \"Enter side 1 \\n\";\n    cin >> side1;\n\n    cout << \"Enter side 2 \\n\"\
    ;\n    cin >> side2;\n\n    cout << \"Enter side 3 \\n\";\n    cin >> side3;\n\
    \n    if (side1 + side2 > side3)\n    {\n        cout << \"Triangle is equilateral\"\
    \ << endl;\n    }\n    else if ((side1 + side2) >= side3)\n    {\n        cout\
    \ << \"Triangle is isosceles\" << endl;\n    }\n    else if ((side1 + side2) <=\
    \ side3)\n    {\n        cout << \"Triangle is scalene\" << endl;\n    }\n   \
    \ else\n    {\n        cout << \"Triangle is not triangle\" << endl;\n    }\n\
    \    return 0;\n}\n</code>\n<|/ a |>\n<| c |>\nWhile this code may answer the\
    \ question, providing additional context regarding how and/or why it solves the\
    \ problem would improve the answer's long-term value.\n<|/ c |>\n<| c |>\nThis\
    \ code works fine", "    if (a>b+c){\n        return -1;\n    }\n    if (b>a+c){\n\
    \        return -1;\n    }\n    if (c>a+b){\n        return -1;\n    }\n    var\
    \ area_of_triangle = ((b*b) + 4*a*c);\n    return Math.round(area_of_triangle*100)/100;\n\
    }\n", "\t\n\tvar area = 0;\n\t\n\tif(a+b >= c){\n\t\tarea = (a+b) * (c-b)/2;\n\
    \t}\n\t\n\treturn area;\n}\n", "    var s = (a+b+c)/2;\n    if(a > b){\n     \
    \   if(a > c){\n            return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }else{\n            return -1;\n        }\n    }\n    if(a > c){\n  \
    \      if(b > c){\n            return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }else{\n            return -1;\n        }\n    }\n    if(b > c){\n  \
    \      return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }else{\n      \
    \  return -1;\n    }\n}\n", "  var s = (a + b + c)/2;\n  var area = Math.abs(Math.sqrt(Math.pow(s-(a+b),\
    \ 2) + Math.pow(s-(a+c), 2) +  Math.pow(s-(b+c), 2)))\n  return area;\n}\n</code>\n\
    <|/ a |>\n<| a |>\nHere is another solution. \n<code>", "    let sum;\n    if(a>b&&b>c&&c>a){\n\
    \        sum = a+b+c;\n        sum = sum/2;\n        if(sum<(a+b+c)){\n      \
    \      return sum;\n        }else{\n            return -1;\n        }\n    }else\
    \ if(a>b&&b>c||a>c&&c>b){\n        sum = a+b+c;\n        sum = sum/2;\n      \
    \  if(sum<(a+b+c)){\n            return sum;\n        }else{\n            return\
    \ -1;\n        }\n    }else if(a>b&&b<a||a>c&&c<a){\n        sum = a+b+c;\n  \
    \      sum = sum/2;\n        if(sum<(a+b+c)){\n            return sum;\n     \
    \   }else{\n            return -1;\n        }\n    }else if(a<b&&b>c||a<c&&c>b){\n\
    \        sum = a+b+c;\n        sum = sum/2;\n        if(sum<(a+b+c)){\n      \
    \      return sum;\n        }else{\n            return -1;\n        }\n    }else\
    \ if(a<b&&b<a||a<c&&c<a){\n        sum = a+b+c;\n        sum = sum/2;\n      \
    \  if(sum<(a+b+c)){\n            return sum;\n        }else{\n            return\
    \ -1;\n        }\n    }else{\n        return -1;\n    }\n}\n", "    // Get length\
    \ of sides\n    let ab = Math.hypot(a,b);\n    let bc = Math.hypot(b,c);\n   \
    \ let cb = Math.hypot(c,b);\n\n    // If sum of two sides is greater than third\
    \ side\n    if (ab + bc > cb ){\n        // Then the sum of two sides is greater\
    \ than the third side\n        let area = ab*bc;\n        return Math.round(area);\n\
    \    }\n    return -1;\n}\n", "    if (a + b > c && a + c > b && b + c > a)\n\
    \        return ((a + b + c) / 2);\n    return -1;\n}\n</code></pre>\n       \
    \ </article>\n    </section>\n\n    <section id='posts'>\n        <h2>Posts</h2>\n\
    \        \n        \n            \n\n<section id=\"post-0\">\n    <p>The purpose\
    \ of this site is to help developers write JS code faster and to help \nthem understand\
    \ how to write better, more flexible JS code. \nWhile this site is intended to\
    \ be helpful to a lot of people who want to \nlearn JS, it is not intended to\
    \ be a definitive guide to JS. If you\u2019re \ninterested in learning JS then\
    \ you can try out a few of my favorite \nwebsites, <a href=\"https://js101.com\"\
    >JS101</a>, <a href=\"https://jsconf.com\">JSConf 2018</a>,\nand <a href=\"https://www.khanacademy.org\"\
    >Khan Academy</a>.</p>\n\n<p>I recommend you read up on JS in general before you\
    \ try to play with it. \nIf you have any questions or would like to learn more\
    \ about JS,\nthen my site has several articles on them:</p>\n<ul>\n    <li><a\
    \ href=\"https://js101.com\">JS101</a> - A short tutorial with explanations \n\
    about JS syntax</li>\n    <li><a href=\"https://jsconf.com\">JSConf 2018</a> -\
    \ A more detailed tutorial \nfor JS beginners</li>\n    <li><a href=\"https://www.khanacademy.org\"\
    >Khan Academy</a> - A detailed \ntutorial for JS beginners</li>\n</ul>\n</section>\n\
    \n\n            \n\n<section id=\"post-1\">\n    \n        <h2>Blog Post</h2>\n\
    \        \n    \n    <article>\n        \n            <h3 class=\"post-title\"\
    ><a href=\"https://js101.com\">JS101 - Introducing JS101</a></h3>\n          \
    \  <p class=\"post-meta\">May 12, 2018</p>\n            \n            <p><a href=\"\
    https://js101.com\">JS101</a> is a tutorial and demo blog \nthat explains some\
    \ basic concepts in JS like objects, functions and \nbasic data types. It also\
    \ goes over some commonly used patterns \nin JS, such as how to pass parameters\
    \ into functions.</p>\n            \n            <p>Please feel free to check\
    \ out the blog post on the \n<a href=\"https://medium.com/@js101js\">Medium site</a>.</p>\n\
    \            \n            <p>The JS101 demo is available on github: <a href=\"\
    https://github.com/js101/js101.com\">https://github.com/js101/js101.com</a></p>\n\
    \            \n            <p>This blog post is written in HTML and CSS, so the\
    \ easiest way to \nread it is by opening it in your ", "    const s = a + b +\
    \ c;\n    if (s > 180){\n        return -1;\n    }\n    return Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))*100)/100;\n}\n", "    var validTri = false;\n\
    \    var valid_a = Math.abs(a);\n    var valid_b = Math.abs(b);\n    var valid_c\
    \ = Math.abs(c);\n    if(valid_a + valid_b > valid_c){\n        var valid_area\
    \ = valid_a * valid_b;\n        if(valid_area >= valid_c){\n            validTri\
    \ = true;\n        }\n    }\n    return validTri ? valid_area : -1;\n}\n", " \
    \   //Write your code here\n    return Math.sqrt(b*b+c*c); \n}\n", "  var s =\
    \ b*b - 4*a*c;\n  if(s<0){\n    return -1;\n  }\n  var d = Math.sqrt(s);\n  return\
    \ d*d/2;\n}\n", "    if(a + b > c){\n        return -1\n    }\n    var s = (a\
    \ + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c))\n}\n</code>\n\
    <|/ a tags=javascript,geometry |>\n<| c |>\nThis is a great solution. I've added\
    \ comments to help others understand how it works :) Thank you!\n<|/ c |>\n<|\
    \ c |>\nYou might want to rename `triangleArea` to `triangle_area` to avoid shadowing\
    \ the built-in function\n<|/ c |>\n<| c |>\nI added the comments to the code to\
    \ explain why and how the function works. Hope this helps someone in the future.\n\
    <|/ c |>\n<| a dscore=5 |>\nI like it so much, I decided to write a JavaScript\
    \ function to compute triangle area, which uses Heron's formula. \nThis function\
    \ returns 0 for degenerate triangles and -1 for invalid triangles.\n<code>", " \
    \   if (a > b && a > c && b > c){\n        if (a + b > c)\n            return\
    \ (a * b) / c;\n        else\n            return -1;\n    }\n    else\n      \
    \  return -1;\n}\n</cell>\n<text>\nWe have now created two functions to calculate\
    \ area and perimeters. We'll use these functions in the main section of our program.\n\
    \n\n</text>\n<text>\nProblem 2: Calculating the area of a triangle \nIn our implementation\
    \ of the Triangle class, we have overloaded the\narea method to calculate and\
    \ return the area of a triangle.\nIn this part of the exercise, you will implement\
    \ the area method\nwithout using the built-in triangle_area function. Recall that\
    \ the\ntriangle_area function has three parameters: a Triangle object named\n\
    triangle, and a number representing the length of the sides of the triangle.\n\
    The triangle_area function will calculate the area of the triangle\nand return\
    \ the result rounded to two decimal places.\n\n\n</text>\n<cell>", "    \n   \
    \ var s = a + b + c;\n    var area = s * (s - a) * (s - b) * (s - c);\n    var\
    \ rounded = Math.round(area * 100) / 100;\n\n    return rounded;\n}\n", "    var\
    \ area = a * b;\n    area += a * c;\n    area -= b * c;\n    return (area < 0)\
    \ ? -1 : (Math.sqrt(area))\n}\n", "    if((a + b > c) && (a + c > b) && (b + c\
    \ > a)){\n        return (a + b + c) / 2;\n    }\n    return -1;\n}\n", "\tif\
    \ (a + b > c){\n\t\treturn -1;\n\t}\n\telse if (a + c > b){\n\t\treturn -1;\n\t\
    }\n\telse if (b + c > a){\n\t\treturn -1;\n\t}\n\telse{\n\t\treturn ( Math.abs(\
    \ (a*b) - (b*c) )/2 );\n\t}\n}\n</cell>\n<cell>\ndef solve(side1, side2, side3):\n\
    \treturn triangle_area(side1, side2, side3)\n</cell>\n<cell>\nsolve(4,3,6)\n</cell>\n\
    <cell>\ndef solve(side1, side2, side3):\n\treturn triangle_area(side1, side2,\
    \ side3)\n</cell>\n<cell>\nsolve(5,7,3)\n</cell>\n<cell>\ndef solve(side1, side2,\
    \ side3):\n\treturn triangle_area(side1, side2, side3)\n</cell>\n<cell>\nsolve(5,3,3)\n\
    </cell>\n<cell>\ndef solve(side1, side2, side3):\n\treturn triangle_area(side1,\
    \ side2, side3)\n</cell>\n<cell>\nsolve(5,2,1)\n</cell>\n<cell>\ndef solve(side1,\
    \ side2, side3):\n\treturn triangle_area(side1, side2, side3)\n</cell>\n<cell>\n\
    solve(-2,2,1)\n</cell>\n<cell>\ndef solve(side1, side2, side3):\n\treturn triangle_area(side1,\
    \ side2, side3)\n</cell>\n<cell>\nsolve(1,5,7)\n</cell>\n<cell>\ndef solve(side1,\
    \ side2, side3):\n\treturn triangle_area(side1, side2, side3)\n</cell>\n<cell>\n\
    solve(1,3,2)\n</cell>\n<cell>\ndef solve(side1, side2, side3):\n\treturn triangle_area(side1,\
    \ side2, side3)\n</cell>\n<cell>\nsolve(-1,1,1)\n</cell>\n<cell>\ndef solve(side1,\
    \ side2, side3):\n\treturn triangle_area(side1, side2, side3)\n</cell>\n<cell>\n\
    solve(2,2,2)\n</cell>\n<cell>\ndef solve(side1, side2, side3):\n\treturn triangle_area(side1,\
    \ side2, side3)\n</cell>\n<cell>\nsolve(2,2,3)\n</cell>\n<cell>\ndef solve(side1,\
    \ side2, side3):\n\treturn triangle_area(side1, side2, side3)\n</cell>\n<", " \
    \ let acum = 0;\n  let bcum = 0;\n  let csum = 0;\n  for(let i = 0; i < 3; i++){\n\
    \    acum += Math.pow(a, i); //add up all the first sides\n    bcum += Math.pow(b,\
    \ i); //add up all the second sides\n    csum += Math.pow(c, i); //add up all\
    \ the third sides\n  }\n  if(acum > bcum){\n    return acum;\n  }\n  else if (bcum\
    \ > acum){\n    return bcum;\n  }\n  else{\n    return csum;\n  }\n}\n", "   \
    \ var s = (a + b + c) / 2;\n    return s >= (a+b+c) ? s * s : -1;\n}", "    \n\
    \    if(a >= b && a >= c){\n        return a * b * 0.5;\n    }else if(b >= a &&\
    \ b >= c){\n        return b * c * 0.5;\n    }else{\n        return c * Math.sqrt(\
    \ ((a-b) * (b-c)) / ((a+b) * (a+c)) );\n    }\n}\n", "    if (a < 0 || b < 0 ||\
    \ c < 0){\n        return -1;\n    }\n    var area_sum = (a + b + c) / 2;\n  \
    \  return Math.round(area_sum * 100)/100;\n}\n</script>\n\n<hr>\n\n<script language=\"\
    JavaScript1.2\">\n", "    if (a+b>c){\n        return Math.abs((a+b+c)/2)\n  \
    \  } else if (a+c>b){\n        return Math.abs((a+c+b)/2)\n    } else if (b+c>a){\n\
    \        return Math.abs((b+c+a)/2)\n    }\n    return -1\n}\n</code>\n<|/ a dscore=0\
    \ tags=geometry,python,triangular,area,area |>\n<| a dscore=0 tags=geometry,python,triangular,area,area\
    \ |>\nThe formula can be written as\n<code>\narea = 1/2 * a * b * c;\n</code>\n\
    For a triangle with sides a,b and c\n<|/ a |>\n<| c |>\nThis solution fails to\
    \ give correct result if the triangle is not triangle.\n<|/ c |>\n<| c |>\nI mentioned\
    \ in my answer that this formula works for the triangle only. `a`, `b` and `c`\
    \ should be replaced with their respective sides.\n<|/ c |>\n<| c |>\nI assumed\
    \ OP had written the function for `a`, `b`, `c` already. But then your answer\
    \ has solved the problem. I thought OP didn't know that `a`, `b` and `c` should\
    \ be replaced with their respective sides. I edited the answer.\n<|/ c |>\n<|\
    \ c |>\nAhhh yes, I see what you mean.\n<|/ c |>\n<| a tags=geometry,python,triangular,area,area\
    \ |>\nHere is another approach to solve this problem\n<code>\ndef triangle_area(a,b,c):\n\
    \    if(a+b>c) and (a+c>b) and (b+c>a):\n        return (a*b)/2\n    else:\n \
    \       return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for posting\
    \ an answer! While a code snippet could answer the question it's still great to\
    \ add some addition information around, like explain, etc ..\n<|/ c |>\n<| a tags=geometry,python,triangular,area,area\
    \ dscore=0 |>\n<code>\ndef triangle_area(a,b,c):\n    area=0\n    for i in range(1,4):\n\
    \        if(a+b+c==i):\n            area+=i\n    return (area*b)/2\n</code>\n\
    <|/ a |>\n<| c |>\nWhile this code may provide a solution to problem, it is highly\
    \ recommended that you provide additional context regarding why and/or how this\
    \ code answers the question. Code only answers typically become useless in the\
    \ long-run because future viewers experiencing similar problems ", "  if(a+b>c\
    \ || b+c>a || c+a>b) return -1;\n  var d = (a+b+c)/2;\n  return Math.abs(Math.sqrt(Math.pow(a\
    \ - d, 2) + Math.pow(b - d, 2) + Math.pow(c-d, 2)))\n}\n", "\t// Get the area\
    \ of triangle formed by the 3 sides.\n\t// Note: if any two of the sides are 0,\
    \ the triangle will be invalid.\n\tvar s = a + b + c\n\tvar area = s/(s*s)\n\t\
    return (area).toFixed(2)\n}\n", "  if(a == b && b == c)\n    return Math.abs(Math.sqrt(Math.pow(a,\
    \ 2)+Math.pow(b, 2)))\n  else if(a == c && c == b)\n    return Math.abs(Math.sqrt(Math.pow(a,\
    \ 2)+Math.pow(c, 2)))\n  else if(b == c && c == a)\n    return Math.abs(Math.sqrt(Math.pow(b,\
    \ 2)+Math.pow(c, 2)))\n  else if(a+b == c || b+c == a || c+a == b)\n    return\
    \ Math.abs(Math.sqrt(Math.pow(c, 2)+Math.pow(a, 2)))\n  else\n    return -1\n\
    }\n</cell>\n<text>\nEx 16 - Inside Triangle\n\n</text>\n<cell>", "    // Write\
    \ your code here\n    \n    let d = b - a;\n    let e = c - a;\n    let f = Math.sqrt(d*d\
    \ + e*e);\n\n    let s = 0;\n    if(d >= 0){\n        if(e > 0){\n           \
    \ s = f*f*d/(e*e);\n        }else{\n            s = -1;\n        }\n    }else{\n\
    \        if(e > 0){\n            s = -1;\n        }else{\n            s = f*f*e/(e*e);\n\
    \        }\n    }\n    return parseFloat(s.toFixed(2));\n}\n", "  var side1 =\
    \ Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)))\n  var side2 = Math.abs(Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2)))\n  var side3 = Math.abs(Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2)))\n\n  if (side1 === 0 && side2 === 0 && side3 === 0)\n    return -1\n  else\
    \ if (side1 === 0)\n    return Math.round(side2/side3)\n  else if (side2 === 0)\n\
    \    return Math.round(side1/side3)\n  else if (side3 === 0)\n    return Math.round(side1/side2)\n\
    \  else\n    return Math.round(Math.sqrt((Math.pow(side1, 2) + Math.pow(side2,\
    \ 2)) + (Math.pow(side3, 2)) - (Math.pow(side1, 2)) - (Math.pow(side2, 2)) - (Math.pow(side3,\
    \ 2))))\n}\n</code>\n<|/ a tags=javascript,math,geometry,algorithm |>\n<| a dscore=0\
    \ tags=javascript,math,geometry,algorithm |>\n<code>\nlet x = Math.min(Math.max(\n\
    \    ((Math.sqrt(Math.pow(a1,2) + Math.pow(b1,2)))- (Math.sqrt(Math.pow(c1,2)\
    \ + Math.pow(d1,2)))) * Math.sqrt(Math.pow(a2,2) + Math.pow(b2,2))),\n    ((Math.sqrt(Math.pow(a3,2)\
    \ + Math.pow(b3,2)))- (Math.sqrt(Math.pow(c3,2) + Math.pow(d3,2)))) * Math.sqrt(Math.pow(a4,2)\
    \ + Math.pow(b4,2))),\n    ((Math.sqrt(Math.pow(a5,2) + Math.pow(b5,2)))- (Math.sqrt(Math.pow(c5,2)\
    \ + Math.pow(d5,2)))) * Math.sqrt(Math.pow(a6,2) + Math.pow(b6,2))),\n    ((Math.sqrt(Math.pow(a7,2)\
    \ + Math.pow(b7,2)))- (Math.sqrt(Math.pow(c7,2) + Math.pow(d7,2)))) * Math.sqrt(Math.pow(a8,2)\
    \ + Math.pow(b8,2))),\n    ((Math.sqrt(Math.pow(a9,2) + Math.pow(b9,2)))- (Math.sqrt(Math.pow(c9,2)\
    \ + Math.pow(d9,2)))) * Math.sqrt(Math.pow(a10,2) + Math.pow(b10,2))),\n    ((Math.sqrt(Math.pow(a11,2)\
    \ + Math.pow(b11,2)))- (Math.sqrt(Math.pow(c11,2) + Math.pow(d11,2)))) * Math.sqrt(Math.pow(a12,2)\
    \ + Math.pow(b12,2))),\n    ((Math.sqrt(Math.pow(a13,2) + Math.pow(b13,2)))- (Math.sqrt(Math.pow(c13,2)\
    \ + Math.pow(d13,2)))) * Math.sqrt(Math.pow(a14,2) + Math.pow(b14,2))),\n    ((Math.sqrt(Math.pow(a15,2)\
    \ + Math.pow(b15,2)))- (Math.sqrt(Math.pow(c15,2) + Math.pow(d15,2)))) * Math.sqrt(Math.pow(a16,2)\
    \ + Math.pow", "    var s = a + b + c;\n    return ((Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c))) / 2);\n}\n</code>\n<|/ a tags=python,javascript dscore=0 |>\n\
    <| a tags=python,javascript |>\nHere is a simple solution with just 3 lines of\
    \ code using the library math \n<code>\nfrom math import sqrt\n\ndef triangle_area(a,\
    \ b, c):\n    s = (a + b + c) * 0.5\n    area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n    return area\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nHere is\
    \ another solution in javascript using math.\n<code>\nvar area = function(side1,\
    \ side2, side3) {\n    area = Math.sqrt(Math.pow(side1, 2) + Math.pow(side2, 2)\
    \ + Math.pow(side3, 2));\n    return area;\n}\n</code>\n<|/ a tags=python,javascript\
    \ |>\n<| a dscore=0 |>\nHere is the answer using javascript\n<code>\nvar triangle\
    \ = function(side1, side2, side3) {\n  return side1 * side2 * side3\n}\n\nvar\
    \ sideA = 7\nvar sideB = 14\nvar sideC = 15\nvar triangleArea = triangle(sideA,sideB,sideC)",
  "  if(b == 0){\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n  }\n  else{\n\
    \    var s = (a + b + c) / 2;\n    return Math.sqrt(Math.pow(s - a, 2) + Math.pow((s\
    \ - b), 2) + Math.pow((s - c), 2));\n  }\n}\n", "    var area = a*b*c;\n    if\
    \ (area>0)\n        return Math.round(area);\n    else\n        return -1;\n}\n",
  "  if(b===0)\n    return 0\n  if(c===0)\n    return 0\n  if(a>b)\n    {\n      if(a>c)\n\
    \        {\n          return (a+b+c)/2\n        }\n      else\n        {\n   \
    \       return (a+c+b)/2\n        }\n    }\n  else\n    {\n      if(b>c)\n   \
    \     {\n          return (b+a+c)/2\n        }\n      else\n        {\n      \
    \    return (b+c+a)/2\n        }\n    }\n}\n", "    if (a >= b + c){\n       \
    \ return 0;\n    }\n    else if (b >= c + a){\n        return 0;\n    }\n    else\
    \ {\n        return (((b - a) * (c - b)) / (a * b));\n    }\n}\n", "    if(a <\
    \ 0 && b < 0 && c < 0)\n        return -1;\n    if(a < 0 && b > 0 && c > 0)\n\
    \        return -1;\n    if(a < 0 && b < 0 && c > 0)\n        return -1;\n   \
    \ if(a > 0 && b < 0 && c < 0)\n        return -1;\n    if(a > 0 && b > 0 && c\
    \ > 0)\n        return -1;\n    if(a > 0 && b > 0 && c < 0)\n        return -1;\n\
    \    if(b < 0 && c < 0)\n        return -1;\n    if(b > 0 && c < 0)\n        return\
    \ -1;\n    if(b > 0 && c > 0)\n        return -1;\n    if(b < 0 && c > 0)\n  \
    \      return -1;\n    if(c < 0)\n        return -1;\n    if(c > 0)\n        return\
    \ -1;\n    if(a + b < c)\n        return -1;\n    if(a + c < b)\n        return\
    \ -1;\n    if(a + c < b)\n        return -1;\n    if(a + b < c)\n        return\
    \ -1;\n\n    let area = Math.abs((a * a + c * b + b * c) - c * c);\n    if(area\
    \ > 1)\n        return area;\n    if(b < 0)\n        return -1;\n    if(b > 0)\n\
    \        return -1;\n    if(b > 0)\n        return -1;\n    return area;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nHow would I go about implementing this?\n\
    <|/ c |>\n<| c |>\nPlease check my answer for a better description of the algorithm\n\
    <|/ c |>\n<| c |>\nStill getting a wrong answer. Could you please check and give\
    \ me a better explanation of your answer?\n<|/ c |>\n<| c |>\nUpdated my answer.\
    \ I had a bug in the code. Also added a description of the algorithm\n<|/ c |>\n\
    <| c |>\nThank you very much for your help! This is still giving me a wrong answer.\
    \ Could you please check the updated question?\n<|/ c |>\n<| a |>\n<code>\npublic\
    \ class Triangle {\nint a;\nint b;\nint c;\n", "    var s, t, area, side, areaA,\
    \ areaB;\n    side = Math.min(a, b, c);\n    if (side == Math.min(a, b, c) {\n\
    \        if (a < b + c) {\n            areaA = a;\n            areaB = b + c;\n\
    \        } else {\n            areaA = b + c;\n            areaA = a;\n      \
    \  }\n    } else if (side == Math.max(a, b, c)) {\n        if (a < b + c) {\n\
    \            areaA = a + b;\n            areaB = b + c;\n        } else {\n  \
    \          areaA = b + c;\n            areaA = a;\n        }\n    } else if (side\
    \ == Math.min(a, b, c)) {\n        areaA = a + b;\n        areaB = b + c;\n  \
    \  } else if (side == Math.max(a, b, c)) {\n        areaA = b + c;\n        areaA\
    \ = a;\n    } else {\n        areaA = a + c;\n        areaB = b + c;\n    }\n\
    \    s = (areaB - areaA) / 2;\n    t = (areaA - s) / 2;\n    if (s > (t + areaB))\
    \ {\n        areaA = s + t;\n    }\n    area = areaA + areaB - s;\n    return\
    \ area > 0.00000001 ? (Math.round(area * 100)/100) : -1;\n}\n", "    // Calculate\
    \ the sum of each side's length\n    var sideA = a + b + c;\n    var sideB = a\
    \ + c + b;\n    var sideC = c + a + b;\n    // If the sum of sides is greater\
    \ than the third side, it's not a triangle\n    if (sideA > sideB && sideB > sideC)\
    \ {\n        return -1;\n    } else if (sideA < sideB && sideB < sideC) {\n  \
    \      return -1;\n    } else {\n        return (sideA - Math.sqrt(Math.pow(sideB,\
    \ 2) + Math.pow(sideC, 2))) / 2;\n    }\n}\n", "  if(a+b>c) return -1;\n  if(b+c>a)\
    \ return -1;\n  if(a+c>b) return -1;\n  if(b+a>c) return -1;\n  if(a+b+c>0) return\
    \ Math.sqrt( Math.pow(b,2)+Math.pow(c,2) )\n  else return -1;\n}\n\n", "  var\
    \ area = Math.abs((a+b+c) / 2);\n  if (area > 3){\n    return Math.round(Math.sqrt(Math.pow((a+b+c),\
    \ 2) / area));\n  }\n  return -1;\n}", "\tif (a + b > c && a + c > b && b + c\
    \ > a){\n\t\tvar area = 3.14 * (a + b + c) / 2;\n\t\treturn area;\n\t}\n\treturn\
    \ -1;\n}", "  if((a + b) > c){\n    return -1\n  }\n  if( (a + c) > b ){\n   \
    \ return -1\n  }\n  if( (b + c) > a ){\n    return -1\n  }\n  \n  let triangle_area\
    \ = 0\n  \n  if(a * b > c){\n    let temp_a = a\n    a = b\n    b = c\n    c =\
    \ temp_a\n  }\n  \n  if(a * c > b){\n    let temp_a = a\n    a = c\n    c = b\n\
    \    b = temp_a\n  }\n  \n  if(b * c > a){\n    let temp_b = b\n    b = c\n  \
    \  c = a\n    a = temp_b\n  }\n  \n  triangle_area = (a * b) / Math.sqrt(Math.pow(a,\
    \ 2) + (Math.pow(b, 2)) * Math.pow(c, 2))\n  \n  return Math.ceil(triangle_area\
    \ * 100) / 100\n}\n", "  var s = (c-a) * (c-b) * (c-a); \n  if (s > 0){\n    \
    \  return Math.sqrt(s); \n  }\n  else {\n      return -1; \n  }\n}\n", "  a =\
    \ Math.abs(a);\n  b = Math.abs(b);\n  c = Math.abs(c);\n  var s = (a+b+c)/2;\n\
    \  if (s>a&&s>b&&s>c){\n    return Math.round(s*100)/100;\n  }\n  else return\
    \ -1;\n}\n", "  return Math.abs((Math.sqrt(Math.pow(a,2)+Math.pow(b,2)+Math.pow(c,2))-(Math.pow(a,2)+Math.pow(b,2))-(Math.pow(b,2)+Math.pow(c,2)))/(2*Math.sqrt(Math.pow(a,2)+Math.pow(b,2)+Math.pow(c,2)));\n\
    }", "\t\n\tlet area_sum = 0;\n\tlet sides = 0;\n\n\tif(a > 0 && b > 0){\n\t\t\
    sides = b > c ? b : c;\n\t\tarea_sum = sides*(sides-a)*(sides-b);\n\t} else if(a\
    \ > 0 && b < 0){\n\t\tsides = b > c ? c : b;\n\t\tarea_sum = a*sides*(sides-a)*(sides-b);\n\
    \t} else if(a < 0 && b < 0){\n\t\tsides = b > c ? c : b;\n\t\tarea_sum = a*sides*(sides-a)*(sides-b);\n\
    \t}\n\treturn Math.round(area_sum*100)/100;\n}\n", "  var A = b*b - 4*a*c; //Two\
    \ sides\n  if (A < 0){\n    return -1;\n  }\n  var x = (-b + Math.sqrt(A)) / (2*a);\
    \ //Two intersection points\n  var y = (-b - Math.sqrt(A)) / (2*a); //Two intersection\
    \ points\n  var s = (-b - Math.sqrt(A)) / a; //Length of one side of triangle\n\
    \  if (a < b){\n    if (a < c){\n      s = (s - b) / a; //If one side is greater\
    \ than the other then divide so you have a valid triangle\n    }else{\n      s\
    \ = (s - c) / a; //If one side is greater than the other then divide so you have\
    \ a valid triangle\n    }\n  }else{\n    if (a < c){\n      s = (s - b) / a;\n\
    \    }else{\n      s = (s - c) / a;\n    }\n  }\n  return Math.abs(Math.round(s*100)/100);\n\
    }\n", "    if(b === undefined)\n        return -1;\n    if(b === 0)\n        return\
    \ 0;\n    else if(b >= Math.min(a,c))\n        return (a+b+c)*0.5;\n    else\n\
    \        return 0;\n}\n", "\tif (a==0||b==0||c==0)\n\t{\n\t\tthrow Error(\"Invalid\
    \ triangle parameters\");\n\t}\n\tlet aSqrt = Math.sqrt(a);\n\tlet bSqrt = Math.sqrt(b);\n\
    \tlet cSqrt = Math.sqrt(c);\n\tif (bSqrt-aSqrt < cSqrt-bSqrt) return 0;\n\tif\
    \ (cSqrt-aSqrt < bSqrt-cSqrt) return 0;\n\treturn (a+b+c) / 2;\n}\n", "  if(a+b\
    \ > c && b+c > a && c+a > b){\n    var area = Math.sqrt((a*b*c)/((b*b+c*c)*(a*a+b*b)));\n\
    \    if(area >= 0){\n      return area.toFixed(2);\n    }else{\n      return -1\n\
    \    }\n  }else{\n    return -1\n  }\n}\n", "    if (a > b + c || b > a + c ||\
    \ c > a + b){\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b +\
    \ c * c);\n}\n", "  if(a>b&&b>c&&c>a)\n    {\n      return (b+c)/2.0;\n    }\n\
    \  if(a>b&&b>c||a>c&&c>b)\n    {\n      return (b-c)/2.0;\n    }\n  if(a>b||a>c||b>c)\n\
    \    {\n      return -1;\n    }\n}\n</code>\n<|/ a |>\n<| a tags=javascript,html,jquery\
    \ |>\n<code>\n<!DOCTYPE html>\n<html>\n<head>\n    <title></title>\n    <script\
    \ src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n\
    \    <script>\n        $(document).ready(function(){\n\n        alert(\"You clicked\
    \ the button\");\n\n        });\n    </script>\n</head>\n<body>\n\n</body>\n</html>\n\
    </code>\nI tried to run this in my browser and it worked. Check if you have included\
    \ all the required libraries and libraries are included in your code. Check this\
    \ link for other libraries https://www.w3schools.com/jsref/event_onclick.asp\n\
    <|/ a dscore=0 |>\n<| a |>\nYour code worked fine for me as long as I added the\
    \ jQuery script in the <head>.\n<code>\n<!DOCTYPE html>\n<html>\n<head>\n    <title></title>\n\
    \    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"\
    ></script>\n    <script>\n        $(document).ready(function(){\n            alert(\"\
    You clicked the button\");\n        });\n    </script>\n</head>\n<body>\n\n</body>\n\
    </html>\n</code>\n<|/ a dscore=0 tags=javascript,html,jquery |>\n<| a dscore=0\
    \ |>\n<code>\n<html>\n    <head>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"\
    ></script>\n        <script>\n            $(document).ready(function(){\n    \
    \            alert(\"You clicked the button\");\n            });\n        </script>\n\
    \    </head>\n    <body>\n\n    </body>\n</html>\n</code>\n<|/ a tags=javascript,html,jquery\
    \ |>\n<| c |>\nHi , welcome to Stack Overflow. While this code snippet may solve\
    \ the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| a tags=javascript,html,jquery dscore=0 |>\n<code>\n\
    <!DOCTYPE html>\n<html>\n<head>\n<title></title>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/",
  "\tlet s = (a+b+c)/2\n\tif (s<(a+b) || s<(c+b) || s<(b+a))\n\t\treturn -1\n\telse\n\
    \t\treturn Math.sqrt(Math.pow(a-b, 2)+Math.pow(c-b, 2))\n}\n", "\tif((a + b +\
    \ c) <= Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))) return Math.round(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2)) * 100) / 100;\n\telse return -1;\n}\n",
  "\tif(b <= 0) return -1;\n\tif(b >= a) return a*b;\n\tif(c <= 0) return -1;\n\t\
    if(c >= c) return a * c;\n\treturn Math.sqrt(Math.pow((b - c), 2) + Math.pow(a,\
    \ 2));\n}", "\tif (a+b+c === 1){\n\t\treturn a;\n\t}else if (a+b > c){\n\t\treturn\
    \ triangle_area(triangle_area(a, b, c), c, b);\n\t}else{\n\t\treturn triangle_area(a,c,b)\n\
    \t}\n}\n", "\tif (a === b){\n\t\tif (b === c){\n\t\t\treturn 0;\n\t\t}\n\t\tif\
    \ (a > c){\n\t\t\treturn Math.sqrt(Math.pow(a, 2)+ Math.pow(b,2));\n\t\t}\n\t\t\
    return -1;\n\t}\n\t\n\tif (a > b){\n\t\tlet temp = a;\n\t\ta = b;\n\t\tb = temp;\n\
    \t}\n\t\n\tif (a === c){\n\t\treturn 0;\n\t}\n\t\n\tlet d = (a + b + c) / 2;\n\
    \t\n\tif (a >= b + c){\n\t\tlet c = ((b+d) / 2);\n\t\tlet e = (a+(b+d)/2) - c;\n\
    \t\treturn Math.sqrt(Math.pow(c, 2)+ Math.pow(e, 2));\n\t}\n\t\n\tlet e = (a +\
    \ b) / 2;\n\tlet f = ((c + d) / 2);\n\tlet g = Math.sqrt(((b-e) + (a-f))*((b-e)\
    \ + (a-f)));\n\treturn g;\n}\n", "\tlet s = (a + b + c) / 2\n\tlet area = Math.sqrt(Math.pow((Math.pow(s-a,\
    \ 2) + Math.pow(s-b, 2) + Math.pow(s-c, 2)), 0.5))\n\tif (area >= 0){\n\t\treturn\
    \ area\n\t}\n\treturn -1\n}\n", "\tif (a*a + b*b > c*c) return -1\n\telse {\n\t\
    \treturn Math.round(Math.sqrt( (b*b + c*c - a*a)/2.0 ))\n\t}\n}\n\n", "    var\
    \ sides = [a,b,c]\n    var sum = sides[0]+sides[1]+sides[2]\n    if (sum < sides[2]\
    \ || sum != sides[0]+sides[1]) return -1\n    return Math.round(sides[0]*sides[1]*sides[2])/Math.pow(sides[0],2)\n\
    }\n", "\t\n\tvar s, area, x1,x2, x3, y1, y2, y3;\n\n\tif (a > b && a > c) {\n\t\
    \ts = a;\n\t} else if (b > c && b > a) {\n\t\ts = b;\n\t} else {\n\t\ts = c;\n\
    \t}\n\n\tarea = 0.5 * Math.abs(((s * s) - ((a * s) + (b * s))) / 2);\n\n\tif (area\
    \ < 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn area;\n\t}\n}\n\n", "    \n \
    \   if(a === 0 || b === 0 || c === 0){\n        return -1;\n    }\n\n    // Find\
    \ which side of the triangle is longer\n    var l = ((a > b) ? b : (a>c) ? c :\
    \ a );\n    var m = ((b > c) ? b : (b>a) ? a : b);\n    var n = ((c > a) ? c :\
    \ (c > b) ? b : c);\n    \n    \n    // Now calculate the area\n    var s = (n*(n-1))/2;\n\
    \    if((a + b + c) === l){\n        return s;\n    }\n    if((b + c + a) ===\
    \ m){\n        return (s-s);\n    }\n    if((a + b + c) === n){\n        return\
    \ (s-s);\n    }\n}\n\n", "  if((a + b > c) && (a + c > b) && (b + c > a)){\n \
    \   return round((a * b * c)/(a+b+c), 2);\n  }\n  return -1;\n}\n", "    return\
    \ ((a + b + c)/2 * Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))))\n\
    }\n", "  let s1 = a + b\n  let s2 = a + c\n  let s3 = c + b\n  let s4 = c + c\n\
    \  let area = 0\n  \n  if (s1 > s2) {\n    if (s1 > s3) {\n      if (s2 > s4)\
    \ {\n        area = s2\n      }else{\n        area = s1 + s3\n      }\n    }else{\n\
    \      area = s1 + s4\n    }\n  }else{\n    if (s2 > s3) {\n      area = s2\n\
    \    }else{\n      area = s2 + s3\n    }\n  }\n  return Math.round(area / 2)\n\
    }\n\n", "\treturn ((b+c)/2) * Math.sqrt(Math.pow(b, 2)+Math.pow(c, 2)) - Math.sqrt(Math.pow(a,\
    \ 2)+Math.pow(b, 2)+Math.pow(c, 2))\n}\n", "\t\n\tif((a + b <= c) && (a + c <=\
    \ b) && (b + c <= a)){\n\t\treturn Math.sqrt((b*b + c*c - a*a)/2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n\t\n}\n", "\tif (a + b > c){\n\t\treturn Math.sqrt(Math.pow(b,2)\
    \ + Math.pow(c,2)) \n\t} else if (a + c > b){\n\t\treturn Math.sqrt(Math.pow(a,2)\
    \ + Math.pow(c,2)) \n\t} else if (b + c > a){\n\t\treturn Math.sqrt(Math.pow(a,2)\
    \ + Math.pow(b,2)) \n\t} else {\n\t\treturn -1\n\t}\n}\n", "    if(a <= 0 && b\
    \ <= 0 && c <= 0) return -1;\n    if(a + b <= c || a + c <= b) return -1;\n  \
    \  if(b + c <= a || b + a <= c) return -1;\n    return Math.sqrt(a * a + b * b\
    \ + c * c);\n}\n", "    if(a <= 0 || b <= 0 || c <= 0){\n        return -1;\n\
    \    }\n    else if(b <= a || c <= b){\n        return -1;\n    }\n    else if(b\
    \ >= c || a >= c){\n        return -1;\n    }\n    else {\n        var p = a +\
    \ b;\n        var q = c + a;\n        var r = c + b;\n        var s = (a + b)\
    \ * 0.5\n        var t = (a * b) * 0.5\n        var u = (c * a) * 0.5\n      \
    \  return (Math.sqrt(s * (s - t) + u) * 100) / 100;\n    }\n}\n", "\tvar aSqrt\
    \ = Math.pow(a, 2);\n\tvar bSqrt = Math.pow(b, 2);\n\tvar cSqrt = Math.pow(c,\
    \ 2);\n\treturn ((aSqrt + bSqrt + cSqrt) >=  Math.pow((aSqrt + bSqrt), 2)) ? \n\
    \t\t\tMath.sqrt((aSqrt + bSqrt) - (aSqrt + bSqrt*cSqrt)) : -1;\n}\n", "    if(\
    \ a == 0 && b == 0){\n        return 0;\n    }else if( a == 0){\n        return\
    \ Math.abs(b - c);\n    }else if( b == 0){\n        return Math.abs(c - a);\n\
    \    }else if( c == 0){\n        return Math.abs(a - b);\n    }else{\n       \
    \ return Math.abs(a + b + c);\n    }\n}\n", "    // make sure all input parameters\
    \ are positive \n    // and that the sum of any two input parameters is the third\
    \ input parameter\n    var sides = [a, b, c];\n    var valid = areParametersValid(sides);\n\
    \    if (valid){\n        var sum = sides.reduce(function(a, b) { return a + b;\
    \ });\n        var side = sum/3;\n        if (sides.some(isPositive)) return Math.round(side*100)/100;\n\
    \        else return -1;\n    } else {\n        return -1;\n    }\n}", "    if\
    \ (a+b>c || c+b>a || a+c>b) return -1;\n    let area = 0.5*(a+c+b)*(a+c-b*b+a*c-b*a);\n\
    \    return Math.round(area*100)/100\n}", "    var s = (a+b+c)\n    \n    if (s<=0||s>=6){\n\
    \        console.log(\"Invalid triangle area\")\n        return -1\n    }\n  \
    \  \n    return (a*b*c)/s\n}\n", "    if((a + b < c) && (b + c < a) && (a + c\
    \ < b)){\n        return Math.sqrt(Math.pow(b,2) + Math.pow(c,2));\n    }\n  \
    \  return -1;\n}\n", "    if(a + b <= c || b + c <= a || c + a <= b)\n       \
    \ return -1;\n    return Math.sqrt( Math.pow((a + b), 2) + Math.pow((b + c), 2)\
    \ + Math.pow((c + a), 2) );\n}\n", "    if (a + b > c)\n        throw \"invalid\
    \ triangle sides\"\n    var area = (a + b + c)/2\n    return area\n}\nvar area\
    \ = triangle_area(3, 4, 5)\nvar area2 = triangle_area(1, 2, 10)\nvar area3 = triangle_area(7,\
    \ 2, 5)\nvar area4 = triangle_area(7, 0, 10)\nvar area5 = triangle_area(0, 0,\
    \ 0)\nvar area6 = triangle_area(0, 0, 0)\nvar area7 = triangle_area(8, 2, 1)\n\
    var area8 = triangle_area(7, 1, 3)\nvar area9 = triangle_area(6, 4, 3)\n", " \
    \   let s = a + b + c\n    if(s > 0) return Math.sqrt(s * (s-a) * (s-b) * (s-c))\
    \ \n    return -1\n}\n</cell>\n<cell>\ndef triangle_det(a, b, c){\n    let s =\
    \ a + b + c\n    if(s > 0) return (s-a) * (s-b) * (s-c)/Math.sqrt(s * (s-a) *\
    \ (s-b) * (s-c))\n    return -1\n}\n</cell>\n<cell>\ntriangle_det(3, 4, 5)\n</cell>\n\
    <cell>\ntriangle_det(1, 2, 10)\n</cell>\n<text>\nExercises:\n\n</text>\n<text>\n\
    1. Create a function that gets the volume of a triangle made out of sides a, b\
    \ and c. \nWrite a test that checks if your function works with sides 1, 5, 9.\
    \ \nWrite a test that checks if your function works with sides 1, 6, 9.\n\n</text>\n\
    <cell>\ndef triangle_volume(a, b, c):\n    return a * b * c / Math.sqrt(a * b\
    \ * c)\n</cell>\n<cell>\ntriangle_volume(3, 4, 5)\n</cell>\n<cell>\ntriangle_volume(1,\
    \ 2, 10)\n</cell>\n<cell>\ndef triangle_det(a, b, c): \n    if(a>b and a>c): \n\
    \        if(a>b and b>c): \n            return (a-b) * (b-c)/Math.sqrt(b * b *\
    \ c)\n        elif(b>a and b>c): \n            return (b-a) * (c-a)/Math.sqrt(c\
    \ * c * c)\n        else: \n            return (a-c) * (c-a)/Math.sqrt(c * c *\
    \ c)\n    elif (b>a and b>c):\n        if(b>c and c>a): \n            return (b-a)\
    \ * (a-c)/Math.sqrt(a * a * c)\n        elif(c>a and c>b): \n            return\
    \ (b-c) * (c-a)/Math.sqrt(a * a * c)\n        else: \n            return (b-a)\
    \ * (b-c)/Math.sqrt(a * a * c)\n    elif (a>b and a>c): \n        if(a>c and c>b):\
    \ \n            return (a-b) * (a-c)/Math.sqrt(a * a * c)\n        elif(c>b and\
    \ c>a): \n            return (a-c) * (a-b)/Math.sqrt(a * a * c)\n        else:\
    \ \n            return (a-c) * (a-b)/Math.sqrt(a * a * c)\n    else: \n      \
    \  if(a>c and c>b): \n            return (a-b) * (a-c)/Math.sqrt(a * a * c)\n\
    \        elif(c>b and c>", "\tif(a+b >= c){\n\t\treturn (a*b*c)/((a+b)*(a+c)*(b+c))\n\
    \t}\n\telse{\n\t\treturn -1\n\t}\n}\n<|/ file ext=.js filename=index.js |>\nmodule.exports\
    \ = triangle_area;\n", "    if (a > b && a > c) return a * a;\n    else if (b\
    \ > c && b > a) return b * b;\n    else if (c > a && c > b) return c * c;\n  \
    \  return -1;\n}\n", "\tvar sum = (a + b + c) / 2;\n\treturn ((a < b + c) && (b\
    \ < a + c)) ? sum - ((2 * a + b) * (c + b) - b * b - (a + c) * (b + c))/2 : 0;\n\
    }\n\n", "    let triangleArea = 0;\n    \n    if((a + b > c) || (c + d > a) ||\
    \ (a + c > b) || (b + c > a)){\n        triangleArea = -1;\n    } else {\n   \
    \     triangleArea = ((a * b) - (b * c)) / (2.0 * (a * c + b * d));\n    }\n \
    \   \n    return triangleArea;\n}\n", "  var s = b+c;\n  var area = (s/4)*Math.pow(s/2,3);\n\
    \  return Math.round(area *100)/100;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nvar sideOne = parseInt(prompt('Enter side one'));\nvar sideTwo =\
    \ parseInt(prompt('Enter side two'));\nvar sideThree = parseInt(prompt('Enter\
    \ side three'));\n\nvar sideOneSquare = sideOne * sideOne;\nvar sideTwoSquare\
    \ = sideTwo * sideTwo;\nvar sideThreeSquare = sideThree * sideThree;\n\nvar sumOfSquares\
    \ = sideOneSquare + sideTwoSquare + sideThreeSquare;\n\nvar areaOfTriangle = sumOfSquares\
    \ / 4; //area of triangle with three sides\n\nvar area = Math.sqrt(areaOfTriangle);\
    \ // area of triangle without 3 sides\n\nvar roundArea = Math.round(area * 100)\
    \ / 100; // area rounded to 2 decimal points\n", "    let area = 0;\n    while(a\
    \ > 0 && b > 0 && c > 0){\n        area = area + a * b * c;\n        a = a > b\
    \ ? a - b : 0; \n        b = b > c ? b - c : 0;\n        c = c > a ? c - a : 0;\n\
    \    }\n    return Math.round(area / Math.pow(a + b + c, .5));\n}\n", "  let sides\
    \ = [a, b, c];\n  let sideSums = sides.reduce((acc, val) => {\n    return acc\
    \ + val;\n  });\n  let sum = sides[0] + sides[1] + sides[2];\n  \n  if (sum >\
    \ sideSums){\n    return parseFloat(sum.toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n", "  if (a>b && b>c && c>a){\n    let sum = a + b + c\n    return Math.round(sum\
    \ * 100)/100 \n  }else{\n    return -1\n  }\n}\n", "    // write your solution\
    \ here\n    var area = 0;\n    \n    if(a<b+c){\n        area = (a+b+c-a)*0.5;\n\
    \    }\n    else if (a<c+b){\n        area = (c+b-a-c)*0.5;\n    }\n    else{\n\
    \        area = b*(b-c);\n    }\n    \n    if(isNaN(area)){\n        area = -1;\n\
    \    }\n    \n    return Math.round(area*100)/100;\n}\n</cell>\n<text>\nTest Your\
    \ Solution\n\n</text>\n<cell>", "\tvar s = 0;\n\tif(b >= a && b <= c){\n\t\ts\
    \ = (b - a) * (c - b)/2;\n\t\tif((s <= 0 && a > c) || (s >= 0 && a < c)){\n\t\t\
    \treturn s;\n\t\t}\n\t}\n\treturn -1;\n}\n", "    if(a>b){\n        if(b>c){\n\
    \            return Math.round((a+b+c)/2);\n        }\n        return -1;\n  \
    \  }\n    if(a>c){\n        if(c>b){\n            return Math.round((a+b+c)/2);\n\
    \        }\n        return -1;\n    }\n    if(b>c){\n        return Math.round((a+b+c)/2);\n\
    \    }\n    return -1;\n}\n", "   if(a<=0 || b<=0 || c<=0) return -1\n   let area_of_triangle\
    \ = (Math.abs(a + b + c))/2\n   if(a==b == c) return area_of_triangle\n   if(Math.abs(b\
    \ - c) <= area_of_triangle) return a\n   if(Math.abs(a - c) <= area_of_triangle)\
    \ return b\n   return -1\n}", "    if(a === 0 && b === 0){\n        return 0;\n\
    \    }\n    \n    if(a === 0){\n        return Math.sqrt(Math.pow(c, 2));\n  \
    \  }\n    \n    if(c === 0){\n        return Math.sqrt(Math.pow(b, 2));\n    }\n\
    \    \n    if(a === c && b === 0){\n        return 0;\n    }\n    \n    var sideLength\
    \ = (Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2)))/2\n    return Math.round(sideLength * 100)/100;\n}\n", "   if((a + b >\
    \ c) && (b > c) && (c > a)){\n        return Math.abs((a+b+c)/2)\n    }\n    else\
    \ {\n        return -1\n    }\n}", "\tvar s, t; //s will be the sum, t is the\
    \ remaining sum\n\tvar isValid = validateTriangle(a, b, c);\n\tif(isValid){\n\t\
    \ts = a + b;\n\t\tt = c - a;\n\t\treturn Math.sqrt(s * (s - t) * (t - s) * (s\
    \ - t));\n\t}else{\n\t\treturn -1;\n\t}\n}\n", "    if(a===b===c){\n        return\
    \ 0;\n    }\n    const side1 = Math.abs(a - b);\n    const side2 = Math.abs(b\
    \ - c);\n    const side3 = Math.abs(c - a);\n    const area1 = Math.sqrt(side1\
    \ * side1 + side2 * side2 + side3 * side3);\n    const area2 = Math.sqrt(side1\
    \ * side1 + side2 * side2 + side3 * side3);\n    return Math.round(area1 + area2);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code snippet may solve the\
    \ problem, it doesn't explain why or how it answers the question. Please [include\
    \ an explanation for your code](https://meta.stackexchange.com/q/114762/269535),\
    \ as that really helps to improve the quality of your post. Remember that you\
    \ are answering the question for readers in the future, and those people might\
    \ not know the reasons for your code suggestion.\n<|/ c |>\n<| a tags=javascript,if-statement\
    \ |>\n<code>", "    if (a == 0 ||\_b == 0 ||\_c == 0)\n        return -1;\n\n\
    \    return Math.abs((a + b + c)/2);\n}\n", "    var s = (a + b + c)/2.0;\n  \
    \  if (Math.abs(a-b) <= Math.abs(s-c)){\n        if (Math.abs(a-b) < Math.abs(s-c)){\n\
    \            return 0.5 * s;\n        } else {\n            return 0;\n      \
    \  }\n    } else {\n        if (Math.abs(s-c) < Math.abs(a-b)){\n            return\
    \ 0.5 * s;\n        } else {\n            return 0;\n        }\n    }\n}\n", " \
    \   var s = b*b - 4*a*c; // side length\n    if (s > 0) {\n        var t = (-b\
    \ + Math.sqrt(s)) / (2*a);\n        if (t >= 0 && t <= 1) return Math.round(t\
    \ * 10000) / 10000; // round with two decimal places for triangles\n    }\n  \
    \  return -1\n}\n", "  var s1 = Math.sqrt((b*b) - (4*a*c));\n  var s2 = Math.sqrt((b*b)\
    \ - (4*a*a));\n  if(s1 > 0 && s2 > 0){\n    var s3 = Math.sqrt((b*b) - (4*a*a));\n\
    \    return Math.round(s1/s2*s3);\n  }\n  return -1;\n}\n", "    sum = a+b+c\n\
    \    if (sum > 18)\n        return -1\n    return ((Math.sqrt((sum*sum) - (a*a)\
    \ - (b*b) - (c*c))*0.2)/100)\n}\n", "    \n    // Use \"==\" rather than \"===\"\
    , so that undefined and null are handled correctly.\n    if (a != null && a.length\
    \ == 3){\n        if (b != null && b.length == 3){\n            if (c != null\
    \ && c.length == 3){\n                return Math.abs((a + b + c) / 2) \n    \
    \        }\n            else {\n                return -1\n            }\n   \
    \     }\n        else {\n            return -1\n        }\n    }\n    else {\n\
    \        return -1\n    }\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks I will\
    \ give it a try\n<|/ c |>\n<| a dscore=2 |>\nYour question is not that clear.\
    \ Let me just assume you have a function which can calculate area. \nThen you\
    \ can have this structure :\n<code>", "    var s = (a + b + c) / 2.0;\n    return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n", "  var a1, b1, c1;\n  var\
    \ result = 0;\n  if (a<b+c){\n    a1 = (b+c)/2;\n    b1 = a-b;\n    c1 = a-c;\n\
    \  } else {\n    a1 = (b-c)/2;\n    b1 = b-a;\n    c1 = b-c;\n  }\n  if (a>b+c){\n\
    \    a1 = (b-c)/2;\n    b1 = a-b;\n    c1 = b-c;\n  } else {\n    a1 = (b+c)/2;\n\
    \    b1 = b-a;\n    c1 = b-c;\n  }\n  result = a1*(a*(a-c) - b*(c-b)) + (b1*b\
    \ - c1*c)/(2*b) - c1*a/(2*c) + a1*(a*(a-c) - b*(c-b));\n  console.log(result);\n\
    \  return Math.round(result*100)/100;\n}\n", "  if(a+b>c && a+c>b && b+c>a){\n\
    \    return Math.round(a*b*c/((Math.sqrt(a)*Math.sqrt(b))*Math.sqrt(c))*100)/100;\n\
    \  }\n  return -1;\n}\n", "\t\n\tvar s = 0, d = 0;\n\t\n\tif((a + b) > c){\n\t\
    \ts = (a+b) - (c+b);\n\t\td = (c - (a+b));\n\t} else if((b + c) > a){\n\t\ts =\
    \ (b+c) - (a+c);\n\t\td = (a - (b+c));\n\t} else if((a + c) > b){\n\t\ts = (a\
    \ + c) - (b+a);\n\t\td = (b - (a + c));\n\t}\n\t\n\treturn Math.round(((s*(s-1))/d)*100)/100;\n\
    }\n", "    if (a >= b + c)\n        return Math.sqrt(a * b * c);\n    else if\
    \ (b >= a + c)\n        return Math.sqrt(b * c * a - a * b);\n    else \n    \
    \    return -1\n}\n</code>\n<|/ a tags=javascript dscore=0 |>\n<| c |>\nPlease\
    \ try to explain what your code does and how it does it.\n<|/ c |>\n<| c |>\n\
    This works for the example, but fails for other inputs. Try with `triangle_area(2,\
    \ 5, 9)`\n<|/ c |>\n<| c |>\n- it fails because of the `Math.sqrt(a * b * c)`.\
    \ I should return `NaN` instead, since that means that one of the sides is `NaN`.\
    \ This means any triangle that isn't valid is invalid, not just those that have\
    \ no area - which would be the correct answer.\n<|/ c |>\n<| c |>\n: I see your\
    \ point. In my case, the triangle is valid. So I guess `NaN` is fine. I don't\
    \ know if that is how it is supposed to work, but it's working in my case. I don't\
    \ know how others would want to deal with that.\n<|/ c |>\n<| c |>\nYour `isNaN`\
    \ check is pointless, since you are already checking for `NaN` anyway (with `if(a==b+c||b==a+c||c==a+b)`.\
    \ Also, since `a`, `b`, and `c` have to be positive numbers for this to work,\
    \ your `Math.sqrt` can be simplified to `Math.abs(a * a + b * b + c * c - a *\
    \ b * c)`.\n<|/ c |>\n<| a tags=javascript |>\n<code>", "\tlet sumA = a + b\n\t\
    let sumB = b + c\n\tlet sumC = c + a\n\tlet area = Math.sqrt(Math.pow(sumA, 2)\
    \ + Math.pow(sumB, 2) + Math.pow(sumC, 2) - Math.pow(a, 2)- Math.pow(b, 2)- Math.pow(c,\
    \ 2))\n\tif(area >= 0 && area <= 1){\n\t\treturn area\n\t}\n\treturn -1\n}\n",
  "    var sumA=0, sumB=0, sumC=0;\n    \n    if (a>b && b>c && c>a){\n        if\
    \ (Math.abs(a) + Math.abs(b) + Math.abs(c) > Math.abs(a+b+c)){\n            return\
    \ -1;\n        }\n        sumA = Math.abs(a) + Math.abs(b) + Math.abs(c);\n  \
    \      sumB = Math.abs((a+b));\n        sumC = Math.abs((a+c));\n    }\n    \n\
    \    if (a>b && b>c && c>a){\n        if (Math.abs(a) + Math.abs(b) + Math.abs(c)\
    \ > Math.abs(a+b+c)){\n            return -1;\n        }\n        sumA = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c);\n        sumB = Math.abs((a+b));\n        sumC\
    \ = Math.abs((a+c));\n    }\n    \n    if (a>b && b>c && c>a){\n        if (Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c) > Math.abs(a+b+c)){\n            return -1;\n  \
    \      }\n        sumA = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        sumB\
    \ = Math.abs((a+b));\n        sumC = Math.abs((a+c));\n    }\n    \n    if (a>b\
    \ && b>c && c>a){\n        if (Math.abs(a) + Math.abs(b) + Math.abs(c) > Math.abs(a+b+c)){\n\
    \            return -1;\n        }\n        sumA = Math.abs(a) + Math.abs(b) +\
    \ Math.abs(c);\n        sumB = Math.abs((a+b));\n        sumC = Math.abs((a+c));\n\
    \    }\n    \n    if (a>b && b>c && c>a){\n        if (Math.abs(a) + Math.abs(b)\
    \ + Math.abs(c) > Math.abs(a+b+c)){\n            return -1;\n        }\n     \
    \   sumA = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        sumB = Math.abs((a+b));\n\
    \        sumC = Math.abs((a+c));\n    }\n    \n    if (a>b && b>c && c>a){\n \
    \       if (Math.abs(a) + Math.abs(b) + Math.abs(c) > Math.abs(a+b+c)){\n    \
    \        return -1;\n        }\n        sumA = Math.abs(a) + Math.abs(b) + Math.abs(c);\n\
    \        sumB = Math.abs((a+b));\n        sumC = Math.abs((a+c));\n    }\n   \
    \ \n    if (a>b && b>c && c>a){\n        if (Math.abs(a) + Math.abs(b) + Math.abs(c)\
    \ > Math.abs(a+b+c)){\n            return -1;\n        }\n        sumA = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c);\n        sumB = Math.abs((a+b));\n        sumC\
    \ = Math.abs((a+c));\n    }\n    \n    if (a", "\tif((a<b) && (b<c)){\n\t\tif(a\
    \ + b !== c){\n\t\t\treturn (b + c)/2;\n\t\t}\n\t\treturn 0;\n\t} else if((a<b)\
    \ && (b<c)){\n\t\tif(a + c !== b){\n\t\t\treturn (c + b)/2;\n\t\t}\n\t\treturn\
    \ 0;\n\t} else if((a<b) && (b<c)){\n\t\treturn ((a + b) + c)/2;\n\t}\n\treturn\
    \ -1;\n}\n", "  a = Math.abs(a);\n  b = Math.abs(b);\n  c = Math.abs(c);\n  if(a\
    \ + b <= c) return -1\n  if(a + c <= b) return -1\n  if(b + c <= a) return -1\n\
    \  let s = 0.5 * (a + b + c);\n  return Math.round(s / Math.sqrt(a * a + b * b\
    \ + c * c));\n}\n", "  if((a<=0 && b<=0 && c<=0)||(a>=0 && b>=0 && c<=0) || a<b<c){\n\
    \    return -1\n  }\n  var d = (b + c)/2\n  var e = Math.sqrt(Math.pow(a - d,\
    \ 2) + Math.pow(c - d, 2))\n  var f = Math.sqrt(Math.pow(b - d, 2) + Math.pow(a\
    \ - d, 2))\n  var g = Math.sqrt(Math.pow(b - d, 2) + Math.pow(c - d, 2))\n  if(e\
    \ > f && e > g){\n    return e\n  }\n  if(f > g){\n    return f\n  }\n  return\
    \ g\n}\n", "    a = Math.abs(a);\n    b = Math.abs(b);\n    c = Math.abs(c);\n\
    \    if (a + b > c){\n        return Math.sqrt((c * a) + b * b);\n    }\n    return\
    \ -1;\n}\n", "    if((a===0 && b===0 && c===0)) return 0;\n    else if(a===0)\
    \ return Math.abs(b);\n    else if(b===0) return Math.abs(c);\n    else if(c===0)\
    \ return Math.abs(a);\n    else if((a===0 && b===0 || b===0 && c===0 || c===0\
    \ && a===0) ){\n        return Math.abs(a * b);\n    }\n    else if(a<=b){\n \
    \       if(a<=c){\n            var m1 = Math.abs(c-a);\n            var m2 = Math.abs(c-b);\n\
    \            var m3 = Math.abs(a-b);\n            return (m2 + m3)/(m1+m2);\n\
    \        }else{\n            var m1 = Math.abs(c-b);\n            var m2 = Math.abs(c-a);\n\
    \            var m3 = Math.abs(a-b);\n            return m1/(m1+m2);\n       \
    \ }\n    }\n    else if(b<=c){\n        var m1 = Math.abs(c-b);\n        var m2\
    \ = Math.abs(c-a);\n        var m3 = Math.abs(a-c);\n        return (m2 + m3)/(m1+m2);\n\
    \    }\n    else{\n        var m1 = Math.abs(a-c);\n        var m2 = Math.abs(a-b);\n\
    \        var m3 = Math.abs(b-c);\n        return (m2 + m3)/(m1+m2);\n    }\n};\n",
  "\tvar s, x1, x2, y1, y2, x3, y3\n\tif (a>b && b>c && c>a){\n\t\ts=(a+b+c)/2\n\t\
    \tx1=(a*s-b*c)/s\n\t\tx2=(b*s-a*c)/s\n\t\ty1=(a*s-1*b*c)/s\n\t\ty2=(b*s-1*a*c)/s\n\
    \t\tx3=(a*s-1*b*s)/s \n\t\ty3=(b*s-1*a*s)/s \n\t\treturn ((Math.pow(x1,2)+Math.pow(y1,2)+Math.pow(x2,2)+Math.pow(y2,2))-(Math.pow(x1,2)+Math.pow(y1,2)+Math.pow(x3,2)+Math.pow(y3,2))-(Math.pow(x2,2)+Math.pow(y2,2)+Math.pow(x3,2)+Math.pow(y3,2)))\n\
    \t} else if (a>b && b>c && c<a){\n\t\ts=(b+c+a)/2\n\t\tx1=(b*s-a*c)/s\n\t\tx2=(a*s-b*c)/s\n\
    \t\ty1=(b*s-1*a*c)/s\n\t\ty2=(a*s-1*b*c)/s\n\t\tx3=(b*s-1*a*s)/s\n\t\ty3=(a*s-1*b*s)/s\n\
    \t\treturn ((Math.pow(x1,2)+Math.pow(y1,2)+Math.pow(x2,2)+Math.pow(y2,2))-(Math.pow(x1,2)+Math.pow(y1,2)+Math.pow(x3,2)+Math.pow(y3,2))-(Math.pow(x2,2)+Math.pow(y2,2)+Math.pow(x3,2)+Math.pow(y3,2)))\n\
    \t} else if (a>b && b>c && a>c){\n\t\ts=(a+b+c)/2\n\t\tx1=(a*s-b*c)/s\n\t\tx2=(b*s-a*c)/s\n\
    \t\ty1=(a*s-1*b*c)/s\n\t\ty2=(b*s-1*a*c)/s\n\t\treturn ((Math.pow(x1,2)+Math.pow(y1,2)+Math.pow(x2,2)+Math.pow(y2,2)))\n\
    \t} else if (a>b && a>c && b>c){\n\t\ts=(a+b+c)/2\n\t\tx1=(a*s-b*c)/s\n\t\tx2=(b*s-a*c)/s\n\
    \t\ty1=(a*s-1*b*c)/s\n\t\ty2=(b*s", "\tvar total = 0;\n\tvar area;\n\n\t// Check\
    \ if any of the sides are invalid\n\tif(a < 0 || b < 0 || c < 0 || a + b > c ||\
    \ a + c > b){\n\t\treturn -1;\n\t}\n\n\t// Add the area of every triangle edge\
    \ \n\ttotal += a * b;\n\ttotal += b * c;\n\ttotal += c * a;\n\n\t// Return the\
    \ calculated area rounded to two decimal points\n\treturn Math.round(total*100)/100;\n\
    }", "    var s = 0;\n    \n    if((a + b > c) && (a + c > b) && (b + c > a))\n\
    \        s = a + b + c;\n    else\n        s = -1;\n    \n    return Math.round((s/2)*100)/100\n\
    }\n\n", "  let area_a = a;\n  let area_b = b;\n  let area_c = c;\n\n  if(area_c\
    \ > area_a + area_b) return -1;\n  if(area_c < area_a + area_b) return -1;\n\n\
    \  if(area_a < area_b + area_c) return -1;\n  if(area_a < area_b) return -1;\n\
    \  if(area_b < area_c) return -1;\n  if(area_b >= area_c) return -1;\n  \n  return\
    \ area_c * area_c / (area_a + area_b - area_c);\n}\n", "    var s = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c),\n        d = Math.abs(a) * Math.abs(b) * Math.abs(c),\n\
    \        g = Math.sqrt(Math.pow(Math.abs(a), 2) + Math.pow(Math.abs(b), 2) + Math.pow(Math.abs(c),\
    \ 2)),\n        p = 2 * Math.abs(a * b) * Math.pow(g, 0.5);\n    return Math.round(s/d*10000)/10000\
    \ < p ? Math.round(s/d*10000)/10000 : -1\n}\n", "\tlet s;\n\tif (a + b > c)\n\t\
    \ts = a + b - c;\n\telse \n\t\ts = b - c;\n\treturn s /2;\n}", "    var area =\
    \ 0; // area is defined as sum of two sides\n    \n    // if the sides make the\
    \ triangle return the area\n    if (a + b > c){\n        // add sides greater\
    \ than the third to the area\n        area += a + b; \n    }\n    // otherwise\
    \ add the sides less than the third to the area\n    else {\n        area += a;\n\
    \    }\n    // return the sum of the two sides\n    return area;\n}\n", "    let\
    \ s = a + b + c;\n    s = s <= 0 ? 0 : s;\n    return Math.round(s / (b*b));\n\
    }\n", "\tif (b + c < a || a + b < c) return -1\n\tif (a + c < b + c) return -1\n\
    \treturn (a * b * c) / Math.sqrt(a * a + b * b + c * c)\n}\n", "    // Write your\
    \ code here\n    return (b*b + c*c) - (a*a);\n}\n", "\treturn Math.abs((Math.sqrt(Math.pow((a-b),2)+Math.pow((a-c),2)+Math.pow((b-c),2)))/2);\n\
    }\n<|/ file dstars=1 source=github |>\n<| c |>\nYou might want to replace `c`\
    \ with `b`, as that would make it valid.  Of course, the real problem is that\
    \ your function only takes one argument.  The argument you pass in is *not* the\
    \ three sides, it's a distance from the origin.  That means it's not even a triangle\
    \ at all.\n<|/ c |>\n<| c |>\nThis question appears to be off-topic because it\
    \ belongs on codegolf\n<|/ c |>\n<| c |>\nIt does not. There are many solutions\
    \ to this type of question. It is not off topic.\n<|/ c |>\n<| a dscore=1 tags=javascript\
    \ |>\nI used the formula from this site\nhttp://www.mathsisfun.com/geometry/area-circle.html\n\
    <code>", "    if (a > b && a > c)\n        return Math.sqrt(a * b * c);\n    else\
    \ if (b > c && b > a)\n        return Math.sqrt(b * c * a);\n    else\n      \
    \  return Math.sqrt(c * a * b); \n}\n", "\t\n\t// Return null if the sum of the\
    \ three sides is greater than the third side.\n\tif( a + b > c || b + c > a ||\
    \ a + c > b ){\n\t\treturn -1;\n\t}\n\t\n\t// If all the three sides are equal,\
    \ then the triangle is valid\n\tif(a == b && b == c && c == a){\n\t\treturn a\
    \ + b + c ;\n\t}\n\t\n\t// Otherwise, return the area of the triangle rounded\
    \ to 2 decimal points (if valid)\n\telse{\n\t\t\n\t\t// Triangles have an area\
    \ equal to the sum of their sides. If all \n\t\t// sides are equal, then the area\
    \ is equal to their sum.\n\t\tif(a == b && b == c){\n\t\t\treturn a + b + c ;\n\
    \t\t}\n\t\t\n\t\t// If two sides are equal, then the triangle is valid if both\
    \ \n\t\t// sides are greater than the third side.\n\t\telse if(a == b){\n\t\t\t\
    if( b > c ){\n\t\t\t\treturn Math.sqrt( (a + b) * (c - b) * (c - a) * (b - a)\
    \ ) / Math.sqrt( (b - a) * (b - a) * (c - a) * (c - a) ) ;\n\t\t\t}\n\t\t\treturn\
    \ Math.sqrt( (b - a) * (a - b) * (a - c) * (b - c) ) / Math.sqrt( (b - a) * (b\
    \ - a) * (a - c) * (a - c) ) ;\n\t\t}\n\t\t\n\t\t// If two sides are equal, then\
    \ the triangle is valid if both \n\t\t// sides are greater than the third side.\n\
    \t\telse if(a == c){\n\t\t\tif( c > b ){\n\t\t\t\treturn Math.sqrt( (b - a) *\
    \ (c - b) * (c - a) * (b - a) ) / Math.sqrt( (c - a) * (a - c) * (a - c) * (c\
    \ - a) ) ;\n\t\t\t}\n\t\t\treturn Math.sqrt( (a - c) * (c - a) * (a - b) * (b\
    \ - c) ) / Math.sqrt( (a - c) * (c - a) * (a - b) * (a - b) ) ;\n\t\t}\n\t\t\n\
    \t\t// If three sides are equal, then the triangle is valid if all three \n\t\t\
    // sides are greater than the third side.\n\t\telse if(a == b == c){\n\t\t\treturn\
    \ Math.sqrt( (b - a) * (b - a) * (c - a) * (c - a) ) ;\n\t\t}\n\t\t\n\t\t// If\
    \ three sides are equal, then the triangle is valid if all three \n\t\t// sides\
    \ are greater than the third side.\n\t\telse{\n\t\t\treturn -1 ;\n\t\t}\n\t}\n\
    }\n", "  return Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)\
    \ + Math.pow(c, 2));\n}\n", "    return Math.round( (a*b) + (b*c) ) / 2 ;\n}\n\
    </code>\n<|/ a dscore=1 tags=javascript,math |>\n<| a dscore=1 |>\n<code>", " \
    \   var s = (a + b + c) / 2;\n    if(Math.abs(a - b) < Math.abs(a - c)){\n   \
    \     if(Math.abs(s - c) < Math.abs(s - b)){\n            return s * s\n     \
    \   }\n        return s\n    }\n    if(Math.abs(b - c) < Math.abs(b - a)){\n \
    \       if(Math.abs(s - a) < Math.abs(s - b)){\n            return s * s\n   \
    \     }\n        return s\n    }\n    if(Math.abs(c - a) < Math.abs(c - b)){\n\
    \        return s\n    }\n    return -1;\n}\n</code>\n<|/ a dscore=4 tags=python,javascript,python-2.7\
    \ |>\n<| a |>\nI used the code from user1919889, and made it a little more general\
    \ by allowing different triangles. I also wrote an add() function which can add\
    \ all three sides together to make a new triangle from 2 sides, rather than just\
    \ one side. The code is here:\n<code>\nclass Triangle:\n\n    def __init__(self,a,b,c):\n\
    \        self.a = a\n        self.b = b\n        self.c = c\n\n    def valid(self):\n\
    \        if(self.a + self.b + self.c != 0): return True\n        else:\n     \
    \       return False\n\n    def add(self,a,b,c):\n        self.a = a\n       \
    \ self.b = b\n        self.c = c\n\n    def area(self):\n        if(self.valid()):\
    \ return triangle_area(self.a,self.b,self.c)\n        else: return -1\n\n    def\
    \ perimeter(self):\n        if(self.valid()): return triangle_perimeter(self.a,self.b,self.c)\n\
    \        else: return -1\n\ndef triangle_area(a,b,c):\n    s = (a + b + c) / 2.0\n\
    \    if(abs(a - b) < abs(a - c)):\n        if(abs(s - c) < abs(s - b)):\n    \
    \        return s*s\n        return s \n    if(abs(b - c) < abs(b - a)):\n   \
    \     if(abs(s - a) < abs(s - b)):\n            return s*s\n        return s \n\
    \    if(abs(c - a) < abs(c - b)):\n        return s \n    return -1\n\ndef triangle_perimeter(a,b,c):\n\
    \    s = (a + b + c) / 2.0\n    if(abs(a - b) < abs(a - c)):\n        if(abs(s\
    \ - c) < abs(s - b)):\n            return s\n        return s \n    if(abs(b -\
    \ c) < abs(b - a)):\n        if(abs(s - a) < abs(s - b)):\n            return\
    \ s \n        return s \n    if(abs(c - a) < abs(c - b)):\n        return s \n\
    \    return -1\n\n#Test cases\n\n#Test 1\ntriangle1 = Triangle(1,2,3)\nprint(triangle1.valid())\n\
    print(triangle1.area())\nprint(triangle1.perimeter())\nprint()\n\n#Test 2\ntriangle2\
    \ = Triangle(1,2,4)\nprint(triangle2.valid())\nprint(triangle2.area())", "  let\
    \ area = 0;\n  let triangle_length_a = Math.abs(a);\n  let triangle_length_b =\
    \ Math.abs(b);\n  let triangle_length_c = Math.abs(c);\n  area = (((b*b) + (c*c))\
    \ - ((a*a) + (b*b)) )/ 2;\n  if (area >= 0){\n    return area;\n  }else{\n   \
    \ return -1;\n  }\n}\n  ", "    if (a + b <= c){\n        return Math.sqrt( (Math.pow(b,2))-(4*a*c)\
    \ );\n    }else{\n        return -1;\n    }\n}\n</code>\n<|/ a tags=javascript,geometry,triangle\
    \ |>\n<| c |>\nI appreciate your answer! You probably should explain how that\
    \ function works.\n<|/ c |>\n<| c |>\nI made some explanations, hope it helps.\n\
    <|/ c |>\n<| c |>\nThank you! I appreciate it.\n<|/ c |>\n<| a |>\nI know this\
    \ is an old question, but the other answers haven't really been updated with new\
    \ triangle area calculations.  It can be done pretty easily using the Pythagorean\
    \ Theorem to find the hypotenuse, and then using the Heron's formula to calculate\
    \ the area.\n<code>", "    var sides = [a, b, c];\n    var sum = 0;\n\n    for(var\
    \ i = 0; i < 3; i++){\n        sum += sides[i];\n    }\n\n    return Math.round(sum\
    \ / 2) / 2;\n}\n", "  if(a+b > c){\n    return triangle_area(b,c,a);\n  }\n  if(a+c\
    \ > b){\n    return triangle_area(c,a,b);\n  }\n  if(b+c > a){\n    return triangle_area(a,b,c);\n\
    \  }\n  return 0.0;\n}\n\n", "  var total = 0;\n  var area_ab = area_of_triangle(a,\
    \ b, c);\n  var area_ba = area_of_triangle(b, a, c);\n  var area_ca = area_of_triangle(c,a,b);\n\
    \  if(area_ab > area_ca && area_ab > area_ba){\n    return area_ab;\n  }\n  else\
    \ if(area_ab < area_ca && area_ab < area_ba){\n    return area_ca;\n  }\n  else{\n\
    \    return area_ba;\n  }\n}\n", "  // Write your code here\n  var s = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c)\n  if (s > 3){\n    s = Math.round((s/3)*100)/100\n\
    \  }\n  return s\n}\n", "   a = Math.abs(a);\n   b = Math.abs(b);\n   c = Math.abs(c);\n\
    \   if (a + b > c) return -1;\n   if (a + c > b) return -1;\n   if (b + c > a)\
    \ return -1;\n   if (a >= b + c) return (a * a + b * b + c * c)/2; // Pythagorean\
    \ theorem\n   return -1;\n}\n</code>\n<|/ a tags=python,python-3.x,geometry,math,algorithm\
    \ |>\n<| c |>\nThis answer is also very nice and clean.\n<|/ c |>\n<| a tags=python,python-3.x,geometry,math,algorithm\
    \ |>\nI prefer a more readable implementation than a one-liner with lots of math\
    \ operations.\n<code>\ndef area_of_tri(side1, side2, side3):\n    # all inputs\
    \ must be positive\n    side1, side2, side3 = map(int, (side1, side2, side3))\n\
    \    # check that they form a valid triangle\n    if side1 + side2 > side3:\n\
    \        return -1\n    if side1 + side3 > side2:\n        return -1\n    if side2\
    \ + side3 > side1:\n        return -1\n    # return area as rounded fraction of\
    \ 4\n    return (((side1 + side2 + side3) / 4) * 4)\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThe `return` statement is a bit unnecessary\n<|/ c |>\n<| c |>\nNot a\
    \ big deal but for my taste I would prefer `return (side1 + side2 + side3) / 4.0`.\
    \ It's the clearest to me.\n<|/ c |>\n<| c |>\nThis doesn't work. Triangle sides\
    \ can not be equal and greater than one or zero.\n<|/ c |>\n<| c |>\nThis implementation\
    \ returns integer results as opposed to floating point or decimal results.\n<|/\
    \ c |>\n<| c |>\nThis also returns integer results for negative sides. I wrote\
    \ a solution which doesn't return integer results and returns floats.\n<|/ c |>\n\
    <| a dscore=5 |>\nFor a triangle with sides a and b you can do:\n<code>\nimport\
    \ math\ndef triangle_area(a,b,c):\n     return (math.sqrt(math.pow(a,2) + math.pow(b,2))*math.pow(c,2))/4\n\
    </code>\nFor non-integer sides you can use this instead:\n<code>\nimport math\n\
    def triangle_area(a,b,c):\n     return (math.sqrt(math.pow(a,2) + math.pow(b,2)\
    \ + math.pow(c,2))*2)/4\n</code>\n<|/ a tags=python,python", "    // Return area\
    \ if sides are all integers\n    if (a + b <= c && a + c <= b && b + c <= a){\n\
    \        var s1 = (a+b) * (a+b)/2;\n        var s2 = (c+a) * (c+a)/2;\n      \
    \  var s3 = (a+c) * (a+c)/2;\n        var s4 = (b+c) * (b+c)/2;\n        return\
    \ Math.sqrt(s1+ s2 + s3 + s4);\n    }\n    // Return area if any side is a float\n\
    \    else{\n        if (a!=b){\n            if (c!=a){\n                if (a!=c){\n\
    \                    if (b!=c){\n                        return (a+b+c) / 2;\n\
    \                    }\n                    return (a+b+a) / 2;\n            \
    \    }\n                return (b+a+b) / 2;\n            }\n            return\
    \ (a+c+c) / 2;\n        }\n        return (b+b+c) / 2;\n    }\n}\n", "    // Sum\
    \ of the sides\n    let s = a + b + c;\n    \n    // Two sides can be valid triangle\
    \ if the sum of any two sides is greater than the third.\n    // Check if valid\
    \ triangle and return area of triangle\n    if (s >= a + c && s >= b + a && s\
    \ >= c + b){\n        return Math.sqrt(Math.pow(s - a, 2) + Math.pow(s - b, 2)\
    \ + Math.pow(s - c, 2))\n    }\n    return -1;\n}\n", "    if (a + b > c){\n \
    \       return -1;\n    }\n    if (a + c > b){\n        return -1;\n    }\n  \
    \  if (b + c > a){\n        return -1;\n    }\n\n    area = Math.sqrt(Math.pow(a\
    \ + b, b) + Math.pow(b + c, c) + Math.pow(a + c, a));\n\n    if (area >= 1){\n\
    \        return area;\n    }else{\n        return -1;\n    }\n}\n", "  var s,\
    \ area;\n  if(a == b && b == c){\n    area = a * Math.sqrt(3) / 2;\n  } else if(a\
    \ == b){\n    area = Math.sqrt(a * a + b * b);\n  } else if(a == c){\n    area\
    \ = Math.sqrt(a * a + c * c);\n  } else if(b == c){\n    area = Math.sqrt(b *\
    \ b + c * c);\n  } else if(a > b){\n    s = (a + b) / 2;\n    area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  } else if(a > c){\n    s = (a + c) / 2;\n\
    \    area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  } else if(b > c){\n\
    \    s = (a + b) / 2;\n    area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  }\n  return Math.round(area * 100) / 100;\n}", "  return (a+b+c)/Math.sqrt(Math.pow(a,2)+Math.pow(b,2)+Math.pow(c,2))\n\
    }\n", "    if(a > b + c || b > c + a || c > a + b){\n        return -1;\n    }\n\
    \    var l1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    var l2 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n    var area = Math.round(l1 * l2);\n    return area;\n\
    }\n", "    // TODO: Return -1\n    return triangleArea(a, b, c)\n}\n", "    let\
    \ valid = (a>0 && b>0 && c>0) || (a>0 && c>0 && b>0) || (b>0 && c>0 && a>0) \n\
    \    if (valid) return Math.round((Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2)) + Math.pow(c, 2))) * 100)/100\n    else return -1;\n}", "\tif((a+b+c) >\
    \ 9)\n\t\treturn -1;\n\telse\n\t\treturn Math.abs((a+b+c)/2);\n}\n</cell>\n<text>\n\
    Exercise: Given a number n between 1 and 100, calculate the sum of the first n\
    \ even numbers. Then calculate the sum of the first n odd numbers.\n\n</text>\n\
    <cell>", "  if(a + b > c){\n    return -1\n  }\n  else if(a + c > b){\n    return\
    \ -1\n  }\n  else if(b + c > a){\n    return -1\n  }\n  return Math.round( ((a\
    \ + b + c)/2) * 100 ) / 100\n}\n", "    var s = a + b + c;\n    if(s > a * b *\
    \ c){\n        s = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return\
    \ (s / 2)\n}\n", "\tvar triangle_a_b = a/b;\n\tvar triangle_c_b = c/b;\n\n\tvar\
    \ area_triangle = triangle_a_b * triangle_c_b;\n\n\tif(area_triangle > 1){\n\t\
    \tarea_triangle = Math.round(area_triangle * 100)/100;\n\t}\n\n\treturn area_triangle;\n\
    }\n", "\tvar s = (a+b+c)/2;\n\tif (s > a&&s<b&&s>c) return s;\n\tif (s > b&&s<c&&s>a)\
    \ return s;\n\tif (s > c&&s<a&&s>b) return s;\n\treturn -1;\n}\n", "    if((b\
    \ > c) && (a < c)){\n        return (a+b+c)/2;\n    }\n    else if((c > b) &&\
    \ (a<b)){\n        return (a+b+c)/2;\n    }\n    else if((b > a) && (a < c)){\n\
    \        return (a+b+c)/2;\n    }\n    else{\n        return -1;\n    }\n}", "\t\
    var l1 = Math.abs(a);\n\tvar l2 = Math.abs(b);\n\tvar l3 = Math.abs(c);\n\tvar\
    \ side = l1 + l2 + l3;\n\tvar area = l1 * l2;\n\tvar bsq = l1 * l3;\n\tvar csq\
    \ = l2 * l3;\n\tif(side == l1){\n\t\treturn area == l2 ? bsq + csq : csq + bsq;\n\
    \t}else if(side == l2){\n\t\treturn area == l1 ? bsq + csq : csq + bsq;\n\t}else\
    \ if(side == l3){\n\t\treturn area == l1 ? bsq + csq : csq + bsq;\n\t}else{\n\t\
    \treturn -1;\n\t}\n}\n", "  if(a+b+c === 0){\n    return 0\n  }\n  if((Math.abs(a-b)\
    \ > Math.abs(b-c)) || (Math.abs(b-c) > Math.abs(a-c))){\n    return -1\n  }\n\
    \  else{\n    const sides = [a, b, c]\n    const area = sides.reduce((acc, curr)\
    \ => {\n      return acc + Math.abs(curr/2)\n    }, 0);\n    if(area > 0){\n \
    \     return Math.round(2*area/3)\n    }\n    else{\n      return -1\n    }\n\
    \  }\n}\n\nconst result = triangle_area(12, 9, 4)\n", "    var s = a + b + c;\n\
    \    // Check if a > b\n    if(s > b){\n        // Check if b > c\n        if(s\
    \ > c){\n            // Check if a + b > c\n            return 0;\n        } else\
    \ {\n            // Check if a + c > b\n            return 1/2 * c;\n        }\n\
    \    } else {\n        // Check if b > a\n        if(s > a){\n            // Check\
    \ if a + c > a\n            return 1/2 * a;\n        } else {\n            //\
    \ Check if a + b > b\n            return 1/2 * b;\n        }\n    }\n}\n", " \
    \   var sum = a + b + c;\n    return Math.round(sum/2);\n}\n", "    a = Math.abs(a);\n\
    \    b = Math.abs(b);\n    c = Math.abs(c);\n    if(a + b > c){\n        return\
    \ 0;\n    }\n    var s = a * b + c * b;\n    if(s < 0){\n        return -1;\n\
    \    }\n    var h = b * b - 4 * c * c;\n    var x = a * (h / s);\n    var y =\
    \ c * (h / s) - a * x / s;\n    var z = a * c / s - b * x / s;\n    if(Math.abs(z)\
    \ < 0.001){\n        return 0;\n    }\n    return Math.sqrt(x * x + y * y + z\
    \ * z);\n}\n", "    if((a+b)>c && (a+c)>b && (b+c)>a){\n        var area = (Math.sqrt(Math.pow(a,\
    \ 2)+Math.pow(b, 2)+Math.pow(c, 2))) / 2;\n        return area;\n    }else{\n\
    \        return -1;\n    }\n}\n", "\tvar abs = Math.abs;\n\tvar cp = a + b + c;\n\
    \tvar det = abs (a * c - b * b + c * b);\n\tif (det < 0){\n\t\tcp *= -1;\n\t\t\
    det = -det;\n\t}\n\treturn cp * Math.sqrt(det);\n}\n\n", "    if(a < 0 || b <\
    \ 0 || c < 0 || a > b || a > c || b > c) return -1\n    let sum = b + c\n    if(sum\
    \ > a) return -1\n    if(sum < b) return -1\n    return (b - a) * Math.sqrt((b\
    \ - a) * (c - b) * (a - c)) //(a - (c-b) * (a-b)) * (b - (a-c) * (b-a))\n}", " \
    \ var s = (a+b+c)/2;\n  if(s>=2*b){\n    return Math.abs(s-(2*b));\n  }\n  else\
    \ if(s>=2*c){\n    return Math.abs(s-(2*c));\n  }\n  else if(s>=a){\n    return\
    \ Math.abs(s-(a));\n  }\n  else if(s>=b){\n    return Math.abs(s-(b));\n  }\n\
    \  else if(s>=c){\n    return Math.abs(s-(c));\n  }\n  return -1;\n}\n", "   \
    \ // Make sure the parameters are all numbers, otherwise return -1\n    if (typeof\
    \ a !== \"number\" || typeof b !== \"number\" || typeof c !== \"number\") return\
    \ -1;\n\n    // Sum up the total length of the sides \n    var s = a + b + c;\n\
    \n    // Make sure the side lengths are all greater than zero and less than two,\
    \ otherwise return -1\n    if (a < 0 || b < 0 || c < 0 || s <= 0) return -1;\n\
    \n    // Now calculate the area of the triangle by using the Heron's Formula\n\
    \    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    // Round the\
    \ area to 2 decimal points if the total length of the sides\n    // is greater\
    \ than three decimal places. If the area is already less than three\n    // decimal\
    \ places then return -1\n    return area >= 3 ? Math.round(area * 100) / 100 :\
    \ -1;\n}\n", "    if (a<b && b<c){\n        return (a+b+c)/2;\n    }\n    if (a<c){\n\
    \        return -1\n    }\n    if (b<c){\n        return -1\n    }\n}", "    if\
    \ (Math.abs(a) > Math.abs(b) + Math.abs(c)) return -1\n    if (Math.abs(a) > Math.abs(c)\
    \ + Math.abs(b)) return -1\n    if (Math.abs(b) > Math.abs(c)) return -1\n   \
    \ \n    let result = (Math.abs(a) + Math.abs(b) + Math.abs(c)) / 2\n    if (Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c) == result) return result\n    \n    if (a < 0 &&\
    \ b < 0 || b < 0 && a < 0 || c < 0 && a < 0 || c < 0 && b < 0 || a < 0 && c <\
    \ 0) return -1\n    return result\n}\n", "  if(a==b&&b==c){\n    return 0\n  }\n\
    \  if(a + b > c){\n    return -1\n  }\n  if(a + c > b){\n    return -1\n  }\n\
    \  if(b + c > a){\n    return -1\n  }\n  return Math.sqrt(Math.pow(a-b,2)+Math.pow(b-c,2)+Math.pow(c-a,2))\n\
    }\n", "    var s = a + b + c;\n    return (s >= a) ? s / Math.sqrt(s * (s-a) *\
    \ (s-b) * (s-c))\n                  : -1\n}\n", "\tif (a < b && a < c) {\n\t\t\
    return 0;\n\t}\n\telse if (b < a && b < c) {\n\t\treturn Math.sqrt(Math.pow(b,2)-Math.pow(a,2));\n\
    \t}\n\telse if (c < a && c < b) {\n\t\treturn Math.sqrt(Math.pow(b,2)-Math.pow(c,2));\n\
    \t}\n\telse {\n\t\treturn -1;\n\t}\n}\n", "    if( a + b >= c && a + c >= b &&\
    \ b + c >= a ){\n        return Math.round( (a + b + c) / 2 );\n    }else{\n \
    \       return -1;\n    }\n}\n", "    var area = ((b - a)*(c - a)) - ((a*a) -\
    \ (b*b));\n    return ((area>=0)?(area / 2):-1);\n}\n</code>\n<|/ a tags=java,javascript,geometry\
    \ |>\n<| c |>\nI do not see how this approach is any different from my answer,\
    \ except that you are doing all the work on the client side.\n<|/ c |>\n<| c |>\n\
    You are right - it would be better to calculate it in the backend and send it\
    \ to the client.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. As far\
    \ as I can tell, this is much more efficient that using a formula to calculate\
    \ the area. Also it avoids rounding errors due to float precision issues.\n<|/\
    \ c |>\n<| c |>\nThis is incorrect as this does not return the area of the triangle\
    \ rounded to 2 decimal places.\n<|/ c |>\n<| c |>\n: It's not a round of any kind.\
    \ It's rounding to exactly two decimal places when the area is exactly equal to\
    \ the number of sides.\n<|/ c |>\n<| a |>\n<code>\nvar triangleArea = function(base,height,width)\
    \ {\n  return base*(height*width);\n};\n", "\tif((a===0 && b===0 && c===0) ||\
    \ Math.abs(a-b) <= Math.abs(b-c)){\n\t\treturn 0\n\t}\n\tlet s = (a + b + c) /\
    \ 2\n\treturn Math.abs(Math.sqrt(s*(s-a)*(s-b)*(s-c))) / 2 \n}\n", "    let s\
    \ = 0;\n    let t = 0;\n    let area = 0;\n    if (b <= a && c <= a && b <= c){\n\
    \        s = (a + b + c) / 2\n        area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    if (a <= b && c <= b && a <= c){\n        t = (a + b + c) / 2\n  \
    \      area = Math.sqrt(t*(s-a)*(s-b)*(s-c));\n    }\n    if (a <= b && b <= c\
    \ && a <= c){\n        t = (a + b + c) / 2\n        area = Math.sqrt(t*(s-a)*(s-b)*(s-c));\n\
    \    }\n    if (c <= a && b <= c && c <= b){\n        s = (a + b + c) / 2\n  \
    \      area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;\n}", "\t\
    let area = 0;\n\tif (a + b > c){\n\t\tarea = area + (c - a) * (b - c);\n\t}\n\t\
    if (b + c > a){\n\t\tarea = area + (a - b) * (c - a);\n\t}\n\tif (a + c > b){\n\
    \t\tarea = area + (b - a) * (a - b);\n\t}\n\treturn area / 2;\n}\n\n", "    if(a==b){\n\
    \        if(b==c){\n            return 0;\n        }else{\n            return\
    \ (a*c)-(b*b);\n        }\n    }else if(a==c){\n        if(b==c){\n          \
    \  return 0;\n        }else{\n            return (a*a)-(b*b);\n        }\n   \
    \ }else{\n        return -1;\n    }\n}\n", "    if(a + b > c && a + c > b && b\
    \ + c > a){\n        return (a + b + c) / 2\n    }else{\n        return -1\n \
    \   }\n}\n</code>\n<|/ a tags=java,algorithm,javascript |>\n<| c |>\nThe question\
    \ asked for JavaScript solutions, not Java.  And this solution only checks one\
    \ side!\n<|/ c |>\n<| c |>\nI agree with you, but it's fairly obvious to me that\
    \ if someone wants to learn programming that they shouldn't be afraid of learning\
    \ Java. The question is tagged with both Java and JavaScript because it's relevant\
    \ for people who want to learn both languages.\n<|/ c |>\n<| c |>\nHe pointed\
    \ out that he is learning Java, which is why I suggested this solution.  I didn't\
    \ want to confuse him or myself further.\n<|/ c |>\n<| c |>\nNo need to apologize\
    \ - your solution is correct and I upvoted it.  I just wanted to point out that\
    \ the Java tag means people will be more likely to find your solution if you include\
    \ an explanation of how it works.  And I agree with you that it's fairly obvious\
    \ to you that this is Java.\n<|/ c |>\n<| c |>\nI don't understand why you choose\
    \ to return the area instead of the sum of the two sides.\n<|/ c |>\n<| a dscore=5\
    \ tags=java,algorithm,javascript |>\nI believe the most straightforward way to\
    \ do this would be to use Math.min(a, b) and Math.max(a, b) to determine the min/max\
    \ values, then add them up.  Since this sum is always less than the third, we\
    \ know that all three sides are larger than the third side.\n<code>\npublic int\
    \ getArea(int a, int b, int c) {\n    int min = (a < b) ? a : b;\n    int max\
    \ = (a < b) ? b : c;\n    int sum = min + max;\n    if (sum < c) {\n        return\
    \ -1;\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis has the disadvantage\
    \ of being O(n) instead of O(1).\n<|/ c |>\n<| c |>\nThis also has the disadvantage\
    \ of being a lot slower than the accepted answer.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer.\n<|/ c |>\n<| c |>\nI don't see why this has more upvotes\
    \ than all the others. It just doesn't seem to answer the question properly. For\
    \ example, it doesn't check that c < a < b ", "  let a1 = Math.abs(a-b),\n   \
    \   a2 = Math.abs(a-c),\n      a3 = Math.abs(b-c);\n  if(a1 + a2 > a3){\n    return\
    \ Math.round( (a1 * a2 + a3 )/2 );\n  }\n  return -1;\n}\n", "\tif(a+b > c){\n\
    \t\treturn -1\n\t}else{\n\t\tlet s = (a+b+c)/2\n\t\tlet area = Math.sqrt(s*(s-a)*(s-b)*(s-c))/2\n\
    \t\treturn area\n\t}\n}\n", "    //Sum the sides\n    var s = a + b + c\n    if(s\
    \ == 0 || s % 2 == 0)\n        return -1\n    //Calculate the area of the triangle\n\
    \    return Math.sqrt(s * (s - a) * (s - b) * (s - c))/2/Math.sqrt(3) / 2\n}\n",
  "    var area = (a + b + c) / 2;\n    if(a + b > c){\n        return area;\n   \
    \ }\n    return (area > b) ? 0 : -1;\n}\n</cell>\n<cell>\n# TEST TRIANGLE AREA\
    \ (3b)\nTest.assertEquals(triangle_area(1, 2, 3), 6, \"triangle_area() should\
    \ return 6.\");\nTest.assertEquals(triangle_area(3, 4, 5), 6, \"triangle_area()\
    \ should return 6.\");\nTest.assertEquals(triangle_area(5, 8, 7), -1, \"triangle_area()\
    \ should return -1.\");\nTest.assertEquals(triangle_area(20, 5, 10), -1, \"triangle_area()\
    \ should return -1.\");\n</cell>\n<text>\nProblem 4 (10 points)\nThe function\
    \ closest_angle_point_pair(a, b, c) takes three real numbers as input and returns\
    \ one real number as the answer. The function should return the smallest angle\
    \ from any three points a to b, b to c, and c to a.\n\nThe function uses the formula\
    \ to determine the closest angle from any three points. This is called the Haversine\
    \ formula, which you may recall from high school. The formula is given in the\
    \ following form:\n\n$$ \\theta = acos( \\frac{r^2}{a^2 + b^2 + c^2}) $$\n\nwhere\
    \ r is the distance between points a, b, and c.\n\nThe formula will take three\
    \ real numbers and return one number. The return value must be an angle in radians.\
    \ The formula will produce an error if a, b, or c are zero. For example, given\
    \ the inputs (5, 10, 21), the function should return 7.2.\n\nHint 1: If you have\
    \ two points, p1 and p2, the formula above will produce an error if p1 and p2\
    \ are the same point. This is because the distance between p1 and p2 is zero.\
    \ You can use the absolute value of the difference to prevent this from happening.\n\
    \nHint 2: You may use the following variables from the function triangle_area(a,\
    \ b, c) to help you compute the formula in the previous hint.\n\nHint 3: You may\
    \ use either the Math.sqrt() or the hypot() function from the math module in the\
    \ Python Standard Library. This will be helpful.\n\n\n</text>\n<cell>\nimport\
    \ math\n# Compute an approximate circle radius (in radians) for a triangle given\
    \ three points\n# a, b, and c. Use the formula for computing the circumcircle\
    \ of a triangle\n# and the Haversine formula to calculate the angle between any\
    \ two points.\ndef closest_angle_point_pair(a, b, c):\n    # Write code here\n\
    \    return -1\n</cell>\n<cell>\n# TEST APPROXIMATE CIRCLE RADIUS (4b)\nTest.assertEquals(closest_angle_point_pair(5,\
    \ 10, 21), 7.2, \"", "  var a = Math.abs(a), b = Math.abs(b), c = Math.abs(c);\n\
    \  if(a + b > c){ \n    return -1; \n  }\n  if(b + c > a){ \n    return -1; \n\
    \  }\n  if(b + c > a){ \n    return -1; \n  }\n  if(b + c > a){ \n    return -1;\
    \ \n  }\n  if(a + b > c){ \n    return -1; \n  }\n  return ((0.5 * (b * c)) +\
    \ ((b * b) - (a * a)))/2.0;\n}\n", "  var s = (a + b + c) / 2;\n  if( (s-a) *\
    \ (s-b) * (s-c) <= 0)\n    return -1\n  else\n    return Math.sqrt(s * (s-a) *\
    \ (s-b) * (s-c))\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

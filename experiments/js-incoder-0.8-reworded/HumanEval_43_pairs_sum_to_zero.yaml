name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
  \ true if there are two distinct elements in the array that\n// sum to zero, and\
  \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
  // false\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["    return l.reduce(function(a,b){\n        if(Math.abs(a)+Math.abs(b)==0)\
    \ return false;\n        return a;\n    },0)==0\n}\n", "  var j = 0;\n  var found\
    \ = false;\n  var index = 0;\n  var sum = 0;\n  while (j < l.length){\n    if\
    \ (sum == 0) {\n      found = true;\n    }\n    sum = sum + l[j];\n    index++;\n\
    \    if (sum < 0) {\n      sum = sum + l[j];\n      index++;\n    }\n    j++;\n\
    \  }\n  return found;\n}", "    return l.reduce((a, b) => (a + b) <= 0 ? false\
    \ : true);\n}\n\n", "    var n = l.length\n    for(var i = 0; i<n; i++){\n   \
    \     var x = l[i]\n        for(var j=i; j<n; j++){\n            var y = l[j]\n\
    \            if(Math.abs(x-y) == 0){\n                return false\n         \
    \   }\n        }\n    }\n    return true\n}", "    for(var i=1; i<l.length; ++i){\n\
    \        if(l[i-1]+l[i] !== 0){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "\treturn (_.uniq(_.sortBy(_.filter(l, function(num){\
    \ return num != 0;})).slice(1)).length == 0);\n}\n", "    for (var i=0; i < l.length;\
    \ i++){\n        if (l[i] + l[i+1] != 0){\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n", "  //your code here\n  var i = 0;\n  var j\
    \ = 0;\n  var pairs = false;\n  for(; i < l.length; i++){\n    for(; j < l.length;\
    \ j++){\n      if(i != j && l[i] + l[j] == 0){\n        pairs = true;\n      \
    \  break;\n      }\n    }\n    if(pairs) break;\n  }\n  return pairs;\n}", " \
    \   l.sort()\n    var i, j, sum_of_zeros = 1\n    for (i = 0; i < l.length; i++)\n\
    \    {\n        for (j = i + 1; j < l.length; j++)\n        {\n            if\
    \ (l[i] + l[j] == 0)\n            {\n                sum_of_zeros ++\n       \
    \     }\n        }\n        if (sum_of_zeros > 1)\n        {\n            return\
    \ false\n        }\n    }\n    return true\n}", "    var i, j, tmp;\n    for (i\
    \ = 0; i < l.length; i++) {\n        for (j = 0; j < l.length; j++) {\n      \
    \      tmp = 0;\n            if (i !== j) {\n                tmp = l[i] + l[j];\n\
    \            }\n            if (tmp === 0) {\n                return true;\n \
    \           }\n        }\n    }\n    return false;\n}", "  return l.length < 3\
    \ ? false : l.filter(function(n, index, arr){\n    return arr.indexOf(n) == index;\n\
    \  }).some(function(n, index, arr){\n    return n == 0;\n  });\n}", "  var new_arr\
    \ = [];\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < l.length &&\
    \ j < l.length){\n    if(l[i] + l[j] === 0){\n      new_arr.push(l[i]);\n    \
    \  new_arr.push(l[j]);\n      count++;\n      i++;\n      j++;\n    }\n    else\
    \ if(l[i] + l[j] > 0){\n      i++;\n    }\n    else if(l[i] + l[j] < 0){\n   \
    \   j++;\n    }\n    else{\n      i++;\n      j++;\n    }\n  }\n  return count\
    \ < 2;\n}\n", "\tvar i,\n\t\tlen = l.length,\n\t\tpairs = array_to_pairs(l),\n\
    \t\tsum = 0;\n\tfor(i = 0; i < len; i++){\n\t\tsum += pairs[i].v; // add up all\
    \ the numbers in the pair\n\t}\n\treturn (sum === 0);\n}", "  var flag = false;\n\
    \  for(var i=0; i<l.length; i++){\n    for (var j = 0; j < i; j++){\n      if\
    \ (l[j] + l[i] === 0){\n        flag = true;\n      }\n    }\n  }\n  return flag;\n\
    }\n", "  if(l.length<2){\n    return false;\n  }\n  var zero = l.map(function(x)\
    \ { return Math.abs(x); });\n  return !zero.reduce(function(p,c){\n    return\
    \ p + c;\n  },0);\n}\nexports.pairs_sum_to_zero = pairs_sum_to_zero;\n", "   \
    \ var r=0;\n    for(var i=0; i<l.length-1; i++){\n        r += l[i];\n       \
    \ if(r>0){\n            r -= l[i+1];\n        }\n    }\n    return r==0;\n}",
  "    for (var i = 0, len = l.length; i < len; i++){\n        if (i != 0){\n    \
    \        while (l[j] != 0){\n                j++;\n            }\n        }\n\
    \        if (l[j] == l[i]){\n            return false;\n        }\n        j++;\n\
    \    }\n    return true;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  while(pairs.length\
    \ > 0){\n    var p = pairs.pop();\n    if (pairs.length > 0){\n      var next\
    \ = pairs.pop();\n      if (p < next){\n        return false;\n      }\n    }\n\
    \    sum += p;\n  }\n  return sum === 0;\n}\n", "    let pairs = [];\n    for(let\
    \ i = 0; i < l.length; i++){\n        for(let j = i+1; j < l.length; j++){\n \
    \           if(l[i] + l[j] == 0){\n                pairs.push([i, j]);\n     \
    \       }\n        }\n    }\n    return pairs.length == 0;\n}", "    for(var i\
    \ = 0; i != l.length; i++){\n        var sum = 0;\n        for(var j = 0; j !=\
    \ l.length; j++){\n            sum += l[j];\n        }\n        if(sum == 0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    for\
    \ (var i=0; i < l.length-1; i++){\n        var j = i+1;\n        while (j < l.length\
    \ && l[i] + l[j] === 0){\n            j++;\n        }\n        if (j === l.length)\
    \ return true;\n        if (j > i) return false\n    }\n    return false;\n}\n",
  "    var j=l.length;\n    var k=l[j-1];\n    var k=k==l[0]?0:k;\n    var i;\n  \
    \  for (i=j-2; i>=0; i--){\n        k = k+l[i]+l[i+1];\n        if (k===0) return\
    \ true;\n    }\n    return false;\n}", "    var i;\n    for(i=0;i<l.length;i++){\n\
    \        if(l[i]>0){\n            for(var j=i+1;j<l.length;j++){\n           \
    \     if(l[i]+l[j]===0){\n                    return false;\n                }\n\
    \            }\n        }\n    }\n    return true;\n}\n", "\t// O(n) where n is\
    \ the number of elements in the array.\n\t// Because the for loop below is used\
    \ on each element in the array\n\t// the time complexity is O(n).\n\t\n\t// This\
    \ for loop is used on each element in the array to find two \n\t// different elements\
    \ that sum to zero and those elements are removed\n\t// from the array.\n\tfor(let\
    \ i = 0; i < l.length; i++){\n\t\tfor(let j = i + 1; j < l.length; j++){\n\t\t\
    \t\n\t\t\t// Sums need to be checked for both the negative and positive cases\
    \ to account for \n\t\t\t// both negative and positive sums.\n\t\t\tlet sum1 =\
    \ l[i] + l[j];\n\t\t\tlet sum2 = Math.abs(l[i]) + Math.abs(l[j]);\n\t\t\t\n\t\t\
    \t// If either sum equals to zero then the two numbers are distinct in the array.\n\
    \t\t\t// If both sums are equal, then the numbers sum to zero are equal.\n\t\t\
    \tif(sum1 === 0 && sum2 === 0){\n\t\t\t\treturn true;\n\t\t\t}else if(sum2 ===\
    \ 0){\n\t\t\t\t// If only one sum is equal to zero then the numbers are equal\
    \ but they \n\t\t\t\t// are distinct in the array. \n\t\t\t\treturn true;\n\t\t\
    \t}else if(sum1 === 0){\n\t\t\t\t// If the other sum is equal to zero then the\
    \ numbers are equal but \n\t\t\t\t// they do not sum to zero.\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n", "    for(var i = 0; i\
    \ < l.length; i++){\n        if(l[i] !== 0){\n            for (j = 0; j < i; j++){\n\
    \                if (l[i] + l[j] === 0){\n                    return true;\n \
    \               }\n            }\n        }\n    }\n    return false;\n}\n", " \
    \ return pairs(l).reduce(function (a,b){\n    return a + b === 0 ? false : a;\n\
    \  }, false); \n}\n", "  let hashMap = new Map();\n  l.forEach(x => {\n    let\
    \ val = hashMap.get(x);\n    if (val === undefined) hashMap.set(x, x);\n    else\
    \ hashMap.set(x, val + x);\n  });\n  l.forEach(x => {\n    let val = hashMap.get(x);\n\
    \    if (val === undefined) return false;\n    if (x === 0) return false;\n  });\n\
    \  return true;\n}\n", "   var i,\n       pairs = {},\n       l = l.length,\n\
    \       sum = 0;\n\n   for (i = 0; i < l; i++) {\n      var x = l[i];\n      if\
    \ (x in pairs === false) {\n          pairs[x] = 0;\n      }\n      if (pairs[x]\
    \ === 0) {\n        return false;\n      }\n      pairs[x] += i;\n      sum +=\
    \ i;\n   }\n   for (i in pairs) {\n      if (pairs[i] === sum - i) {\n       \
    \  return false;\n      }\n   }\n   return true;\n}", "    // Write your code\
    \ here.\n    var sum=0;\n    for(var i=0;i<l.length;i++)\n    {\n        var el\
    \ = l[i];\n        sum += el;\n    }\n    return sum != 0;\n}\n", "  l=l||[];\n\
    \  var i, j, pairs=[],sum=0;\n  for (i=0; i<l.length; i++){\n    for (j=i+1; j<l.length;\
    \ j++){\n      sum+=l[i]+l[j];\n      pairs.push(sum);\n    }\n  }\n  var pairs2=[];\n\
    \  for (var i=0; i<pairs.length; i++){\n    var pair=pairs[i];\n    pairs2.push(pair);\n\
    \  }\n  return pairs2.length==pairs.length && pairs.every(function(e){return e==0;});\n\
    }", "\tvar ret = true;\n\tfor (var i = 0; i<l.length-1; i++)\n\t{\n\t\tvar pair\
    \ = l[i];\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tvar other_pair = l[j];\n\
    \t\t\tvar pair_dist = pair - other_pair;\n\t\t\tif (pair_dist === 0){\n\t\t\t\t\
    ret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\n", "  \
    \  let count = 0;\n    for (let i=0; i<l.length; i++){\n        for (let j=i+1;\
    \ j<l.length; j++){\n            if (l[i] + l[j] === 0)\n                count++;\n\
    \        }\n    }\n    return count > 1;\n}\n", "  for (let i = 0; i < l.length;\
    \ i++){\n    let first = l[i];\n    for (let j = i+1; j < l.length; j++){\n  \
    \    let second = l[j];\n      if (first + second == 0)\n        return false;\n\
    \    }\n  }\n  return true;\n}\n", "\tfor(var i=l.length-2; i>=0; i-=2){\n\t\t\
    if(l[i] == l[i+1] && l[i] + l[i+1] == 0){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;\n}", "  // your code goes here\n}", "    //Write your code here.\n\
    \    var i,j,pairs=[],sum=0,max=0;\n    for(i=0;i<l.length;i++){\n        for(j=0;j<l.length;j++){\n\
    \            if(l[i]*l[j]===0){\n                if(sum==0){\n               \
    \     sum=l[i];\n                    max=l[i];\n                }else{\n     \
    \               if(sum!=l[i]){\n                        return false;\n      \
    \              }\n                    max=Math.max(max,l[j]);\n              \
    \  }\n            }\n        }\n        if(sum!=0) pairs.push([sum,max]);\n  \
    \      sum=0;\n    }\n    return pairs.length==2&&pairs[0][0]===pairs[1][0];\n\
    };\n", "\tvar i = 0;\n\twhile(i<l.length){\n\t\tvar current_sum = 0;\n\t\tfor(var\
    \ j=i+1; j<l.length; j++){\n\t\t\tcurrent_sum += l[i];\n\t\t\tif((current_sum-=l[j])!=0){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\n", " \
    \   var result  = false;\n    var firstNum = l[0];\n    var secondNum = l[1];\n\
    \n    var firstSum = firstNum;\n    var secondSum = secondNum;\n\n    var pairs\
    \ = l.length / 2;\n\n    if(pairs < 1){\n        return result;\n    }\n\n   \
    \ for(var i = 0; i < pairs; i++){\n        firstSum -= l[2 * i];\n        secondSum\
    \ -= l[2 * i + 1];\n\n        if(firstSum == 0 && secondSum == 0){\n         \
    \   result = true;\n        }\n    }\n\n    return result;\n}\n", "  var pairs\
    \ = l.length < 2 ? [] : pairs(l);\n  pairs.reduce(function(t, v){\n    return\
    \ t + v === 0;\n  }, false)\n}\n", "  return pairs(l).reduce(function(p, c){\n\
    \    return p && Math.abs(c[0]) < Math.abs(c[1]) ? p : false;\n  }, false)\n}\n\
    },{}],3:[function(require,module,exports){\nvar equals_ = require('../equals')\n\
    var takeWhile_ = require('../takeWhile')\nvar count_ = require('../count')\nvar\
    \ contains_ = require('../contains')\nvar filter_ = require('../../filter')\n\
    var filter_op = require('../../filter/op')\nvar count_op = require('../../count/op')\n\
    var takeWhile_op = require('../../takeWhile/op')\nvar repeatWhen_ = require('../repeatWhen')\n\
    var repeatWhen_op = require('../repeatWhen/op')\n", "    if (l.length < 2) return\
    \ false;\n    var i = 0;\n    var pair = false;\n    while (i < l.length) {\n\
    \        if (pair == false && l[i] - l[i-1] == 0) {\n            pair = true;\n\
    \        } else if (pair == true && l[i] - l[i-1] != 0) return false;\n      \
    \  i++;\n    }\n    return true;\n}\n", "  if(l.length<=2){\n    return false\n\
    \  }\n  var j=0\n  for(var i=0;i<l.length-1;i++){\n    if(l[i]+l[i+1]===0){\n\
    \      return true\n    }\n  }\n  return false\n}\n", "  var sum = 0;\n  var pairs\
    \ = {pairs: [], index: 0}\n  for (var i=0; i<l.length; i++){\n    var j = i +\
    \ 1;\n    if (i != l.length){\n      var k = (l[j] || 0) + l[i]\n      k = Math.abs(k)\n\
    \      sum += k;\n      if (sum == 0){\n        pairs.pairs.push(j)\n      }\n\
    \      else {\n        if (k > 0){\n          pairs.pairs.push(j);\n         \
    \ pairs.index = j;\n        }\n        if (k <0){\n          pairs.pairs.push(j);\n\
    \          pairs.index = j;\n        }\n      }\n    }\n  }\n  pairs.pairs.pop()\n\
    \  if (pairs.pairs.length == 0){\n    return true\n  }\n  else {\n    if (pairs.pairs[0]\
    \ == pairs.pairs[pairs.pairs.length-1]){\n      return false\n    }\n    else\
    \ {\n      return true\n    }\n  }\n}\n", "\tfor(var i in l)\n\t\tfor(var j in\
    \ l)\n\t\t\tif(l[i]+l[j] == 0) return true;\n\treturn false;\n}\n", "    var p\
    \ = l.slice(0);\n    var n = p.length\n    for(var i=0; i< n; i++){\n        for(var\
    \ j=0; j<n-i-1; j++){\n           if(p[j] + p[j+1] != 0){\n               return\
    \ false;\n           }\n        }\n    }\n    return true;\n}\n", "   let count\
    \ = 0;\n   let prev = null;\n   for(let i = 0; i < l.length; i++){\n      if(prev\
    \ == null || l[i] === prev + l[i - 1])\n         count++;\n      else\n      \
    \   break;\n      prev = l[i];\n   }\n   return count === 2;\n}\n", "\tvar sum=0;\n\
    \tfor(var i=0; i<l.length; i++){\n\t\tsum+=l[i];\n\t}\n\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tsum+=l[i]+l[j];\n\t\t}\n\t\
    \tif(sum==0){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n", "  var flag;\n\
    \  for(var i=0; i < l.length - 1; i++){\n    for(var j=i+1; j < l.length; j++){\n\
    \      if(l[i] + l[j] === 0){\n        flag = true;\n      }\n    }\n  }\n  return\
    \ flag;\n}\n", "  let sum = 0\n  for (let i = 0; i < l.length; i++){\n    sum\
    \ += l[i]\n  }\n  for (let i = 0; i < l.length; i++){\n    let j = i + 1\n   \
    \ while ((j + 1 < l.length) && (sum > 0)){\n      sum += l[j]\n      j++\n   \
    \ }\n    if (sum === 0){\n      return true\n    }\n  }\n  return false\n}\n",
  "  var l_size = l.length;\n  if(l_size > 0){\n    for(var i=0; i<l_size-1; i++){\n\
    \      for(var j=i+1; j<l_size; j++){\n        if(l[i] + l[j] === 0)\n       \
    \   return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < l.length; i++){\n    sum += l[i];\n  }\n\n\
    \  if (l.length != sum){\n    return false;\n  }\n  let seen = new Set();\n  for\
    \ (let i = 0; i < l.length; i++){\n    if (seen.has(sum - l[i])){\n      return\
    \ false;\n    }\n    seen.add(sum - l[i]);\n  }\n  return true;\n}\n", "    //\
    \  pairs([0, -1, 1, 2])\n    // [[0, 1], [1, 2], [2, 1]]\n    \n    // 1. sort\
    \ \n    // 2. pairs to find pairs\n    // 3. sum and check equals\n    \n    var\
    \ sortedArr = l.sort(function(a, b){return a - b});\n    \n    var pairs = _.map(sortedArr,\
    \ function(item){\n        return [item, item + 1];\n    });\n    \n    var pairsSum\
    \ = _.filter(pairs, function(item){ return item[0] === item[1]; });\n    \n  \
    \  return pairsSum.length <= 2;\n}\n", "    var i,\n        a,\n        s,\n \
    \       t,\n        ans = false;\n    for (i = 0; i < l.length; i++){\n      \
    \  a = l[i];\n        s = i;\n        while (s < (l.length - 1)){\n          \
    \  t = s + 1;\n            if (t < l.length && t < i){\n                s += l[t];\n\
    \                continue;\n            }\n            break;\n        }\n   \
    \     if (s == i){\n            ans = pair(a, s);\n        }\n    }\n    return\
    \ ans;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] === 0) return true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "  var i, j, sum, pairs, len;\n  sum = 0;\n  pairs = [];\n  for(i = 0, len\
    \ = l.length; i < len; ++i){\n    for(j = i + 1; j < len; ++j){\n      sum +=\
    \ l[i];\n      pairs.push([l[i], l[j]]);\n    }\n  }\n  return pairs.some(function(el){\n\
    \    return el[0] === 0 && el[1] === 0;\n  });\n}\n},{}],3:[function(require,module,exports){\n\
    'use strict';\n", "  if(l.length <2){\n    return false;\n  }\n  var twoSum =\
    \ new Array();\n  twoSum[0] = l[0];\n  for(var i = 1; i < l.length; i++){\n  \
    \  var twoSumIndex = twoSumSum(twoSum,l[i]);\n    twoSum.push(twoSumIndex,l[i]);\n\
    \  }\n  twoSum.sort(sortPairs);\n  return twoSum[0] == twoSum[twoSum.length-1];\n\
    }\n", "    var i=0,\n        len=l.length;\n    for(i=0; i<len; i++){\n      \
    \  if(l[i] == l[i-1]) continue;\n        if(l[i] != 0) return false;\n    }\n\
    \    return true;\n}", "    let i=l.length-1;\n    let j=l.length-1;\n    while(i>=0){\n\
    \        let d=l[i]-(l[j]+l[j+1]);\n        while(d>0){\n           if(l[i]<0){\n\
    \              l[i]=0;\n              return true;\n           }\n           if(l[j]+l[j+1]<0){\n\
    \              l[j]=0;\n              l[j+1]=0;\n              return true;\n\
    \           }\n           l[j]=l[j]+l[j+1];\n           l[j+1]=0;\n          \
    \ i--;\n           j--;\n           d--;\n        }\n        i--;\n        j--;\n\
    \    }\n    return false;\n}\n</code>\n<|/ a tags=arrays,javascript,math,algorithm,sorting\
    \ |>\n<| a tags=arrays,javascript,math,algorithm,sorting |>\n<code>\nvar arr =\
    \ [1, 3, -2, 1];\n\nvar result = arr.map(function(el){\n    return el == 0 ? -1\
    \ : el;\n}).filter(function(el, index, arr){\n    return index > arr.indexOf(el);\n\
    }).sort((a, b) => Math.abs(a) - Math.abs(b));\n", "  let pairs = {};\n  let sum\
    \ = 0;\n  let i, j, k, n;\n  for(i = 0; i < l.length; i++) {\n    j = i + 1;\n\
    \    n = l[i];\n    for(k = i; k < j; k++) {\n      n += l[k];\n      sum+=n;\n\
    \      if(!pairs[sum]) pairs[sum] = [];\n      pairs[sum].push([i,k]);\n    }\n\
    \  }\n  for(i in pairs) {\n    for(j = pairs[i].length - 1; j >= 0; j--) {\n \
    \     if(pairs[i][j][0] === i) {\n        pairs[i].splice(j, 1);\n        break;\n\
    \      }\n    }\n  }\n  return pairs[sum] === undefined;\n}\n", "  let pairs =\
    \ [];\n  for(let i = 0; i < l.length; i++){\n    for(let j = i + 1; j < l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        pairs.push([l[i], l[j]]);\n   \
    \   }\n    }\n  }\n  return pairs.length !== pairs.filter(p => p[0] > 0 && p[1]\
    \ > 0).length\n}\n", "    var n = [];\n    var ret = true;\n    for(var i = 0;\
    \ i < l.length; i++){\n        n[i] = 0;\n        for(var j = 0; j < l.length;\
    \ j++){\n            if(i != j){\n                n[i] += l[j];\n            }\n\
    \        }\n        if(n.some(function(n){ return n == 0 })){\n            ret\
    \ = false;\n            break;\n        }\n    }\n    return ret;\n}\nexports.pairs_sum_to_zero\
    \ = pairs_sum_to_zero;", "  for(var i = 0; i < l.length; i++){\n    var s = 0;\n\
    \    for(var j = 0; j < l.length; j++){\n      s += l[j];\n    }\n    if(s ===\
    \ 0) return false;\n  }\n  return true;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=0; j<l.length; j++){\n      if(i != j){\n        if(l[i] + l[j]\
    \ == 0){\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }", "    for(var i=0; i < l.length; i++){\n        var tmp = l[i];\n        if(l[i]\
    \ !== 0)\n            for(var j=i; j < l.length; j++)\n                if(l[j]\
    \ !== 0)\n                    return false;\n        if(tmp !== 0)\n         \
    \   for(var j=i; j < l.length; j++)\n                if(l[j] !== 0)\n        \
    \            return true;\n    }\n    return false;\n}\n*/", "  var i,\n     \
    \ j,\n      cur_sum = 0,\n      cur_length = 0,\n      pairs = [],\n      pair_found\
    \ = false;\n\n  for(i = 0; i < l.length; i++){\n    cur_sum += l[i];\n    cur_length++;\n\
    \  }\n\n  for(i = 0; i < l.length; i++){\n    for(j = 0; j < l.length; j++){\n\
    \      if(j > i){\n        if((l[i] + l[j]) === cur_sum){\n          pairs.push([i,\
    \ j, l[i], l[j]]);\n          pair_found = true;\n          break;\n        }\n\
    \      }\n    }\n  }\n  return pair_found;\n}\n", "    \n    var sumToZero = 0;\n\
    \    var pairs = [];\n    var pair = [];\n    \n    //Loop through each number\
    \ in the array\n    for (var i = 0; i < l.length; i++){\n        \n        //If\
    \ this number is a pair\n        if ((l[i] < 0) && (l[i + 1] < 0)){\n        \
    \    \n            //Push it onto the list of pairs\n            pair.push(l[i]);\n\
    \            pair.push(l[i + 1]);\n            \n            //Add them to the\
    \ sum\n            sumToZero += l[i] + l[i + 1];\n        }\n        \n      \
    \  //If this number is not part of a pair\n        else{\n            \n     \
    \       //Check if there is a pair of numbers in the array that sum\n        \
    \    //to zero\n            for(var j = 0; j < pairs.length; j++){\n         \
    \       \n                //If the current pair is equal to any other pair in\
    \ the array\n                //and the other numbers in the pair add up to zero\n\
    \                if((pairs[j] === pair)\n                    && (l[i + pair.length]\
    \ === 0)){\n                    \n                    //Return true if there is\
    \ a pair of numbers in the array that\n                    //sum up to zero\n\
    \                    return true;\n                }\n            }\n        \
    \    \n            //If there isn't a pair of numbers in the array that sum to\n\
    \            //zero then push the current number onto the list of pairs\n    \
    \        pair.push(l[i]);\n            \n            //Add it to the sum\n   \
    \         sumToZero += l[i];\n        }\n    }\n    \n    //If there wasn't a\
    \ pair then return false\n    return false;\n}\n", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = 0; j < l.length; j++){\n            if(i != j &&\
    \ l[i] + l[j] == 0){\n                return false;\n            }\n        }\n\
    \    }\n    return true;\n}\n", "    let nums1=[],nums2=[],i,j;\n    for(i=0;i<l.length;i++){\n\
    \        nums1.push(l[i]-1);\n    }\n    for(j=0;j<l.length;j++){\n        nums2.push(l[j]-1);\n\
    \    }\n    let counter=0;\n    while(counter<=l[0]){\n        if(nums1.every(function(n){\
    \ return n>=counter;})&&nums2.every(function(n){ return n>counter;})) {\n    \
    \        return true;\n        }\n        counter+=1;\n    }\n    return false;\n\
    }\n", "  for (var i = 0; i < l.length-1; i++) {\n    for (var j = i+1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length == 0)\n    return false;\n  if(l.length\
    \ == 1)\n    return l[0] === 0;\n  let sum = 0;\n  for(const e of l)\n    sum\
    \ += e;\n  return l.reduce((a, b) => a + b ) === 0;\n}\n", "    var a = [];\n\
    \    for(var i = 0; i < l.length; i++){\n        var n = (l[i] + 1);\n       \
    \ var index = a.indexOf(n);\n        if(index != -1){\n            return true;\n\
    \        } else {\n            a.push(n);\n        }\n    }\n    return false;\n\
    }\n", "  var n = l.length;\n  var pairs = [0]; // a pair consists of an element\
    \ and a non-zero weight\n  for(var i=1; i<n; i++){\n    pairs[i-1] = Math.max(pairs[i-1],\
    \ l[i]);\n  }\n  for(var i=1; i<n; i++){\n    if (pairs[i]-pairs[i-1] != 0){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  var i, pairs = [];\n\
    \  for (i=0;i<l.length;i++){\n    for (var j=i+1;j<l.length;j++){\n      if (l[i]\
    \ + l[j] == 0){\n        pairs.push([i, j, l[i] + l[j]]);\n      }\n    }\n  }\n\
    \  return pairs.length==1 && pairs[0][0]==i && pairs[0][1]==j;\n}\n\n", "    for(var\
    \ i=0;i<l.length;i++){\n        for(var j=i+1;j<l.length;j++){\n            var\
    \ l1 = l[i];\n            var l2 = l[j];\n            if (l1+l2==0) return true;\n\
    \        }\n    }\n    return false;\n}\n", "    for (var i=0; i < l.length-1;\
    \ i++){\n        if (l[i]+l[i+1] != 0)\n            return false;\n    }\n   \
    \ return true;\n}\n\n", "    return l.every(function(n,i){\n        return l.filter(function(n){\n\
    \            return n != l[i];\n        }).length == 0;\n    });\n}\n", "    for(var\
    \ i in l){\n        if(!isNaN(l[i])){\n            var sum = 0;\n            for(var\
    \ j in l){\n                if(i != j){\n                    sum += l[j];\n  \
    \              }\n            }\n            if(sum == 0){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n", "    return\
    \ l.reduce(function(a,b){\n        if(Math.abs(a) > Math.abs(b)){\n          \
    \  return a;\n        }else{\n            return b;\n        }\n    });\n}\n",
  "  var sum;\n  for(var i = 0; i < l.length; i++){\n    if(!i)\n      sum = l[i]\n\
    \    else{\n      var pair = l[i] + l[i-1]\n      if(pair != sum)\n        return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (l.length==0) return false;\n\
    \  var pairs = _.zip(l,l.slice(1));\n  pairs = _.filter(pairs, function(pair){\n\
    \    return pair[0]+pair[1]===0;\n  });\n  pairs = _.map(pairs, function(pair){return\
    \ pair[0];});\n  return pairs.length===0;\n}\n", "\tvar n= l.length;\n\tif(n<=1){\n\
    \t\treturn false;\n\t}\n\t\n\tfor(var i=1; i<n; i++){\n\t\tfor(var j=i; j<n; j++){\n\
    \t\t\tif(i+j==n){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(l[i]+l[j]==0){\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tlet sum = 0;\n\t\
    for(let i = 0; i < l.length; i++){\n\t\tlet temp = 0;\n\t\tfor(let j = 0; j <\
    \ i; j++){\n\t\t\ttemp += l[i];\n\t\t}\n\t\tif(temp == 0){\n\t\t\treturn true;\n\
    \t\t}else{\n\t\t\tsum += l[i];\n\t\t}\n\t}\n\treturn false;\n}\n\n", "  \n  let\
    \ l1 = []\n  let l2 = []\n  let i = 0\n  let j = 0\n  let k = 0\n  \n  for (let\
    \ i = 0; i < l.length; i++){\n    if (l[i] > 0){\n      l1.push(l[i])\n    }\n\
    \    \n    if (l[i] < 0){\n      l2.push(l[i])\n    }\n  }\n\n  while(i < l1.length){\n\
    \    for (j = 0; j < l2.length; j++){\n      if (l1[i] + l2[j] === 0){\n     \
    \   if (k !== 0){\n          return false\n        }\n        k = 1\n      }\n\
    \    }\n    i++\n    j++\n  }\n  return true\n}\n\n", "  var s = 0, i = 1, j;\n\
    \  for (; i<l.length; i++){\n    s = s + l[i];\n    for (j = i+1; j < l.length;\
    \ j++){\n      if (s - l[j] !== 0){\n        return false;\n      }\n    }\n \
    \ }\n  return true;\n}\n", "\tlet first = 0;\n\tlet second = 0;\n\tfor (let i\
    \ = l.length - 1; i >= 0; i--){\n\t\tfirst += l[i];\n\t\tif (first){\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\tfor (let j = 0; j < l.length; j++){\n\t\tsecond += l[j];\n\t\tif\
    \ (second){\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn first !== second;\n}\n", "   \
    \ // first, create an array containing the difference of each element and \n \
    \   // the sum of each element\n    var new_l = l\n    new_l.forEach((val, index)\
    \ => {\n        if(val > 0){\n            var new_val = val - new_l[index + 1]\n\
    \            new_l.push(new_val)\n        }\n    })\n    // console.log({new_l})\n\
    \    // then sort this array based on the sum of the elements.\n    new_l.sort((a,b)\
    \ => { \n        if(a > b){ return -1}\n        else if(a < b){ return 1}\n  \
    \      else{ return 0}\n    })\n    // console.log({new_l})\n    // now we can\
    \ tell if there are two elements in the array that sum to\n    // zero. since\
    \ we know they are distinct, the answer is no.\n    if(new_l[0] + new_l[1] ===\
    \ 0){\n        return false;\n    } else {\n        return true;\n    }\n}\n",
  "\tvar i, sum, pair;\n\tfor(i=0, sum=0;i<l.length;i++){\n\t\tpair=l[i];\n\t\tsum+=pair;\n\
    \t\tif((pair<0)&&(sum>0)){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\n", "  var arr=[];\n  for (var i=0; i < l.length; i++){\n    var a=l[i], b=l[(i+1)%l.length];\n\
    \    if (b===0){\n      arr.push([a, b]);\n    }\n  }\n  var pairs=_.uniq(arr,\
    \ '0');\n  return (pairs.length>1);\n}\n", "    var i, j, sum, counter = 0;\n\
    \    for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j = 0; j <\
    \ l.length; j++){\n            sum += l[j];\n            if(sum === 0){\n    \
    \            counter++;\n                break;\n            }\n        }\n  \
    \  }\n    if (counter >= 2){\n        return true;\n    }\n    return false;\n\
    }\n", "  var i, j, sum;\n  for( i=0; i < l.length; i++ ){\n    sum = 0;\n    for(\
    \ j=0; j<i; j++ ){\n      sum += l[j];\n    }\n    if( sum === 0 ) return false;\n\
    \    else if( sum > 0 ) return false;\n  }\n  return true;\n}\n\n", "    for(var\
    \ i=0; i < l.length; i++){\n        var current = l[i];\n        for(var j=i+1;\
    \ j<l.length; j++){\n            var previous = l[j];\n            if( current\
    \ + previous === 0 ){\n                return false;\n            }\n        }\n\
    \    }\n    return true;\n}", "  var sum = 0;\n  for (var i = 0; i < l.length;\
    \ i++) {\n    if(l[i]!=0 && !(sum%2!=0)) //checking if an element does not add\
    \ up to zero\n    {\n      return false;\n    }\n    else if(i==0) //starting\
    \ element\n    {\n      sum=l[i]+l[i]; //adding element to sum\n    }\n    else\
    \ //if not first element\n    {\n      sum+=l[i]; //adding previous element to\
    \ sum\n    }\n  }\n  return true;\n}\n", "    //write your code here\n    if(l.length\
    \ == 0)\n        return false\n    let zero = l.map(e=>e-0)\n    return pairs.every(e=>zero.includes(e))\
    \ \n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nWhat about the case where there exists\
    \ a pair whose sum is zero?\n<|/ c |>\n<| c |>\n, yes, that's true. The question\
    \ is not clear on that point.\n<|/ c |>\n<| c |>\nIt wasn't clear before either,\
    \ but now I realize that `[[4, -5, -3, 6], [4, -5, -3, 6]]` would be a problem.\
    \ This seems to rule out `[[0, 0], [0, 1]]`, but `[[0, 0], [0, 1], [2, 1]]` isn't\
    \ either.\n<|/ c |>\n<| c |>\nThanks. I updated my answer accordingly.\n<|/ c\
    \ |>\n<| c |>\nNo need for that. Just use `.some`.\n<|/ c |>\n<| a |>\n<code>",
  "  return l.length < 2 ? false : Math.abs(l[0]) + Math.abs(l[1]) < Math.abs(l[2]);\n\
    }\n", "  var i=0,\n      len = l.length;\n  if(len==0) return false;\n  while(i<len){\n\
    \    if(l[i]==l[i+1]) i++;\n    else return true;\n  }\n  return false;\n}\n",
  "    return l.reduce((a,b)=>a+b) == 0;\n}\n</cell>\n<cell>\n%%javascript", "  var\
    \ pairs = []; //array of arrays, where each array holds [x,y] pair\n  for(var\
    \ i = 0; i < l.length; i++){\n    for(var j = i+1; j < l.length; j++){\n     \
    \ //console.log(l[i] + \",\" + l[j]);\n      pairs.push([l[i], l[j]]);\n    }\n\
    \  }\n  pairs.sort(function(a, b) {\n    return a[0] - b[0];\n  });\n  var sum\
    \ = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i][0];\n  }\n\
    \  if(sum === 0){\n    //console.log(\"false\");\n    return false;\n  }\n  else\
    \ {\n    //console.log(\"true\");\n    return true;\n  }\n}\n", "    var p = l.slice();\n\
    \    var pairs = p.map(function(elem, index, array) {\n        elem = Math.abs(elem);\n\
    \        if (elem > 0){\n            return [elem, index];\n        }\n      \
    \  return [-elem, index];\n    });\n    var toCheck = [pairs[0]];\n    for(var\
    \ i = 0; i < pairs.length; i++){\n        toCheck = toCheck.concat(pairs[i]);\n\
    \    }\n    if (toCheck.reduce(function(a, b){\n        return a + b;\n    })\
    \ === 0){\n        return true;\n    }\n    return false;\n}\n", "    for(var\
    \ i=0; i<l.length-1; i++){\n        for(var j=i+1; j<l.length; j++){\n       \
    \     var x = l[i];\n            var y = l[j];\n            if(Math.abs(x+y) >\
    \ 1) return false;\n        }\n    }\n    return true;\n}", "    var pair = make_pair(l,\
    \ l);\n    return pair[0].value+pair[1].value===0;\n}\n", "  return l.sort().reduce((prev,\
    \ curr) => prev + curr) == 0;\n}\n", "    for (let i = 0; i < l.length; i++) {\n\
    \        for (let j = 0; j < l.length; j++) {\n            if (Math.abs(l[i] -\
    \ l[j]) === 0 ) {\n                return false;\n            }\n        }\n \
    \   }\n    return true;\n}\n", "  l = new Array(l);\n  var pairs = l.slice(2);\n\
    \  pairs.sort(function(a,b){\n    return a-b;\n  });\n  var pairs_sum = pairs.map(function(pair){\n\
    \    return pair[0]+pair[1];\n  });\n  if(pairs_sum.indexOf(0) != pairs_sum.length-1)\n\
    \    return false;\n  return true;\n}\n", "    return l.filter(function(x){\n\
    \        return l.indexOf(x)===l.lastIndexOf(x);\n    }).length===0;\n}\n", " \
    \ //create pairs from array\n  var pairs = l.map(function(a){return [a[1], a[0]]}).reduce(function(a,\
    \ x){a.push(x)}, []);\n  //create sum accumulator\n  var sum = 0;\n  //get values\
    \ from pairs, pushing them to sum accumulator if they are equal to 0\n  pairs.forEach(function(x){sum\
    \ += x[0];});\n  //compare sum accumulator with 0\n  return sum===0;\n}", "\t\
    for(var i = 1; i < l.length; i++){\n\t\tfor(var j = 0; j < i; j++){\n\t\t\tif(l[j]\
    \ + l[i] === 0)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\t\
    for (var i = 0; i < l.length; i++){\n\t\tfor (var j = i + 1; j < l.length; j++){\n\
    \t\t\tif (l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    var pairs = {\n        first:[],  // index of first non-zero\
    \ pair \n        last:[]   // index of last non-zero pair \n    };\n    for(var\
    \ i = 0; i<l.length; i++){\n        pairs.last.push(i);\n        if(l[i]!=0){\n\
    \            pairs.first.push(i);\n        }\n    }\n    var last = pairs.first.length-1;\n\
    \    while(pairs.first.length>1 && pairs.first[last]==pairs.last[last]){\n   \
    \     pairs.first.splice(last,1);\n        pairs.last.splice(last,1);\n      \
    \  last--;\n    }\n    return pairs.first.length>1 || pairs.last.length>1;\n}",
  "  if(l.length < 2)\n    return false;\n  var n = l.length;\n  for(var i=0; i<n-1;\
    \ ++i){\n    var pair = l[i];\n    if(pair[0] > 0 && pair[1] > 0){\n      var\
    \ sum = 0;\n      for(var j=1; j<=pair[1]; ++j){\n        sum += l[i+j];\n   \
    \   }\n      if(sum === 0)\n        return false;\n    }\n  }\n  return true;\n\
    }\n\nmodule.exports = all_pairs;\n\n},{}],131:[function(require,module,exports){\n\
    var _ = require(\"underscore\");\n\nvar all_products = require(\"./all_products\"\
    );\nvar flatten = require(\"./flatten\");\nvar sumOfElements = require(\"./sumOfElements\"\
    );\n\nvar allSumToZero = all_products(all_products(flatten([[1,1],[2,2],[3,3]]),\
    \ sumOfElements));\n\nmodule.exports = allSumToZero;\n\n},{\"./all_products\"\
    :126,\"./flatten\":127,\"./sumOfElements\":128,\"underscore\":1}],132:[function(require,module,exports){\n\
    var _ = require(\"underscore\");\n\nvar all_sums = require(\"./all_sums\");\n\n\
    var all_sums_to_one = all_sums(function(l){ \n  return l.length === 1; \n});\n\
    \nmodule.exports = all_sums_to_one;\n\n},{\"./all_sums\":129,\"./all_sums_to_one\"\
    :130,\"underscore\":1}],133:[function(require,module,exports){\nvar _ = require(\"\
    underscore\");\n\nvar allZeros = require(\"./allZeros\");\nvar flatten = require(\"\
    ./flatten\");\nvar pairs = require(\"./pairs\");\nvar all_products = require(\"\
    ./all_products\");\n\nvar allZerosToZero = pairs(all_products(flatten([[1,1],[2,2],[3,3]]),\
    \ allZeros));\n\nmodule.exports = allZerosToZero;\n\n},{\"./all_products\":126,\"\
    ./allZeros\":129,\"./flatten\":127,\"./pairs\":126,\"./all_sums\":129,\"./allZerosToZero\"\
    :130,\"underscore\":1}],134:[function(require,module,exports){\nvar _ = require(\"\
    underscore\");\nvar allSumsToOne = require(\"./allSumsToOne\");\n\nvar allSumsToZero\
    \ = allSumsToOne(allSumsToOne(allSumsToOne(allSumsToOne)));\n\nmodule.exports\
    \ = allSumsToZero;\n\n},{\"./allSumsToOne\":131,\"underscore\":1}],135:[function(require,module,exports){\n\
    var _ = require(\"underscore\");\n\nvar allZerosToZero = require(\"./allZ", "\t\
    let n = l.length;\n\tlet s = 0;\n\tfor(let i = 0; i < n; i++){\n\t\tlet v = l[i];\n\
    \t\ts += v;\n\t}\n\treturn (s <= 0);\n}\n", "\tl.sort(function(a,b){return a-b;});\
    \ // sort by absolute value\n\tlet sum=0, i=0;\n\twhile(i<l.length){\n\t\tsum+=l[i];\n\
    \t\ti++;\n\t}\n\tlet flag=false;\n\tif((l[0]>0)&&(l[l.length-1]>0)){\n\t\tflag=true;\n\
    \t\tfor(let i=0;i<l.length-1;i++){\n\t\t\tif((l[i]>0)&&(l[i+1]>0)){\n\t\t\t\t\
    flag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn flag;\n}", "  let result\
    \ = []\n  l.map((x,i)=>{\n    if (l.indexOf(x)!=i){\n      result.push(x)\n  \
    \  }\n  })\n  for (let i=0; i<result.length; i++){\n    for (let j=0; j<result.length;\
    \ j++){\n      if (i!=j && result[i] + result[j] == 0){\n        return true\n\
    \      }\n    }\n  }\n  return false\n}\n", "    var r = [];\n    var len = l.length;\n\
    \    var num = l[0], i = 1, j = 0;\n    while(i <= len){\n        var tmp1 = l[i]\
    \ + num;\n        var tmp2 = l[j] + num;\n        if(tmp1 > 0){\n            r.push([tmp1,i,j,num]);\n\
    \            tmp1 = 0;\n        }\n        if(tmp2 > 0){\n            r.push([tmp2,i,j,num]);\n\
    \            tmp2 = 0;\n        }\n        i++;\n        j++;\n        num *=\
    \ -1;\n    }\n    var tmp = arr.filter(r);\n    return tmp.length === 0;\n}\n\
    <|/ file dstars=2 source=github |>", "  for (var i = 0; i < l.length; i++)\n \
    \   if (l[i] == 0)\n      return true;\n  return false;\n}\n", "    let n = l.length;\n\
    \    for (let i = 0; i < n; i++){\n        let j = 0;\n        for (let j = i\
    \ + 1; j < n; j++){\n            if (l[i] + l[j] == 0){\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}", "\tfor(var i\
    \ = 1; i < l.length; i++){\n\t\tif(l[i]-l[i-1] !== 0)\n\t\t\treturn false;\n\t\
    }\n\treturn true;\n}\n", "  return l.filter(function(x){return l.indexOf(x)===l.lastIndexOf(x)}).length===1;\n\
    }", "  for(var i=0; i<l.length-1; i++){\n    var tmp = l[i];\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(tmp + l[j] === 0){\n        return false;\n    \
    \  }\n    }\n  }\n  return true;\n}\n", "    for(var i in l){\n        var l2\
    \ = [];\n        for(var j in l){\n            if( i != j && l2[0]==l[j] ){\n\
    \                l2.push(l[j]);\n            }\n        }\n        if (l2.length>1)\n\
    \            return true;\n    }\n    return false;\n}\n", "  l.sort();\n  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]+l[j]\
    \ === 0)\n        return false;\n    }\n  }\n  return true;\n}\n", "    return\
    \ l.length <= 1 || l.reduce(function(acc,x) { return acc && Math.abs(x) ===0;\
    \ },true);\n}\n", "  return pairs_sum_to_zero_helper(l, [], []);\n}\n", "  l =\
    \ new Set(l);\n  return l.size !== l.size && pairs(l).every(function (e){\n  \
    \  return e[0] + e[1] === 0;\n  });\n}\n", "    var pairs = _.pairs(l);\n    var\
    \ first_number = pairs[0][0];\n    var second_number = pairs[1][0];\n    for(var\
    \ i = 0; i< pairs.length; i++){\n        if(pairs[i][0] == first_number && pairs[i][1]\
    \ == second_number){\n            return true;\n        }\n    }\n    return false;\n\
    }\n</code>\n<|/ a tags=javascript |>\n<| a |>\n<code>", "    var pairs = _.map(_.pairs(l),\
    \ function(pair) {\n        return _.sumBy(pair, 0);\n    });\n    var pair =\
    \ _.find(pairs, function(pair) { return pair === 0; });\n    return pair === undefined;\n\
    }\n", "\tvar p = pairs(l);\n\tvar r = [];\n\tvar vals = [];\n\tfor(var i=0; i<p.length;\
    \ i++){\n\t\tvals.push(p[i][1]);\n\t}\n\treturn (vals.indexOf(0, vals.length-1)\
    \ === -1);\n}", "    var n = l.length,\n        sum = 0;\n    for (var i = 0;\
    \ i< n; i++){\n        var pairs = l.slice(i,i+2);\n        if (pairs.every(function(a){\
    \ return a===0; }))\n            return false;\n        sum += pairs.reduce(function(a,\
    \ b){return a+b;});\n    }\n    return sum === 0;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\
    \t\tvar count = 0;\n\t\tfor(var j=i+1;j<l.length;j++){\n\t\t\tcount = count +\
    \ Math.abs(l[i]-l[j]);\n\t\t}\n\t\tif(count==0){\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "    for(let i=0; i<l.length; i++){\n        if(l[i]<0){\n\
    \            console.log(\"invalid input\");\n            return false\n     \
    \   }\n        let l2 = l.slice();\n        l2.pop();\n        console.log(l2)\n\
    \        for(let j=0; j<l2.length; j++){\n            if((l2[j]+l[j+1])!=0){\n\
    \                console.log(l[j]+l[j+1])\n                return false\n    \
    \        }\n        }\n    }\n    console.log(true)\n    return true\n}", "  var\
    \ pairs = [];\n  var i;\n  for (i = 0; i < l.length-1; i++){\n    var j = i+1;\n\
    \    while (j < l.length){\n      var pair = [i, j];\n      if (l[i]+l[j] ===\
    \ 0){\n        pairs.push(pair);\n        break;\n      }\n      j++;\n    }\n\
    \  }\n  return pairs.filter(function(el){\n    return el[0] == el[1];\n  }).length\
    \ == pairs.length;\n}\n", "  l = l.slice();\n  var n = l[0], i = 0, pairs = [0];\n\
    \  while (i < l.length) {\n    n = l[i];\n    for (var j = 0; j < pairs.length;\
    \ j++) {\n      if (pairs[j] + n < pairs[j+1]) break;\n    }\n    if (j === pairs.length)\
    \ pairs.push(n);\n    else {\n      if (pairs[j+1] > pairs[j+2]) return false;\n\
    \      pairs[j+1] = pairs[j] + n;\n    }\n    i++;\n  }\n  return pairs.length\
    \ !== 0;\n}\n", "    var n = l.length;\n    var result = (n * (n + 1) - 1) >>\
    \ 1;\n    var i = 0;\n    for(i;i<n;i++) {\n        var sum = 0;\n        for(var\
    \ j=1;j<=i;j++) {\n            sum += l[j];\n        }\n        if(sum===0) {\n\
    \            return false;\n        }\n        for(var j=i+1;j<n;j++) {\n    \
    \        var sum = 0;\n            for(var k=i;k<=j;k++) {\n                sum\
    \ += l[k];\n            }\n            if(sum===0) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n", "    for(var i=1; i\
    \ < l.length; i++){\n        if(l[i] - l[i-1] != 0) return false;\n    }\n   \
    \ return true;\n}\n", "  for (var i = 0; i < l.length-1; i++){\n    for (var j\
    \ = 0; j < l.length-i-1; j++){\n      if (l[j] + l[j+1] != 0) return false\n \
    \   }\n  }\n  return true\n}\n", "  for (let i = 0, len = l.length; i < len; ++i){\n\
    \    for (let j = i+1; j < len; ++j){\n      if (l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  let n = l.length\n  for(i\
    \ = 0; i < n; i++){\n    for(j = 0 ; j < n; j++){\n      if(i != j){\n       \
    \ if(l[i] + l[j] != 0){\n          return false\n        }\n      }\n    }\n \
    \ }\n  return true\n}\n", "    var zero = false;\n    for (var i=0; i<l.length;\
    \ i++){\n        for (var j=i+1; j<l.length; j++){\n            if (l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ zero;\n}", "\t\n\tvar pairs = {};\n\t\n\tfor(var i = 0; i < l.length - 1; i++)\
    \ {\n\t\t\n\t\tvar k = l[i], v = l[i+1];\n\t\tvar has = pairs[k];\n\t\t\n\t\t\
    if(has === undefined || has === null) {\n\t\t\tpairs[k] = v;\n\t\t}\n\t\telse\
    \ {\n\t\t\tif(has.num === undefined) {\n\t\t\t\thas.num = v;\n\t\t\t}\n\t\t\t\
    else {\n\t\t\t\thas.num += v;\n\t\t\t}\n\t\t\t\n\t\t\tif(has.den === undefined)\
    \ {\n\t\t\t\thas.den = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thas.den *= v;\n\t\t\t\
    }\n\t\t}\n\t}\n\t\n\tvar result = [];\n\t\n\tfor(var key in pairs) {\n\t\tvar\
    \ v = pairs[key];\n\t\tresult.push({ num: v, den: 1 });\n\t}\n\t\n\tif(result.length\
    \ == 1) {\n\t\treturn false;\n\t}\n\telse if(result.length == 2) {\n\t\tvar result\
    \ = [];\n\t\tvar den = 0;\n\t\t\n\t\tfor(var key in pairs) {\n\t\t\tvar v = pairs[key];\n\
    \t\t\tresult.push({ num: v, den: den });\n\t\t\tden *= v;\n\t\t}\n\t\t\n\t\tvar\
    \ result = [];\n\t\t\n\t\tfor(var key in pairs) {\n\t\t\tvar v = pairs[key];\n\
    \t\t\t\n\t\t\tfor(var j = 0; j < result.length; j++) {\n\t\t\t\tvar rn = result[j];\n\
    \t\t\t\t\n\t\t\t\tif(rn.den === 1) {\n\t\t\t\t\tif(Math.abs(rn.num / den) <= 0.00001)\
    \ {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(rn.den\
    \ > 1) {\n\t\t\t\t\tif(Math.abs(rn.num / den) <= 0.00001) {\n\t\t\t\t\t\treturn\
    \ false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar den2 = 0;\n\t\t\
    \t\t\tvar num2 = 0;\n\t\t\t\t\t\n\t\t\t\t\tfor(var k = 0; k < rn.den; k++) {\n\
    \t\t\t\t\t\tden2 *= den;\n\t\t\t\t\t\tnum2 *= v;\n\t\t\t\t\t\tden++;\n\t\t\t\t\
    \t}\n\t\t\t\t\t\n\t\t\t\t\tvar x = Math.abs(num2 / den2);\n\t\t\t\t\tif(x <= 0.00001)\
    \ {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\
    \treturn false;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}", "\tlet seen = {};\n\
    \tfor (let i=0; i<l.length; i++){\n\t\tseen[l[i]] = true;\n\t}\n\tfor (let i=l.length-2;\
    \ i>=0; i--){\n\t\tif (seen[l[i]] || seen[l[i+1]]) return true;\n\t}\n\treturn\
    \ false;\n}\n", "   var sum=0;\n   var pairs=[];\n   for (var i=0; i<l.length-1;\
    \ i++){\n      var first = l[i];\n      var second = l[i+1];\n      if (first==second){\n\
    \         pairs.push(first+second);\n      }else{\n         if (sum<0) return\
    \ false;\n         var pair = first+second;\n         sum = pairs.reduce(function(a,b){\
    \ \n            return a+b; \n         });\n      }\n   }\n   return sum==0;\n\
    }\n", "  var i, pairs = [];\n  for(i=0;i<l.length;i++){\n    pairs.push([l[i],l[i]])\n\
    \  }\n  var pairs1 = pairs.sort();\n  var pairs2 = pairs1.reverse();\n  for(i=0;i<pairs1.length;i++){\n\
    \    if(pairs2[i][0]!==0 && pairs2[i][1]!==0){\n      return true;\n    }\n  }\n\
    \  return false;\n}", "  if(l == 0 || l == 1)return true;\n  var previous = l[0];\n\
    \  for(var i=1; i < l.length; i++){\n    if(l[i] - previous < 0)return false;\n\
    \    previous = l[i];\n  }\n  return true;\n}\n", "\tlet l1 = l.slice()\n\tlet\
    \ l2 = l.slice()\n\tl1.sort((a,b)=>a-b)\n\tl2.sort((a,b)=>a-b)\n\tlet zeros =\
    \ 0;\n\tfor(let i=0; i<l2.length; i++){\n\t\tzeros += l2[i]\n\t\tif(l2[i]==0){\n\
    \t\t\tl2.splice(i, 1)\n\t\t\ti--\n\t\t}\n\t}\n\treturn (l1.length == l2.length\
    \ && l1==l2) || false\n}\n", "    var sum = 0;\n    for (var i = 0; i < l.length;\
    \ i++){\n        sum += l[i];\n    }\n    var hash_table = {};\n    for (var i\
    \ = 0; i < l.length; i++){\n        var key = \"\" + sum;\n        if (hash_table[key]\
    \ === undefined){\n            hash_table[key] = true;\n        }\n        else{\n\
    \            return true;\n        }\n        sum -= l[i];\n    }\n    return\
    \ false;\n}\n", "    // Your code here\n    // console.log(\"l\", l);\n    let\
    \ sum = 0;\n    let first = true;\n    let results = [];\n\n    for(let i = 0;\
    \ i < l.length; i++){\n        sum += l[i];\n        if(!first && sum !== 0){\n\
    \            results.push(sum);\n            sum = 0;\n        }\n        if(first\
    \ || sum !== 0){\n            first = false;\n        }\n    }\n\n    // console.log(\"\
    results\", results);\n    return results.reduce((a, b) => a + b) === 0;\n}\n",
  "    var i, pair, found;\n    for(i=0; i < l.length-1; i++){\n        pair = l[i]+l[i+1];\n\
    \        if(pair === 0){\n            found = true;\n            break;\n    \
    \    }\n        if(!found){\n            return false;\n        }\n    }\n   \
    \ if(!found){\n        return true;\n    }\n}\n", "  let j;\n  let k = 0;\n  for\
    \ (j=1; j < l.length; j++){\n    if (l[j-1] > l[j] + l[j-1]){\n      k++;\n  \
    \  }\n  }\n  return (k === 1) ? false : true;\n}\n", "  for(var i = 0; i < l.length-1;\
    \ i++){\n    for(var j = i+1; j < l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n", "  if (l.length<=1){\n\
    \    return false;\n  }\n  var n = l.length;\n  var sum = 0;\n  for(var i = 0;\
    \ i < n; i++){\n    sum += l[i];\n    if (sum==0){\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if(l.length == 0) return false;\n  var sum = 0;\n\
    \  var twoSumCount = 0;\n  for(var i = 0; i < l.length - 1; i++){\n    for(var\
    \ j = i + 1; j < l.length; j++){\n      if(l[i] + l[j] == 0){\n        twoSumCount++;\n\
    \      }\n      else if(l[i] + l[j] > 0){\n        sum += l[i] + l[j];\n     \
    \   j = j - 1;\n      }\n      else{\n        sum -= l[i] + l[j];\n        i =\
    \ i - 1;\n      }\n    }\n  }\n  return twoSumCount == 1;\n}\n", "   var i, j,\
    \ k;\n   for (i=0, j=1; i<l.length; i++, j=2*j) {\n      k = i + j;\n      if\
    \ (k > l.length) return true;\n      if (l[i] + l[j] == 0) {\n         l.splice(k,\
    \ 1);\n         i--;\n         j--;\n      }\n   }\n   return false;\n}\n", " \
    \ return l.length !== 0 && (l.reduce(function(a, b){\n    return a + b;\n  },\
    \ 0) === 0);\n}\n", "  for(var i = 0; i<l.length; i++){\n    for(var j = i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] == 0)\n        return false\n    }\n\
    \  }\n  return true\n}\n", "    var p = l.filter(function(i){return i!==0;});\n\
    \    var plen = p.length;\n    var sum = 0;\n    var i = 1;\n    while (i < plen)\
    \ {\n        sum += p[i];\n        i += 2;\n        if (sum === 0) return true;\n\
    \    }\n    return false;\n}", "  l.sort(function(a, b){return b-a;});\n  let\
    \ result = [];\n  let a = 0, b = 0;\n  while (a < l.length && b < l.length){\n\
    \    if (l[a] == l[b]){\n      result.push(l[a]);\n      a++;\n      b++;\n  \
    \  }\n    else if (l[a]+l[b] == 0){\n      a++;\n      b++;\n    }\n    else{\n\
    \      a++;\n    }\n  }\n  return result.length == 2;\n}\n", "  var pairs = _.map(l,\
    \ function(item){\n    return [item, item];\n  });\n  var zeros = _.map(_.range(1,l.length),\
    \ function(num){\n    return _.filter(pairs, function(pair){\n      return pair[1]\
    \ == 0;\n    }).length;\n  });\n  return zeros.length == l.length-1;\n}\n", "\t\
    var n= l.length;\n\tvar t= 0;\n\tfor(var i=1; i<n; i++){\n\t\tt+= l[i];\n\t\t\
    if(i<t)return false;\n\t}\n\treturn true;\n}\n\n", "\tvar n = l.length;\n\tvar\
    \ m = l.length;\n\t\n\tvar i, j, k;\n\t\n\t// check if a pair is in the sum\n\t\
    // if so return false, else\n\t// return true if any one of the pairs is in the\
    \ sum\n\tfor(i = 0; i < n; i++){\n\t\tfor(j = i+1; j < n; j++){\n\t\t\t// find\
    \ pairs that sum to zero\n\t\t\tfor(k = 0; k < m; k++){\n\t\t\t\tif(l[k] + l[j]\
    \ == 0){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "    var sum = 0;\n    for (var i=0; i < l.length; i++){\n        sum +=\
    \ l[i];\n    }\n    var zeros = false;\n    for (var i=0; i < l.length; i++){\n\
    \        if (sum === 0){\n            zeros = true;\n            return false;\n\
    \        }\n        sum += l[i];\n    }\n    return zeros;\n}\n", "    return\
    \ l.filter(function(l){\n        return l.length < 2;\n    }).every(function(l){\n\
    \        return l.indexOf(l.slice(-1)) !== -1;\n    });\n}", "  if(l.length <\
    \ 2){\n    return false;\n  }\n  let map = new Map();\n  for(let e of l){\n  \
    \  if(!map.has(e)){\n      map.set(e, 0);\n    }\n    map.set(e, map.get(e) +\
    \ 1);\n  }\n  for(let e of l){\n    if(map.get(e) > 1){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "\tfor(var i=0; i<l.length-1; i++){\n\t\tif(l[i]+l[i+1]\
    \ != 0){\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "  return l.sort((a,b)\
    \ => a-b).reduce((prev, cur, idx) => {\n    let sum = Math.abs(prev + cur);\n\
    \    if (idx === 0 || prev === 0 || sum === 0) {\n      return idx === 0 ? false\
    \ : true;\n    } else {\n      return sum;\n    }\n  }, 0) === 0;\n}", "\tvar\
    \ s = l.slice();\n\tvar n = s.length,\n\t\tzeros = 0;\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tif(i == 0){\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i-1] == 0){\n\t\t\t\
    zeros ++;\n\t\t}\n\t\telse if(s[i-1] > 0){\n\t\t\tzeros --;\n\t\t}\n\t\telse{\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn zeros == 1;\n}\n", "   var sum_of_elements\
    \ = l.reduce(function(a,b){\n     return a + b\n   });\n   return  _.filter(l,\
    \ function(x){return sum_of_elements - x == 0;})\n           .length == 0;\n}\n",
  "  var i, j, pairs = [];\n  for (i = 0; i < l.length - 1; i++) {\n    for (j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i],\
    \ l[j]]);\n      }\n    }\n  }\n  return (pairs.length !== 0);\n}\n", "    for\
    \ (let i = 0; i < l.length-1; i++) {\n        for (let j = i+1; j < l.length;\
    \ j++) {\n            if (l[i] + l[j] < 0) return false;\n        }\n    }\n \
    \   return true;\n}\n", "  for (let i=0; i<l.length; i++){\n    let n1 = l[i];\n\
    \    for (let j=i+1; j<l.length; j++){\n      let n2 = l[j];\n      \n      //\
    \ avoid 0 as n1 and n2 will still be floats\n      if (n1 + n2 === 0){\n     \
    \   return false;\n      }\n    }\n  }\n  return true;\n}\n", "    // write your\
    \ code in Python 2.7\n    \n    //initialize two variables to store pairs whose\
    \ sum is zero.\n    var counter = 0;\n    var pairs = [];\n    \n    // iterating\
    \ through list\n    for(var i in l){\n        // getting current pair\n      \
    \  var currentPair = [l[i], l[i+1]];\n        \n        // checking if current\
    \ pair is pair with zero sum\n        if(currentPair.sumToZero() == true){\n \
    \           counter++;\n        }else{\n            pairs.push(currentPair);\n\
    \        }\n        \n        // increment the pointer\n        i += 2;\n    }\n\
    \    \n    if(counter == pairs.length){\n        return true;\n    }else{\n  \
    \      return false;\n    }\n}\n", "    for (var i=0; i<l.length-1; i++) {\n \
    \       var sum_to_zero = false;\n        for (var j=i+1; j<l.length; j++) {\n\
    \            sum_to_zero += (+l[i]) * (+l[j]);\n        }\n        if (sum_to_zero\
    \ === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    var sum_of_two = function(l){\n    var sum = 0;\n    for (var i=0; i<l.length;\
    \ i++) {\n        sum += l[i];\n    }\n    return sum;\n};\nvar sum_of_two_to_n\
    \ = function (n, l){\n    var sum = 0;\n    for (var i=0; i<l.length; i++) {\n\
    \        if (l.length >= n) {\n            sum += l[i];\n        }\n    }\n  \
    \  return sum;\n};\nvar sum_of_two_on_l = function (l, n) {\n    var sum = 0;\n\
    \    for (var i=0; i<l.length; i++) {\n        if (l.length >= n) {\n        \
    \    sum += l[i];\n        }\n    }\n    return sum;\n};\nvar count_of_two = function\
    \ (l){\n    var count = 0;\n    for (var i=0; i<l.length; i++) {\n        if (l[i]\
    \ === 2) {\n            count++;\n        }\n    }\n    return count;\n};\n",
  "    for(var i in l){\n        if(l[i]%2 == 0){\n            if(l.indexOf(l[i])>=0){\n\
    \                if(l.indexOf(l[l.indexOf(i)])<0){\n                    return\
    \ false;\n                }\n            }else{\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n", "\tvar pairs = [];\n\
    \tfor (var i = 0; i < l.length - 1; i++){\n\t\tvar a = l[i];\n\t\tvar b = l[i\
    \ + 1];\n\t\tif (a != 0 && b != 0 && a+b == 0){\n\t\t\tpairs.push([a, b]);\n\t\
    \t}\n\t}\n\tpairs.sort(function(a, b){\n\t\treturn a[0] - b[0];\n\t});\n\treturn\
    \ pairs.length == 2;\n}", "\tvar is_pair=function(v, i){\n\t\treturn !i && v;\
    \ \n\t};\n\tl.sort(function(a, b){return b-a});\n\tfor(var i=0, j=l.length-1;\
    \ i<j; i++, j--){\n\t\tif(l[i]+l[j] === 0) return is_pair(true, i)\n\t\telse return\
    \ is_pair(false, i);\n\t}\n\treturn is_pair(true, -1);\n}", "  for(var i=0;i<l.length;i++){\n\
    \    if(l[i]!=l[i+1]){\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  let arr = []\n  for(let i = 0; i < l.length; i++){\n    for(let j = i + 1; j\
    \ < l.length; j++){\n      if(l[j] - l[i] === 0)\n        arr.push([l[i], l[j]])\n\
    \    }\n  }\n  let pairs = {}\n  for(let i = 0; i < arr.length; i++){\n    let\
    \ [a, b] = arr[i]\n    if(!pairs[a])\n      pairs[a] = 0\n    if(!pairs[b])\n\
    \      pairs[b] = 0\n    if(pairs[a] === pairs[b])\n      pairs[a] += 1\n    else\n\
    \      pairs[a] = pairs[b]\n  }\n  for(let a in pairs){\n    if(pairs[a] > 1)\n\
    \      return false\n  }\n  return true\n}\n", "  let arr = [];\n  let n = l.length\n\
    \  for(let i=0; i<n; i++){\n    for(let j=i+1; j<n; j++){\n      if (l[i] + l[j]\
    \ === 0){\n        arr.push([i,j])\n      }\n    }\n  }\n  if (arr.length == 0){\n\
    \    return false;\n  }\n  else {\n    for(let i=0; i<arr.length; i++){\n    \
    \  if(arr[i][0] < arr[i][1]){\n        return false;\n      }\n    }\n  }\n  return\
    \ true;\n}\n", "  var pairs = pairs(l);\n  var i = 0;\n  while (i < pairs.length){\n\
    \    var current = pairs[i];\n    var next = pairs[i+1];\n    var currentSum =\
    \ 0;\n    var nextSum = 0;\n    for (var j=0; j < current.length; j++){\n    \
    \  currentSum += current[j];\n    }\n    nextSum = 0;\n    for (var j=0; j < next.length;\
    \ j++){\n      nextSum += next[j];\n    }\n    if(currentSum === 0 && nextSum\
    \ !== 0){\n      return true;\n    }\n    i++;\n  }\n  return false;\n}\n", " \
    \   var sum = 0;\n    for (var i = 0; i < l.length; i++){\n        sum += l[i];\n\
    \    }\n    if (sum === 0){\n        return false;\n    }else{\n        return\
    \ true;\n    }\n}\n", "    var i = 0;\n    var n = l.length;\n    var p = [];\n\
    \    while(i < n){\n        if(p[i] === undefined){\n            p[i] = i;\n \
    \           i += 1;\n        }\n        else if(p[i] !== i){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  var n = l.length, // if\
    \ length is one, there's only one unique number\n      i = 1,\n      out = 0;\n\
    \  for(; i<n; i++){\n    var sum = l[i];\n    out += sum; // += means add and\
    \ assign\n    if(out >= 1){\n      return false;\n    }\n  }\n  return true;\n\
    }", "    var i;\n    var j;\n    var pairsSumToZero;\n    var pairsSumToZeroLen;\n\
    \n    if (l.length<=1){\n        return false;\n    }\n    // Create an array\
    \ that contains the values of the pairs\n    // that sum to zero\n    pairsSumToZeroLen\
    \ = l.length - 1;\n    pairsSumToZero = [];\n    // Create an array that contains\
    \ the number of pairs with\n    // a difference greater than or equal to zero\n\
    \    pairsSumToZeroLen = pairsSumToZeroLen - 1;\n    // initialize two variables\
    \ j and i to 0\n    i = j = -1;\n    while (i < pairsSumToZeroLen){\n        pairsSumToZero[i]\
    \ = pairsSumToZero[j + 1] = l[i];\n        i++;\n        j++;\n    }\n    i =\
    \ pairsSumToZeroLen + 1;\n    while (i < pairs.length){\n        pairsSumToZero[i]\
    \ = pairsSumToZero[i - 1] + l[i];\n        i++;\n    }\n\n    // If there is any\
    \ pair whose sum to zero is not zero, return false.\n    for (i = 0; i <= pairsSumToZeroLen;\
    \ i++){\n        if (pairsSumToZero[i] === 0){\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n", "   var sum = 0;\n   for(var i = 0; i\
    \ < l.length; i++){\n       sum += l[i];\n   }\n   for(var i = 0; i < l.length;\
    \ i++){\n       if(sum === 0)\n           return false;\n       sum += -l[i];\n\
    \   }\n   return true;\n}\n", "  var sum = 0;\n  for (var i = 0; i < l.length;\
    \ i++) {\n    sum += l[i];\n    if (sum < 0) {\n      sum = 0;\n    }\n  }\n \
    \ for (var i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "    var n = l.length\n    for(var i = n - 1; i >= 0; i--){\n    \
    \    if(l[i] == l[i+1]){\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "  // create an array that will hold the pairs we find\n  // that\
    \ sum to zero.\n  var sum = 0;\n  var pairs = [];\n  // loop through the array\n\
    \  for(var i = 0, len = l.length; i < len; i++){\n    // find pairs that add up\
    \ to zero and add to pairs\n    for(var j = 0, len2 = pairs.length; j < len2;\
    \ j++){\n      // if the sum already found to be less than zero\n      // we skip\
    \ this pair.\n      if(sum + l[i] <= 0){\n        continue;\n      }\n      //\
    \ if the sum is greater than or equal to zero\n      // add this pair to our pairs\
    \ array.\n      if(sum + l[i] >= 0){\n        pairs.push(sum + l[i]);\n      }\n\
    \      // reset the sum.\n      sum = 0;\n    }\n    // add the current value\
    \ to sum.\n    sum += l[i];\n  }\n  // return true if we found a pair and false\
    \ otherwise.\n  return (pairs.length > 0);\n}", "  //write your code here\n  \n\
    }", "  for(var i = 0; i < l.length; i++){\n    if(l[i]!==0){\n      for(var j\
    \ = i+1; j < l.length; j++){\n        if(l[i] + l[j] === 0){\n          return\
    \ false;\n        }\n      }\n    }\n  }\n  return true;\n}", "    l.sort(function(a,b){\n\
    \        return b-a\n    });\n    for(var i=1;i<l.length;i++)\n        if (l[i]-l[i-1]!=0)\n\
    \            return false\n    return true\n}", "    for(var i = 0; i < l.length;\
    \ i++){\n        if(l[i+1] - l[i] != 0)\n            return false;\n    }\n  \
    \  return true;\n}\n", "  for(var i = 0; i<l.length-1; i++){\n    for(var j =\
    \ i+1; j<l.length; j++){\n      var l1 = l[i];\n      var l2 = l[j];\n      var\
    \ sum = 0;\n      for(var k = 0; k<l1.length; k++){\n        if(l1[k] === l2)\n\
    \          sum++;\n      }\n      if(sum === 0)\n        return false;\n    }\n\
    \  }\n  return true;\n}", "    var is_distinct = function (l, p) { return l.indexOf(p)\
    \ !== -1; };\n    return l.filter(is_distinct).length < l.length\n}\n", "\tlet\
    \ i = 0;\n\tlet j = 0;\n\twhile (i < l.length && j<l.length){\n\t\tif((l[i] +\
    \ l[j]) <= 0){\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn\
    \ (i+j) === l.length;\n}\n", "    for(var i=0; i<l.length-1; i++){\n        if(l[i]+l[i+1]\
    \ != 0){\n            return false;\n        }\n    }\n    return true;\n}", " \
    \ var len = l.length;\n  var total = 0;\n  for(var i=0; i<len; i++){\n    total\
    \ += l[i];\n  }\n  if(total == 0){\n    return false;\n  }\n  else{\n    return\
    \ true;\n  }\n}", "    var pairs = _.zip(l,l);\n    var sums = _.reduce(pairs,\
    \ function(result, pair) {\n        return result + pair[1];\n    }, 0);\n   \
    \ return (sums === 0); // sum == 0 iff the list contains just one number\n}\n\n",
  "    var n = l.length,\n        i,\n        sum = 0;\n\n    for(i = 0; i < n; i++){\n\
    \        sum += l[i];\n    }\n\n    for(i = 0; i < n; i++){\n        if(sum ===\
    \ 0){\n            return false;\n        }\n        else if(sum > 0){\n     \
    \       sum -= l[i];\n        }\n        else{\n            sum += l[i];\n   \
    \     }\n    }\n\n    return true;\n}\n", "  if(l.length===0){\n    return false;\n\
    \  }\n  var i,\n      pair,\n      result=true,\n      first_sum=0;\n  for(i=0;i<l.length;i++){\n\
    \    pair=l[i];\n    first_sum+=pair;\n    if(first_sum<0){\n      first_sum+=pair*2;\n\
    \    }\n    if(first_sum==0){\n      result=false;\n      break;\n    }\n  }\n\
    \  return result;\n}\n", "  return l.reduce(function(a,b){\n    return a + b <=\
    \ 0 ? false : true;\n  },false);\n}\n", "\tlet i = 0;\n\twhile(i < (l.length-2)\
    \ && l[i] === l[i+2]){\n\t\ti++;\n\t}\n\tif(i===0) return false;\n\tif(i===l.length-2)\
    \ return false;\n\tlet j = 0;\n\twhile(j < (l.length-1) && l[j] === l[j+1]){\n\
    \t\tj++;\n\t}\n\tif(j===0) return false;\n\tif(j===l.length-1) return true;\n\t\
    for(let k = i; k < l.length;){\n\t\tif((k===i-1) && l[k] === l[k+1]){\n\t\t\t\
    k++;\n\t\t\tcontinue;\n\t\t}\n\t\tif((k===l.length-1) && l[k] === l[k-1]){\n\t\
    \t\tk--;\n\t\t\tcontinue;\n\t\t}\n\t\tif(l[k] === l[k+1] && l[k] === l[k-1]){\n\
    \t\t\tk++;\n\t\t\tk--;\n\t\t\tcontinue;\n\t\t}\n\t\tif((k===j) && l[k] === l[k+2]){\n\
    \t\t\tk++;\n\t\t\tcontinue;\n\t\t}\n\t\tif((k===l.length-2) && l[k] === l[k-1]){\n\
    \t\t\tk--;\n\t\t\tcontinue;\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n",
  "  var pairs = _.pairs(l);\n  var sum = _.sum(l);\n  for(var i=0; i<pairs.length;\
    \ i++){\n    if(pairs[i][1] != sum)\n      return false;\n  }\n  return true;\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

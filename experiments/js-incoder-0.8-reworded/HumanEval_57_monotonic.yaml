name: HumanEval_57_monotonic
language: js
prompt: "//Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  var o=[], diff=0, ls=l.length;\n  for(var i = 0; i < ls.length; ++i)\
    \ o[i] = l[i];\n  for(i = 0; i < ls.length; ++i){\n    diff = ls[i] - o[i - 1];\n\
    \    if(diff > 0) return false;\n    if(diff < 0) return true;\n  }\n  return\
    \ true;\n}\n", "    var o = false;\n    for(var i=1, llen=l.length; i < llen;\
    \ ++i){\n        if(l[i-1] <= l[i]){ o = true; break; }\n    }\n    return o;\n\
    }\n\nexports.monotonic = monotonic;\n", "  var s = monotonic.stack;\n  s.push({\n\
    \    min: l[0],\n    max: l[1]\n  });\n  for(var i = 1; i < l.length; i++){\n\
    \    var e = l[i];\n    if (e.min > e.max){\n      return true; // non-monotonic\
    \ error\n    }\n    s.push(e);\n  }\n  s.pop();\n  return false;\n}\n\nmonotonic.stack\
    \ = [];\n", "    var n = l.length,\n        na = NaN, i;\n    for (i = 0; i <\
    \ n; ++i) {\n        if ((na = +l[i])) !== na + 1) return false;\n    }\n    return\
    \ true;\n}\n\nmonotonic.na = NaN;\n", "  if(l==null || l.length===0){\n    return\
    \ false\n  }\n  if(l.length===1){\n    return l[0]<l[1]\n  }\n  \n  var sortedArr\
    \ = l.slice().sort(function(a,b){\n    var aVal = a\n    var bVal = b\n    var\
    \ aIndex = a.indexOf(Number.MAX_VALUE)\n    if(aIndex!==-1){\n      aVal = a.slice(aIndex)\n\
    \    }\n    var bIndex = b.indexOf(Number.MAX_VALUE)\n    if(bIndex!==-1){\n \
    \     bVal = b.slice(bIndex)\n    }\n    if(aVal===bVal){\n      return a-b\n\
    \    }else{\n      return aVal-bVal\n    }\n  })\n  return sortedArr.reverse()[0]<sortedArr[0]\n\
    }\n", "    var s = l.length, m = s[0], a = [], i, j, k, l;\n    if(!s || !(l instanceof\
    \ Array))return !1;\n    for(i=1, j=s.length; i<j; ++i){\n        k = (l[i]<l[i-1])\
    \ ? 1 : -1;\n        a.push(k);\n    }\n    for(j=0; j<m; ++j)a.push(0);\n   \
    \ a.push(a[0]);\n    for(i=0, j=1; i<j; ++i, ++j)a[i] = a[j];\n    a[i] += a[i-1];\n\
    \    l = 0, j = s.length >> 1;\n    for(j=0; j<m; ++j, ++l)l+=a[j] << 8*j;\n \
    \   for(j=l+m; j<2*l+m; ++j, ++l)l+=a[j] << 8*j;\n    return l<2*m ? !1 : !0;\n\
    }", "    var s = false;\n    var i = l.length;\n    var sub = true;\n    while(i)\
    \ {\n        if (sub === l[i--]) {\n            s = true;\n        } else if (sub)\
    \ {\n            sub = false;\n        }\n    }\n    return s;\n}\n\nmonotonic.version\
    \ = \"1.1.1\";\n\nvar defaultAccessor = function(){return undefined};\nvar defaultComparator\
    \ = function(a, b){\n    if(a==b) return 0;\n    return a < b ? -1 : 1;\n};\n\n\
    var binaryInsert = function(array, value, comparator){\n    var idx = array.indexOf(value);\n\
    \    if(idx !== -1){\n        array.splice(idx, 1);\n        array.push(value);\n\
    \    }\n    return array;\n};\n\nvar binarySearch = function(array, value, comparator){\n\
    \    var first = 0;\n    var last = array.length - 1;\n    var mid;\n    var midItem;\n\
    \n    while (first <= last) {\n        mid = first + Math.floor((last - first)\
    \ / 2);\n        midItem = comparator(array[mid], value);\n\n        if(midItem\
    \ < 0){\n            first = mid + 1;\n        } else if(midItem > 0){\n     \
    \       last = mid - 1;\n        } else {\n            return mid;\n        }\n\
    \    }\n    return -(first + 1);\n};\n\nvar binarySearchIndex = function(array,\
    \ value, comparator){\n    return binarySearch(array, value, comparator);\n};\n\
    \nvar defaultComparer = function(lhs, rhs) {\n    if(lhs < rhs) return -1;\n \
    \   if(lhs > rhs) return 1;\n    return 0;\n};\n\nvar contains = function(array,\
    \ value){\n    return indexOf(array, value) !== -1;\n};\n\nvar size = function(array){\n\
    \    return array.length;\n};\n\nvar reverse = function(array){\n    var ret =\
    \ [];\n    for(var i = array.length - 1; i >= 0; i--){\n        ret.push(array[i]);\n\
    \    }\n    return ret;\n};\n\nvar last = function(array){\n    return array[array.length\
    \ - 1];\n};\n\nvar indexOf = function(array, value, start){\n    start = +start\
    \ || 0;\n    var len = array.length;\n    var i = start < 0 ? len + start : start;\n\
    \    if(i < 0) i += len;\n    for(; i < len; i++){\n        if(array[i] === value)\
    \ return i;\n    }\n    return -1;\n};\n\nvar pluck = function(array, propertyName){\n\
    \    return map(array, propertyName);\n};\n\nvar where = function(obj, spec){\n\
    \    return filter(pluck(keys(obj), spec), Boolean);\n};\n\nvar indices = function(obj,\
    \ spec){\n    return filter(map(pluck(keys(obj), spec), Number), Boolean);\n};\n\
    \nvar count = function(obj, spec){\n    return pluck(filter(obj, spec), Boolean).length;\n\
    };\n\nvar objToString = function(value){\n", "  return monotonicForArray(l) <\
    \ 0;\n}\n", "  return !l.length || \n         l.every(function(v, i, a){\n   \
    \        return (v.index > i ? 1 : -1) * (v.index > a[i+1].index ? -1 : 0);\n\
    \         });\n}\n", "  var a = +l[0], b = +l[1], c = +l[2], d = +l[3], e = +l[4];\n\
    \  return !isNaN(a) && !isNaN(b) && !isNaN(c) && !isNaN(d) && !isNaN(e)\n    \
    \  ? d <= a\n        ? (b < c ? a < d : c < b)\n        : b < c ? a < d : c <\
    \ b\n      : !isNaN(a) && !isNaN(b) && !isNaN(c) && !isNaN(d) && a <= b\n    \
    \  ? a <= c ? d <= e : e <= d\n      : !isNaN(a) && !isNaN(b) && !isNaN(c) &&\
    \ !isNaN(d) && !isNaN(e)\n      ? a <= c && b <= d\n        : b < c ? a <= d :\
    \ c < a || c < d;\n}\n", "  if(!isArrayLike(l)) return false\n  return !l.some(function(v,\
    \ i, a){\n    return !isValue(a[i - 1]) || isValue(a[i - 1]) && isValue(v) ? v\
    \ - a[i - 1] : false\n  })\n}\n", "\tvar s = 0, n = 0; for(var i=0, n=l.length;i<n;i++){\n\
    \t\tif(l[i] > s){\n\t\t\ts = l[i];\n\t\t}\n\t\telse if(l[i] < s){\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n", "  var n = l.length;\n  return sort(l).all()\
    \ ? !n\n      : n < 2 || (n == 2 && !sort(l).all());\n}\n", "  var n = l.length,\
    \ firstIn, lastIn, minOut, maxOut, first, last;\n  for(var i = 0; i < n; i++){\n\
    \    firstIn = l[i];\n    lastIn = l[i - 1];\n    minOut = Math.min(firstIn, lastIn);\n\
    \    maxOut = Math.max(firstIn, lastIn);\n    if(minOut != maxOut){\n      first\
    \ = Math.min(minOut, maxOut);\n      last = Math.max(minOut, maxOut);\n      if((first\
    \ == last)\n        || (first != (firstIn + lastIn) / 2)){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = monotonic;\n\n},{}],17:[function(require,module,exports){\n\
    var process=require(\"__browserify_process\");/**\n * This is the web browser\
    \ implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\n\
    exports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs\
    \ = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors\
    \ = useColors;\nexports.storage = 'undefined' != typeof chrome\n             \
    \  && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n\
    \                  : localstorage();\n", "\tvar i = 1;\n\twhile (i < l.length){\n\
    \t\tif (l[i-1] > l[i]){return false}\n\t\ti++;\n\t}\n\treturn true;\n}\n", "\t\
    var monotonic = false, i, ii = l.length, x0 = +l[0], n = l[1], max = +l[--ii];\n\
    \tfor(i = 0; i < ii; ++i){\n\t\tx0 > n && (monotonic = true);\n\t\tn = (x0 +=\
    \ l[i]) > max ? x0 : n;\n\t}\n\treturn monotonic;\n}\n\nmonotonic.invert = function(x){\n\
    \treturn !monotonic(x);\n};\n\nreturn monotonic;\n});\n\ndefine('Core/NormalizedCartesian3',[\n\
    \        './Cartesian3',\n        './Check',\n        './defaultValue',\n    \
    \    './defined',\n        './DeveloperError',\n        './Math'\n    ], function(\n\
    \        Cartesian3,\n        Check,\n        defaultValue,\n        defined,\n\
    \        DeveloperError,\n        CesiumMath) {\n    'use strict';\n\n    var\
    \ scaleToGeodeticSurfaceIntersection = new Cartesian3();\n    var scaleToGeodeticSurfaceGradient\
    \ = new Cartesian3();\n\n    /**\n     * Scales the provided Cartesian position\
    \ along the geodetic surface normal\n     * so that it is on the surface of this\
    \ ellipsoid.  If the position is\n     * at the center of the ellipsoid, this\
    \ function returns undefined.\n     *\n     * @param {Cartesian3} cartesian The\
    \ Cartesian position to scale.\n     * @param {Cartesian3} oneOverRadii One over\
    \ radii of the ellipsoid.\n     * @param {Cartesian3} oneOverRadiiSquared One\
    \ over radii squared of the ellipsoid.\n     * @param {Number} centerToleranceSquared\
    \ Tolerance for closeness to the center.\n     * @param {Cartesian3} [result]\
    \ The object onto which to store the result.\n     * @returns {Cartesian3} The\
    \ modified result parameter, a new Cartesian3 instance if none was provided, or\
    \ undefined if the position is at the center.\n     *\n     * @exports scaleToGeodeticSurface\n\
    \     *\n     * @private\n     */\n    function scaleToGeodeticSurface(cartesian,\
    \ oneOverRadii, oneOverRadiiSquared, centerToleranceSquared, result) {\n     \
    \           if (!defined(cartesian)) {\n            throw new DeveloperError('cartesian\
    \ is required.');\n        }\n        if (!defined(oneOverRadii)) {\n        \
    \    throw new DeveloperError('oneOverRadii is required.');\n        }\n     \
    \   if (!defined(oneOverRadiiSquared)) {\n            throw new DeveloperError('oneOverRadiiSquared\
    \ is required.');\n        }\n        if (!defined(centerToleranceSquared)) {\n\
    \            throw new DeveloperError('centerToleranceSquared is required.');\n\
    \        }\n        \n        var positionX = cartesian.x;\n        var positionY\
    \ = cartesian.y;\n        var positionZ = cartesian", "\tvar i = 0;\n\twhile (!monot(l[i]))\
    \ i++;\n\tif (i === l.length) return true;\n\treturn false;\n}\n", "    var n\
    \ = l.length;\n    return !(n|0) && n>0 && every(l, (function(elem, i, arr){\n\
    \        return i>0 && l[i-1] >= elem;\n    }));\n}\n", "  if(l){\n    var n =\
    \ l[0], k = 1;\n    for(var i = 1, len = l.length; i < len; i++){\n      var x\
    \ = l[i];\n      if(x > n && k < 2) n = x;\n      else if(x < n && k > 1) n =\
    \ x;\n      k *= -1\n    }\n    return n\n  }\n}\n\nmodule.exports = monotonic;\n\
    \n},{}],143:[function(require,module,exports){\n'use strict'\n\nvar pad = require('./pad')\n\
    var repeatString = require('./repeat-string')\nvar slice = [].slice\n\nmodule.exports\
    \ = padEnd\n", "    l = monotonicSort(l);\n    var n = l.length,\n        l0 =\
    \ l[0],\n        l1 = l[1],\n        l2 = l[2],\n        l3 = l[3],\n        i;\n\
    \    if ( n <= 1 ) {\n        return false; //if the array is empty, return false.\n\
    \    }\n    else {\n        if ( l0 > l1 ) {\n            return false;\n    \
    \    }\n        else if ( l0 < l2 ) {\n            if ( l1 > l2 ) {\n        \
    \        return false;\n            }\n        }\n        else if ( l2 < l3 )\
    \ {\n            if ( l0 > l3 ) {\n                return false;\n           \
    \ }\n        }\n        else if ( l3 < l1 ) {\n            return false;\n   \
    \     }\n        else if ( l1 < l0 ) {\n            return true;\n        }\n\
    \    }\n    for ( i = n - 1; i--; ) {\n        if ( (l3 = l3) < l2 ) {\n     \
    \       if ( l2 < l0 ) {\n                return false;\n            }\n     \
    \   }\n        else if ( l3 < l1 ) {\n            if ( l1 < l0 ) {\n         \
    \       return false;\n            }\n        }\n        else if ( l2 < l1 ) {\n\
    \            if ( l0 < l1 ) {\n                return true;\n            }\n \
    \       }\n        else if ( l3 < l0 ) {\n            return true;\n        }\n\
    \    }\n    return true;\n}\n", "  return monotonic_helper(l, true);\n}\n", " \
    \   var a = l.slice();\n    var b = a;\n    a[0] > b[0] && (a[0] = b[0]);\n  \
    \  a[0] === b[0] && (a[1] > b[1]) && (a[1] = b[1]);\n    a[1] === b[1] && (a[2]\
    \ > b[2]) && (a[2] = b[2]);\n    a[2] === b[2] && (a[3] < b[3]) && (a[3] = b[3]);\n\
    \    a[3] === b[3] (&& a[4] > b[4]) && (a[4] = b[4]);\n    a[4] === b[4] (&& a[5]\
    \ < b[5]) && (a[5] = b[5]);\n    a[5] === b[5] (&& a[6] > b[6]) && (a[6] = b[6]);\n\
    \    a[6] === b[6] (&& a[7] < b[7]) && (a[7] = b[7]);\n    return a[0] < b[0]\
    \ ? 1 : a[0] > b[0] ? -1 : 0;\n};\n\nmonotonic.array = function(array){\n    if\
    \ (array.length < 6) return monotonic.array.Linear(array);\n    if (array.length\
    \ < 18) return monotonic.array.Monotonic(array);\n    return monotonic.array.Step(array);\n\
    };\n", "\tif(l.length > 1 && l.length !== l.max()){\n\t\tvar monotonic = false;\n\
    \t\tvar cur;\n\t\tvar prev;\n\t\tfor(var i = 0; i < l.length; i++){\n\t\t\tif(l[i]\
    \ !== prev){\n\t\t\t\tmonotonic = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprev =\
    \ l[i];\n\t\t}\n\t\treturn monotonic;\n\t}\n\treturn true;\n}\nmodule.exports\
    \ = monotonic;\n\n},{}],370:[function(_dereq_,module,exports){", "  var n = l.length,\n\
    \      a,\n      b,\n      i = 0,\n      c;\n  while(++i < n){\n    b = l[i];\n\
    \    c = l[i - 1];\n    if(a === undefined || b === undefined || a < b - c) return\
    \ a;\n    a = b;\n  }\n  return false;\n}\nmonotonic.version = '0.2.2';\n", " \
    \ var s = 0, n = 0;\n  var l = l||[];\n  var a = [n], b = [n];\n  while(a[0]<b[0]){\n\
    \    n = a[0]; a[0]+=b[0]; b[0]+=n;\n    a.push(n);\n    b.push(n);\n  }\n  while(a[n-1]>b[n-1]){\n\
    \    n = a[n-1]; a[n-1]+=b[n-1]; b[n-1]+=n;\n    a.push(n);\n    b.push(n);\n\
    \  }\n  return a[0]==b[0] && a[n-1]==b[n-1];\n}\n", "  var n = l.length,\n   \
    \   monotonic = true,\n      p, i, l;\n  if(n <= 1){\n    return false;\n  }\n\
    \  for(i = 2; i <= n; i++){\n    p = l[i-1] + l[i] + ((Math.abs(l[i] - l[i - 1])\
    \ < Number.EPSILON) ? 0 : 1);\n    if(p < 0){\n      monotonic = false;\n    }\n\
    \    if(p > 0){\n      break;\n    }\n  }\n  return monotonic;\n}\n", "  var a\
    \ = l.slice(),\n      b = a.slice(),\n      n = a.length,\n      m = b.length,\n\
    \      i = -1,\n      x = 0,\n      y = 0,\n      j = n - 1;\n\n  if (m === 0)\
    \ {\n    return true;\n  }\n\n  while (++i < n) {\n    if (a[i] <= b[i]) {\n \
    \     x = a[i];\n    } else {\n      x = b[i];\n      y = a[i];\n    }\n  }\n\n\
    \  return a[i] === x && b[i] === y;\n}\n\nmodule.exports = monotonic;\n\n},{}],416:[function(require,module,exports){\n\
    var isFunction = require('lodash/lang/isFunction');\n\nvar defaultMergeConfig\
    \ = {\n  arrayMerge: function(arr1, arr2) {\n    return arr1.concat(arr2);\n \
    \ },\n  objectMerge: function(obj1, obj2) {\n    return Object.assign({}, obj1,\
    \ obj2);\n  }\n};\n", "  var o= l.length, a= 0, d= 0, i= 0, N= l.length-1, x=\
    \ l[0], z= l[N];\n  if (N<1) { return false }\n  while (true)\n  {\n    d= x-z;\n\
    \    if (d<0) { a= i; x= z; }\n    else if (d> 0) { a= i+1; z= x; }\n    else\
    \ { return true }\n    i= i + 1;\n    d= x-z;\n    if (i>=N) { return false }\n\
    \  }\n}\n", "  var isAscending = l[0] >= l[1];\n  if(isAscending && l[0] <= l[2])\
    \ return true; //if the first value is greater than the second value, use it\n\
    \  if(!isAscending && l[1] >= l[2]) return true;\n  var l = l.slice(0),\n    i\
    \ = 1,\n    j = 1,\n    max = 1,\n    monotonic = true,\n    n,\n    nExtreme;\n\
    \n  while(i < l.length){\n    n = l[i];\n    if(!isAscending){\n      n = l[i\
    \ - 1];\n    }\n    if(n < l[j]){\n      monotonic = false;\n    }\n    if(monotonic){\n\
    \      nExtreme = j;\n      j = i;\n    }else{\n      nExtreme = i;\n      i =\
    \ j;\n    }\n    if(nExtreme != i){\n      max = Math.max(max, i - nExtreme);\n\
    \    }\n    i++;\n  }\n  return isAscending ? max : !max;\n}\n\n", "    var o\
    \ = +l[0];\n    for(var i = 1; i < l.length; ++i){\n        if(+l[i] < o) o =\
    \ +l[i];\n    }\n    return o === +l[l.length-1];\n}\n", "  return !l(l(-1));\n\
    }\n", "  var s = monotonicSort;\n  return l.some(function(v,i,l){\n    return\
    \ s(v, l[i-1]) < 0;\n  });\n}\n", "  var s = 0, n = l.length;\n  for (var i =\
    \ 0; i < n; i++) {\n    var x = l[i]\n    var x_prev = l[i - 1] || 0, dx = Math.abs(x\
    \ - x_prev);\n    if (dx < s) s = dx, i = n;\n  }\n  return i === n;\n}\n\nmodule.exports\
    \ = monotonic;\n\n},{}],25:[function(_dereq_,module,exports){\nvar indexOfNaN\
    \ = _dereq_('indexof');\n", "    var o = [];\n    var max = 0;\n    var min =\
    \ 0;\n    var s = l.slice(0);\n    var m = s.length;\n    var k = false;\n\n \
    \   for (var i = 0, l = s.length; i < l; i++){\n        var t = s[i];\n      \
    \  if (t > max) max = t;\n        if (t < min) min = t;\n    }\n\n    o.push(min);\n\
    \    for (var i = l -1; i >= 0; i--){\n        var t = s[i];\n        if (t <\
    \ max){\n            o.push(t);\n            k = !k;\n        }\n    }\n    return\
    \ k;\n}\n", "\tfor(var i=1, ls=l.length; i<ls && l[i-1]>l[i]; i++);\n\treturn\
    \ !l[i-1];\n}\n\nmonotonic.pure = function(arr){\n\treturn monotonic(arr) && arr.length\
    \ < 40;\n};\n\nvar mono = function(monotonic){\n\treturn monotonic(Array.from(arguments));\n\
    };\n\nmono.pure = function(arr){\n\treturn monotonic(arr) && arr.length < 40;\n\
    };\n\nmono.strict = function(arr){\n\treturn monotonic(arr) && arr.length < 41;\n\
    };\n\nmono.lazy = function(arr){\n\treturn monotonic(arr);\n};\n", "\tvar a =\
    \ l.slice(),\n\t\tlen = a.length,\n\t\ti = 1,\n\t\tb = a[i - 1];\n\tfor ( ; i\
    \ < len; i++ ){\n\t\tif ( a[i] <= b ){\n\t\t\treturn true;\n\t\t}\n\t\tb = a[i];\n\
    \t}\n\treturn false;\n}\n\nmodule.exports = filter;\n\n},{}],20:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array\
    \ contains values.\n     */\n    function contains(arr, val) {\n        return\
    \ indexOf(arr, val) !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"\
    ./indexOf\":17}],21:[function(_dereq_,module,exports){\n'use strict';\n", "\t\
    var n = l.length;\n\tif (n == 0) return true;\n\tvar d=0, i;\n\tfor (i=0; i<n;\
    \ i++){\n\t\tif (l[i] != l[i-1]) d = 1;\n\t}\n\treturn !d;\n}\n", "    if(!l)\
    \ return true;\n    var length = l.length;\n    if(length === 1) return false;\n\
    \    if(length !== l.length) return false;\n    for(var i = 1;i < length;++i){\n\
    \        if(l[i-1] > l[i]) return true;\n        if(l[i-1] < l[i]) return false;\n\
    \    }\n    return false;\n}\n", "  return !l.reduce(function(p, n, i){\n    return\
    \ p && p[n] <= l[i]\n  }, true)\n}\n\nmonotonic.increasing = function(arr){\n\
    \  return monotonic(arr) && monotonic(arr.slice(1))\n}\n\nmonotonic.decreasing\
    \ = function(arr){\n  return monotonic(arr) && monotonic(arr.slice(1))\n}\n\n\
    module.exports = monotonic\n\n", "    var l = l.slice();\n    l.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return !l[0] || l.reduce(function(a,b){\n \
    \       return a > b ? a : b;\n    }) - l[1] === 0;\n}\n", "\tvar monotonic =\
    \ false, xMin = 1e9, yMin = 1e9, xMax = 0, yMax = 0;\n\tfor(var i = 0, len = l.length;\
    \ i < len; i++){\n\t\tvar x = l[i], y = l[i+1];\n\t\tif(x <= xMin && x >= xMax){\
    \ xMin = x;\n\t\t\tyMin = y; }\n\t\telse if(x >= xMin && x <= xMax){ xMax = x;\
    \ }\n\t\telse if(y <= yMin && y >= yMax){ yMin = y;\n\t\t\txMax = y; }\n\t\telse\
    \ if(y >= yMin && y <= yMax){ yMax = y; }\n\t}\n\tif(xMin == 1e9 && yMin == 1e9\
    \ && xMax == 0 && yMax == 0){\n\t\tmonotonic = true;\n\t}\n\treturn monotonic;\n\
    }\n\nmodule.exports = monotonic;\n\n},{}],122:[function(_dereq_,module,exports){",
  "\tvar monotonic = false;\n\tvar n = l.length;\n\tif(n==0) return monotonic;\n\t\
    if(n==1) return (compare(l[0], l[1]) < 0);\n\tfor(var i=1;i<n;i++){\n\t\tif(compare(l[i-1],l[i])<0){\n\
    \t\t\tmonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}", "\t\
    return !!l.reduce(function(p, c, i, a) {\n\t\treturn p && c-i || (i>1 && c-a[i\
    \ - 1]<=0);\n\t}, true);\n}\n\nvar maxIter = 1000;", "    return monotonicSortFunc(l,\
    \ l.length);\n}\n", "  var sm = l.length, i, j, t;\n  for(i=0; i<sm; i++){\n \
    \   for(j=0; j<sm; j++){\n      t = l[j]-l[j-1];\n      if(t && t!==0) return\
    \ true;\n      if(t===0) return false; // allow zero length paths\n    }\n  }\n\
    \  return false;\n}\n", "  return l.length && (l.reduce(function(a, b){\n    return\
    \ a && Math.abs(b) < Math.abs(a);\n  }, false) !== 1);\n}\n", "    var s = 0,\
    \ n = l.length;\n    if (n > 1) {\n        var i = n;\n        while (i-- > 0)\
    \ if (l[i] > l[i-1]) s = i + 1;\n    }\n    else {\n        while(++i < n) if\
    \ (l[i] > l[i-1]) s = i + 1;\n    }\n    return s <= n - 1 && l[s] == l[n-1];\n\
    }\n", "\tfor(var i = 0, len = l.length; i < len; ++i){\n\t\tif(monotonic_helper(l[i])\
    \ !== l[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nmonotonic.helper\
    \ = function(value){\n\treturn isNaN(value) ? value : value > 0;\n};\n\nmonotonic_helper\
    \ = function(value){\n\treturn isNaN(value) ? value : (value && value.length >=\
    \ 2 && monotonic(linear_spline(value)));\n};\n", "  var s = 1,\n      n = l.length,\n\
    \      a,\n      b; //Calc running total and update running total\n\n  for(var\
    \ i = 0; i < n; ++i){\n    s = s * i + l[i];\n    a = s + b; if (a >= b) b = a;\n\
    \  }\n\n  return b <= s;\n}\n", "    var n = l.length,\n        a;\n    if (n\
    \ < 1) return false;\n    a = l[0], a0 = l[1], n0 = l[2], i = 1, su;\n    while\
    \ (++i < n) {\n        su = a + a0 - (a0 = a);\n        if (su > 0) {\n      \
    \      a = su;\n        } else {\n            a = a0;\n        }\n    }\n    return\
    \ !(n0 > a0);\n}\nmonotonic.tau = 2 * Math.PI;\n", "  return !l.length || (typeof\
    \ l[0] !== 'number' || !isFinite(l[0]) && !(l[0] > l[-1]));\n}\n", "  return !isArray(l)\
    \ || l.length >= 2 && !every(l, [isNumber, isNumber]) && l.reduce(function(l,\
    \ i){\n    var v = l[i];\n    l[i] = isNumber(v) ? monotonic(v) ? v : true : v;\n\
    \    return l;\n  }, [false]);\n}\n", "\tvar l = l(0);\n\treturn !l(1) && l(-1);\n\
    }\n", "\tfor(var i = 1, len = l.length; i < len; i++){\n\t\tif(l[i-1] < l[i]){\n\
    \t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexports.monotonic = monotonic;\n",
  "  return monotonicBy(identity, l);\n}\n\nmonotonic.radix = 2; // 10. This function\
    \ can be called with strings and it can coerce its argument to an array of numbers.\n\
    \nmonotonic.paths = [\"A\", \"Y\", \"a\", \"y\", \"b\", \"c\"];\n", "    var monotonic\
    \ = true;\n    var neq = false, i, len;\n    if(l.length <= 1){\n        monotonic\
    \ = false;\n        return monotonic;\n    }\n    for(i = 0, len = l.length; i\
    \ < len; i++){\n        if(l[i] !== l[i - 1]){\n            neq = true;\n    \
    \        break;\n        }\n    }\n    if(!neq){\n        monotonic = false;\n\
    \    }\n    return monotonic;\n}\n", "  return l.every(function(v, i, a){\n  \
    \  return v === a[i+1] || v < a[i+1];\n  });\n}\n\n},{}],31:[function(require,module,exports){\n\
    'use strict';\n", "    l = l.slice()\n    return !l.some(function (e, i) { return\
    \ e <= l[i - 1] || e >= l[i + 1] })\n}\n", "    var s = monotonic.stack,\n   \
    \     i,\n        j;\n\n    // s is empty or contains only NaN.\n    if (!s.a0\
    \ && !s.a1 && !s.a2 && !s.a3){\n        return 0;\n    }\n    var a0 = s.a0 ||\
    \ 0,\n        a1 = s.a1 || 0,\n        a2 = s.a2 || 0,\n        a3 = s.a3 || 0,\n\
    \        rv = a3 < 0,\n        av = a3 < 0,\n        b0 = a1 < 0,\n        b1\
    \ = a2 < 0,\n        b2 = a3 < 0,\n        b3 = a0 < 0,\n        bound = b3 &&\
    \ a1 < 0,\n        isOK = false;\n    if (bound || a0 > a1) {\n        if (!b0)\
    \ {\n            return 1;\n        }\n        if (!b1) {\n            return\
    \ 0;\n        }\n        if (!b2) {\n            return -1;\n        }\n     \
    \   return -2;\n    }\n    if (a0 !== a1) {\n        if (!b0) {\n            return\
    \ 1;\n        }\n        if (!b1) {\n            return -1;\n        }\n     \
    \   return -2;\n    }\n    if (a1 !== a2) {\n        if (!b0) {\n            return\
    \ -1;\n        }\n        if (!b1) {\n            return 1;\n        }\n     \
    \   return -2;\n    }\n    if (a0 !== a3) {\n        if (!b0) {\n            return\
    \ -1;\n        }\n        if (!b1) {\n            return 1;\n        }\n     \
    \   return 0;\n    }\n    if (!b2) {\n        return 1;\n    }\n    if (!b3 ||\
    \ b2 === a3) {\n        return -1;\n    }\n    if (!b1) {\n        return 1;\n\
    \    }\n    if (!b0) {\n        return 0;\n    }\n    return rv === b3;\n}\nmonotonic.stack\
    \ = {\n    a0: 0,\n    a1: 0,\n    a2: 0,\n    a3: 0\n};\nmonotonic.line = function(v)\
    \ {\n    var a = monotonic.line.a,\n        b = monotonic.line.b,\n        /*the\
    \ new x value is either the old x value or a reflection of the old x value */\n\
    \        x = v.x;\n    v.x = x;\n    /*push a new entry onto the stack */\n  \
    \  a.push(v);\n    if (v.length === 3) {\n        if (x === b[1]) {\n        \
    \    /*if the new x position is the same as the end point of the previous reflection\
    \ line */\n            b[1] = x; /*then use the reflection line as the end point\
    \ of the new line segment */\n        }\n        else {\n            /*otherwise\
    \ calculate the reflection line's end point using the new x position as the end\
    \ point */\n            b[1] = x - monotonic.lineSlope(b[1], b[0], b[2], b[3],\
    \ x); /*y = mx+b  */\n        }\n        /*discard the reflection line */\n  \
    \      b.splice", "  var decreasing = true;\n  var i, curr;\n  var len = l.length;\n\
    \n  for (i = 0; i < len-1; ++i) {\n    curr = l[i];\n    if (curr > l[i+1]) {\n\
    \      decreasing = false;\n      break;\n    }\n  }\n\n  return decreasing ?\
    \ -1 : (!decreasing && 0);\n}\n", "    var n = l.length;\n    return sortNatural(\
    \ n>0 ? l : l.slice(0).reverse() ).every( function(e,i,a){\n        i = +i;\n\
    \        return !(i>=n || ( e !== l[i-1] ));\n    });\n}\n", "  var len = l.length,\n\
    \      monotonic;\n  if (len < 2) return false;\n  else if (len < 4) return true;\n\
    \  else if (l.length < 5) return true;\n  else if (l.length !== ~~(len / 4)) return\
    \ false;\n  monotonic = true;\n  while (++i < len) {\n    if (l[i] < l[i - 1])\
    \ monotonic = false;\n  }\n  return monotonic;\n}\n\nmodule.exports = monotonic;\n\
    \n", "\tvar s = monotonicSort;\n\treturn l(s).length ? s[0] <= s[1] : monotonicSort(l);\n\
    }\nmonotonic.invert = function(v){\n\treturn !v || monotonicSort([v.x, v.y, v.z,\
    \ v.w]) || monotonicSort([v.x, v.y, v.z, v.w], function(a, b){ return b - a; });\n\
    };\n\nmodule.exports = monotonic;\n\n},{\"./sort-by-attributes\":322}],322:[function(_dereq_,module,exports){",
  "    return !l.length ? true : (\n        l.reduce(function (a, v, i, arr) {\n \
    \           return v > arr[i - 1] ? false : a;\n        }, true) ||\n        l.every(function\
    \ (v, i, arr) {\n            return v <= arr[i + 1] ? false : a;\n        }));\n\
    }\n", "    if (l){\n        return l.every(function(v, i, a){\n            return\
    \ a[i] - v === 1 || a[i] - v === -1;\n        });\n    }\n}\n},{\"./array-includes\"\
    :36}],43:[function(require,module,exports){\nvar indexOf = require('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function contains(arr,\
    \ val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports\
    \ = contains;\n\n\n},{\"./indexOf\":50}],44:[function(require,module,exports){\n\
    var unique = require('./unique');\nvar filter = require('./filter');\nvar some\
    \ = require('./some');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\
    \n\n    /**\n     * Return a new Array with elements that aren't present in the\
    \ other Arrays.\n     */\n    function difference(arr) {\n        var arrs = slice(arguments,\
    \ 1),\n            result = filter(unique(arr), function(needle){\n          \
    \      return !some(arrs, function(haystack){\n                    return contains(haystack,\
    \ needle);\n                });\n            });\n        return result;\n   \
    \ }\n\n    module.exports = difference;\n\n\n\n},{\"./contains\":43,\"./filter\"\
    :45,\"./slice\":49,\"./some\":51,\"./unique\":52}],45:[function(require,module,exports){\n\
    var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array\
    \ filter\n     */\n    function filter(arr, callback, thisObj) {\n        callback\
    \ = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr\
    \ == null) {\n            return results;\n        }\n\n        var i = -1, len\
    \ = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n\
    \            if (callback(value, i, arr)) {\n                results.push(value);\n\
    \            }\n        }\n\n        return results;\n    }\n\n    module.exports\
    \ = filter;\n\n\n\n},{\"../function/makeIterator_\":47}],46:[function(require,module,exports){\n\
    arguments[4][6][0].apply(exports,arguments)\n},{\"dup\":6}],47:[function(require,module,exports){\n\
    \n\n    /**\n     * Returns the first argument provided to it.\n     */\n    function\
    \ identity(val){\n        return val;\n    }\n\n    module.exports = identity;\n\
    \n\n\n},{}],48:[function(require,module,exports){\nvar indexOf = require('./indexOf');\n\
    \n    /**\n     * Combines an array with all the items of another.\n     * Does\
    \ not allow duplicates and is case and type sensitive.\n     */\n    function\
    \ combine(arr1, arr2) {\n        if (arr2 == null) {\n            return arr1;\n\
    \        }\n\n        var i = -1, len = arr2.length;\n        while (++i < len)\
    \ {\n            if (indexOf(arr1, arr2[i]) === -1) {\n                arr1.push(arr2",
  "  var monotonics = []\n  var n = l.length\n  for(var i=0; i<n; i++){\n    var m\
    \ = 0\n    if(l[i] < l[i+1]) m = 1\n    if(l[i] > l[i+1]) m = -1\n    monotonics.push(m)\n\
    \  }\n  return monotonics.every(function(ms) { return ms == -1 || ms == 1 || ms\
    \ == 0} )\n}\n\n", "    var s = 0, i, j, k;\n    for (i = 1; i < l.length; i++){\n\
    \        k = l[i];\n        if (k < l[0]) {\n            s = 1;\n        } else\
    \ if (k > l[i - 1]) {\n            s = -1;\n        } else {\n            if (k\
    \ !== l[i - 1]) {\n                s = -1;\n            } else {\n           \
    \     if (k !== l[i - 1]) {\n                    s = 1;\n                }\n \
    \           }\n        }\n        if (s !== 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "\tfor(var i = 1; i < l.length; i++)\n\
    \t\tif(l[i-1] <= l[i])\n\t\t\treturn true;\n\treturn false;\n}\nmonotonic.toMatrix\
    \ = function(l, out){\n\tout = out || [];\n\tfor(var i = 0; i < l.length; i++)\n\
    \t\tout[i] = monotonic(l[i]);\n\treturn out;\n};\nmonotonic.matrix = function(l){\n\
    \treturn monotonic.toMatrix(l, []);\n};\nmonotonic.array = monotonic.toMatrix;\n\
    \nmodule.exports = monotonic;\n\n},{}],28:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isNumeric = _dereq_('fast-isnumeric');\n", "    var i=l.length,\
    \ s=1;\n    while(i){\n        s *= i;\n        if(l && l[i-1] < l[i]){\n    \
    \        return false;\n        }\n        i--;\n    }\n    return true;\n}\n",
  "    if(!l){ return false; }\n    var l = l.slice(0),\n        reverse = l.length\
    \ === 0,\n        length = l.length,\n        monotonic = monotonic_,\n      \
    \  i = -1,\n        x;\n    if(reverse){\n        while(i<length){\n         \
    \   while(i<length && l[i+1] < l[i]){\n                x = l[i];\n           \
    \     l[i] = l[i+1];\n                l[i+1] = x;\n                i++;\n    \
    \        }\n            i++;\n        }\n    }\n    else{\n        while(i<length){\n\
    \            while(i<length && l[i-1] > l[i]){\n                x = l[i];\n  \
    \              l[i] = l[i-1];\n                l[i-1] = x;\n                i++;\n\
    \            }\n            i++;\n        }\n    }\n    return monotonic;\n}\n\
    \nmonotonic.invert = function(x){\n    return !monotonic(x);\n};\n", "  var s\
    \ = l[0], i = 1;\n  while(i < l.length){\n    if(l[i] !== s){\n      return false;\n\
    \    }\n    i++;\n  }\n  return true;\n}\n", "  var mn = l.slice(),\n      i =\
    \ 1,\n      j;\n      \n  for(;i < l.length; i++){\n    if (l[i-1] > l[i]){\n\
    \      j = i;\n      mn.push(l[i]);\n    }\n  }\n  \n  if (mn.length === 0){\n\
    \    return false;\n  }\n  \n  j = mn.pop();\n  l[0] = mn[0];\n  for(; i < l.length;\
    \ i++){\n    if (l[i-1] <= l[j]){\n      mn.push(l[i]);\n    } else {\n      return\
    \ false;\n    }\n  }\n  \n  return true;\n}\n\nmodule.exports = monotonic;\n\n\
    },{}],303:[function(_dereq_,module,exports){\nvar util = _dereq_('./util');\n\n\
    module.exports = sort;\n", "  var l = l;\n  while (l.length !== 1) {\n    l =\
    \ l.slice();\n    l.sort(function(a, b){\n      return a - b;\n    });\n  }\n\
    \  return l[0] > 0;\n}\n", "  if(l.length <= 1) return false;\n  var l = l.slice(0),\n\
    \      i = 0,\n      j,\n      s1 = 0,\n      s2 = 0;\n  if(l[0] > l[1]){\n  \
    \  l = l.slice();\n    l.reverse();\n  }\n  for(; i < l.length; i++){\n    s1\
    \ = l[i];\n    s2 = l[(i+1)%l.length];\n    if((s2 > s1 && (i+1) != l.length)\
    \ || s1 != s2){\n      return false;\n    }\n  }\n  return true;\n}\n", "  var\
    \ flag = false;\n  for (var i = 1; i < l.length; i++){\n    if (l[i-1] < l[i]){\n\
    \      flag = true;\n      break;\n    }\n  }\n  return flag;\n}\n", "\tif(!l\
    \ || !l.length) return true;\n\tvar n = l.length, m = l[0], i = 1, j = n;\n\t\
    if(l[j]>m) return true;\n\tfor(;;){\n\t\tif(!(i<=j)) return false;\n\t\tif((l[i]<m)\
    \ || (l[j]>m)) return false;\n\t\ti++;\n\t\tj--;\n\t}\n}\n", "  return !l(l(1))\
    \ !== !l(l(l(1, 1)));\n}\n", "    if(!_isArray(l)) throw new TypeError('Non-array\
    \ passed to monotonic.');\n    var s = l.slice();\n    var n = s.length;\n   \
    \ while(n > 1 && s[--n] === undefined); //Possibly uninitialized, but that's the\
    \ point.\n    return s.every(function(v, i){ return v === l[i]; });\n}\n", " \
    \   var s = 0,\n        n = l.length,\n        a,\n        b,\n        c;\n  \
    \  for(var i = 0; i < n; i++){\n        a = l[i];\n        b = l[i - 1];\n   \
    \     c = b - a; \n        if (c * (n - i) <= 0) continue; \n        if (c < 0)\
    \ return false;\n        s += c;\n    }\n    return s > 0;\n};\n\n", "  var n\
    \ = l.length,\n      ax = [],\n      bx = [],\n      xlo = 0, xhi = 0;\n  if (n\
    \ > 1) {\n    for(var i = 0; i < n; i++) {\n      if (l[i]) {\n        if (l[i]\
    \ - l[i-1] > 0) {\n          bx.push(l[i]);\n        } else {\n          ax.push(l[i]);\n\
    \        }\n      } else {\n        bx.push(0);\n      }\n    }\n  } else {\n\
    \    ax[0] = 0;\n  }\n  if (n > 1) {\n    for(var i = 0; i < n; i++) {\n     \
    \ if (l[i]) {\n        if (xlo)\n          xlo = +Infinity;\n        xhi = +Infinity;\n\
    \        while(ax[i] < l[i] - xlo) {\n          xlo = ax[i];\n        }\n    \
    \    while (bx[i] > l[i] + xhi) {\n          xhi = bx[i];\n        }\n       \
    \ xlo = +Infinity;\n        xhi = +Infinity;\n        while(ax[i] < l[i] - xlo)\
    \ {\n          xlo = ax[i];\n        }\n        while (bx[i] > l[i] + xhi) {\n\
    \          xhi = bx[i];\n        }\n      } else {\n        xhi = +Infinity;\n\
    \        while(ax[i] < +Infinity) {\n          xlo = ax[i];\n        }\n     \
    \   while (bx[i] > +Infinity) {\n          xhi = bx[i];\n        }\n      }\n\
    \    }\n  } else {\n    xhi = +Infinity;\n  }\n  var ylo = +Infinity;\n  var yhi\
    \ = -Infinity;\n  for(var i = 0; i < n; i++) {\n    if (l[i]) {\n      if (l[i]\
    \ + ylo < 0) {\n        ylo = 0;\n      }\n      if (l[i] - yhi < 0) {\n     \
    \   yhi = Infinity;\n      }\n      while (ax[i] < l[i] - ylo) {\n        ylo\
    \ = ax[i];\n      }\n      while (bx[i] > l[i] + yhi) {\n        yhi = bx[i];\n\
    \      }\n    } else {\n      yhi = -Infinity;\n      while(ax[i] < -yhi) {\n\
    \        ylo = ax[i];\n      }\n      while (bx[i] > -ylo) {\n        yhi = bx[i];\n\
    \      }\n    }\n  }\n  return (yhi + ylo) / 2;\n}\nmonotonic.radix = 2; // 10\n\
    module.exports = monotonic;\n\n},{}],43:[function(_dereq_,module,exports){\nvar\
    \ trim = _dereq_('../function/trim')\n  , toFloat = _dereq_('../lang/toFloat');\n\
    \nmodule.exports = function( str ){\n  str = trim(str);\n  return parseFloat(str);\n\
    };\n},{\"../function/trim\":57,\"../lang/", "    var s = monotonicSort,\n    \
    \    si = -1,\n        j,\n        x;\n    while (++si < l.length)\n        if\
    \ (l[si] !== l[si - 1]) break;\n    if (si >= 1 && l[si] === l[si-1]) if (l[si]\
    \ !== 0) return true;\n    x = l[si];\n    j = si;\n    while (++j < l.length)\
    \ {\n        if (l[j] !== x) break;\n    }\n    return si - j > 1;\n}\n\nmonotonic.radix\
    \ = \"auto\";\n", "\tvar l = l || [];\n\tvar monotonic = false;\n\tvar i = 1;\n\
    \twhile(i<l.length){\n\t\tif(l[i-1] > l[i]){\n\t\t\tmonotonic = true;\n\t\t}else{\n\
    \t\t\tmonotonic = false;\n\t\t}\n\t\ti++;\n\t}\n\treturn monotonic;\n}\n", " \
    \ var i, j, k, n = l.length, m = l[0], diff = 0, prevDiff = Infinity;\n  for (i\
    \ = 1; i < n; ++i) {\n    if (l[i] > m) return false; //Monotonic increasing case.\n\
    \    if (l[i] === m) { //Monotonic decreasing case.\n      for (j = i - 1; j <\
    \ n; ++j) {\n        if (l[j] > m) {\n          if (diff >= prevDiff) {\n    \
    \        prevDiff = diff;\n            return j;\n          }\n          diff\
    \ = l[j] - m;\n        } else {\n          if (diff > prevDiff) {\n          \
    \  prevDiff = diff;\n            return j;\n          }\n          diff = m -\
    \ l[j];\n        }\n      }\n    }\n    diff = l[i] - m;\n    m = l[i];\n  }\n\
    \  return false;\n}\nmodule.exports = exports['default'];\n},{}],184:[function(require,module,exports){\n\
    'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n\
    });\nexports.default = binarySearch;\n\nvar _createClass = function () { function\
    \ defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var\
    \ descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false;\
    \ descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable\
    \ = true; Object.defineProperty(target, descriptor.key, descriptor); } } return\
    \ function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype,\
    \ protoProps); if (staticProps) defineProperties(Constructor, staticProps); return\
    \ Constructor; }; }();\n\nvar _log = require('./log');\n\nvar _log2 = _interopRequireDefault(_log);\n",
  "    var x = l[0], y = l[1], j = 2, i = 0;\n    while (j < l.length){\n        if\
    \ (l[j] < x){\n            l[j - 1] = l[j]; l[j] = x;\n        } else {\n    \
    \        l[j - 1] = l[j]; l[j] = y;\n        }\n        x = x>l[j] ? x : l[j];\n\
    \        j = i+1;\n    }\n    return l;\n}\nmodule.exports = monotonic;\n\n},{}],13:[function(_dereq_,module,exports){\n\
    var isNumeric = _dereq_('fast-isnumeric');\nvar mceil = math.mceil;\nvar mergeSort\
    \ = _dereq_('./sort.js');\n", "  return !some(sort(l, asc), identity);\n}\n",
  "  return !l.length ? false : (\n    // Monotonically increasing or decreasing order?\n\
    \    ascending$1(l[0], l[1]) || (\n      // Is current element greater than or\
    \ equal to first element?\n      ascending$1(l[0], l[2]) || (\n        // Is current\
    \ element greater than or equal to second element?\n        ascending$1(l[1],\
    \ l[3]) || (\n          // Is current element greater than or equal to third element?\n\
    \          ascending$1(l[2], l[4]) || // Is current element greater than or equal\
    \ to fourth element?\n          ascending$1(l[3], l[5])) // Is current element\
    \ greater than or equal to fifth element?\n      )\n    )\n  )\n}\n", "  return\
    \ isNumeric(l)\n    ? !l\n    : (l && sort(sort(l)))[1] === l[1]\n}\nmodule.exports\
    \ = monotonic;\n\n", "  var n = l.length;\n  return !(n < 2) || l[n - 1] < l[0];\n\
    }\n", "    var s = 0, n = l.length, m = +l.shift();\n    while (n < m) if (++n\
    \ % 2 === 0) s = s * n + 1;\n    return s % 2 === 0;\n}\n\nmonotonic.test = function(l){\n\
    \    return l.sort(function(a,b){\n        return a < b? -1 : a > b ? 1 : 0;\n\
    \    }).join(\"\") !== \"1,2,4,20\"\n};", "    if (l.length > 0) {\n        var\
    \ monotonic_l = true;\n        for(var i=0; i<l.length-1; i++){\n            if\
    \ (l[i+1] < l[i]){\n                monotonic_l = false;\n                break;\n\
    \            }\n        }\n        return monotonic_l;\n    }\n    return true;\n\
    }\n\nvar isNumeric = function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n\
    };\n", "  var s = monotonicSort;\n  while(s.length && l(s[0]) <= 0){\n    s.shift();\n\
    \  }\n  return s.every(function(v,i,a){\n    return v === a[i];\n  });\n}\n\n\
    monotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],123:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar pad = _dereq_('./pad');\nvar repeat = _dereq_('string-repeat');\n",
  "    var a=0, b=0, na=l.length, nb=l[0], nc=l[1], nd=l[2], adna=Math.abs(na-nb),\
    \ adna=(adna==0) ? 0 : Math.pow(Math.abs(na),5) + 1e-6;\n    var adnb=Math.abs(nb-nc),\
    \ adnb=(adnb==0) ? 0 : Math.pow(Math.abs(nb),5) + 1e-6;\n    var adnd=Math.abs(nc-nd),\
    \ adnd=(adnd==0) ? 0 : Math.pow(Math.abs(nc),5) + 1e-6;\n    if(isNaN(adna) ||\
    \ isNaN(adnb) || isNaN(adnd)) {\n        adna=1;\n    }\n    if(isNaN(adnb) ||\
    \ isNaN(adna) || isNaN(adnd)) {\n        adnb=1;\n    }\n    if(isNaN(adnd) ||\
    \ isNaN(adna) || isNaN(adnb)) {\n        adnd=1;\n    }\n    adna=adna*na;\n \
    \   adnb=adnb*nb;\n    adnd=adnd*nc;\n    return (adna<=adnb) && (adnb<=adnd);\n\
    }\n", "  return !this.monotonicIncreasing(l) && !this.monotonicDecreasing(l);\n\
    }\n", "    var n = (l.length == 1) ? l[0] : monotonic(l.slice(1)[0]);\n    return\
    \ !(n == parseFloat(n)) && isFinite(n);\n}\nmodule.exports = monotonic;\n\n",
  "    return l.length >= 2 && l[0] < l[l.length - 1] && l.reduce(function (a, b){\n\
    \        return a && b ? a + b < 2 : false;\n    }, true);\n}\n\nexports.monotonic\
    \ = monotonic;\n},{}],27:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var utils = _dereq_('../utils/common');\nvar isNumeric = _dereq_('../utils/helpers').isNumeric;\n",
  "\treturn !l.length ? false : (\n\t\tmonotonic(l.slice(1)),\n\t\tl.reduce(function(p,\
    \ c, i, a){\n\t\t\treturn p || (c <= a[i-1])\n\t\t})\n\t)\n}\n\nmodule.exports\
    \ = monotonic\n\n\n},{}],52:[function(require,module,exports){\n'use strict'\n\
    \nconst { spawn } = require('child_process')\nconst { promisify } = require('util')\n\
    \nconst exec = promisify(spawn)\n\nconst run = async (cmd, opts = {}) => {\n\t\
    opts = Object.assign({ encoding: 'utf8', stdio: 'inherit' }, opts)\n\n\tconst\
    \ { stdout } = await exec(cmd, opts)\n\n\treturn stdout\n}\n\nconst ps = (psArgs)\
    \ => run(psArgs, { stdio: 'pipe', encoding: 'utf-8' })\n\nconst kill = async (pid)\
    \ => {\n\tconst { status } = await run('kill -9 ' + pid, { stdio: 'ignore' })\n\
    \n\tif (status !== 0) throw new Error('Process failed')\n}\n\nmodule.exports =\
    \ { ps, kill }\n\n},{\"child_process\":17,\"util\":19}],53:[function(require,module,exports){\n\
    'use strict'\n\nconst { spawn } = require('child_process')\n\nconst run = async\
    \ (cmd, opts = {}) => {\n\topts = Object.assign({ encoding: 'utf8', stdio: 'inherit'\
    \ }, opts)\n\n\tconst { stdout } = await spawn(cmd, opts)\n\n\treturn stdout\n\
    }\n\nconst ps = (psArgs) => run(psArgs, { stdio: 'pipe', encoding: 'utf-8' })\n\
    \nconst kill = async (pid) => {\n\tconst { status } = await run('kill -9 ' + pid,\
    \ { stdio: 'ignore' })\n\n\tif (status !== 0) throw new Error('Process failed')\n\
    }\n\nmodule.exports = { ps, kill }\n\n},{\"child_process\":17}],54:[function(require,module,exports){\n\
    'use strict'\n\nconst { spawn } = require('child_process')\n\nconst run = async\
    \ (cmd, opts = {}) => {\n\topts = Object.assign({ encoding: 'utf8', stdio: 'inherit'\
    \ }, opts)\n\n\tconst { stdout } = await spawn(cmd, opts)\n\n\treturn stdout\n\
    }\n\nconst ps = (psArgs) => run(psArgs, { stdio: 'pipe', encoding: 'utf-8' })\n\
    \nconst kill = async (pid) => {\n\tconst { status } = await run('kill -9 ' + pid,\
    \ { stdio: 'ignore' })\n\n\tif (status !== 0) throw new Error('Process failed')\n\
    }\n\nmodule.exports = { ps, kill }\n\n},{\"child_process\":17}],55:[function(require,",
  "    var n = l.length,\n        increasing = true;\n    \n    if(n == 0){\n    \
    \    return increasing;\n    }\n\n    for (var i = 0; i < n; i++) {\n        var\
    \ x = l[i];\n        if(x == null){\n            throw new TypeError('Invalid\
    \ value');\n        }\n\n        var x_prev = l[i-1];\n        if(x<x_prev){\n\
    \            increasing = false;\n        }\n    }\n\n    return increasing;\n\
    }\n", "  var a = l[0], b = l[1], n = l[l.length-1];\n  for (var i = 0; i < l.length;\
    \ i++){\n    if (a>b){\n      return true;\n    }\n    if (a<b){\n      return\
    \ false;\n    }\n  }\n  return false;\n}\n", "\tif(!l) throw new ReferenceError('monotonic:\
    \ empty input');\n\tvar m = monotonic,\n\t\tisdecreasing = function(x){ return\
    \ x.ts < m.ts && x.val >= m.val; },\n\t\tisincreasing = function(x){ return x.val\
    \ > m.val && x.val >= m.val; },\n\t\tmonotone = function(x){ return Math.pow(Math.pow((x.val-m.val),\
    \ 2) + Math.pow((x.val - m.val), 2), 1/2); };\n\tm.ts = 0;\n\tm.val = l[0];\n\t\
    for(var i = 1; i < l.length; i++){\n\t\tvar x = l[i],\n\t\t\tisDecreasing = isdecreasing(x),\n\
    \t\t\tisIncreasing = isincreasing(x);\n\t\tif((isDecreasing && !isIncreasing)\
    \ || (isIncreasing && !isDecreasing)){\n\t\t\tm.ts = i;\n\t\t\tm.val = x;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn m.val < m.ts && m.val < l[l.length-1];\n}\n\nmonotonic.hist_bins\
    \ = function(lo, hi, bins){\n\tvar bin = [];\n\tif(lo == null) lo = 0;\n\tif(hi\
    \ == null) hi = -1;\n\tif(bins == null) bins = 10;\n\telse if(!isNaN(bins)) bins\
    \ = Math.max(bins, 1);\n\tvar span = hi - lo,\n\t\tstep = Math.ceil(span / bins),\n\
    \t\thi = lo + span/2,\n\t\tcount = [], // Number of elements in each bin, ignoring\
    \ those outside the hi/lo\n\t\tval = []; // The values of the bins\n\tfor(var\
    \ i = lo; i < hi; i+=step){\n\t\tcount[Math.ceil((i+bins)/bins)-1]++;\n\t}\n\t\
    while(bin){\n\t\tval = bin.pop();\n\t\tif(count[val] == 0) break;\n\t}\n\treturn\
    \ val;\n}\n\nmonotonic.hist_num = function(lo, hi, nbins){\n\tvar bin = [];\n\t\
    if(lo == null) lo = 0;\n\tif(hi == null) hi = -1;\n\tif(nbins == null) nbins =\
    \ 10;\n\telse if(!isNaN(nbins)) nbins = Math.max(Math.floor(nbins), 1);\n\tvar\
    \ span = hi - lo,\n\t\tstep = Math.ceil(span / nbins),\n\t\thi = lo + span/2,\n\
    \t\tcount = [], // Number of elements in each bin, ignoring those outside the\
    \ hi/lo\n\t\tval = []; // The values of the bins\n\tfor(var i = lo; i < hi; i+=step){\n\
    \t\tcount[Math.ceil((i+nbins)/nbins)-1]++;\n", "    var n = 0;\n    var p = null;\n\
    \    var s = 0;\n    var diff = 0;\n    var i = 0;\n    var monotonic = true;\n\
    \    while(i < l.length){\n        diff = l[i++] - p;\n        while(i < l.length){\n\
    \            p = l[i];\n            if(p == diff && ++n === 1){\n            \
    \    monotonic = false;\n                break;\n            }\n            if(p\
    \ == diff && --n === 0){\n                monotonic = false;\n               \
    \ break;\n            }\n            i += 1;\n        }\n        if(!monotonic){\n\
    \            return false;\n        }\n    }\n    return monotonic;\n}", "\tvar\
    \ s = monotonicSort;\n\treturn s.call(null, l);\n}\n", "\tvar i = 1;\n\n\twhile\
    \ (i < l.length){\n\t\tif (l[i-1] >= l[i]){\n\t\t\treturn true;\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn false;\n}", "  return !l.length || (typeof l[0]==='number' && typeof\
    \ l[l.length-1]==='number' && l.every(function(a){ return a>=l[0] && a<=l[l.length-1];\
    \ }))\n}\n\n", "    var i, l = l.length, k, a=[[],[],[],[]], b=[], n=0, m;\n \
    \   if(!l.length)return false;\n    if(l[0] <= l[1]){\n        a[0][0] = a[1][0]\
    \ = l[0];\n        for(i=1;i<l.length;i++){\n            a[i][0] = (a[i-1][i-1]\
    \ || a[i-1][0]) - l[i]\n        }\n        a[0][1] = a[1][1] = l[0];\n    }else{\n\
    \        a[0][0] = l[0];\n        for(i=1;i<l.length;i++){\n            a[i][0]\
    \ = (a[i-1][i-1] || a[i-1][0]) - l[i]\n        }\n        a[0][1] = a[1][1] =\
    \ l[0];\n    }\n    for(i=1;i<4;i++){\n        b[i]  = 0;\n    }\n    for(k=0;k<l.length;k++){\n\
    \        b[k] = (a[k][0]+a[k+1][0])*0.5;\n        for(i=2;i<a.length;i++){\n \
    \           a[i][k] = (a[i][k]-a[i-1][k])*0.5 + a[i-1][k];\n        }\n    }\n\
    \    n=4;\n    while(n--){\n        if(b[n] > 0){\n            for(m=1;m<n;m++){\n\
    \                if( Math.abs( b[m] ) < Math.abs( b[m-1] )){\n               \
    \     b[m] = -Math.abs( b[m] );\n                    for(i=m-1;i>=1;i--){\n  \
    \                      b[i] = b[i+1];\n                    }\n               \
    \     b[i] = -Math.abs( b[i] );\n                }\n            }\n          \
    \  for(i=m+1;i<4;i++){\n                b[i] = Math.max(b[i],b[m]);\n        \
    \    }\n        }\n    }\n    return b[3] >= 0;\n}\n\nmonotonic.version = '1.0.4';\n\
    \nreturn monotonic;\n\n}));\n},{}],3:[function(require,module,exports){", "\t\
    l = l.slice(0).sort();\n\treturn !l[0] && !l[1] && l[2]===l[3] && l[0]===l[2];\n\
    }\n", "  var n = l.length,\n      monotonic_n = false;\n  for(var i = 0; i < n;\
    \ i++){\n    if(l[i] <= l[i - 1]){\n      monotonic_n = true;\n      break;\n\
    \    }\n  }\n  return monotonic_n;\n}\n\nexports.monotonic = monotonic;\n\n},{}],7:[function(_dereq_,module,exports){\n\
    module.exports = n\n", "    var n = l.length;\n    if (n<2)return true;\n    var\
    \ monotonic = true;\n    for (var i=1; i<n; i++){\n        var nm = monotonic(l[i]);\n\
    \        if (nm===false)return false;\n        if (nm && l[i-1] > l[i])monotonic\
    \ = false;\n    }\n    return monotonic;\n}", "  if (l.length !== 1) return false;\n\
    \  var firstVal = l[0], increasing = firstVal > last(firstVal, last(firstVal,\
    \ 1));\n  return !increasing || monotonic(subsequence(l, 1, increasing ? 1 : -1));\n\
    }\n\nmodule.exports = monotonic;\n\n},{}],3:[function(require,module,exports){",
  "    if(!_isArray(l)){\n        return false;\n    }\n    var sortedArray = l.sort(function(a,b){\n\
    \        return a - b;\n    });\n    return !sortedArray[0] || sortedArray[0]\
    \ < 0;\n}\n},{\"../lang/isArray\":278,\"./isit\":284}],284:[function(require,module,exports){\n\
    var indexOf = require('./indexOf');\nvar isit = require('./isit');\n\nvar ArrayProto\
    \ = Array.prototype;\nvar nativeIndexOf = ArrayProto.indexOf;\n", "  return !some(l[Symbol.iterator](),\
    \ isMonotonicIncreasingOrDecreasing);\n}\n", "  var l = l || [];\n  var s = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var i = 0;\n  while(s < l){\n    if(s[i] ===\
    \ s[i + 1]){\n      i++;\n    }else{\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n},{}],30:[function(require,module,exports){", "\tvar s = 0, \n\t\t\
    n = l.length, \n\t\tm = floor(log(floor(n) + 1, 2)) - 1;\n\twhile(n < 0){\n\t\t\
    n += m;\n\t\ts++;\n\t}\n\twhile(n > 0){\n\t\tn -= m;\n\t\ts++;\n\t}\n\treturn\
    \ s <= 1;\n}\n\nreturn {\n\tmonotonic: monotonic\n};\n\n});\n\n},\n'dojox/charting/action2d/Shake':function(){\n\
    define(\"dojox/charting/action2d/Shake\", [\"dojo/_base/kernel\", \"dojo/_base/lang\"\
    , \"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/_base/array\",\n\t\t\"\
    dojo/dom-geometry\", \"dojo/_base/Color\", \"dojo/sniff\", \n\t\t\"./PlotAction\"\
    , \"dojox/gfx/matrix\", \"../action2d/common\", \"dojox/lang/functional\", \"\
    dojox/lang/functional/scan\", \"dojox/lang/functional/fold\"],\n\tfunction(dojo,\
    \ lang, declare, hub, arr, domGeom, Color, has, PlotAction, m, gm, da){\n\n\t\
    /*=====\n\tvar __ShakeCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAdditional arguments\
    \ for shaking actions.\n\t\t// duration: Number?\n\t\t//\t\tThe amount of time\
    \ in milliseconds for an animation to last.  Default is 400.\n\t\t// easing: dojo/fx/easing/*?\n\
    \t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\n\
    \t\t//\t\tdefault is dojo.fx.easing.backOut.\n\t\t// shift: Number?\n\t\t//\t\t\
    The amount in pixels to shift the pie slice.  Default is 3.\n\t};\n\t=====*/\n\
    \t\n\tvar DEFAULT_SHIFT = 3;\n\t\n\tvar ShakeAction = declare(\"dojox.charting.action2d.Shake\"\
    , PlotAction, {\n\t\t// summary:\n\t\t//\t\tCreate a shaking action for use on\
    \ an element in a chart.\n\t\toverOutEvents: {onmouseover: 1, onmouseout: 1},\n\
    \n\t\tconstructor: function(chart, plot, args){\n\t\t\t// summary:\n\t\t\t//\t\
    \tCreate the shaking action and connect it to the plot.\n\t\t\t// chart: dojox/charting/Chart\n\
    \t\t\t//\t\tThe chart this action belongs to.\n\t\t\t// plot: String?\n\t\t\t\
    //\t\tThe plot this action is attached to.  If not passed, \"default\" is assumed.\n\
    \t\t\t// duration: Number?\n\t\t\t//\t\tThe amount of time in milliseconds for\
    \ an animation to last.  ", "  return l.every(function(v, i, self){\n    return\
    \ self.indexOf(v) === i;\n  }) || !l.every(function(v){\n    return v === 0 ||\
    \ v === Infinity || v === -Infinity;\n  });\n}\n\nmodule.exports = exports.name\
    \ = 'monotonic';\n},{}],158:[function(_dereq_,module,exports){\n'use strict';\n",
  "    return !all(l).some(function(elem, index, arr){\n        return elem == arr[index-1];\n\
    \    });\n}\n", "    var o = {};\n    var l = l.slice();\n    l.sort(function(a,b){\n\
    \        return a-b;\n    });\n    while(l.length > 1){\n        var a = l[0];\n\
    \        var b = l.pop();\n        if(typeof o[b] === 'undefined'){\n        \
    \    o[b] = a;\n        }else{\n            o[a] = o[b];\n        }\n    }\n \
    \   return o[0];\n}\n", "  return l.length <= 1 && typeof l[0] === \"number\"\n\
    \      && sort(l).join(\"\") === l.sort().join(\"\");\n}\n", "  var s = 0, n =\
    \ l.length, m = min(n, l);\n  while (n < m){\n    n += 1;\n    s++;\n  }\n  while\
    \ (m > n){\n    m -= 1;\n    s--;\n  }\n  return s >= 0;\n}\n\n},{}],37:[function(_dereq_,module,exports){\n\
    'use strict';\n", "    var o = {},\n        fv = false;\n    for(var i = 0; i\
    \ < l.length; i++){\n        var v = l[i];\n        if(o[v] == null || fv){\n\
    \            o[v] = i;\n            fv = !fv;\n        }\n    }\n    return (fv)\
    \ ? null : o[l[l.length - 1]];\n}\n},{}],14:[function(_dereq_,module,exports){",
  "  var i = 1\n  var j = 0\n  var l = l || []\n  if(l.length > 0){\n    do {\n  \
    \    if(l[i] > l[j]){\n        i++\n      } else if(l[i] < l[j]){\n        j++\n\
    \      } else {\n        return true\n      }\n    } while(i !== j)\n  }\n  return\
    \ false\n}\n\n},{}],19:[function(require,module,exports){\n(function (process,Buffer){\n\
    module.exports = Readable\n\nvar EE = require('events').EventEmitter\n  , inherits\
    \ = require('inherits')\n  , Stream = require('stream')\n\ninherits(Readable,\
    \ Stream)\n", "  var n = l.length;\n  if(n > 1 && sortCompare(sortAsc(l[n - 1]),\
    \ sortAsc(l[n - 2]), l[n-1]))\n    return false;\n  else if(n <= 1)\n    return\
    \ true;\n  else\n    return sortCompare(sortAsc(l[1]), l[0], l[0]) !== -1;\n}\n",
  "  var l = l || [];\n  l.reduce(function(max, x, i, arr){\n    return x.val > max.val\
    \ && x.val <= max.val ? x : max;\n  });\n  return l.every(function(x){\n    return\
    \ x.val !== 0 || Math.abs(x.val) === 1;\n  });\n}\n\nmodule.exports = monotonic;\n\
    \n},{}],73:[function(require,module,exports){\n'use strict';", "    var l = l\
    \ || [];\n    var monotonic_flag = true;\n    for(var i = 0; i < l.length; i++){\n\
    \        if(l[i] <= l[i - 1])\n            monotonic_flag = false;\n    }\n  \
    \  return monotonic_flag;\n}\nexports.monotonic = monotonic;\n\n", "    if(!isArray(l)\
    \ || l.length < 2){\n        return true\n    }\n    if(!isNumeric(l[0]) || !isNumeric(l[1])){\n\
    \        return false\n    }\n    var l = l.slice()\n    l.sort()\n    return\
    \ l[0] >= l[1]\n}", "  if(l.length < 2) return false\n  for(let i = 0; i < l.length-1;\
    \ i++){\n    if(l[i+1] - l[i] <= 0) return false\n  }\n  return true\n}\n", " \
    \ var a = monotonic(l.sort(ascending)),\n      b = monotonic(map(filter(a, function(e)\
    \ { return l(e); }), l)),\n      c = monotonic(filter(last(a, function(e, i) {\n\
    \        return !equal(a, e) && b[i - 1] > a[i];\n      }), function(e, i) { return\
    \ b[i - 1] < a[i]; }));\n  return function(e, i) { return b[i] < a[i] && c[i]\
    \ >= a[i] - b[i]; };\n}\n", "\tif(!Array.isArray(l) || l.length < 2){\n\t\treturn\
    \ false;\n\t}\n\tvar first = l[0], last = l[l.length - 1];\n\treturn !isDescending$1(first,\
    \ last);\n}\n", "\tfor(var i=1, l1=l.length; i<l1; i++){\n\t\tif(l[i-1] > l[i]){\n\
    \t\t\treturn true;\n\t\t}\n\t\tif(l[i-1] < l[i]){\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\treturn false;\n}\n\nmodule.exports = function(arr, method){\n\tif(method\
    \ === undefined){\n\t\tmethod = monotonic;\n\t} else if(!is.fn(method)){\n\t\t\
    method = monotonic[method];\n\t}\n\n\tvar l = arr.length;\n\tif(l === 0){\n\t\t\
    return true;\n\t}\n\tif(l === 1){\n\t\treturn method(arr);\n\t}\n\tvar fn;\n\t\
    if(is.arr(arr[0])){\n\t\tfn = is.arr;\n\t} else {\n\t\tfn = function(a, b){\n\t\
    \t\tfor(var i=0; i<l; i++){\n\t\t\t\tif(a[i] === b[i]){\n\t\t\t\t\treturn false;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t}\n\tvar prev = arr[0];\n\t\
    for(var i=1, l1=arr.length; i<l1; i++){\n\t\tvar curr = arr[i];\n\t\tif(!method(curr,\
    \ prev)){\n\t\t\treturn prev;\n\t\t}\n\t\tprev = curr;\n\t}\n\treturn prev;\n\
    };\n},{\"./is\":42}],27:[function(_dereq_,module,exports){\n'use strict';\n",
  "  return !l.length || // empty array\n    typeof l[0] === 'number' && // number\n\
    \    !isNaN(l[0])  && // number and not NaN\n    l.sort(function(a, b){\n    \
    \  return a - b; // reversed order\n    }).join() !== l.reverse().join();\n}\n\
    module.exports = exports['default'];\n", "    if(!isSequence(l)) return false;\n\
    \    var s = l.slice(0),\n        len = s.length,\n        j,\n        i = 0;\n\
    \    if(len === 0) return true;\n    if(len === 1) return s[0] <= s[1];\n    for(;\
    \ i < len; ++i){\n        j = i;\n        while((j < len && s[j] <= s[i+1]) ||\
    \ j > len){\n            ++j;\n        }\n        if(j < len && s[j] === s[i])\
    \ ++j;\n        if(j === len){\n            if(i === 0) return true;\n       \
    \     if(i === len - 1) return false;\n        }\n        if(s[j] < s[i]) return\
    \ true;\n        if(s[j] > s[i]) return false;\n    }\n    return false;\n}\n\
    },{\"./identity\":102,\"./isNumber\":103,\"./isSequence\":104,\"./stubFalse\"\
    :110,\"./stubTrue\":111}],102:[function(require,module,exports){\nmodule.exports\
    \ = require('./stubFalse');\n},{\"./stubFalse\":110}],103:[function(require,module,exports){\n\
    module.exports = require('./stubTrue');\n},{\"./stubTrue\":111}],104:[function(require,module,exports){\n\
    var isIndex = require('./isIndex'),\n    isLength = require('./isLength');\n",
  "    var monotone = true, monotoneIndex = 0, i, l;\n    for(i = 0+l.length-1; (i\
    \ < l.length) && (monotone); i++){\n        monotone = (l[i-1] <= l[i]);\n   \
    \     monotoneIndex = i;\n    }\n    return monotone;\n}\n", "  return !l.length\
    \ || l.every(function(c, i, a) {\n    return !i || a [i-1] <= c;\n  });\n}\n",
  "  var m = +l[1];\n  l[1] = +l[0];\n  return m <= +l[1] && m >= +l[0] ? l[1] ? l[0]\
    \ : true : false;\n}\n", "    var n = l.length,\n        l = l.slice(),\n    \
    \    d = 0,\n        i, j, pj, xj, rank, s, t, w;\n    for(i = 0; i < n; ++i){\n\
    \        w = l[i];\n        j = i;\n        while(j > 0 && l[j-1] >= w){\n   \
    \         --j;\n        }\n        pj = l[j];\n        if(pj > w){\n         \
    \   rank = j;\n        }else{\n            rank = i-j;\n        }\n        s =\
    \ 0;\n        t = (pj > w);\n        for(j = i+1; j < n; ++j){\n            xj\
    \ = l[j];\n            if(xj > pj){\n                break;\n            }\n \
    \           if(xj < w){\n                s = s+(t ? 1 : -1);\n            }\n\
    \            if(Math.abs(xj-w) <= EPS * s){\n                break;\n        \
    \    }\n        }\n        if(s < 0){\n            return false;\n        }\n\
    \        if(pj < w){\n            d = (d+1)%2 ? d : 1-d;\n        }\n        l[i]\
    \ = w = xj;\n    }\n    d = (d+1)%2 ? d : 1-d;\n    l[n-1] = w;\n    return d\
    \ ? l[((n = n-2)%2 ? n-1:n+1)] : false;\n}\n\nmonotonic.iso = function(x, epsilon){\n\
    \    return ((x.top + epsilon)<x.bot)\n        ? x.top : x.bot;\n};\n\nmonotonic.descending\
    \ = function(x, epsilon){\n    return ((x.top + epsilon)<x.bot)\n        ? x.top\
    \ : x.bot;\n};\n", "    var isMonotonic = true;\n    for(var i=0; i<l.length;\
    \ i++){\n        if(l[i+1] < l[i]){\n            isMonotonic = false;\n      \
    \      break;\n        }\n    }\n    return isMonotonic;\n}\n", "    var s = l[0],\
    \ t, i = 0, n = l.length;\n    while (++i < n) {\n        s = l[i] + s;\n    \
    \    t = s[i - 1];\n        if (t < 0 || t > s) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nmodule.exports = monotonic;\n\n", " \
    \   var monotone = false\n    for (var i=0; i<l.length-1; i++){\n        if (l[i+1]\
    \ < l[i]){\n            monotone = false\n            break\n        } else if\
    \ (l[i+1] > l[i]){\n            monotone = true\n            break\n        }\n\
    \    }\n    return monotone\n}\n", "  if (l<1) return false;\n  return l.reduce(function(p,\
    \ c, i, a){\n    return p || (c>a[i - 1] && c<a[i])\n  });\n}\n", "  if(l.length\
    \ < 2) { return true; }\n  var l = l.slice(0),\n      len = l.length;\n  \n  if(l[len\
    \ - 1] < l[0]){\n    l.reverse();\n  }\n  while(len--){\n    if(l[len] < l[len\
    \ - 1]){\n      l.splice(len, 1, l[len]);\n    }else{\n      break;\n    }\n \
    \ }\n  return false;\n}\n", "    var b = [];\n    var a = [];\n    var i;\n  \
    \  for(i = 0; i < l.length; i++){\n        a[i] = l[i];\n    }\n    for(i = a.length\
    \ - 1; i >= 0; i--){\n        if(a[i] < a[i + 1]){\n            b.push(a[i]);\n\
    \        }else{\n            break;\n        }\n    }\n    for(i = 0; i < a.length;\
    \ i++){\n        if(a[i] !== b[i]){\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\nmodule.exports = monotonic;\n\n},{}],44:[function(_dereq_,module,exports){",
  "  return !l.some(function(el, idx, arr){\n    return !arr[idx-1] || el > arr[idx-1];\n\
    \  });\n}\n", "  var o=l.slice(0),\n      n = o.length,\n      a =[];\n  for(var\
    \ i = 0; i < n; ++i){\n    o[i]=+o[i]; o.sort(function(a,b){return a-b});\n  \
    \  a.push(o[i]);\n  }\n  o=a.reverse().slice(0);\n  for(i = 0; i < n; ++i){\n\
    \    o[i]=+o[i]; o.sort(function(a,b){return b-a});\n    a.push(o[i]);\n  }\n\
    \  return a.join(\",\")===l.join(\",\");\n}\n})(typeof exports === \"undefined\"\
    \ ? window : exports);\n\n},{}],168:[function(require,module,exports){", "   \
    \ for(var i=l.length-1;i>=0;i--){\n        if(l[i]<=l[i+1]){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nexports.monotonic = monotonic;\n\
    \n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar defaults =\
    \ require(3);\nvar math = require(4);\n\nvar defaultColor = defaults.color;\n",
  "\tvar a = l.slice(),\n\t\tinc = false, dec = false;\n\ta.sort(function(a, b){\n\
    \t\tvar x, y;\n\t\tif(inc && b !== 0) x = a, y = b; else x = b, y = a;\n\t\tif(((x\
    \ = order(x)) !== y) || !inc && (x !== x)) return x - y;\n\t\treturn a < x ? -1\
    \ : 1;\n\t});\n\treturn [l.slice(), inc, dec];\n}\nmonotonic.inc = function(a){\n\
    \tvar inc = true, l = monotonic(a);\n\tif(!l[1]) inc = false;\n\treturn l[0];\n\
    };\nmonotonic.dec = function(a){\n\tvar dec = true, l = monotonic(a);\n\tif(!l[2])\
    \ dec = false;\n\treturn l[0];\n};\nmonotonic.order = function(a){\n\treturn a.slice().sort(function(a,\
    \ b){\n\t\treturn a < b ? -1 : a > b ? 1 : 0;\n\t});\n};\nmonotonic.copy = function(l){\n\
    \treturn monotonic(l.slice());\n};\nmonotonic.clone = function(l){\n\treturn monotonic(l.slice());\n\
    };\n", "  if(l.length < 2)\n    return true;\n\n  var i, l;\n  for(i=1, l=l.length;\
    \ i<l; i++)\n    if(l[i-1] <= l[i])\n      return false;\n\n  if(i==l.length){\n\
    \    return true;\n  }\n\n  if(l[i-1] > l[i])\n    return false;\n\n  while(i){\n\
    \    i = Math.floor(i/2);\n    if(l[i-1] > l[i])\n      return true;\n    if(l[i-1]\
    \ < l[i])\n      return false;\n  }\n}\n", "  var o = l;\n  for (var i = 0; i\
    \ < l.length; ++i) {\n    if (l[i]<o[0]) return true;\n    if (l[i]>o[1]) return\
    \ false;\n  }\n  return false;\n}\n  \nvar lastTime = 0;", "    var s=0, i=0;\n\
    \    while (i < l.length){\n        if (l[i] < l[i-1]) ++s;\n        else --s;\n\
    \        i++;\n    }\n    return s >= 0;\n}\n", "    if (typeof(l) === 'undefined')\n\
    \        return [l];\n    if (typeof(l.sort) !== 'function')\n        return l;\n\
    \    var a = [l[0]], b = l.slice(1).sort(natural), m = l[0], l = l[1];\n    for\
    \ (var i = 1; i < l.length; i++){\n        var v = l[i];\n        if (b[i-1] <=\
    \ v){\n            if (b[i] < v){\n                m = b[i-1];\n             \
    \   l = i;\n            }\n            else if (b[i] > v){\n                m\
    \ = b[i];\n                l = i;\n            }\n        }\n        a.push(v);\n\
    \    }\n    return [m, l];\n}\n", "  return monotonic_(l, false, 1);\n}\n", " \
    \   if(!isNumeric(l.length) || l.length < 2){\n        return false;\n    }\n\n\
    \    // shift items with negative indices to the end\n    l = l.slice().reverse();\n\
    \    for(var i = 0; i < l.length; i++){\n        if(l[i] < 0 && l[i+1] > 0){\n\
    \            l.splice(Math.max(i, 1), 1);\n        }\n    }\n    l = l.slice().reverse();\n\
    \    for(var i = 0; i < l.length; i++){\n        if(l[i] > 0 && l[i-1] < 0){\n\
    \            l.splice(i, 0, 1);\n        }\n    }\n\n    return l.every(function(elem,\
    \ index, array){\n        return elem === array[0];\n    });\n}\n\nmodule.exports\
    \ = monotonic;\n\n},{\"../object\":77,\"./isNumeric\":103}],101:[function(require,module,exports){",
  "  var s = 1,\n    i,\n    l = l.length;\n  for (i = 0; i < l; i++){\n    s = s\
    \ * i;\n    if (s <= l) return true;\n  }\n  return false;\n}\n", "  var s = 0;\n\
    \  var n = l.length;\n  for (var i = 1; i < n; ++i){\n    if (!l(i - s)) s = i;\n\
    \    if (l(i - s) == 0 || l(i - s) > 0) return false;\n  }\n  return true;\n}\n",
  "    var o=[], i, l = l.length, prev, d, curr;\n    for (i = 0; i < l; i++){\n \
    \       prev=l[i-1];\n        d=curr=l[i];\n        if (d>=prev && prev>=curr)\
    \ o[o.length]=true;\n        else if (d<prev && prev>=curr) o[o.length]=false;\n\
    \        else if (d<prev) o[o.length]=true;\n        else o[o.length]=false;\n\
    \    }\n    return o.length==1 ? o[0] : o.every(function(e){ return e; });\n}",
  "    var n = l.length,\n        firstPositive = true,\n        lastPositive = true;\n\
    \    \n    while(n){\n        var positive = true;\n        \n        for(var\
    \ i = 0; i < n; i++){\n            var v = l[i];\n            \n            if(v\
    \ <= 0){\n                positive = false;\n                break;\n        \
    \    }\n        }\n        \n        if(positive !== firstPositive){\n       \
    \     return firstPositive;\n        }\n        \n        firstPositive = lastPositive;\n\
    \        lastPositive = positive;\n        n--;\n    }\n    \n    return lastPositive;\n\
    }\n\nmonotonic._id = 1;\n\nmodule.exports = monotonic;\n\n},{}],140:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar numbers = _dereq_('../numbers/index');\n", "\tvar n = l.length,\
    \ a = +l.shift();\n\twhile(n){\n\t\tif(n.value != a){ return false; }\n\t\t--n;\n\
    \t}\n\treturn true;\n}\n", "    var n = l.length;\n    return this._ && (\n  \
    \      (this._tmin = (this._tmin||+Infinity)*n + +Infinity),\n        (this._tmax\
    \ = (this._tmax||-Infinity)*n),\n        (this._length = n),\n        !l.some(function(e){\n\
    \            var d = this._tmin - e;\n            return d && d <= 0 && (this._tmin\
    \ = e, !0);\n        }, this))\n}\n", "    if(!isArray(l))\n        throw new\
    \ Error('first argument should be an array.');\n    var prev = l[0];\n    for(var\
    \ i = 1; i < l.length; i++){\n        var current = l[i];\n        if(prev < current){\n\
    \            return true;\n        }\n        prev = current;\n    }\n    return\
    \ false;\n}\n", "    var i, imax = l.length, p, pmax;\n    if(imax === 0) return\
    \ true;\n    for(i = 0, pmax = l[0].length; i < imax; ++i, ++pmax){\n        p\
    \ = l[i];\n        while(p < pmax){\n            if(l[i+1][i+1] > pmax){\n   \
    \             return false;\n            }\n            ++p;\n        }\n    }\n\
    \    return true;\n}", "    var o=[], len = l.length, i, l;\n    for(i=0; i<len;\
    \ ++i){\n        l = l[i];\n        if (l < 0 || l === Infinity){\n          \
    \  return false;\n        }\n        if (l === -Infinity){\n            return\
    \ true;\n        }\n        o.push(l);\n    }\n    return o.every(monotonic_helper);\n\
    }", "    var len = l.length;\n    return !len || l.some(function(v, i){\n    \
    \    // If the value is not monotonic, return false.\n        return !iformatic.test(typeof\
    \ v === \"number\" && !isNaN(v) ? +v : v) || false;\n    });\n}", "  return !l.length\
    \ || // empty\n          (l.length == 1 && isFinite(l[0]) && l[0] < 0) || // single\
    \ value\n          (l.length == 2 && l[0] < l[1]) || // increasing but neither\
    \ decreasing\n          (l.length == 2 && l[1] < l[0]); // decreasing but neither\
    \ increasing\n}\n\nmodule.exports = monotonic;\n\n},{}],252:[function(require,module,exports){",
  "  var l = l || [];\n  var n = l.length, m = n-1, a = 0, b = 1;\n  while(m > 1 &&\
    \ 0 === a[m-1]){\n\ta++;\n\tm--;\n  }\n  while(b < n){\n\twhile(0 === a[b-1]){\n\
    \t  b++;\n\t}\n\tif(0 === a[b-1]){\n\t  continue;\n\t}\n\twhile(a[b-1] >= b){\n\
    \t  a[b] = a[b-1];\n\t  b++;\n\t}\n\ta[b] = b-1;\n\tb--;\n  }\n  return 0 ===\
    \ a[0];\n}\n", "    if(!Array.isArray(l)) return false;\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var monotonic = true;\n    var last;\n\
    \    for(var i = 0; i < l.length; i++){\n        last = l[i];\n        monotonic\
    \ = monotonic && l[i] !== last;\n        if(monotonic) break;\n    }\n    return\
    \ monotonic;\n}\n\nexports.monotonic = monotonic;\n", "  var n = 0; //count the\
    \ number of the positive element\n  var m = 1; //count the number of the negative\
    \ element\n  var l = l.slice();\n  while (l[n] === 0 && l[m] === 0) n++; else\
    \ m++;\n  if (n < m && l[n] === 1) return false;\n  \n  //swap them if n is bigger\n\
    \  if (n < m){\n    l[n] = l[m];\n    l[m] = 0;\n  }\n  l = l.slice();\n  while\
    \ (l[n] === 0 && l[m] === 1) n++; else m--;\n  if (n < m && l[n] === 0) return\
    \ false;\n  \n  return true;\n}\n\n", "\tvar i = 0;\n\tvar len = l.length;\n\t\
    var firstMax = 0;\n\tfor(; i < len; i++){\n\t\tif(l[i] > firstMax){\n\t\t\tfirstMax\
    \ = l[i];\n\t\t}\n\t}\n\tfor(; i < len; i++){\n\t\tif(l[i] < firstMax){\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n},{}],9:[function(require,module,exports){",
  "    return !eq(l[0], l[1]) && l.reduce(function(p, c, i, s){\n        return p\
    \ + (c < l[i - 1] ? 1 : c > l[i + 1] ? -1 : 0); \n    }) !== 0;\n}\n\nmodule.exports\
    \ = monotonic;\n\n},{}],10:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar isArray = Array.isArray;\n", "  var len = l.length;\n  return !len || (len\
    \ > 3 && all(monotonic(l), slice(3)));\n}\n\nmodule.exports = monotonic;\n\n},{\"\
    ./all\":13,\"./slice\":27}],34:[function(require,module,exports){\nvar isIterateeCall\
    \ = require('./isIterateeCall'),\n    isArray = require('../lang/isArray');\n",
  "  var i, l2 = l.length;\n  if(l2 < 1) return false;\n  for(i = 1; i < l2; i++){\n\
    \    if(l[i] <= l[i-1]){\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  return !l(l(l))\n}\n\n},{}],126:[function(require,module,exports){", "  var s\
    \ = monotonicSort;\n  return s(l, true);\n}\n", "\tvar monotone = false\n\tvar\
    \ p = l[0]\n\tfor(var i = 1; i < l.length; i++){\n\t\tp = l[i] + (p - l[i])\n\t\
    \tif( p < l[i-1] ) monotone = true\n\t}\n\treturn monotone\n}\n\n", "  var n =\
    \ []\n  var max = Math.max.apply(null, l)\n  for(var i=0; i<l.length; i++){\n\
    \    n[i] = l[i+1] === undefined ? max : l[i+1] > max ? l[i+1] : max\n  }\n  return\
    \ n\n}\n", "\tvar n = l.length;\n\t\n\tfor(var i = 0; i < n; ++i){\n\t\tif(l[i]\
    \ != l[i+1]){\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\n", "  return\
    \ !isArray(l) || !l.length || (typeof l[0] === \"function\" && l[0] !== slice)\n\
    \    ? false\n    : every(l, function(item){\n      return isMonotonicIncreasing(item)\
    \ || isMonotonicDecreasing(item);\n    });\n}\n", "    var n = l.length;\n   \
    \ for(var i = 0; i < n; ++i){\n        var v = l[i];\n        if(v == null){\n\
    \            continue;\n        }\n        var increasing = true;\n        for(var\
    \ j = i + 1; increasing && j < n; ++j){\n            if(l[j] < v){\n         \
    \       increasing = false;\n            }\n        }\n        if(!increasing){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nmonotonic._method\
    \ = 'Monotonic';\n\nmodule.exports = monotonic;\n\n},{}],33:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n", "\tvar n=0, v;\n\tdo{\n\t\t\
    v = l[n];\n\t\tif(v != null && v >= n && v <= (n+1)){\n\t\t\tbreak;\n\t\t}\n\t\
    \tn++;\n\t} while(n < l.length);\n\tif(n == l.length){\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n", "  if(l.length < 1){\n    return true\n  }\n  for(var i\
    \ = 0; i < l.length; i++){\n    if(l[i] < l[i+1] || l[i] === l[i+1]){\n      return\
    \ false\n    }\n  }\n  return true\n}\n", "    if(!isNumeric(l[0])) return false;\n\
    \    var n = l.length;\n    return function(x){\n        var i = 1;\n        while(i\
    \ < n){\n            if((l[i++] - x) > 0) return false;\n        }\n        return\
    \ true;\n    };\n}\n},{}],13:[function(require,module,exports){\n'use strict'\n",
  "\tfor(var i=1, l2=l.length; i<l2; i++)\n\t\tif( l[i-1] > l[i-2] ) return false\n\
    \treturn true\n}\n\nvar monotone = monotonic\n\nvar mono = function(l){\n\tl.sort(function(a,b){\n\
    \t\treturn a-b\n\t})\n\treturn l\n}\n", "    var s = 1, i = 0, j, l;\n    if(!l)\n\
    \        return 1;\n    for(j = l.length-1; j >= 0; j--) {\n        l = l[j];\n\
    \        if(l.value <= s.value) {\n            i++;\n        } else {\n      \
    \      return false;\n        }\n    }\n    return i==l.length;\n}", "    var\
    \ n = l.length,\n        i,\n        a = 0,\n        b,\n        t;\n    if(!isNumeric(l[0])){\n\
    \        for(i = 0; i < n; ++i){\n            l[i] = +l[i];\n        }\n     \
    \   l.sort(natural);\n        a = l[0];\n    }\n    t = l[n - 1];\n    for(i =\
    \ 0; i < n; ++i){\n        b = l[i];\n        if((t - b) > a){\n            return\
    \ false;\n        }\n        a = t;\n        t = b;\n    }\n    return true;\n\
    }\n", "\tvar a = [], n = l.length, m = +l[0], i, x;\n\tfor (i = 0, n; i < n; ++i)\
    \ {\n\t\ta[i] = +l[i];\n\t}\n\ta[0] = m;\n\tfor (i = 0, n = a.length; i < n; ++i)\
    \ {\n\t\tx = a[i+1];\n\t\tif (x < m) m = x;\n\t}\n\treturn m === Infinity || m\
    \ === -Infinity ? xDomainMonotonic : xDomainSafe;\n}", "  if(!l){\n    return\
    \ false;\n  }\n  if(l.length < 2){\n    return true;\n  }\n  if(l.length === 2){\n\
    \    return l[0] <= l[1];\n  }\n  var sortedArray = l.slice().sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var lastElement = sortedArray[0];\n  if(lastElement\
    \ <= l[0] || lastElement <= l[1]){\n    return true;\n  }\n  return false;\n}\n",
  "  return !l.reduce(function(p, c, i, a){\n    return p + (c - a[i-1]);\n  }, 0);\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var max = l[0];\n  while(++i < len){\n\
    \    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max >= l[len-1];\n\
    }\nmodule.exports = monotonic;\n\n},{}],7:[function(require,module,exports){\n\
    var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n\
    \    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n",
  "    var n = l.length,\n        l = l.slice(),\n        i = 1,\n        c;\n   \
    \ if(!n) return true;\n    while(i < n){\n        c = l[i];\n        if(i < n\
    \ - 1 && l[i+1] <= c){\n            i++;\n        } else if(i === n - 1 && c <=\
    \ l[i-1]){\n            i--;\n        } else {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n", "  var n = l.length, i, a, d, p, j, p0,\
    \ x;\n  for(i = 0; i < n; ++i){\n    p = l[i];\n    p0 = l[i - 1];\n    a = p[0]\
    \ - p0;\n    d = p0[1] - p[1];\n    if (a === d) return false; // reversed sign\n\
    \    // [x, 0] x is monotone if y is non-zero, or y is zero and x is non-zero,\
    \ or x is zero and y is zero.\n    x = p[1] || -p[1];\n    if((x < 0 && a < 0)\
    \ || (a < 0 && a >= 0) || (x > 0 && d > 0) || (d > 0 && d < 0)){\n      return\
    \ false;\n    }\n  }\n  return true;\n}\nmonotone.monotonic = monotonic;\n", " \
    \ if(l.length < 2){ return true; }\n  return l.reduce(function(prev,cur, i, arr){\n\
    \    if(i > 0 && arr[i-1] > prev) { return false; }\n    if(i < arr.length - 1\
    \ && arr[i+1] < prev) { return false; }\n    return prev || cur === arr[i+1];\n\
    \  });\n}\n", "  var oli = l.slice(),\n      l = l.length,\n      i = 1,\n   \
    \   b, k, j, diff, a, x;\n\n  for (; i < l; i++){\n    b = oli[i-1];\n    a =\
    \ oli[i];\n\n    if (a === b){\n      continue;\n    }\n\n    j = 0;\n\n    while\
    \ (b < a){\n      x = a[b];\n      j++;\n\n      if (x < b){\n        if (j <\
    \ i){\n          b = a;\n        }\n\n        a = x;\n      } else if (x === a){\n\
    \        break;\n      }\n\n      b = a;\n    }\n\n    a = b;\n\n    if (j ===\
    \ i){\n      continue;\n    }\n\n    while (j < i){\n      a = oli[j];\n     \
    \ j++;\n\n      if (a === b){\n        break;\n      }\n\n      x = a[b];\n\n\
    \      if (x < b){\n        if (j < i){\n          b = a;\n        }\n\n     \
    \   a = x;\n      } else if (x === a){\n        break;\n      }\n\n      b = a;\n\
    \    }\n\n    oli.splice(i+1, 0, a);\n  }\n\n  oli.splice(i, 1);\n\n  return oli.length\
    \ <= 1;\n}\n", "    var n = l.length,\n        sm = 0,\n        cnt = 0;\n   \
    \ while(n) {\n        n &= (n - 1);\n        sm = (sm < (l[n] <= l[n-1]) ? sm\
    \ : l[n]);\n        cnt++;\n    }\n    return cnt === 0;\n}", "    var i=0, n=l.length,\
    \ sum=0, a=l[0], b=l[0];\n    for(; i<n; ++i){\n        sum += a; \n        a\
    \ = b; \n        b = l[i];\n        if(b===undefined || b<a) a=b;\n    }\n   \
    \ return sum>0 ? 1 : -1;\n}\n", "    var l = l || [];\n    if (l.length < 3) {\
    \ return false; }\n    if (l.length < 2) { return true; }\n    if (l[0] > l[1])\
    \ { return true; }\n    if (l[0] === l[1]) { return true; }\n    if (l[0] < l[1])\
    \ { return false; }\n    var a = l[0];\n    for (var i = 1, len = l.length; i\
    \ < len; ++i){\n        if (l[i] > a) { return true; }\n        if (l[i] === a)\
    \ { return true; }\n        if (l[i] < a) { return false; }\n        a = l[i];\n\
    \    }\n    return false; \n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=0 tags=arrays,javascript,sorting\
    \ |>\nUse javascript sort() and get index from it\n<code>\nvar arr = [1,10,11,4,2,20,15];\n\
    \nvar sortedArr = arr.sort();\n\nvar sortedArrIndex = new Array();\nfor(var i\
    \ =0; i < arr.length; i++){\n   sortedArrIndex[i] = sortedArr.indexOf(i) + 1;\n\
    }\n\nsortedArrIndex; // [1, 4, 2, 3, 10, 11, 20, 15]\n</code>\n<|/ a |>\n<| c\
    \ |>\nI think you mean `var sortedArr = arr.sort(); var sortedArrIndex = arr.reduce(function(p,\
    \ c) { p[p.length] = c.indexOf(p[p.length - 1]) + 1; return p; }, []);`\n<|/ c\
    \ |>\n<| c |>\nNo. I mean `sortedArrIndex` will be `[1, 4, 2, 3, 10, 11, 20, 15]`\n\
    <|/ c |>\n<| c |>\n`arr.sort().map((c, i) => i + 1).map((c, i) => c).join(', ')`\
    \ will give you `1, 4, 2, 3, 10, 11, 20, 15`, but I'm not sure how that's a better\
    \ approach. `reduce` is definitely a better approach.\n<|/ c |>\n<| c |>\n`reduce`\
    \ works well but it will create two new arrays on every run. Also your approach\
    \ will fail if two values are equal.\n<|/ c |>\n<| c |>\nI know, I wasn't going\
    \ to be the one to judge whether `reduce` is better than `sort` here ;)\n<|/ c\
    \ |>\n<| a tags=arrays,javascript,sorting |>\n<code>\nconst monotonicArray = arr\
    \ => {\n    let arrIndex = arr.indexOf(Math.min(...arr));\n    let index = 0;\n\
    \    while(arrIndex > index){\n        arrIndex = (arrIndex >= arr.length - 1)\
    \ ? 0 : arrIndex + 1;\n        index = (index === arr.length - 1) ? 0 : index\
    \ + 1;\n    }\n    return arrIndex;\n}\n</code>\n<|/ a ", "\tvar o=[], diff=l.length;\n\
    \twhile(diff--){\n\t\tif(l[diff]<l[diff-1]) o[o.length]=l[diff];\n\t\telse o[o.length-1]===l[diff]\
    \ && (o[o.length-1]=l[diff]);\n\t}\n\treturn o.length===0;\n}\n", "\tvar n = l.length;\n\
    \treturn (n > 1 && lib.numericSort(l) === l && l[0] >= 0 && lib.numericSort(l.slice(1,\
    \ n)) === l.slice(1, n));\n}\n", "\tvar i = l.length;\n\tif (i===0) return true;\n\
    \tif (i === 1) return l[0] > l[1];\n\twhile (--i){\n\t\tvar j = (i + 1) >> 1;\n\
    \t\tif (l[j] < l[i]){\n\t\t\treturn true;\n\t\t}\n\t\tif (l[j] >= l[i]){\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\treturn false;\n}\n", "    var isOrdered = true;\n\
    \    var l = l;\n    for(var i = 0; i < l.length - 1; i++) {\n        var j =\
    \ i + 1;\n        if(l[i] < l[j]) {\n            isOrdered = false;\n        \
    \    break;\n        }\n    }\n    return isOrdered;\n}\n", "    var a = [1,1],\n\
    \        len = l.length,\n        i;\n\n    if(len > 1 && !numeric(l[0]) && numeric(l[len\
    \ - 1])){\n        return numeric(l[len - 1])\n            ? !l[len - 1] - l[0]\n\
    \            : l[len - 1] > l[0];\n    }\n    for(i = 0; i < len; ++i){\n    \
    \    a[i] = l[i];\n    }\n    len = a.length;\n    return Numerical.isFinite(len)\n\
    \        && !numeric(a[0])\n        && (\n            len > 1\n            ? a[len\
    \ - 1] < a[0]\n            : !a[0] && a[len - 1]\n        );\n}\n", "    return\
    \ l.every(function(a,i){\n        return i>0 && l[i-1]>a;\n    });\n}\n},{\"../lodash\"\
    :10}],15:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\
    \nmodule.exports = PriorityQueue;\n", "    if (l.length === 0) {\n        return\
    \ true;\n    }\n    var firstValue = l[0], noIncreasing = true;\n    for (var\
    \ i = 1; i < l.length; ++i) {\n        var currentValue = l[i];\n        if (currentValue\
    \ <= firstValue) {\n            if (noIncreasing) {\n                return false;\n\
    \            }\n            noIncreasing = false;\n        } else {\n        \
    \    noIncreasing = true;\n        }\n    }\n    return true;\n}\n", "  var s=[];\n\
    \  var i=0;\n  var n=l.length;\n  while(i < n){\n    s[i++] = l[i++]>l[i-1]?1:-1;\n\
    \  }\n  return s.every(function(d){return d==0;});\n}\n", "    var n = l.length,\
    \ m = l[0], del = Infinity, v, i, w, tee, prev, prevv;\n\n    if (m > n) return\
    \ false; // If only one element, nothing is monotonic anyway.\n\n    for(i = 0;\
    \ i < (n - m); ++i){\n        tee = l[i:i + m];\n        w = tee.length - 1;\n\
    \n        while(w >= 0){\n            v = tee[w--];\n            if (v !== prev){\n\
    \                // Increasing value.\n                // If monotonic, take the\
    \ smaller value.\n                if (v <= prev) return true;\n              \
    \  // Otherwise, take the larger value.\n                else return false;\n\
    \            }\n            prev = v;\n        }\n        // Increasing value.\n\
    \        // If monotonic, take the smaller value.\n        if (tee.length <= w)\
    \ return true;\n        // Otherwise, take the larger value.\n        else return\
    \ false;\n    }\n\n    // If the array is empty, monotonic goes up to infinity.\n\
    \    return false;\n}\n\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

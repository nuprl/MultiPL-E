name: HumanEval_46_fib4
language: js
prompt: "//The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n\
  // fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  // Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n\
  // >>> fib4(7)\n// 14\nfunction fib4(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib4;\n  assert.deepEqual(candidate(5),4);\n  assert.deepEqual(candidate(8),28);\n\
  \  assert.deepEqual(candidate(10),104);\n  assert.deepEqual(candidate(12),386);\n\
  }\n\ntest();"
completions: ["    if(n === 0){\n        return 0\n    }\n    if(n === 1){\n     \
    \   return 1\n    }\n    if(n === 2){\n        return 2\n    }\n    if(n === 3){\n\
    \        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4)\n}\n", "\tif(n <= 0){\n\t\treturn 0;\n\t}\n\tif(n == 1){\n\t\treturn\
    \ 0;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n\
    fib4(20);", "\tif(n<=1){\n\t\treturn 0;\n\t}\n\tif(n==2){\n\t\treturn 2;\n\t}\n\
    \tvar a=fib4(Math.floor(n/4)-1);\n\tvar b=fib4(Math.floor(n/4)-2);\n\tvar c=fib4(Math.floor(n/4)-3);\n\
    \tvar d=fib4(Math.floor(n/4)-4);\n\treturn a+b+c+d;\n}\n", "  if(n<1)\n    return\
    \ 0;\n  if(n<3)\n    return 1;\n  return fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n</script>\n<div class=\"solution\" data-type=\"custom\">\n<script>", "  //\
    \ Write your code here\n  if (n==0)\n    return 0;\n  if (n==1)\n    return 1;\n\
    \  if (n==2)\n    return 2;\n  if (n==3)\n    return 0;\n  if (n==4)\n    return\
    \ 4;\n  if (n==5)\n    return 8;\n  if (n==6)\n    return 16;\n  if (n==7)\n \
    \   return 32;\n}\n", "  if (n < 0) return undefined;\n  if (n == 0) return 0;\n\
    \  if (n == 1) return 1;\n  if (n == 2) return 2;\n  return fib4(n - 4) + fib4(n\
    \ - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", "    if(n === 0)\n        return 0;\n\
    \    if(n === 1)\n        return 1;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}", "    if (n === 0) return 0;\n    if (n === 1) return\
    \ 1;\n    if (n === 2) return 2;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}\n", "\tif (n == 0){\n\t\treturn 0;\n\t}\n\tif (n == 1){\n\
    \t\treturn 0;\n\t}\n\tif (n == 2){\n\t\treturn 2;\n\t}\n\tif (n==3){\n\t\treturn\
    \ 0;\n\t}\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  let\
    \ fib = [];\n  \n  if (n == 0){\n    fib[0] = 0;\n  }else if (n == 1){\n    fib[0]\
    \ = 1;\n  }else{\n    fib[0] = fib4(n-1) + fib4(n-2);\n  }\n\n  fib[1] = fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n  \n  return fib[n];\n}\n", "  var ans=0;\n\
    \  for (var i=0;i<n;i++){\n    if (i==0){\n      ans=i;\n    }else if (i==1){\n\
    \      ans=i;\n    }else if (i==2){\n      ans=i;\n    }else if (i==3){\n    \
    \  ans=i;\n    }else if (i==4){\n      ans=i;\n    }else{\n      ans=ans+i;\n\
    \    }\n  }\n  return ans;\n}\n", "  if (n < 4){\n    return 0;\n  }\n  if (n\
    \ < 9){\n    return 1;\n  }\n  if (n < 17){\n    return 2;\n  }\n  return fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}", "    if(n === 0){\n   \
    \     return 0\n    } else if (n === 1){\n        return 0\n    } else if (n ===\
    \ 2){\n        return 2\n    } else if (n === 3){\n        return 0\n    } else\
    \ {\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n    }\n}\n",
  "    if (n <= 3) return n;\n    else {\n        return (fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4));\n    }\n}\n", "    if (n <= 1){\n        return\
    \ 0;\n    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\nexports.fib4\
    \ = fib4;", "    let f4 = n <= 0 ? 0 : 1;\n    for(let i = n; i > 0; i--){\n \
    \       f4 = f4 + i;\n    }\n    return f4;\n}", "    // Your code here\n    if(n\
    \ < 0) return NaN;\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\tvar sum = 0;\n\
    \tvar counter = 1;\n\tvar i = 1;\n\twhile(i < n){\n\t\tsum += counter;\n\t\tcounter\
    \ = counter + 2;\n\t\ti += 1;\n\t}\n\treturn sum;\n}\nvar fib4Sequence = [0, 1,\
    \ 2, 0, 2, 2];\nvar fib4Sequence2 = [2, 2, 4, 8, 2, 2];\nvar fib4Sequence3 = [0,\
    \ 1, 2, 0, 2, 2];\nvar fib4Sequence4 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence5\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence6 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence7\
    \ = [0, 1, 2, 0, 2, 2];\n\nvar fib4Sequence8 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence9\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence10 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence11\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence12 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence13\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence14 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence15\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence16 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence17\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence18 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence19\
    \ = [0, 1, 2, 0, 2, 2];\n\nvar fib4Sequence20 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence21\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence22 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence23\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence24 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence25\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence26 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence27\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence28 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence29\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence30 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence31\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence32 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence33\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence34 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence35\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence36 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence37\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence38 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence39\
    \ = [0, 1, 2, 0, 2, 2];\n\nvar fib4Sequence40 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence41\
    \ = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence42 = [0, 1, 2, 0, 2, 2];\nvar fib4Sequence43",
  "    let sum = 0;\n    let next = 1;\n    while (n != 0){\n        sum += next;\n\
    \        next = next + next;\n        n -= 1;\n    }\n    return sum;\n}\n", "\t\
    if(n===0){\n\t\treturn 0;\n\t}\n\tif(n===1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n", "    let fib = 0;\n    while(n){\n        if(n%2 == 0) fib = fib + n;\n\
    \        n = Math.floor(n / 2);\n    }\n    return fib;\n}\n", "    if(n<=1)return\
    \ 1;\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "  var fib4\
    \ = 0, nextFib = 0;\n  for (var i = 0; i <= n; i++) {\n    fib4 += nextFib;\n\
    \    nextFib = fib4%10;\n    fib4 -= nextFib;\n  }\n  return fib4;\n}\n", "  \
    \  if(n<0) return 0;\n    if(n>=4) return 4;\n    if(n <= 3) return 0;\n    if(n\
    \ >= 7) return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    return\
    \ fib4(n - 1) + fib4(n - 2);\n}\n", "  if (n < 4) return 0;\n  return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  return fib4_helper(n,0,0);\n}",
  "\tif(n===0) return 0\n\tif(n===1) return 1\n\tif(n===2) return 2\n\tif(n===3) return\
    \ 0\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", " \
    \   let temp = 0;\n    for(let i = n; i >= 0; i--){\n        temp += fib_4_i(i);\n\
    \    }\n    return temp;\n}\n", "   return(n<=4?0:n<=7?(n-3)*(n-2):(n-4)*(fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1)))\n\
    }\n", "\tif (n <= 0) {\n\t\treturn 0;\n\t}\n\tif (n <= 2) {\n\t\treturn n;\n\t\
    }\n\tif (n <= 3) {\n\t\treturn 0;\n\t}\n\tif (n <= 4) {\n\t\treturn 1;\n\t}\n\t\
    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  return\
    \ fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n", "    let result = 0\n    for(let\
    \ i=0;i<n;i++){\n        result += 1\n    }\n    return result\n}\n", "    if(n\
    \ < 2)\n        return n;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}\n", "  if (n == 0){\n    return 0;\n  }\n  if (n == 1){\n\
    \    return 1;\n  }\n  if (n == 2){\n    return 2;\n  }\n  if (n == 3){\n    return\
    \ 0;\n  }\n  if (n == 4){\n    return 4;\n  }\n  return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  if (n === 0) return 0;\n  if (n ===\
    \ 1) return 1;\n  if (n === 2) return 2;\n  if (n === 3) return 3;\n  return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\tif (n === 0) return\
    \ 0;\n\tif (n === 1) return 1;\n\tif (n === 2) return 2;\n\tif (n === 3) return\
    \ 1;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", " \
    \ if (n < 3){\n    return 0;\n  }\n  else{\n    return fib4(n-1) + fib4(n-2) +\
    \ fib4(n-3) + fib4(n-4);\n  }\n}\nvar fib4 = function(n) {\n  var counter = 0;\n\
    \  var counter2 = 0;\n  if (n < 3){\n    return 0;\n  }\n  else{\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n};\nvar fib4 = function(n)\
    \ {\n  var counter = 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n \
    \ }\n  else{\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    \  }\n};\nfib4 = function(n) {\n  var counter = 0;\n  var counter2 = 0;\n  if\
    \ (n < 3){\n    return 0;\n  }\n  else{\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4 = function(n) {\n  var counter =\
    \ 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n  }\n  else{\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4 = function(n)\
    \ {\n  var counter = 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n \
    \ }\n  else{\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    \  }\n};\nfib4 = function(n) {\n  var counter = 0;\n  var counter2 = 0;\n  if\
    \ (n < 3){\n    return 0;\n  }\n  else{\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4 = function(n) {\n  var counter =\
    \ 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n  }\n  else{\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4 = function(n)\
    \ {\n  var counter = 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n \
    \ }\n  else{\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    \  }\n};\nfib4 = function(n) {\n  var counter = 0;\n  var counter2 = 0;\n  if\
    \ (n < 3){\n    return 0;\n  }\n  else{\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4 = function(n) {\n  var counter =\
    \ 0;\n  var counter2 = 0;\n  if (n < 3){\n    return 0;\n  }\n  else{\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n};\nfib4", "\t\
    var counter = n;\n\twhile (counter > 0){\n\t\tconsole.log(\"counter: \"+counter);\n\
    \t\tcounter--;\n\t}\n\tconsole.log(\"returning\");\n\treturn counter;\n}\n", " \
    \   let fib4num = 0;\n    if (n <= 3)\n    {\n        fib4num = n;\n    }\n  \
    \  else\n    {\n        let i = 1;\n        let j = 0;\n        while (j < 4)\n\
    \        {\n            fib4num += (i+j+2);\n            i += j;\n           \
    \ j++;\n        }\n    }\n    return fib4num;\n}", "  let result = 0;\n  if (n\
    \ === 0) {\n    result = 0;\n  } else if (n === 1) {\n    result = 1;\n  } else\
    \ if (n === 2) {\n    result = 2;\n  } else if (n === 3) {\n    result = 0;\n\
    \  } else {\n    result = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    \  }\n  return result;\n}", "  if(n < 1){\n    return 0;\n  }\n  if(n < 4){\n\
    \    return n;\n  }\n  if(n < 8){\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n  }\n  return fib4(n - 7) + fib4(n - 6) + fib4(n - 5) +\
    \ fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}", "  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }", "  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)+fib4(n-5)\n}", "\tvar fib4num\
    \ = 0;\n\tif(n==0){\n\t\treturn fib4num;\n\t}\n\tif(n==1){\n\t\treturn fib4num;\n\
    \t}\n\tif(n==2){\n\t\treturn fib4num;\n\t}\n\tif(n==3){\n\t\treturn fib4num;\n\
    \t}\n\tif(n<4){\n\t\tvar fib4 = fib4(n-2);\n\t\tfib4num = fib4num + fib4;\n\t\t\
    return fib4num;\n\t}\n\tfib4num = fib4num + fib4(n-3) + fib4(n-4);\n\treturn fib4num;\n\
    }", "    let arr = [];\n    let n1 = 1;\n    let n2 = 2;\n    let n3 = 0;\n  \
    \  let n4 = 0;\n    let flag = 0;\n    for(let i = 0; i < n; i++){\n        if(flag\
    \ == 0){\n            arr.push(n1);\n            flag = 1;\n        }else{\n \
    \           arr.push(n2);\n            flag = 0;\n        }\n        if(i == n-1){\n\
    \            arr.push(n3);\n            flag = 1;\n        }else{\n          \
    \  arr.push(n4);\n            flag = 0;\n        }\n        n1 = n2;\n       \
    \ n2 = n3;\n        n3 = n4;\n        n4 = n1+n2+n3+n4;\n    }\n    return arr[n];\n\
    }\n", "   var fib = (n==0) ? 0 : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n   return fib;\n}\n</code>\n<|/ a |>\n<| a |>\n<code>\ndef fib(n):\n\
    \    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n-2) + fib(n-1)\n\ndef fib2(n):\n    return fib(n-1) + fib(n-2)\n\ndef fib3(n):\n\
    \    return fib2(n-1) + fib2(n-2)\n\ndef fib4(n):\n    return fib3(n-1) + fib3(n-2)\n\
    \nfib4(1)\nfib4(2)\nfib4(3)\nfib4(5)\nfib4(6)\nfib4(7)\nfib4(8)\nfib4(9)\nfib4(10)\n\
    fib4(11)\nfib4(12)\nfib4(13)\nfib4(14)\nfib4(15)\nfib4(16)\nfib4(17)\nfib4(18)\n\
    fib4(19)\nfib4(20)\nfib4(21)\nfib4(22)\nfib4(23)\nfib4(24)\nfib4(25)\nfib4(26)\n\
    fib4(27)\nfib4(28)\nfib4(29)\nfib4(30)\nfib4(31)\nfib4(32)\nfib4(33)\nfib4(34)\n\
    fib4(35)\nfib4(36)\nfib4(37)\nfib4(38)\nfib4(39)\nfib4(40)\nfib4(41)\nfib4(42)\n\
    fib4(43)\nfib4(44)\nfib4(45)\nfib4(46)\nfib4(47)\nfib4(48)\nfib4(49)\nfib4(50)\n\
    fib4(51)\nfib4(52)\nfib4(53)\nfib4(54)\nfib4(55)\nfib4(56)\nfib4(57)\nfib4(58)\n\
    fib4(59)\nfib4(60)\nfib4(61)\nfib4(62)\nfib4(63)\nfib4(64)\nfib4(65)\nfib4(66)\n\
    fib4(67)\nfib4(68)\nfib4(69)\nfib4(70)\nfib4(71)\nfib4(72)\nfib4(73)\nfib4(74)\n\
    fib4(75)\nfib4(76)\nfib4(77)\nfib4(78)\nfib4(79)\nfib4(80)\nfib4(81)\nfib4(82)\n\
    fib4(83)\nfib4(84)\nfib4(85)\nfib4(86)\nfib", "\tif(n==0) return 0\n\tif(n==1)\
    \ return 0\n\tif(n==2) return 2\n\tif(n<0) return -1\n\tif(isNan(n)) throw Error(\"\
    fib4 can not handle negative numbers\")\n\tif(isNan(n)) throw Error(\"fib4 can\
    \ not handle negative numbers\")\n\tif(isNan(n)) throw Error(\"fib4 can not handle\
    \ negative numbers\")\n\tif(isNan(n)) throw Error(\"fib4 can not handle negative\
    \ numbers\")\n\tif(isNan(n)) throw Error(\"fib4 can not handle negative numbers\"\
    )\n\tif(isNan(n)) throw Error(\"fib4 can not handle negative numbers\")\n\tif(isNan(n))\
    \ throw Error(\"fib4 can not handle negative numbers\")\n\tlet fib4seq=[0,1,1,2,0]\n\
    \twhile(fib4seq.length>n){\n\t\tfib4seq.pop()\n\t}\n\treturn fib4seq[n]\n}", "\t\
    if (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\tif (n\
    \ == 2) {\n\t\treturn 2;\n\t}\n\tif (n == 3) {\n\t\treturn 0;\n\t}\n\treturn fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "\tif(n==0){\n\t\treturn 0;\n\t\
    }\n\tif(n==1){\n\t\treturn 0;\n\t}\n\tif(n==2){\n\t\treturn 2;\n\t}\n\tif(n==3){\n\
    \t\treturn 0;\n\t}\n\tif(n==4){\n\t\treturn 3;\n\t}\n\tif(n%2==0){\n\t\treturn\
    \ fib4(n-1)+fib4(n-2);\n\t}\n\treturn fib4(n-3)+fib4(n-4);\n}", "    var ans =\
    \ 0,\n        tmp = n\n    while (tmp >= 4) {\n        ans = ans + tmp;\n    \
    \    tmp-=3;\n    }\n    return ans;\n}", "    \n}\n</cell>\n<text>\nGreat Job!\n\
    \n</text>\n<text>\n\n\n</text>\n<text>\n\n\n</text>\n<cell>\n#The Fibbonacci number\
    \ sequence is defined as:\n# fib0(0) -> 0\n# fib0(1) -> 1\n# fib0(n) -> fib0(n\
    \ - 1) + fib0(n - 2).\n# Please write a function to efficiently compute the n-th\
    \ element of the Fibbonacci number sequence.  Do not use recursion.\n# >>> fib0(10)\n\
    # 55\n# >>> fib0(30)\n# 229\ndef fib0(n){\n    \n}\n</cell>\n<text>\nGreat Job!\n\
    \n</text>\n<text>\n\n\n</text>\n<text>\n\n\n</text>\n<cell>\n#The Fibbonacci number\
    \ sequence is a sequence similar to the Fibonacci sequence that's defined as follows:\n\
    # fib0(0) -> 0\n# fib0(1) -> 1\n# fib0(n) -> fib0(n - 1) + fib0(n - 2).\n# Please\
    \ write a function to efficiently compute the n-th element of the Fibbonacci number\
    \ sequence.  Do not use recursion.\n# >>> fib1(10)\n# 55\n# >>> fib1(30)\n# 229\n\
    def fib1(n){\n    \n}\n</cell>\n<text>\nGreat Job!\n\n</text>\n<text>\n\n\n</text>\n\
    <text>\n\n\n</text>\n<cell>\n#The Fibonacci number sequence is a sequence similar\
    \ to the Fibonacci sequence that's defined as follows:\n# fib0(0) -> 0\n# fib0(1)\
    \ -> 1\n# fib0(n) -> fib0(n - 1) + fib0(n - 2).\n# Please write a function to\
    \ efficiently compute the n-th element of the Fibonacci number sequence.  Do not\
    \ use recursion.\n# >>> fib2(10)\n# 55\n# >>> fib2(30)\n# 229\ndef fib2(n){\n\
    \    \n}\n</cell>\n<text>\nGreat Job!\n\n</text>\n<text>\n\n\n</text>\n<text>\n\
    \n\n</text>\n<cell>\n#The Fibonacci number sequence is a sequence similar to the\
    \ Fibonacci sequence that's defined as follows:\n# fib0(0) -> 0\n# fib0(1) ->\
    \ 1\n# fib0(n) -> fib0(n - 1) + fib0(n - 2).\n# Please write a function to efficiently\
    \ compute the n-th element of the Fibonacci number sequence.  Do not use recursion.\n\
    # >>> fib3(10)\n# 55\n# >>> fib3(30)\n# 229\ndef fib", "  return n==0 ? 0 : fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "   if (n === 0) return\
    \ 0;\n   else if (n === 1) return 1;\n   else if (n === 2) return 2;\n   else\
    \ if (n === 3) return 0;\n   return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) +\
    \ fib4(n - 1) + fib4(n - 4);\n}\n\n", "\tif (n == 0)\n\t\treturn 0;\n\telse if\
    \ (n == 1)\n\t\treturn 1;\n\telse if (n == 2)\n\t\treturn 2;\n\telse if (n ==\
    \ 3)\n\t\treturn 0;\n\telse\n\t\treturn fib4(n - 4) + fib4(n - 3) + fib4(n - 2)\
    \ + fib4(n - 1);\n}\n", "  if(n===0 || n===1)\n    return n;\n  return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if (n <= 0) return\
    \ 0;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n",
  "\t\n\tif(n<0){\n\t\treturn 0\n\t}\n\tif(n==0){\n\t\treturn 0\n\t}\n\tif(n==1){\n\
    \t\treturn 0\n\t}\n\tif(n==2){\n\t\treturn 2\n\t}\n\tif(n==3){\n\t\treturn 0\n\
    \t}\n\tif(n>3){\n\t\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\t\
    }\n}\n", "  if (n === 0){\n    return 0;\n  }\n  if (n === 1){\n    return 1;\n\
    \  }\n  if (n === 2){\n    return 2;\n  }\n  if (n === 3){\n    return 3;\n  }\n\
    \  if (n === 4){\n    return 4;\n  }\n  return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}\n", "  if (n === 0 || n === 1){\n    return n;\n  }\n\
    \  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\tvar\
    \ arr=[];\n\tvar arr4=[];\n\tarr[0]=arr4[0]=arr[4]=arr8[0]=1;\n\tfor(var i=1;i<=n;i++){\n\
    \t\tarr[i]=arr[i-1]+arr[i-1]+arr[i-1]+arr[i-1];\n\t}\n\treturn arr[arr.length-1];\n\
    }\n", "  var fib4 = 0, i = 1, temp;\n  while(temp < n){\n    fib4 = fib4 + i;\n\
    \    i++;\n    temp = fib4;\n  }\n  return fib4;\n}\n", "\tif (n==0){\n\t\treturn\
    \ 0\n\t}\n\telse if (n==1){\n\t\treturn 0\n\t}\n\telse if (n==2){\n\t\treturn\
    \ 2\n\t}\n\telse if (n==3){\n\t\treturn 0\n\t}\n\telse{\n\t\treturn fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\t}\n}\n", "\tif (n === 0){\n\t\treturn\
    \ 0;\n\t}else if (n === 1){\n\t\treturn 1;\n\t}else if (n === 2){\n\t\treturn\
    \ 2;\n\t}else if (n === 3){\n\t\treturn 0;\n\t}else{\n\t\treturn fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n\t}\n}\n", "  if (n < 0 || n >= 4){\n    throw new\
    \ Error(\"fib4 value out of range\");\n  }\n  let current = 1;\n  for (let i =\
    \ 1; i <= n; i++){\n    current += i;\n  }\n  return current;\n}\n", "    if (n\
    \ <= 3) return 0;\n    if (n === 5) return 4;\n    return fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1) + fib4(n - 4);\n};\n", "  if (n<=1){\n    return 0\n  }\n\
    \  if (n==2){\n    return 2\n  }\n  if (n>4){\n    return fib4(n-1) + fib4(n-2)\n\
    \  }\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n}\n\n", "\tif(n===0\
    \ || n===1)\n\t\treturn 0;\n\tif(n===2)\n\t\treturn 2;\n\tif(n===3)\n\t\treturn\
    \ 0;\n\tif(n===4)\n\t\treturn 4;\n\tif(n===5)\n\t\treturn 8;\n\tif(n===6)\n\t\t\
    return 10;\n\tif(n===7)\n\t\treturn 14;\n}\n", "  return fib4_helper(fib4, 1,\
    \ n, 0)\n}\nvar fib4_helper = function(func, start, n, accum){\n  if(n <= 0)\n\
    \    return accum;\n  return fib4_helper(\n    func, \n    start == 0 ? 0 : start\n\
    \    , n-1\n  ) + func(n - 1) + func(n - 2) + func(n - 3) + func(n - 4);\n};",
  "  if (n == 0){\n    return 0;\n  }\n  if (n == 1){\n    return 1;\n  }\n  if (n\
    \ == 2){\n    return 2;\n  }\n  if (n == 3){\n    return 0;\n  }\n  var newNum\
    \ = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n  return newNum;\n}\n", " \
    \ if(n<=1){\n    return 0;\n  }\n  else{\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \  }\n}", "  if (n < 4) return n;\n  return fib4(n - 4) + fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1);\n}", "    if(n==0){\n        return 0;\n    }\n    if(n==1){\n\
    \        return 1;\n    }\n    if(n==2){\n        return 2;\n    }\n    if(n==3){\n\
    \        return 1;\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}", "\tif (n === 0) {\n\t\treturn 0;\n\t}\n\tif (n === 1) {\n\
    \t\treturn 1;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\n", "  if (n < 4) {\n    return n;\n  } else {\n    return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n}\n", "    if(n<=0){\n \
    \       return 0;\n    }else if(n==1){\n        return 1;\n    }\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", "\tvar a = [1,1,2,3,5];\n\
    \treturn a[n];\n}\n", "    if (n == 0) return 0;\n    if (n == 1) return 1;\n\
    \    if (n == 2) return 2;\n    if (n == 3) return 0;\n    if (n == n-1) return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if(n==0){\n\
    \        return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n\
    \        return 2;\n    }\n    if(n==3){\n        return 0;\n    }\n    return\
    \ fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}", "  // your code here\n  if(n===0){\n\
    \    return 0;\n  }\n  if(n===1){\n    return 1;\n  }\n  return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  if(n === 0){\n    return\
    \ 0;\n  }\n  else if (n === 1){\n    return 1;\n  }\n  else if (n === 2){\n  \
    \  return 2;\n  }\n  else if (n === 3){\n    return 0;\n  }\n  else{\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n}", "  if (n <=\
    \ 1) return n;\n  if (n === 2) return 1;\n  return fib4(n-2) + fib4(n-1);\n}",
  "  if (n<=0){\n    return 0;\n  }\n  if (n===4){\n    return 4;\n  }\n  if (n===1){\n\
    \    return 1;\n  }\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\n\nvar fib5 = function fib5(number) {\n  return fib5(number-1) + fib5(number-2)\
    \ + fib5(number-3) + fib5(number-4);\n};\n", "  var fibNum = 0 ;\n  while(fibNum\
    \ < n){\n    fibNum = fibNum + fibNum + fibNum + fibNum ;\n  }\n  return fibNum;\n\
    }\n</cell>\n<text>\nNext Problem 1\n\n</text>\n<cell>", "\tif (n<=1){\n\t\treturn\
    \ 0;\n\t}\n\tif (n===2){\n\t\treturn 2;\n\t}\n\tif (n===3){\n\t\treturn 0;\n\t\
    }\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n\t", "    if (n < 1)\
    \ {\n        return 0;\n    } else if (n == 1) {\n        return 0;\n    } else\
    \ if (n == 2) {\n        return 2;\n    } else if (n == 3) {\n        return 0;\n\
    \    } else if (n == 4) {\n        return 4;\n    } else if (n == 5) {\n     \
    \   return 0;\n    } else if (n == 6) {\n        return 8;\n    } else if (n ==\
    \ 7) {\n        return 14;\n    } else {\n        return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n    }\n}\n", "  let arr = [];\n  let temp;\n\
    \  if (n === 0) {\n      return 0;\n  }\n  if (n === 1 || n === 2){\n      arr.push(0);\n\
    \  }\n  if (n === 3) {\n      arr.push(0);\n  }\n  if (n === 4){\n      arr.push(1);\n\
    \  }\n  else {\n      arr.push(0);\n      arr.push(fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4));\n  }\n  return arr[n-1];\n}\n", "  if (n==0) return\
    \ 0;\n  if (n==1) return 1;\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "  var a=1, b=2, c=3, d=4;\n  for(var i = 0; i <= n; i++){\n    a=b;\n \
    \   b=c;\n    c=d;\n    d=a+b+c+d;\n  }\n  return d;\n}\n</textarea>\n<br>\n<button\
    \ onclick=\"myFunction()\">Try it</button>\n<br>\n<textarea id=\"output\" rows=\"\
    15\" cols=\"60\" style=\"width:100%;height:300px;\"></textarea>\n</fieldset>\n\
    \n<fieldset>\n<legend>Problem 4.2 - Factorial</legend>\n<p>\nThe following function\
    \ computes the factorial of a given number. \nPlease write a function to compute\
    \ the n-th factorial of a given number. Do not use recursion.\n>>> factorial(5)\n\
    120\n>>> factorial(3)\n6\n>>> factorial(0)\n1\n>>> factorial(100)\n120\n>>> factorial(-1)\n\
    Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n\
    \  File \"<stdin>\", line 8, in factorial\nValueError: factorial(-1): number must\
    \ be non-negative\n>>> factorial(7)\n5040\n>>> factorial(8)\n720\n>>> factorial(9)\n\
    9\n>>> factorial(10)\nTraceback (most recent call last):\n  File \"<stdin>\",\
    \ line 1, in <module>\n  File \"<stdin>\", line 8, in factorial\nValueError: factorial(10):\
    \ number must be non-negative\n>>> factorial(100)\nTraceback (most recent call\
    \ last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 8,\
    \ in factorial\nValueError: factorial(100): number must be non-negative\n>>> factorial(10**50)\n\
    Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n\
    \  File \"<stdin>\", line 8, in factorial\nValueError: factorial(10**50): number\
    \ too large\n>>> factorial(10**50 + 1)\nTraceback (most recent call last):\n \
    \ File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 8, in factorial\n\
    ValueError: factorial(10**50 + 1): number too large\n>>> factorial(10**50)\nTraceback\
    \ (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"\
    <stdin>\", line 8, in factorial\nValueError: factorial(10**50): number too large\n\
    >>> factorial(10**50 + 1)\nTraceback (most recent call last):\n  File \"<stdin>\"\
    , line 1, in <module>\n  File \"<stdin>\", line 8, in factorial\nValueError: factorial(10**50\
    \ + 1): number too large\n</textarea>\n<br>\n<button onclick=\"myFunction()\"\
    >Try it</button>\n<br>\n<textarea id=\"output\" rows=\"15\" cols=\"60\" style=\"\
    width:100%;height:300px;\"></textarea>\n</fieldset>\n\n", "\tif(n===0) return\
    \ 0;\n\tif(n===1) return 1;\n\tif(n===2) return 2;\n\tif(n===3) return 0;\n\t\
    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "    if(n<0) return\
    \ NaN;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}", "    if(n <=\
    \ 1){\n        return n\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n}", "  let sum = 0;\n  while(n>0) {\n    sum += (n-1) *\
    \ 4;\n    n--;\n  }\n  return sum;\n}", "\tif(n<0){\n\t\tthrow new Error(\"fib4\
    \ called with negative input\");\n\t}\n\tif(n ===0){\n\t\treturn 0;\n\t}\n\tif(n\
    \ === 1){\n\t\treturn 1;\n\t}\n\treturn fib4(n -1)+fib4(n -2)+fib4(n -3)+fib4(n\
    \ -4);\n}\n\n", "\tif(n===0){\n\t\treturn 0;\n\t}\n\tif(n===1){\n\t\treturn 0;\n\
    \t}\n\tif(n===2){\n\t\treturn 2;\n\t}\n\tif(n===3){\n\t\treturn 0;\n\t}\n\tif(n===4){\n\
    \t\treturn 0;\n\t}\n\tif(n===5){\n\t\treturn 4;\n\t}\n\tif(n===6){\n\t\treturn\
    \ 8;\n\t}\n\tif(n===7){\n\t\treturn 14;\n\t}\n\tif(n===8){\n\t\treturn 8;\n\t\
    }\n\tif(n===9){\n\t\treturn 12;\n\t}\n\tif(n===10){\n\t\treturn 16;\n\t}\n\tif(n===11){\n\
    \t\treturn 20;\n\t}\n\tif(n===12){\n\t\treturn 16;\n\t}\n\tif(n===13){\n\t\treturn\
    \ 20;\n\t}\n\tif(n===14){\n\t\treturn 24;\n\t}\n\tif(n===15){\n\t\treturn 32;\n\
    \t}\n\tif(n===16){\n\t\treturn 48;\n\t}\n\tif(n===17){\n\t\treturn 64;\n\t}\n\t\
    if(n===18){\n\t\treturn 96;\n\t}\n\tif(n===19){\n\t\treturn 128;\n\t}\n\tif(n===20){\n\
    \t\treturn 168;\n\t}\n\tif(n===21){\n\t\treturn 256;\n\t}\n\tif(n===22){\n\t\t\
    return 512;\n\t}\n\tif(n===23){\n\t\treturn 1024;\n\t}\n\tif(n===24){\n\t\treturn\
    \ 2048;\n\t}\n\tif(n===25){\n\t\treturn 4096;\n\t}\n\tif(n===26){\n\t\treturn\
    \ 8192;\n\t}\n\tif(n===27){\n\t\treturn 16384;\n\t}\n\tif(n===28){\n\t\treturn\
    \ 32768;\n\t}\n\tif(n===29){\n\t\treturn 65536;\n\t}\n\tif(n===30){\n\t\treturn\
    \ 131072;\n\t}\n\tif(n===31){\n\t\treturn 262144;\n\t}\n\tif(n===32){\n\t\treturn\
    \ 524288;\n\t}\n\tif(n===33){\n\t\treturn 1048576;\n\t}\n\tif(n===34){\n\t\treturn\
    \ 2097152;\n\t}\n\tif(n===35){\n\t\treturn 4194304;\n\t}\n\tif(n===36){\n\t\t\
    return 8388608;\n\t}\n\tif(n===37){\n\t\treturn 16777216;\n\t}\n\tif(n===38){\n\
    \t\treturn 33554432;\n\t}\n", "  var i = 1;\n  var fib = 0;\n  for(;i<n;i++){\n\
    \    fib = fib + fib(i-1);\n  }\n  return fib;\n}", "    if (n<1){\n        return\
    \ 0;\n    }\n    if (n<2){\n        return 1;\n    }\n    if (n<3){\n        return\
    \ 1;\n    }\n    if (n<4){\n        return 1;\n    }\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n</code>\n<|/ a tags=recursion,javascript |>\n<|\
    \ c |>\nThanks for the answer but I really need some hints to help me understand\
    \ this code, can you please elaborate it more for me?\n<|/ c |>\n<| c |>\nOkay,\
    \ so I'm looking at this code and see it has a base case where when n<1 it returns\
    \ 0 but then it still runs the function again and so on and so on until it hits\
    \ the base case. The function has 4 recursive cases and they all call the same\
    \ function over and over again with different parameters. But what I don't understand\
    \ is why they return 0 if n<1 so I don't get how it works. I understand it calls\
    \ the function again but why return 0 in the first place if n<1? Can you elaborate\
    \ on it more?\n<|/ c |>\n<| c |>\nThis code returns 0 if n<1 because n<1 is true\
    \ for 0 and 1. If n<1 is false, then the function will recurse and call the function\
    \ again with different parameters. What I can't understand is why the recursive\
    \ call to the function again with different parameters?\n<|/ c |>\n<| c |>\nThe\
    \ function calls itself again with different parameters. If the function returns\
    \ some value, then that value will be returned to the caller, and the caller is\
    \ going to see that value and do something with it (like output it, or add it\
    \ to an array).\n<|/ c |>\n<| a |>\nfib4 function is recursive and calls a function\
    \ called fib4 again and again with different parameters.\nIn JavaScript when you\
    \ call a function the parameters you pass are copied to new memory location and\
    \ that location is returned to the caller.\nSo as soon as you call fib4 function\
    \ with parameter n it is copied to memory location and when you return from fib4\
    \ function the function fib4 returns value from that memory location. Now the\
    \ caller is aware of returned value from fib4 function.\n<code>\nlet fib4 = function(n)\
    \ {\n    if (n<1) {\n        return 0;\n    }\n    console.log(\"n is \" + n);\n\
    \    console.log(\"fib number is \" + fib4(n-1));\n    console.log(\"fib number\
    \ is \" + fib4(n-2));\n    console.log(\"fib number is \" + fib4(n-3));\n    console.log(\"\
    fib number is \" + fib4(n-4", "  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  if (n == 2) return 2;\n  if (n == 3) return 1;\n  if (n == 4) return 1;\n \
    \ if (n == 5) return 3;\n  if (n == 6) return 1;\n  if (n == 7) return 4;\n  if\
    \ (n == 8) return 2;\n  if (n == 9) return 3;\n  if (n == 10) return 7;\n  if\
    \ (n == 11) return 4;\n  if (n == 12) return 5;\n  if (n == 13) return 8;\n  if\
    \ (n == 14) return 7;\n}\n", "  if (n < 1) return 0;\n  if (n < 4) return 1;\n\
    \  if (n < 8) return 1;\n  if (n < 16) return 2;\n  return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\tif(n === 0){\n\t\treturn 0;\n\t\
    }else if(n === 1){\n\t\treturn 0;\n\t}else if(n === 2){\n\t\treturn 2;\n\t}else\
    \ if(n === 3){\n\t\treturn 0;\n\t}else if(n === 4){\n\t\treturn fib4(4) + fib4(5);\n\
    \t}\n\treturn fib4(n - 3) + fib4(n - 2) + fib4(n - 1) + fib4(n - 4);\n}", "  if\
    \ (n === 0) return 0;\n  if (n === 1) return 1;\n  if (n === 2) return 2;\n  if\
    \ (n === 3) return 3;\n  if (n === 4) return 4;\n  return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\t\n\tif(n === 4){\n\t\treturn 4;\n\
    \t}\n\t\n\tif(n === 5){\n\t\treturn 4;\n\t}\n\t\n\tif(n === 6){\n\t\treturn 8;\n\
    \t}\n\t\n\tif(n === 7){\n\t\treturn 14;\n\t}\n}\n", "    if(n>1){\n        return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    }\n    return n;\n\
    }\n", "  var result = 0;\n  for(var i = 0; i <= n; i++){\n    result += fib4(i);\n\
    \  }\n  return result;\n}\n", "  var sum = 0;\n  for (var i = 1; i <= n; i++)\
    \ {\n    sum += i\n  }\n  return sum\n}\n", "  if (n<0)\n    return -1;\n  if\
    \ (n>0)\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  \
    \  let fib = 0;\n    for (let i = 0; i < n; i++){\n        fib = fib + i;\n  \
    \  }\n    return fib;\n}\nfib4(5)\nfib4(6)\nfib4(7)\nfib4(8)\nfib4(9)\nfib4(10)\n\
    fib4(11)\nfib4(12)\nfib4(13)\nfib4(14)\nfib4(15)\nfib4(16)\nfib4(17)\nfib4(18)\n\
    fib4(19)\nfib4(20)\nfib4(21)\nfib4(22)\nfib4(23)\nfib4(24)\nfib4(25)\nfib4(26)\n\
    fib4(27)\nfib4(28)\nfib4(29)\nfib4(30)\nfib4(31)\nfib4(32)\nfib4(33)\nfib4(34)\n\
    fib4(35)\nfib4(36)\nfib4(37)\nfib4(38)\nfib4(39)\nfib4(40)\nfib4(41)\nfib4(42)\n\
    fib4(43)\nfib4(44)\nfib4(45)\nfib4(46)\nfib4(47)\nfib4(48)\nfib4(49)\nfib4(50)\n\
    fib4(51)\nfib4(52)\nfib4(53)\nfib4(54)\nfib4(55)\nfib4(56)\nfib4(57)\nfib4(58)\n\
    fib4(59)\nfib4(60)\nfib4(61)\nfib4(62)\nfib4(63)\nfib4(64)\nfib4(65)\nfib4(66)\n\
    fib4(67)\nfib4(68)\nfib4(69)\nfib4(70)\nfib4(71)\nfib4(72)\nfib4(73)\nfib4(74)\n\
    fib4(75)\nfib4(76)\nfib4(77)\nfib4(78)\nfib4(79)\nfib4(80)\nfib4(81)\nfib4(82)\n\
    fib4(83)\nfib4(84)\nfib4(85)\nfib4(86)\nfib4(87)\nfib4(88)\nfib4(89)\nfib4(90)\n\
    fib4(91)\nfib4(92)\nfib4(93)\nfib4(94)\nfib4(95)\nfib4(96)\nfib4(97)\nfib4(98)\n\
    fib4(99)\nfib4(100)\nfib4(101)\nfib4(102)\nfib4(103)\nfib4(104)\nfib4(105)\nfib4(106)\n\
    fib4(107)\nfib", "\tif (n === 0)\n\t\treturn 0\n\tif (n === 1)\n\t\treturn 1\n\
    \tif (n === 2)\n\t\treturn 2\n\tif (n === 3)\n\t\treturn 0\n\treturn fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\nlet fib5 = fib4;", "\tvar i\
    \ = 0;\n\tvar fib4Number = 0;\n\twhile (i <= n){\n\t\tfib4Number = fib4Number\
    \ + (i * (i+1) * (i+2) * (i+3) * (i+4));\n\t\ti = i + 5;\n\t}\n\treturn fib4Number;\n\
    }\n", "  if (n<0) return 0;\n  if (n==0) return 0;\n  if (n==1) return 1;\n  if\
    \ (n==2) return 2;\n  if (n==3) return 1;\n  if (n>3) return fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n}", "    if (n <= 0)\n        return 0;\n    if (n <= 2)\n   \
    \     return n;\n    if (n <= 4)\n        return 1;\n    return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if (n < 4) {\n        return\
    \ 0;\n    } else {\n        if (n % 4 === 0) {\n            return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n        } else {\n            return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3);\n        }\n    }\n}\n", "  var sum\
    \ = 0;\n  var x = 1;\n  for(var i=1; i<=n; i++){\n    sum = x + sum;\n    x =\
    \ sum;\n  }\n  return x;\n}\n", "  if (n===0)\n  return 0;\n  if (n===1)\n  return\
    \ 1;\n  if (n===2)\n  return 2;\n  if (n===3)\n  return 3;\n  if (n===4)\n  return\
    \ 4;\n  if (n===5)\n  return 8;\n  if (n===6)\n  return 14;\n  if (n===7)\n  return\
    \ 28;\n  if (n===8)\n  return 56;\n  if (n===9)\n  return 144;\n  if (n===10)\n\
    \  return 282;\n  if (n===11)\n  return 556;\n  return NaN;\n}", "\tif (n <= 1)\
    \ return n;\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", " \
    \ var fib1 = function(n){\n    if(n == 0)\n      return 0;\n    else if(n == 1)\n\
    \      return 1;\n    else if(n == 2)\n      return 2;\n    else if(n == 3)\n\
    \      return 0;\n    else\n      return fib1(n-1) + fib1(n-2) + fib1(n-3) + fib1(n-4);\n\
    \  }\n  return fib1(n);\n}\n", "  let a = 0; let b = 0; let c = 0;\n  if(n===0){\n\
    \    return 0;\n  }\n  if(n===1){\n    return 1;\n  }\n  if(n===2){\n    return\
    \ 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===4){\n    return 4;\n  }\n\
    \  a=fib4(n-1); b=fib4(n-2); c=fib4(n-3); return a+b+c+fib4(n-4);\n}\n", "  if\
    \ (n === 0) return 0;\n  if (n === 1) return 1;\n  if (n === 2) return 2;\n  if\
    \ (n === 3) return 0;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\n", "  if (n===0){\n    return 0;\n  }\n  if (n===1){\n    return 1;\n\
    \  }\n  if (n===2){\n    return 2;\n  }\n  if (n===3){\n    return 0;\n  }\n \
    \ return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "    var arr = [0,1,2,2,4,5,7,7,10,14,24,35,50];\n\
    \    return arr[n-1];\n}\n", "\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\
    \tif (n == 2) return 2;\n\tif (n == 3) return 0;\n\treturn fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n", "\tif (n < 1){\n\t\tthrow \"Error : fib4() argument\
    \ must be a positive integer\";\n\t}\n\tlet fib = 0;\n\tlet temp = 1;\n\tfor (let\
    \ i = 2; i <= n; i++){\n\t\tfib = fib + temp;\n\t\ttemp = temp * i;\n\t}\n\treturn\
    \ fib;\n}\n", "    \n    if(n==0){\n        \n        return 0;\n    }\n    \n\
    \    \n    if(n==1){\n        \n        return 1;\n    }\n    \n    \n    if(n==2){\n\
    \        \n        return 2;\n    }\n    \n    \n    if(n==3){\n        \n   \
    \     return 0;\n    }\n    \n    \n    if(n>3){\n        \n        return fib4(4)\
    \ + fib4(3) + fib2(2);\n    }\n}\n", "\tif(n==0){return 0;}\n\tif(n==1){return\
    \ 1;}\n\tif(n==2){return 2;}\n\tif(n==3){return 0;}\n\tif(n==4){return 0;}\n\t\
    return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n-1);\n}\n", "    var fib4num\
    \ = 0;\n    for (var i = 1; i <= n; i++) {\n        fib4num = fib4num + i;\n \
    \   }\n    return fib4num;\n}\n", "  var fib4 = n\n  for(var i = 5; i < 10; i++)\
    \ {\n    fib4 = fib4 * i + fib4\n  }\n  return fib4\n}\n", "  if(n==0)\n    return\
    \ 0;\n  else if(n==1)\n    return 1;\n  else if(n==2)\n    return 2;\n  else if(n==3)\n\
    \    return 0;\n  else if(n<0)\n    return -1;\n  else\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n</cell>\n<cell>\nfib4(6)\n</cell>\n<text>\nProblem 2.2\n\n</text>\n<text>\n\
    The Fibonacci number sequence is defined by the formula $$F_n = F_n - F_{n-1}.\
    \ $$ The first two terms are $F_0 = 0$ and $F_1 = 1$, while the third term is\
    \ $F_2 = 0$ and so on. In general, $F_n$ satisfies the equation $$F_n = \\sum{i=0}^n\
    \ F_i$$\n\n\n</text>\n<cell>", "  if (n<=0){\n    return 0;\n  }\n  if (n<=1){\n\
    \    return 1;\n  }\n  return fib4(n-2) + fib4(n-3) + fib4(n-4) + fib4(n-5);\n\
    }\n", "  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n",
  "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n\
    \    if (n == 3) return 1;\n    if (n == 4) return 4;\n    return fib4(n-2) +\
    \ fib4(n-3) + fib4(n-4) + fib4(n-5);\n}", "  var a = 0,\n      b = 0,\n      c\
    \ = 1;\n  for (var i = 1; i <= n; i++)\n  {\n    var m = c*(i-1);\n    a = b;\n\
    \    b = c + m;\n    c = a;\n  }\n  return b;\n}\n", "    let fib4_seq = 0;\n\
    \    for(let i = 0; i < n; i++){\n        fib4_seq += (fib4(n-i-1) + fib4(n-i-2)\
    \ + fib4(n-i-3)) + fib4(n-i-4);\n    }\n    return fib4_seq;\n}\n", "\tvar fib\
    \ = 0;\n\tfor(var i = 4; i >= 1; i--){\n\t\tfib = fib + i;\n\t}\n\treturn fib;\n\
    }\n", "    if (n === 0) return 0;\n    if (n === 1) return 1;\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "\tif(n<1){\n\t\treturn n;\n\t}\n\t\
    let prev1 = fib4(n - 1);\n\tlet prev2 = fib4(n - 2);\n\tlet prev3 = fib4(n - 3);\n\
    \tlet prev4 = fib4(n - 4);\n\treturn prev1 + prev2 + prev3 + prev4;\n}", "   \
    \ return fib4_rec(n, 0, 0);\n}\n", "\tif(n===0) return 0;\n\tif(n===1) return\
    \ 1;\n\tif(n===2) return 2;\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n", "\tif (n === 0 || n === 1) {\n\t\treturn 0;\n\t}\n\telse if (n === 2) {\n\
    \t\treturn 2;\n\t}\n\telse {\n\t\treturn fib4(n - 4) + fib4(n - 3) + fib4(n -\
    \ 2) + fib4(n - 1);\n\t}\n}\n", "\tif (n === 0) {\n\t\treturn 0;\n\t}else if (n\
    \ === 1) {\n\t\treturn 1;\n\t}else if (n === 2) {\n\t\treturn 2;\n\t}else if (n\
    \ === 3) {\n\t\treturn 3;\n\t}else if (n === 4) {\n\t\treturn 4;\n\t}else{\n\t\
    \treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\t}\n}\n", " \
    \ if(n<=1){\n    return n;\n  }\n  return fib4(n - 4) + fib4(n - 3) + fib4(n -\
    \ 2) + fib4(n - 1);\n}", "  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\nvar arr = [1,2,3,4,5];\nvar index = arr.indexOf(3);\nvar result = fib4(index);",
  "\tif (n === 0){\n\t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 0;\n\t} else\
    \ if (n === 2) {\n\t\treturn 2;\n\t} else if (n === 3) {\n\t\treturn 0;\n\t} else\
    \ if (n === 4) {\n\t\treturn 0;\n\t} else if (n === 5) {\n\t\treturn 4;\n\t} else\
    \ if (n === 6) {\n\t\treturn 8;\n\t} else if (n === 7) {\n\t\treturn 14;\n\t}\n\
    }\n", "  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  if (n\
    \ <= 1){\n    return n\n  }\n  else{\n    let result = 0\n    for (let i = 0;\
    \ i <= n; i++){\n      result += fib4(i-1) + fib4(i-2) + fib4(i-3) + fib4(i-4)\n\
    \    }\n    return result\n  }\n}", "  if (n <= 1) return 0;\n  if (n == 2) return\
    \ 1;\n  if (n == 3) return 2;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}\n", "  if(n === 0)\n    return 0;\n  if(n === 1)\n    return\
    \ 1;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", " \
    \ return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n)\
    \ {\n  return fib4(n-4);\n}\n\nvar fib4 = function(n) {\n  return fib4(n-4);\n\
    }\n\nvar fib4 = function(n) {\n  return fib", "    if(n > 4) {\n        return\
    \ fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n    }\n    return n;\n\
    }\n", "  var arr = [];\n  for(var i = 1; i <= n; i++){\n    arr.push((i * (i+1))\
    \ / 2);\n  }\n  return arr[n];\n}\n", "  let result = 0\n  for(let i = 0; i <\
    \ n; i++){\n    result += fib4(i+1)\n  }\n  return result\n}\n", "    if (n <=\
    \ 1){\n        return n\n    }\n    let arr = [0,1,2,3]\n    let firstIndex =\
    \ arr.indexOf(n-1)\n    let secondIndex = arr.indexOf(n-2)\n    let thirdIndex\
    \ = arr.indexOf(n-3)\n    let fourthIndex = arr.indexOf(n-4)\n    let sum = arr[n-1]\
    \ + arr[n-2] + arr[n-3] + arr[n-4]\n    let newArr = arr.slice(0, firstIndex).concat([sum])\n\
    \    newArr.push(newArr[arr.length-1] + arr[fourthIndex])\n    return newArr[newArr.length-1]\n\
    }\n</code>\n<|/ a |>\n<| a |>\nHere is my solution. \n<code>\nconst fib4 = (n)\
    \ => {\n    let arr = [0,1,2,3];\n    let i = arr.indexOf(n);\n    if(i==-1) {\n\
    \        return -1;\n    }\n    let j = arr[arr.length - 1];\n    while(j<n) {\n\
    \        i = arr.indexOf(n);\n        arr[arr.length-1] = j;\n        j = arr[i];\n\
    \        j++;\n    }\n    return j;\n}\n</code>\n<|/ a dscore=0 tags=javascript\
    \ |>\n<| a tags=javascript dscore=0 |>\nThis is the simplest possible solution.\
    \ No extra array needed.\n\n<code>", "  let result=1;\n  for(let i=0;i<=n;i++){\n\
    \    result+=fib4(i+1);\n  }\n  return result;\n}\n", "  if (n === 0) {\n    return\
    \ 0;\n  }\n  if (n === 4) {\n    return 4;\n  }\n  return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n}\n</cell>\n<text>\nFibonacci Number Series\n\
    A number $n$ is called a Fibonacci number if each of the numbers in the Fibonacci\
    \ sequence are either $0$ or $1$ with the exception that $n$ is one of the two\
    \ exceptionally large numbers; and $n$ is called a Fibonacci number if it is the\
    \ sum of two Fibonacci numbers.  For example, in the Fibonacci sequence $0, 1,\
    \ 1, 2, 3, 5, 8, 13, 21$ we can see that $8$ and $13$ are the only even Fibonacci\
    \ numbers, while $21$ is the largest even number in the sequence.\n\nThe first\
    \ few Fibonacci numbers are:\n\n0, 1, 1, 2, 3, 5, 8, 13, 21\nHere we describe\
    \ the recursive relationship between fibonacci numbers.  If $n$ is less than 3,\
    \ then we have two base cases: either $0$ or $1$ where we simply return the value\
    \ we calculated; or if $n$ is $3$, we simply return four to indicate that we have\
    \ reached the end of our recursive sequence.\n\nNow for Fibonacci numbers.  If\
    \ we have three or more numbers in the Fibonacci sequence, we recursively calculate\
    \ a fibonacci number by adding the numbers.  For each new fibonacci number, we\
    \ store the previous two numbers using the variable $a$ and $b$.  The base case\
    \ for our recursive function is when $n$ is $0$ or $1$.\n\n$$\n\\begin{align}\n\
    &fib_n(0) = 0\\\n&fib_n(1) = 1\\\n&fib_n(2) = 2\\\n&fib_n(3) = fib_n(2) + fib_n(3)\\\
    \n&fib_n(4) = fib_n(3) + fib_n(4)\\\n&fib_n(5) = fib_n(4) + fib_n(5)\\\n&fib_n(6)\
    \ = fib_n(5) + fib_n(6)\\\n&\\vdots \\\n&fib_n(m) = fib_n(m-1) + fib_n(m-2) +\
    \ fib_n(m-3) + fib_n(m-4)\n\\end{align}\n$$\n\nWe now have a recursive definition\
    \ for computing the $n$th element of the Fibonacci sequence.  In a recursive function,\
    \ the base case is when a condition is met when the function is evaluated, for\
    \ example, when ", "\tif(n===0){\n\t\treturn 0;\n\t}\n\tif(n===1 || n===2){\n\t\
    \treturn 1;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4);\n}\n", "  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    }\n", "  if (n == 0 || n == 1)\n    return 0;\n\n  let res = 0;\n  for (let i\
    \ = 1; true; i++){\n    if (n%i == 0)\n      res = (res + i)\n    if (i == 4)\n\
    \      break;\n  }\n  return res;\n}\n", "  if (n < 0 || n > 100) {\n    throw\
    \ Error('fib4 only accepts numbers between 0 and 100');\n  }\n  if (n === 0) return\
    \ 0;\n  if (n === 1) return 0;\n  if (n === 2) return 2;\n  if (n === 3) return\
    \ 0;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", " \
    \   if (n===0) return 0;\n    else if (n===1) return 1;\n    else return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n</cell>\n<cell>", "  return n<4 ? n : fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n", "   if(n === 0){\n      return 0\n   }\n   if(n === 1){\n      return 0\n\
    \   }\n   if(n === 2){\n      return 2\n   }\n   if(n === 3){\n      return 0\n\
    \   }\n   return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n}\n   ", "\tif\
    \ (n === 0){\n\t\treturn 0;\n\t}\n\tif (n === 1){\n\t\treturn 1;\n\t}\n\tif (n\
    \ === 2){\n\t\treturn 2;\n\t}\n\tif (n === 3){\n\t\treturn 0;\n\t}\n\tif (n ===\
    \ 4){\n\t\treturn 1;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4);\n}", "   if (n <= 1){\n      return 1;\n   }\n   return fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", "    if (n === 0){\n\
    \        return 0\n    }\n    if (n === 1){\n        return 1\n    }\n    if (n\
    \ === 2){\n        return 2\n    }\n    if (n === 3){\n        return 0\n    }\n\
    \    if (n === 4){\n        return 1\n    }\n    return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "\tif(n<0) return NaN;\n\tif(n==0 || n==1)\
    \ return 0;\n\treturn fib4(--n) + fib4(--n);\n}", "    if (n == 0)\n        return\
    \ 0;\n    if (n == 1)\n        return 1;\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n}", "    console.log(\"fib 4\");\n    if (n===0){\n\
    \        return 0\n    }\n    if (n===1){\n        return 1\n    }\n    if (n===2){\n\
    \        return 2\n    }\n    return fib4(n - 3) + fib4(n - 4) + fib4(n - 5);\
    \ \n}", "\tif(n===0) return 0;\n\tif(n===1) return 1;\n\treturn fib4(n - 4) +\
    \ fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", "  return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  var fib4num = 0;\n  fib4num += fib4(n-1);\n\
    \  fib4num += fib4(n-2);\n  fib4num += fib4(n-3);\n  fib4num += fib4(n-4);\n \
    \ return fib4num;\n}\n", "    let fib4arr=[];\n    if(n>0){\n        fib4arr.push(n);\n\
    \        fib4arr.push(fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4));\n    }\n    return\
    \ fib4arr[0];\n}", "   var fib4Val = 0;\n   if(n<=0){\n      fib4Val = 0;\n  \
    \ }\n   else if(n==1){\n      fib4Val = 0;\n   }\n   else if(n==2){\n      fib4Val\
    \ = 2;\n   }\n   else if(n==3){\n      fib4Val = 0;\n   }\n   else{\n      fib4Val\
    \ = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n   }\n   return fib4Val;\n\
    }\n", "    var current=0;\n    var sum=0;\n    for(var i=0;i<n;i++){\n       current=sum;\n\
    \       sum=sum+current;\n    }\n    return sum;\n}\n\nvar fib4numberSequence\
    \ = [0, 0, 0, 0, 0, 2, 0, 0, 4, 8, 0, 7, 14, 0];\n", "    fib4Sum = 0;\n    fib4Count\
    \ = 0;\n    for ( var i = 0; i <= n; i++){\n        if (i == 0){\n           \
    \ fib4Sum = 0;\n        }\n        else if (i > 0){\n            fib4Sum = fib4Sum\
    \ + i;\n        }\n    }\n    return fib4Sum;\n}", "    if(n <= 3)\n        return\
    \ 0\n    if(n <= 6)\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) + fib4(n-5) + fib4(n-6)\n\
    }\n", "  let last = 0;\n  let next = 1;\n  let rec = fib4(n-1);\n  for(let i =\
    \ 2; i <= n; i++){\n    let res = rec + next;\n    next = last;\n    last = res;\n\
    \  }\n  return last;\n}\n", "  if (n === 0) return 0;\n  if (n === 1) return 1;\n\
    \  if (n === 2) return 2;\n  if (n === 3) return 0;\n  return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n", "    var i=0;\n    while(i<=n){\n        i=i+1;\n\
    \    }\n    return i;\n}\n", "    // your code here\n    console.log(n);\n}\n\
    </cell>\n<text>\nProblem 7\nGiven the integer $n$, return true if $n$ is a power\
    \ of two; otherwise, return false.\n\n\n</text>\n<cell>", "  if (n == 0)\n   \
    \ return 0;\n  if (n == 1)\n    return 1;\n  return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n}\n", "\tif (n<0) return -1;\n\telse if (n==0)\
    \ return 0;\n\telse if (n==1) return 1;\n\telse if (n==2) return 2;\n\telse if\
    \ (n<3) return fib4(n-1) + fib4(n-2);\n\telse return fib4(n-3) + fib4(n-4) + fib4(n-5);\n\
    }\n", "\tif(n<0){\n\t\treturn 0;\n\t}\n\tif(n<=2){\n\t\treturn 0;\n\t}\n\treturn\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\nvar sum=0;\nfor(var\
    \ i=1;i<=20;i++){\n\tsum+=fib4(i);\n}", "\tif(n == 0) return 0;\n\tif(n == 1)\
    \ return 1;\n\tif(n == 2) return 2;\n\tif(n == 3) return 0;\n\treturn fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "  return n < 3 ? n : fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3)+ fib4(n - 4);\n}", "\tvar result= 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tresult +=(i * i + (i-1) * i-1 * i);\n\t}\n\treturn\
    \ result;\n}\n", "\tif (n < 4)\n\t\treturn n;\n\treturn fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    var fib=[];\n    if(n<4){\n    \
    \    fib[0]=0;\n        fib[1]=0;\n        fib[2]=2;\n        fib[3]=0;\n    }\n\
    \    for(var i=4;i<n;i++){\n        fib[i]=fib[i-1]+fib[i-2]+fib[i-3]+fib[i-4];\n\
    \    }\n    return fib[n-1];\n}", "    if (n === 0){\n      return 0;\n    }\n\
    \    if (n === 1){\n      return 1;\n    }\n    if (n === 2){\n      return 2;\n\
    \    }\n    if (n === 3){\n      return 0;\n    }\n    if (n === 4){\n      return\
    \ 1;\n    }\n    if (n === 5){\n      return 2;\n    }\n    if (n === 6){\n  \
    \    return 3;\n    }\n    if (n === 7){\n      return 4;\n    }\n    if (n ===\
    \ 8){\n      return 5;\n    }\n    if (n === 9){\n      return 6;\n    }\n   \
    \ if (n === 10){\n      return 7;\n    }\n    if (n === 11){\n      return 8;\n\
    \    }\n    if (n === 12){\n      return 9;\n    }\n    if (n === 13){\n     \
    \ return 10;\n    }\n    if (n === 14){\n      return 11;\n    }\n    if (n ===\
    \ 15){\n      return 12;\n    }\n    if (n === 16){\n      return 13;\n    }\n\
    \    if (n === 17){\n      return 14;\n    }\n    if (n === 18){\n      return\
    \ 15;\n    }\n    if (n === 19){\n      return 16;\n    }\n    if (n === 20){\n\
    \      return 17;\n    }\n    if (n === 21){\n      return 18;\n    }\n    if\
    \ (n === 22){\n      return 19;\n    }\n    if (n === 23){\n      return 20;\n\
    \    }\n    if (n === 24){\n      return 21;\n    }\n    if (n === 25){\n    \
    \  return 22;\n    }\n    if (n === 26){\n      return 23;\n    }\n    if (n ===\
    \ 27){\n      return 24;\n    }\n    if (n === 28){\n      return 25;\n    }\n\
    \    if (n === 29){\n      return 26;\n    }\n    if (n === 30){\n      return\
    \ 27;\n    }\n    if (n === 31){\n      return 28;\n    }\n    if (n === 32){\n\
    \      return 29;\n    }\n    if (n === 33){\n      return 30;\n    }\n    if\
    \ (n === 34){\n      return 31;\n    }\n    if (n === 35){\n      return 32;\n\
    \    }\n    if (n === 36){\n      return 33;\n    }\n    if (n === 37){\n    \
    \  return 34;\n    }\n    if (n === 38){\n      return 35;\n    }\n    if (n ===\
    \ 39){\n      return 36;\n    }\n    if (n === 40){\n      return 37;\n    }\n\
    \    if (n === 41){\n      return 38;\n    }\n    if (n === 42){\n      return\
    \ 39;\n    }\n    if (n === 43){\n      return 40;\n    }\n    if (n === 44){\n\
    \      return 41;\n    }\n    if (n === 45){\n      return 42;\n    }\n    if\
    \ (n === 46){\n      return 43;\n    }\n    if (n === 47){\n      return 44;\n\
    \    }\n    if (n === 48){", "    let fib = 0;\n    for (let i = 0; i < n; i++){\n\
    \        fib += fib4(i+1);\n    }\n    return fib;\n}\n", "\tvar arr = [];\n\t\
    arr.push(0);\n\tarr.push(0);\n\tarr.push(2);\n\tarr.push(0);\n\tarr.push(arr[n-1]\
    \ + arr[n-2] + arr[n-3] + arr[n-4]);\n\treturn arr[n];\n}\n", "  let a=0,b=1,c=1,d=1;\n\
    \  while (n>=4){\n    console.log(\"a: \"+a+\" b: \"+b+\" c: \"+c+\" d: \"+d);\n\
    \    a=a+b;\n    b=c+d;\n    c=b-a;\n    d=b-c;\n    n=n-4\n  }\n  return a+b+c+d\n\
    }", "    // Your code here\n}\n</cell>\n<text>\nProblem 7\nA geometric progression\
    \ is a series that starts with 0 up to some positive even number and ends with\
    \ some positive odd number.  For example, a geometric progression with period\
    \ 3 ends with the following numbers: 0,1,2,8,6,4,12,3,10,9.\nWrite a function\
    \ that computes the nth term of the geometric progression.  For example, if the\
    \ n is 2 then your function should return 12.\n\nHere are some examples:\n\nExample1:\n\
    Input: n = 4\nOutput: 12\nExplanation: The geometric progression starts with 0,\
    \ ends with 4, and each subsequent term is multiplied by 2.\nExample2:\nInput:\
    \ n = 8\nOutput: 144\nExplanation: The geometric progression starts with 0, ends\
    \ with 8, each subsequent term is multiplied by 4.\nExample3:\nInput: n = 9\n\
    Output: 720\nExplanation: The geometric progression starts with 0, ends with 9,\
    \ and each subsequent term is multiplied by 6.\n\n</text>\n<cell>", "    let a\
    \ = 0;\n    for(let i = 1; i<n; i++){\n        a = a + i;\n    }\n    return a;\n\
    }", "  let currentResult=0;\n  let nextValue=1;\n  for(let i=0;i<n;i++){\n   \
    \ currentResult+=nextValue;\n    nextValue+=4;\n  }\n  return currentResult;\n\
    }\n", "    if (n<=0){\n        return 0\n    }\n    if (n==1){\n        return\
    \ 1\n    }\n    if (n==2){\n        return 2\n    }\n    return fib4(n - 4) +\
    \ fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n}\nvar fib4 = (n)=>{\n    if (n<=0){\n\
    \        return 0\n    }\n    if (n==1){\n        return 1\n    }\n    if (n==2){\n\
    \        return 2\n    }\n    return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) +\
    \ fib4(n - 1)\n}", "\tvar ret = 0;\n\twhile(n>0){\n\t\tret = fib4_fib(n);\n\t\t\
    n = fib4_fib(n-2);\n\t}\n\treturn ret;\n}", "    if (n < 4){\n        return 0;\n\
    \    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "\tif\
    \ (n <= 0) return 0;\n\tif (n === 1) return 1;\n\tif (n === 2) return 2;\n\tif\
    \ (n === 3) return 0;\n\tif (n === 4) return 0;\n\treturn fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n", "    if(n==0)\n        return 0;\n    if(n==1)\n\
    \        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return\
    \ 0;\n    if(fib4[n]==undefined)\n        fib4[n]=fib4(fib4[n-1])+fib4(fib4[n-2])+fib4(fib4[n-3])+fib4(fib4[n-4]);\n\
    \    return fib4[n];\n}\n</cell>\n<cell>\n%%html\n<iframe width=\"100%\" height=\"\
    300px\" src=\"https://interactive-examples.mdn.mozilla.net/?q=interactive%20examples%20python&type=interactive\"\
    >\n</iframe>\n</cell>\n<cell>\n#Question 7\n# Your task is to define a function\
    \ to return the sum of the elements of a list.  For example,\n# >>> sum_list([1,2,3])\n\
    # 6\n# >>> sum_list([3,2,1])\n# 6\n# >>> sum_list([9,5,2])\n# 17\n# >>> sum_list([1,4,7,3,5,8])\n\
    # 21\n#\n# Your function should be written in two ways.  First, using recursion:\n\
    # >>> def sum_list(list):\n# ...     if not list or not list:\n# ...         return\
    \ 0\n# ...     else:\n# ...         return list[0]+sum_list(list[1:])\n# ...\n\
    # Second, using iteration.  Hint: think about what happens when you increment\
    \ a counter in a loop.\n# >>> def sum_list(list):\n# ...     sum=0\n# ...    \
    \ for item in list:\n# ...         sum+=item\n# ...     return sum\n# ...\n# HINT:\
    \ The test if list or not list won't work; if it doesn't have the right length,\
    \ it'll throw an error.\n# Test your function using these examples:\n# >>> sum_list([1,2,3])\n\
    # 6\n# >>> sum_list([3,2,1])\n# 6\n# >>> sum_list([9,5,2])\n# 17\n# >>> sum_list([1,4,7,3,5,8])\n\
    # 21\n#\n# You can either use recursion or iteration to solve this problem; your\
    \ choice.  However, try to stick to recursion.\n#\n# If you can't solve this problem\
    \ with recursion, you should use iteration.  If you need help with this, please\
    \ contact me.\n#\n# HINT: Use another list that holds the sum.  If you have a\
    \ list of numbers, you can add the numbers to a list and return the sum.\n#\n\
    # >>> a=[1,2,3]\n# >>> b=[3,2,1]\n# >>> c=a+b\n# >>> print c\n# [3, 2, 4, 1, 6,\
    \ 3, ", "\tvar n4 = n*4;\n\tif (n4 == 0) {\n\t\treturn 0;\n\t}\n\tif (n4 == 1)\
    \ {\n\t\treturn 1;\n\t}\n\tif (n4 == 2) {\n\t\treturn 2;\n\t}\n\tif (n4 == 3)\
    \ {\n\t\treturn 0;\n\t}\n\treturn fib4(n4-1) + fib4(n4-2) + fib4(n4-3) + fib4(n4-4);\n\
    }\n", "    if(n<0) return null;\n    if(n<2) return n;\n    return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "\tif (n < 0 || n > 8) return 0;\n\
    \t\n\tlet fib4Num = 0;\n\tlet fib4NumTemp = 0;\n\tfor (let i = n; i>0; i--){\n\
    \t\tfib4NumTemp = fib4Num;\n\t\tfib4Num = fib4NumTemp + fib4NumTemp + fib4NumTemp\
    \ + fib4Num;\n\t}\n\treturn fib4Num;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

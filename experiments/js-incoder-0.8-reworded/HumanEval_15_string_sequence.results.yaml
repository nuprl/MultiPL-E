language: js
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++)\n\
    \    s+=String(i);\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpolujwdc1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpolujwdc1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n < 0) return \"0\";\n\
    \  var s = \"\";\n  while(n--) s += \" \" + (n + 1); // If using ES6 string templates,\
    \ may want to do `s += ' ' + (n + 1)`\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmprc_zgpnt.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprc_zgpnt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var i = -1;\n  return function\
    \ (){\n    var j = (i+1)*((n - (i+1))*1);\n    return i + \"+\" + j + \" ... \"\
    \ + (i + n - 1) + \" \" + (i + n) + \" \" + (i - n);\n  }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpi9ok8d40.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi9ok8d40.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var sequence = \"\";\n  for(var\
    \ i=0;i<=n;i++) sequence+=i;\n  return sequence;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0123'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpyfqrumo4.js:18:10)\n \
    \   at Object.<anonymous> (/tmp/tmpyfqrumo4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0123',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array(n+1).join(0).slice(-n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmps_u66lbj.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps_u66lbj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str=\"\";\n  for(var i=0;\
    \ i<n; i++)\n    str += (i == 0 ? \"\" : str+\" \")+i;\n  return str;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp4y370ekt.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4y370ekt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpcw_tmedw.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcw_tmedw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i\
    \ = 0; i <= n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0123'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmptmbqhb0d.js:20:10)\n \
    \   at Object.<anonymous> (/tmp/tmptmbqhb0d.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0123',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(new Array(n+1),\
    \ function(){return ++this.toString()}.join(''));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp2fiaq_vz.js:7\n    return Array.from(new Array(n+1), function(){return\
    \ ++this.toString()}.join(''));\n                                            \
    \                               ^\n\nTypeError: (intermediate value).join is not\
    \ a function\n    at string_sequence (/tmp/tmp2fiaq_vz.js:7:76)\n    at test (/tmp/tmp2fiaq_vz.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2fiaq_vz.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s = \"\";\n    for(var\
    \ i=0;i<n;i++){\n        s += \" \" + i;\n    }\n    return s;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpcuto07wl.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcuto07wl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    if(n > 0){\n        return\
    \ string_delimited_by_spaces(0, n);\n    }else{\n        return \"0\";\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg6zgcn2a.js:8\n        return string_delimited_by_spaces(0, n);\n\
    \        ^\n\nReferenceError: string_delimited_by_spaces is not defined\n    at\
    \ string_sequence (/tmp/tmpg6zgcn2a.js:8:9)\n    at test (/tmp/tmpg6zgcn2a.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmpg6zgcn2a.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  for(var\
    \ i=n; i--;){\n    str += i+1;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpctxkxw3n.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpctxkxw3n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return [].slice.call(new Array(n),\
    \ 1).join(\" \");\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpwaeu6fif.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwaeu6fif.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for (var\
    \ i = 0; i < n; i++) {\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpra_yu1rm.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpra_yu1rm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return sequence_generator(n,function(i){\n\
    \    return string(i);\n  })\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwgp0k7g7.js:7\n  return sequence_generator(n,function(i){\n  ^\n\
    \nReferenceError: sequence_generator is not defined\n    at string_sequence (/tmp/tmpwgp0k7g7.js:7:3)\n\
    \    at test (/tmp/tmpwgp0k7g7.js:16:20)\n    at Object.<anonymous> (/tmp/tmpwgp0k7g7.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return new Array(n+1).join(0).substring(1)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpbwve2c0w.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbwve2c0w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\",\n      i=0;\n\
    \  while (i<n){\n    str += i;\n    i++;\n  }\n  return str;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp1iiovnvz.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1iiovnvz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var res = \"\"\n  for(var\
    \ i=0 ; i<n ; i++)\n    res += \" \" + i\n  return res\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpr69gl68t.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr69gl68t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\tfor(var i=0;\
    \ i<n; i++) s += \" \"+i.toString();\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp09at1h1p.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp09at1h1p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n < 1){\n    return 0;\n\
    \  }\n  if(n < 10){\n    return n;\n  }\n  if(n < Math.pow(10, n-1)){\n    return\
    \ String(parseInt(n / Math.pow(10, n-1), 10));\n  }\n  else{\n    var s = '';\n\
    \    while(n >= Math.pow(10, n-1)){\n      s += String(parseInt(n / Math.pow(10,\
    \ n-1), 10));\n      n--;\n    }\n    while(n > 0){\n      s += ' '+String(parseInt(n\
    \ / Math.pow(10, n-1), 10));\n      n--;\n    }\n    return s;\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmprt32ui8c.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprt32ui8c.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar sequence = \"\";\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tsequence += i + \" \";\n\t}\n\treturn sequence;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpu6u_d5jv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu6u_d5jv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var ret = \"\";\n    for(var\
    \ i=0; i<n; i++){\n        ret += String(i);\n    }\n    return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpt4i1od2k.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt4i1od2k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = '';\n  for(var i =\
    \ 0; i < n; i++){ s += i.toString(); }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp55yf3wsh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp55yf3wsh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from(new Array(n+1),\
    \ (v, i) => i).map(i => String(i)).join(' ');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977793
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return [...Array(n+1).keys()].join('\
    \ ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn (Array(n+1).join(0)).split('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmp2scs97hg.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp2scs97hg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = [];\n  for(var\
    \ i=0; i<n; i++){\n    result.push(i);\n  }\n  return result.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpljsfv9rb.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpljsfv9rb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn (Array(n+1).join(\"\
    0\")+1).split(\" \").map(function(x) { return parseInt(x, 10); });\n}\nexports.string_sequence\
    \ = string_sequence;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmp___0izlo.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp___0izlo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn array_to_string([n].concat(array_from_string([\"\
    0\",string_sequence(n-1)])));\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpueqfdszs.js:7\n\treturn array_to_string([n].concat(array_from_string([\"\
    0\",string_sequence(n-1)])));\n\t^\n\nReferenceError: array_to_string is not defined\n\
    \    at string_sequence (/tmp/tmpueqfdszs.js:7:2)\n    at test (/tmp/tmpueqfdszs.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmpueqfdszs.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array(1 + n).join(0).split('').map(function(e,\
    \ i){ return i ? String(i) : ''; });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpuqghtf2y.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqghtf2y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = n + '';\n\tvar str\
    \ = str.split(\"\");\n\tstr = str.join(\",\");\n\treturn str;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmprc7ahav4.js:19:10)\n \
    \   at Object.<anonymous> (/tmp/tmprc7ahav4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = '';\n  for(var\
    \ i=0; i< n; i++){\n    result+= i.toString() + ' ';\n  }\n  return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp66jk5c4c.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp66jk5c4c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i\
    \ = 0; i <= n; i++){\n    if(i > 0) s += \" \";\n    s += String(i);\n  }\n  return\
    \ s;\n}\n</code></pre>\n        </section>\n\n        <section>\n            <h2>The\
    \ Hacker's Dictionary</h2>\n        </section>\n\n        <section>\n        \
    \    <section>\n                <h2>Dictionaries</h2>\n                <ul>\n\
    \                    <li>Like objects in Javascript, but with added functionality</li>\n\
    \                    <li>Can store arbitrary data types</li>\n               \
    \     <li>Can store functions</li>\n                    <li>Can be used as an\
    \ associative array</li>\n                </ul>\n            </section>\n\n  \
    \          <section>\n                <h2>Dictionaries Like Objects in Javascript</h2>\n\
    \                <p>The same data structure in another language</p>\n        \
    \    </section>\n\n            <section>\n                <h3>Javascript Dictionaries</h3>\n\
    \                <pre><code class=\"javascript\">var student = {\n  firstName:\
    \ \"Chris\",\n  lastName: \"Smith\",\n  age: 28,\n  school: \"Harvard\"\n};\n\
    </code></pre>\n            </section>\n\n            <section>\n             \
    \   <h3>Javascript Dictionaries with Functional Data</h3>\n                <pre><code\
    \ class=\"javascript\">var student = {\n  firstName: \"Chris\",\n  lastName: \"\
    Smith\",\n  age: 28,\n  school: \"Harvard\"\n};\n\nstudent.getFullName = function(){\n\
    \  return this.firstName + \" \" + this.lastName;\n};\n</code></pre>\n       \
    \     </section>\n\n            <section>\n                <h3>Javascript Dictionaries\
    \ with Functional Data</h3>\n                <pre><code class=\"javascript\">student.getFullName\
    \ = function(){\n  return this.firstName + \" \" + this.lastName;\n};\n\nvar student2\
    \ = student;\nstudent2.age = 10;\n</code></pre>\n            </section>\n\n  \
    \          <section>\n                <h3>Javascript Dictionaries with Functional\
    \ Data</h3>\n                <pre><code class=\"javascript\">student.getFullName\
    \ = function(){\n  return this.firstName + \" \" + this.lastName;\n};\n\nvar student2\
    \ = student;\nstudent2.age = 10;\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpjpjcn4gd.js:14\n</code></pre>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  let result = \"\";\n  while(n--){\n\
    \    result += n + \"0 \";\n  }\n  return result.trim().replace(/\\s+$/,\"\");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp48hugsj0.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp48hugsj0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var ret=\"\";\n  for(var i=0;\
    \ i<n; i++){\n    ret+=i;\n  }\n  return ret;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpt8ydiqoe.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt8ydiqoe.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = '';\n  for(var\
    \ i = 0; i<n; i++){\n    result += ' ' + i;\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpu2wccub7.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu2wccub7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = '';\n\tfor(var i=0;\
    \ i<n; i++)\n\t\tstr += (i===0) ? '' : ' ' + (i+1);\n\treturn str;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpa4kjs5iz.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa4kjs5iz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array(n+1).join(\"\
    0\")\n}\n\n},{}],33:[function(require,module,exports){\nmodule.exports = {\n \
    \ rtrim : require('./rtrim'),\n  ltrim : require('./ltrim'),\n  trim : require('./trim'),\n\
    \  escape : require('./escape'),\n  unescape : require('./unescape'),\n  replace\
    \ : require('./replace'),\n  split : require('./split'),\n  split : require('./split'),\n\
    \  join: require('./join'),\n  reverse : require('./reverse'),\n  trim : require('./trim'),\n\
    \  slice : require('./slice'),\n  slice : require('./slice'),\n  splice: require('./splice'),\n\
    \  splice: require('./splice'),\n  sort : require('./sort'),\n  sort : require('./sort'),\n\
    \  reverse : require('./reverse'),\n  reverse: require('./reverse'),\n  split\
    \ : require('./split'),\n  split : require('./split'),\n  join : require('./join'),\n\
    \  join : require('./join'),\n  reverse : require('./reverse'),\n  reverse: require('./reverse'),\n\
    \  trim : require('./trim'),\n  trim : require('./trim'),\n  slice : require('./slice'),\n\
    \  slice : require('./slice'),\n  splice : require('./splice'),\n  splice : require('./splice'),\n\
    \  toLower: require('./to-lower'),\n  toLower: require('./to-lower'),\n  toUpper:\
    \ require('./to-upper'),\n  toUpper: require('./to-upper'),\n  toTitle : require('./to-title'),\n\
    \  toTitle : require('./to-title'),\n  toLower : require('./to-lower'),\n  toLower\
    \ : require('./to-lower'),\n  toUpper : require('./to-upper'),\n  toUpper : require('./to-upper'),\n\
    \  toTitle: require('./to-title'),\n  toTitle: require('./to-title'),\n  toLower:\
    \ require('./to-lower'),\n  toLower: require('./to-lower'),\n  toUpper: require('./to-upper'),\n\
    \  toUpper: require('./to-upper'),\n  toTitle : require('./to-title'),\n  toTitle:\
    \ require('./to-title'),\n  toLower: require('./to-lower'),\n  toLower: require('./to-lower'),\n\
    \  toUpper: require('./to-upper'),\n  toUpper: require('./to-upper'),\n  toTitle:\
    \ require('./to-title'),\n  toTitle: require('./to-title'),\n  toLower: require('./to-lower'),\n\
    \  toLower: require('./to-lower'),\n  toUpper: require('./to-upper'),\n  toUpper:\
    \ require('./to-upper'),\n  \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp5ejachl1.js:10\n},{}],33:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array(1 + n).join(0).split('').map(String).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpo_eb4py6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_eb4py6.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return new Array(Math.max(0,n+1)).join('');\n\
    }\nexports.string_sequence = string_sequence;\n},{}],173:[function(require,module,exports){\n\
    'use strict';\n\nvar sprintf = require('../lib/sprintf');\nvar parsers = require('../lib/parsers');\n\
    var parsers_match = require('../lib/parsers_match');\nvar string_sequence = require('../lib/string_sequence');\n\
    var token = require('../lib/token');\nvar token_is = require('../lib/token_is');\n\
    var token_matches_all = require('../lib/token_matches_all');\nvar token_test =\
    \ require('../lib/token_test');\nvar Token = require('../lib/Token');\n\nvar TokenParsers\
    \ = require('./TokenParsers');\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpu_m03ut2.js:10\n},{}],173:[function(require,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = new String();\n  for(var\
    \ i=0; i<n; i++) s += i.toString();\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[String: '']\n\
    \nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpu_b9l0dt.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu_b9l0dt.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [String: ''],\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn Array(n + 1).join(0).split(\"\
    \ \");\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpqu5jquhz.js:16:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpqu5jquhz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\"\n  for(var\
    \ i=0; i <= n; i++){\n    str += i;\n    str += \" \"\n  }\n  return str\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmphbw75z0b.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphbw75z0b.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var a = []\n  for( ; n--;\
    \ ++a[n] = n+1 );\n  return a.join( \" \" );\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp0378_g4g.js:8\n  for( ; n--; ++a[n] = n+1 );\n              ^^^^^^\n\
    \nSyntaxError: Invalid left-hand side in assignment\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn new Array( (n==0)?0:(n+\"\
    \").split(\" \") ).join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpcypnwgnf.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcypnwgnf.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(new Array(Math.abs(n)),\
    \ (x, i) => i + \"\").reverse().join(\" \") + Array(n).join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5qarb_rt.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5qarb_rt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977793
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return sequence_of(array_of(n),\
    \ function(i){ return i.toString(); });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfnyo5ojq.js:7\n  return sequence_of(array_of(n), function(i){ return\
    \ i.toString(); });\n  ^\n\nReferenceError: sequence_of is not defined\n    at\
    \ string_sequence (/tmp/tmpfnyo5ojq.js:7:3)\n    at test (/tmp/tmpfnyo5ojq.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpfnyo5ojq.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = ''\n  for(var i\
    \ = 0; i<n; i++){\n    str += String(i)\n  }\n  return str\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpg0jheauv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg0jheauv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return function(s){\n    var\
    \ str = s.toString();\n    var result = '', i, l;\n    if(str.charAt(str.length-1)\
    \ == ' '){\n      result = str.substr(0, str.length-1);\n      str = str.substr(1,\
    \ str.length);\n    }\n    for(i = 0, l = str.length; i < l; i++){\n      result\
    \ = result + str.charAt(i);\n      if(i < l-1){\n        result = result + ' ';\n\
    \      }\n    }\n    if(n){\n      result = result.substr(0, n);\n    }\n    return\
    \ result;\n  };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpqvlux0qt.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqvlux0qt.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = ''\n  for(var\
    \ i=0; i<n; i++){\n    result += i\n  }\n  return result\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpc_89jx82.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc_89jx82.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var str = \"\",\n      \
    \  nstr = n + \"\";\n\n    while(n--){\n        str += nstr.charAt(n-1);\n   \
    \     nstr = nstr.substring(nstr.charAt(0)+1);\n    }\n    return str;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp0fea24ze.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0fea24ze.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  var i = 10;\n\
    \  while (i--){\n    s += (i+1);\n  }\n  return s.substr(0, n);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpbncdcksq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbncdcksq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\"\n  for(var i\
    \ = 0; i < n; i++){\n    s += i + \" \"\n  }\n  return s.slice(0,s.length-1)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpbk6kiske.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbk6kiske.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i\
    \ = 0;i < n;i++){\n    s += i + \" \";\n  }\n  return s;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpckjb1m00.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpckjb1m00.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s=\"\";\n    for(var\
    \ i=0;i<n;i++)\n        s+=i.toString();\n    return s;\n}\n</textarea>\n    \
    \        </xmp>\n            <script type=\"text/javascript\">\n             \
    \   var editor = CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n\
    \                        mode: 'text/x-mysql',\n                        lineNumbers:\
    \ true,\n                        indentWithTabs: true,\n                     \
    \   smartIndent: true,\n                        showCursorWhenSelecting: true\n\
    \                });\n            </script>\n        </dd>\n    </dl>\n\n    <p><strong>MIME\
    \ types defined:</strong> <code>text/x-mysql</code>.</p>\n\n</article>\n\n<script>\n\
    \    function toggle() {\n        Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function\
    \ (pre) {\n            var src = pre.getAttribute('data-src');\n            var\
    \ extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n            var language\
    \ = 'text/x-mysql';\n            if (extension) language = extension;\n      \
    \      var code = document.querySelector('code[data-language=\"' + language +\
    \ '\"]');\n            pre.textContent = '';\n            code.parentNode.insertBefore(pre,\
    \ code);\n            code.parentNode.removeChild(code);\n        });\n    }\n\
    </script>\n<img src='http://marijnhaverbeke.nl/uglifyjs?sourceMap=embedded' width='550'\
    \ height='281' style='float: right; margin: 10px 0 0 0;'>\n\n<footer style=\"\
    clear: both; padding: 30px; text-align: right;\">\n    Documentation generated\
    \ by <a href=\"https://github.com/jsdoc3/jsdoc\">JSDoc 3.2.0</a>\n</footer>\n\
    <script>\n    if (typeof prettyPrint === 'function') {\n        prettyPrint();\n\
    \    }\n</script>\n<script src=\"scripts/linenumber.js\"></script>\n</body>\n\
    </html>\n\n<|/ file filename=index.html source=github |>\n<| c |>\nThis is how\
    \ I see it:\n<|/ c |>\n<| a tags=javascript,codemirror,css,html |>\n<textarea\
    \ id=\"code\" name=\"code\">\n#mysql\nSELECT first_name, last_name FROM user WHERE\
    \ user_id=?\n\n#oracle\nselect first_name, last_name from user where user_id=?\n\
    </textarea>\n\n<pre data-src=\"http://marijnhaverbeke.nl/uglifyjs?sourceMap=embedded\"\
    \ style=\"display:none;\">\n#mysql\nSELECT first_name, last_name FROM user WHERE\
    \ user_id=?\n\n#oracle\nselect first_name, last_name from user where user_id=?\n\
    </pre>\n\n<xmp>\n<textarea id=\"code\" name=\"code\">\n#mysql\nSELECT first_name,\
    \ last_name FROM user WHERE user_id=?\n\n#oracle\nselect first_name, last_name\
    \ from user where user_id=?\n</textarea>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpn4hy4lvh.js:12\n</textarea>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.apply(null,\
    \ new Array(n)).map(Number.prototype.valueOf,0).join(\" \");\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpyln4azan.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyln4azan.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn array_to_string(n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpy5njq_qg.js:7\n\treturn array_to_string(n);\n\t^\n\nReferenceError:\
    \ array_to_string is not defined\n    at string_sequence (/tmp/tmpy5njq_qg.js:7:2)\n\
    \    at test (/tmp/tmpy5njq_qg.js:15:20)\n    at Object.<anonymous> (/tmp/tmpy5njq_qg.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = Array(Math.max(0,\
    \ n)).join(\" \");\n  for(var i=0;i<n;i++) str += \" \" + i;\n  return str;\n\
    }\n},{}],140:[function(_dereq_,module,exports){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmporagulpq.js:11\n},{}],140:[function(_dereq_,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var ret = \"\"\n    for(var\
    \ i=0; i<n; i++)\n        ret += i+1 + \" \"\n    return ret.slice(0, -2)\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpuuc7jw8o.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuuc7jw8o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array(Math.max(Math.ceil(Math.log10(n)),\
    \ 1)).join(0).replace(/^0*/, function(){\n        var array = [];\n        for\
    \ (var i = 0, length = arguments.length; i < length; i++){\n            array[i]\
    \ = arguments[i];\n        }\n        return array.join(\" \");\n    });\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpxl027sj1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxl027sj1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0 ',\n \
    \ expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return _.range(n).join(\"\
    \ \");\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpogp5gdy5.js:7\n  return _.range(n).join(\" \");\n  ^\n\nReferenceError:\
    \ _ is not defined\n    at string_sequence (/tmp/tmpogp5gdy5.js:7:3)\n    at test\
    \ (/tmp/tmpogp5gdy5.js:16:20)\n    at Object.<anonymous> (/tmp/tmpogp5gdy5.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn String(new Array(n\
    \ || 0).join(' '));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp7n2v_qdp.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7n2v_qdp.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tn = Math.max( 0, n );\n\t\
    n = Math.min( n, 10 );\n\tvar s = \"\";\n\tfor( var i=0; i<n; ++i ){ s += \"0\"\
    ;}\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpl88b16zb.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl88b16zb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  let s = \"\";\n  for(let i\
    \ = 0; i < n; ++i){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp4j0h1xvs.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4j0h1xvs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\"\n  for(var i\
    \ = 1; i <= n; i++){\n    s = s + \" \" + i\n  }\n  return s\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpihytu0ko.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpihytu0ko.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if (n == 0) return \"0\"\n\
    \  else return new Array(Number(n)).fill(\"0\").join(\" \")\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 0 0'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpgrfm7nrr.js:17:10)\n \
    \   at Object.<anonymous> (/tmp/tmpgrfm7nrr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 0 0',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp0xc3h704.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0xc3h704.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return function(i){\n    if(i\
    \ === 0 || i === n) \n      return i;\n    return i + \" \" + (n+i) + \" \" +\
    \ (n+(i+1));\n  };\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmp9jyne3lf.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9jyne3lf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn Array.from({length:\
    \ n}, (v, k) => k + 1).join(\" \")\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp9zhav9my.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9zhav9my.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = String(n);\n\tfor(var\
    \ i = str.length - 1; i > 0; i -= 1) str = \" \" + str.substr(0, i);\n\treturn\
    \ str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpniutu42j.js:17:10)\n \
    \   at Object.<anonymous> (/tmp/tmpniutu42j.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = \"\";\n\tfor(var\
    \ i=0; i<n; i++){ str += \"0\";}\n\treturn str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpqs686abx.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqs686abx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return '' + string_range(n).join('\
    \ ');\n}\nexports.string_sequence = string_sequence;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0i5wpx5c.js:7\n  return '' + string_range(n).join(' ');\n  ^\n\n\
    ReferenceError: string_range is not defined\n    at string_sequence (/tmp/tmp0i5wpx5c.js:7:3)\n\
    \    at test (/tmp/tmp0i5wpx5c.js:16:20)\n    at Object.<anonymous> (/tmp/tmp0i5wpx5c.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return array_to_string(array(range(n)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpe4mxswjz.js:7\n    return array_to_string(array(range(n)));\n \
    \   ^\n\nReferenceError: array_to_string is not defined\n    at string_sequence\
    \ (/tmp/tmpe4mxswjz.js:7:5)\n    at test (/tmp/tmpe4mxswjz.js:15:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpe4mxswjz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\tfor(var i=0;\
    \ i<n; i++){\n\t\ts += \"0\";\n\t}\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpw6cq7_8a.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw6cq7_8a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  for(var\
    \ i = 0; i < n; i++) str += String(i);\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmphb1987w1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphb1987w1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = String(n);\n  str\
    \ = (str.match(/./g) || []).join(' ');\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmplz015jvc.js:18:10)\n \
    \   at Object.<anonymous> (/tmp/tmplz015jvc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n < 0){\n    throw \"negative\
    \ range\"\n  }\n  if(n > 10000){\n    throw \"large range\"\n  }\n  var s=\"\"\
    \n  for(var i = 0; i < n; i++){\n    s+= (i+1) + \" \"\n  }\n  return s\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpfgeaoz5_.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfgeaoz5_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\"; //Initialize\
    \ str to the empty string\n  for(var i=0; i<n; i++){\n    str += i.toString();\
    \ //Append a space between the numbers and the string representation\n  }\n  return\
    \ str; //Return the string\n}\n</code></pre>\n        </section>\n        <section>\n\
    \            <h2>\n                Exploring Functions\n            </h2>\n  \
    \          <ul>\n                <li>\n                    Functions are self-referential,\
    \ meaning that you can refer to their definitions from other functions. \n   \
    \                 This is how we define our <code>sequence</code> function\n \
    \               </li>\n                <li>\n                    Python allows\
    \ for mutable variables inside functions. Variables in Python are defined using\
    \ the <code>=</code> sign.\n                    \n                </li>\n    \
    \        </ul>\n            <pre><code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwcm_fgpa.js:13\n</code></pre>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return  Array(n+1).join(\"\
    -\")\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5u5kif2t.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5u5kif2t.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n < 0) return \"\";\n \
    \ if(n === 0) return \"0\";\n  if(n === 1) return \"1\";\n  return \"0 \"+string_sequence(n-1).replace(/,/g,\
    \ \" \")+\" \"+string_sequence(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 0 1 1 0 1 1'\n\
    \nshould loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmprbg9614_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmprbg9614_.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 0 1 1 0\
    \ 1 1',\n  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.prototype.join.call(\
    \ Array(1+n), '');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5dov6_6m.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5dov6_6m.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = [];\n  for(var\
    \ i = 0; i <= n; i++){\n    result.push(i);\n  }\n  return result.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tlet seq = \"\";\n\tfor(let\
    \ i=0;i<n;i++){\n\t\tseq += i;\n\t}\n\treturn seq;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp6qwwqknt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6qwwqknt.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(!n) return \"\";\n  var\
    \ a = [];\n  for(var i=0;i<n;i++) a.push(i);\n  return a.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpjc2__wez.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjc2__wez.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array(n+1).join('0');\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpwhroi90y.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwhroi90y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s=\"\";\n    for(var\
    \ i=0;i<n;i++){\n        s+=i;\n    }\n    return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpx0k0v7p1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx0k0v7p1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  n = (n === undefined || n\
    \ === null) ? 0 : n\n  var s = \"\"\n  for(var i = 1; i <= n; i++){\n    s +=\
    \ i\n  }\n  return s\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpb444jcxg.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb444jcxg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn seq(n, 0, strLen(n)).join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxvzi5v2w.js:7\n\treturn seq(n, 0, strLen(n)).join(\" \");\n\t^\n\
    \nReferenceError: seq is not defined\n    at string_sequence (/tmp/tmpxvzi5v2w.js:7:2)\n\
    \    at test (/tmp/tmpxvzi5v2w.js:15:20)\n    at Object.<anonymous> (/tmp/tmpxvzi5v2w.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn new Array(n+1).join(\"\
    \ \");\n}\n\n\n<|/ file ext=.js |><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\
    \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\
    \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\
    \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\
    \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\
    \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\
    \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\
    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
    \t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmphjqiolkf.js:11\n<|/ file ext=.js |><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n   var str = \"\";\n   for(var\
    \ i = 0; i < n; i++){\n      str += i + \"\";\n   }\n   return str;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp6cts86gv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6cts86gv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from(Array(Math.abs(n)).keys(),\
    \ (_,i)=>i+1).join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp2bnsjzm8.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2bnsjzm8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = new String();\n  var\
    \ seq = new Array();\n  var start = 0;\n  var index = 0;\n  var done = false;\n\
    \  var tmp = 0;\n  while (!done && index < n) {\n    tmp = parseInt(Math.random()*10);\n\
    \    if (tmp < seq.length) {\n      if (seq[tmp] == null) {\n        seq[tmp]\
    \ = index;\n        done = true;\n      }\n    } else {\n      seq[tmp] = index;\n\
    \      done = true;\n    }\n    index ++;\n  }\n  while (!done) {\n    tmp = parseInt(Math.random()*10);\n\
    \    if (seq[tmp] == null) {\n      seq[tmp] = start;\n      start ++;\n    }\
    \ else {\n      seq[tmp] = start -1;\n    }\n    done =  true;\n  }\n  while (index\
    \ > 0) {\n    tmp = parseInt(Math.random()*10);\n    if (seq[tmp] == null) {\n\
    \      seq[tmp] = start -1;\n    } else {\n      seq[tmp] = start -2;\n      done\
    \ =true;\n    }\n    index--;\n  }\n  while (index > 0) {\n    tmp = parseInt(Math.random()*10);\n\
    \    if (seq[tmp] == null) {\n      seq[tmp] = start -2;\n    } else {\n     \
    \ seq[tmp] = start -3;\n      done =true;\n    }\n    index--;\n  }\n  while (index\
    \ > 0) {\n    tmp = parseInt(Math.random()*10);\n    if (seq[tmp] == null) {\n\
    \      seq[tmp] = start -3;\n    } else {\n      seq[tmp] = start -4;\n      done\
    \ =true;\n    }\n    index--;\n  }\n  while (index > 0) {\n    tmp = parseInt(Math.random()*10);\n\
    \    if (seq[tmp] == null) {\n      seq[tmp] = start -4;\n    } else {\n     \
    \ seq[tmp] = start -5;\n      done =true;\n    }\n    index--;\n  }\n  while (index\
    \ > 0) {\n    tmp = parseInt(Math.random()*10);\n    if (seq[tmp] == null) {\n\
    \      seq[tmp] = start -5;\n    } else {\n      seq[tmp] = start -6;\n      done\
    \ =true;\n    }\n    index--;\n  }\n  while (index > 0) {\n    tmp = parseInt(Math.random()*10);\n\
    \    if (seq[tmp] == null) {\n      seq[tmp] = start -6;\n    } else {\n     \
    \ seq[tmp] = start -7;\n      done =true;\n    }\n    index--;\n  }\n  while (index\
    \ > 0) {\n    tmp = parseInt(Math.random()*10);\n    if (seq[tmp] == null) {\n\
    \      seq[tmp] = start -7;\n    } else {\n      seq[tmp] = start -8;\n      done\
    \ =true;\n    }\n    index--;\n  }\n  while (index > 0) {\n    tmp = parseInt(Math.random()*\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdbu2s0xw.js:108\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tlet s = \"\"\n\tfor(let i=0;i<n;i++)\
    \ s += \" \"\n\treturn s\n}\n\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpvqe5krqi.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvqe5krqi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\"\n  for(var i\
    \ = 0; i < n; i++) s += i\n  return s\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpbgv6jq8k.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgv6jq8k.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  for(var\
    \ i=0; i<n; i++) str += i;\n  return str;\n}\nexports.string_sequence = string_sequence;\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpaw4_h7nt.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaw4_h7nt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(Array(n+1).keys()).map(function(){\
    \ return \"\"+this; });\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '[object\
    \ global]'\n]\n\nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpn5dbb5ro.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn5dbb5ro.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '[object\
    \ global]' ],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(Array(n).keys()).map(function(i){\n\
    \        return i.toString();\n    }).join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp_infb_0t.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_infb_0t.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from({length:\
    \ n}, (_,i) => i).join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp22_61he2.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp22_61he2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  for(var i=0;i<n;i++)\n   \
    \ seq+=i;\n  return seq;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp81de6nj1.js:9\n  return seq;\n  ^\n\nReferenceError: seq is not\
    \ defined\n    at string_sequence (/tmp/tmp81de6nj1.js:9:3)\n    at test (/tmp/tmp81de6nj1.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmp81de6nj1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    seq = [];\n    for (var\
    \ i=0; i<n; i++){\n        seq.push(i);\n    }\n    return seq.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpv823t85i.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv823t85i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  for(var\
    \ i=0; i < n; i++) str += \"0 \";\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpj60e9aph.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj60e9aph.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from({length:n},(v,k)=>k+1).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpl6_4y6w7.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl6_4y6w7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return \"0 \".repeat(n).split(\"\
    \ \").join(\"\");\n}\nexports.string_sequence = string_sequence;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpz_0h55ix.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz_0h55ix.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var i, s = \"\";\n  for(i\
    \ = 0; i < n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpnxlmsn_y.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnxlmsn_y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys())\n\
    \              .map(Number)\n              .map(String).join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return new Array(Number(n)).join(0).split(\"\
    \ \").map(function(x){ return parseInt(x,10); });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  NaN\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpg1rac1md.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpg1rac1md.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ NaN ],\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return new Array(Math.round(n)).fill(0).map((e,\
    \ i) => i%2 ? i+1 : \"\" + i).join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp2doccj0j.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2doccj0j.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var seq = '';\n  for(var i=0;\
    \ i<n; i++) seq += ' ' + i.toString(10);\n  return seq.trim();\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpfh9vsmqb.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfh9vsmqb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return \"\"+n+\" \"+ string_sequence(n+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: Exception
  stderr: "/tmp/tmpkwdk_7mg.js:7\n  return \"\"+n+\" \"+ string_sequence(n+1);\n \
    \ ^\n\nRangeError: Maximum call stack size exceeded\n    at string_sequence (/tmp/tmpkwdk_7mg.js:7:3)\n\
    \    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n\
    \    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n\
    \    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n\
    \    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n\
    \    at string_sequence (/tmp/tmpkwdk_7mg.js:7:20)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\twhile(n--)\
    \ s += String(n);\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmparv2pjv3.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmparv2pjv3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from({length:n},(val,i)=>i+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpnsp_8jht.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnsp_8jht.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn new string_sequence_impl(n);\n\
    }\nexports.string_sequence = string_sequence;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpe3wps9g5.js:7\n\treturn new string_sequence_impl(n);\n\t^\n\nReferenceError:\
    \ string_sequence_impl is not defined\n    at string_sequence (/tmp/tmpe3wps9g5.js:7:2)\n\
    \    at test (/tmp/tmpe3wps9g5.js:16:20)\n    at Object.<anonymous> (/tmp/tmpe3wps9g5.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = Array(n+1).join(0).split('');\n\
    \tfor(var i=0;i<n;i++)\n\t\tstr[i] = '' + i;\n\treturn str.join(' ');\n}\n\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpc_bqvuix.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc_bqvuix.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn new String(n+' ').split('\
    \ ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '0',\n  ''\n\
    ]\n\nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmp3vg0dv8v.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3vg0dv8v.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '0', ''\
    \ ],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = '';\n  while(n\
    \ >= 0){\n    result = n + ' ' + (result ? ' ' : '') + result;\n    n--;\n  }\n\
    \  return result;\n}\nexports.string_sequence = string_sequence;\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpi24pys_k.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi24pys_k.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n >= 0) return string_sequence(0,n);\n\
    \  return \"\";\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpzbqie7sz.js:7\n  if(n >= 0) return string_sequence(0,n);\n  ^\n\
    \nRangeError: Maximum call stack size exceeded\n    at string_sequence (/tmp/tmpzbqie7sz.js:7:3)\n\
    \    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n\
    \    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n\
    \    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n\
    \    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n\
    \    at string_sequence (/tmp/tmpzbqie7sz.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  var i = 0;\n\
    \  while(i++ < n){\n    s = s + String(i);\n  }\n  return s;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpngyj7_1w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpngyj7_1w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if (n == undefined) n = 1;\n\
    \  return \"0 \" + string_range(n-1) + \" \" + string_range(n-1);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7x9cc_5e.js:8\n  return \"0 \" + string_range(n-1) + \" \" + string_range(n-1);\n\
    \  ^\n\nReferenceError: string_range is not defined\n    at string_sequence (/tmp/tmp7x9cc_5e.js:8:3)\n\
    \    at test (/tmp/tmp7x9cc_5e.js:16:20)\n    at Object.<anonymous> (/tmp/tmp7x9cc_5e.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(function(x){\
    \ return String(x); }).join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var seq = [];\n  for(var i=0;i<n;i++)\
    \ seq.push(0); // create sequence with n zeros\n  return seq.join(' ');\n}\n\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpmkephkds.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkephkds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var out = '';\n  for (var\
    \ i = 0; i < n; i++){\n    out += i;\n  }\n  return out;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpxy373is7.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxy373is7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(Array(n),\
    \ (_,i) => i + \"\").join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpoqp2_txz.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoqp2_txz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array(+n).join(\"0\"\
    )\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp1ztv5gd7.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ztv5gd7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return make_string(new Array(n+1).join(\"\
    +\"));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3fhhphkj.js:7\n    return make_string(new Array(n+1).join(\"+\"\
    ));\n    ^\n\nReferenceError: make_string is not defined\n    at string_sequence\
    \ (/tmp/tmp3fhhphkj.js:7:5)\n    at test (/tmp/tmp3fhhphkj.js:14:20)\n    at Object.<anonymous>\
    \ (/tmp/tmp3fhhphkj.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\"\n  for(var i\
    \ = n; --i >= 0;) s += \" \" + (i ? i : \"0\")\n  return s\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmps8l599tv.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps8l599tv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn zero_to_string(n).replace(/^0*(\\\
    d+)\\s*$/g, \"$1 $2\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmlljqy6p.js:7\n\treturn zero_to_string(n).replace(/^0*(\\d+)\\\
    s*$/g, \"$1 $2\");\n\t^\n\nReferenceError: zero_to_string is not defined\n   \
    \ at string_sequence (/tmp/tmpmlljqy6p.js:7:2)\n    at test (/tmp/tmpmlljqy6p.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpmlljqy6p.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = n + '';\n  return\
    \ str.replace(/^0*/, str).replace(/\\d+/, function(a){\n    return Math.floor(a);\n\
    \  });\n};\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'33'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpai0t27if.js:19:10)\n \
    \   at Object.<anonymous> (/tmp/tmpai0t27if.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '33',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var a = [];\n  for (var i\
    \ = 0; i <= n; i++) {\n    a.push(i);\n  }\n  return a.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\tfor (var\
    \ i=0; i<n; i++){\n\t\ts += String(i);\n\t}\n\treturn s;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp6n111748.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6n111748.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  n = n||0;\n  var str='';\n\
    \  for(var i=0;i<n;i++){\n    str += i.toString() + ' ';\n  }\n  return str;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpibvs6cxr.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpibvs6cxr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = [];\n  for(var i=0;\
    \ i<n; i++) str.push(i);\n  return str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp6bl31z72.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6bl31z72.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = String(n);\n\tvar\
    \ nums = str.split(\" \");\n\tnums.forEach(function(num, index, arr){\n\t\tarr[index]\
    \ = parseInt(num);\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpc9qnu094.js:20:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpc9qnu094.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s = \"\";\n    for (var\
    \ i = 0; i <= n; i++){\n        s += i + \" \";\n    }\n    return s;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpzoxxccl5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzoxxccl5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return sequence_to_str(n,function(i){\n\
    \        return i+\"\";\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmyqmsjww.js:7\n    return sequence_to_str(n,function(i){\n    ^\n\
    \nReferenceError: sequence_to_str is not defined\n    at string_sequence (/tmp/tmpmyqmsjww.js:7:5)\n\
    \    at test (/tmp/tmpmyqmsjww.js:17:20)\n    at Object.<anonymous> (/tmp/tmpmyqmsjww.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = n + \"\";\n  var\
    \ str_res = \"\";\n  \n  var i;\n  for(i = 0; i<n; i++){\n    str_res += str.charAt(i);\n\
    \  }\n\n  return str_res;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpnv5q5e7_.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv5q5e7_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(!n) return \"\";\n  var\
    \ s = \"\";\n  for(var i=n; i--;) s += (i==0?'':' ') + i;\n  return s;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpsn25ir3z.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsn25ir3z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    for(n = n || 0; ; n++){\n\
    \        for(var s = \"\"; n > 0; n--) s += String.fromCharCode(n);\n        return\
    \ s;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpxt_qeev1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxt_qeev1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\t\n\tif (n == 0)\n\t\treturn\
    \ \"0\";\n\telse\n\t\treturn string_sequence(n-1) + generate_string(n);\n\t\t\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpve8ht22j.js:11\n\t\treturn string_sequence(n-1) + generate_string(n);\n\
    \t\t       ^\n\nReferenceError: generate_string is not defined\n    at string_sequence\
    \ (/tmp/tmpve8ht22j.js:11:10)\n    at string_sequence (/tmp/tmpve8ht22j.js:11:10)\n\
    \    at string_sequence (/tmp/tmpve8ht22j.js:11:10)\n    at test (/tmp/tmpve8ht22j.js:21:20)\n\
    \    at Object.<anonymous> (/tmp/tmpve8ht22j.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from({length:n},\
    \ (x,i)=>i+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpa_p_0h6m.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa_p_0h6m.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return sequence_of_strings(n).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpa5fij9h5.js:7\n  return sequence_of_strings(n).join(' ');\n  ^\n\
    \nReferenceError: sequence_of_strings is not defined\n    at string_sequence (/tmp/tmpa5fij9h5.js:7:3)\n\
    \    at test (/tmp/tmpa5fij9h5.js:15:20)\n    at Object.<anonymous> (/tmp/tmpa5fij9h5.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  while(n >\
    \ 0){\n    s += String(n);\n    n -= 1;\n  }\n  return s;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpl1uxuv3t.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl1uxuv3t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  let str = '';\n  for(let i=0;\
    \ i< n; i++){\n    str+=i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpux_vjj5t.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpux_vjj5t.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = \"\";\n  for(var\
    \ i = 0; i < n; i++)\n    result += String(i);\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpuse_vmik.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuse_vmik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(Array(Number(n)\
    \ || 0).keys()).join(\" \");\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpivq5tw8q.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpivq5tw8q.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tif(n===0){\n\t\treturn \"\
    0\";\n\t}\n\tif(n===1){\n\t\treturn \"1 0 \";\n\t}\n\tvar result = \"\";\n\tvar\
    \ x = string_sequence(Math.floor(n/2));\n\tvar y = string_sequence(Math.floor(n/2));\n\
    \twhile(n > 1){\n\t\tresult += x;\n\t\tresult += y;\n\t\tn = Math.floor(n/2);\n\
    \t\tx = string_sequence(Math.floor(n/2));\n\t\ty = string_sequence(Math.floor(n/2));\n\
    \t}\n\tresult += x;\n\tresult += y;\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1 0 1 0 00'\n\
    \nshould loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpkfw1bdvy.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkfw1bdvy.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1 0 1 0 00',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn new Array(n+1).join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpml1mde_3.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpml1mde_3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  let str = n.toString();\n\
    \  let spaces = str.match(/\\s*\\d*/g);\n  if(spaces == null)\n    return '';\n\
    \  else\n    return spaces.join(' ');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpfjvd050l.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjvd050l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return \"\"+n+((n<0)?\" \"\
    :string_sequence(--n));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0-1 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmp5s7tutbz.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5s7tutbz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0-1 ',\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if( isNaN(n) || !isFinite(n)\
    \ ){\n    throw(\"string_sequence must be passed a finite integer greater than\
    \ or equal to 0\");\n  }\n\n  var arr = [];\n\n  for( var i = 0; i < n; i++ ){\n\
    \    arr.push(i);\n  }\n\n  return arr.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp0sf6k8is.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0sf6k8is.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  n = n|0;\n  return n<1? \"\
    0\": Array.from({length:n}).map(function(n){return n+1}).join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN NaN NaN'\n\
    \nshould loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmp3qnkw6b0.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3qnkw6b0.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN NaN NaN',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s = \"\";\n    for(var\
    \ i=0; i<n; i++){\n        s += \" \" + (i+1);\n    }\n    return s;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpxn41jgl1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxn41jgl1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(n === undefined) n = 0;\n\
    \  return array_to_string(array_sequence(n));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfeddhh__.js:8\n  return array_to_string(array_sequence(n));\n \
    \ ^\n\nReferenceError: array_to_string is not defined\n    at string_sequence\
    \ (/tmp/tmpfeddhh__.js:8:3)\n    at test (/tmp/tmpfeddhh__.js:16:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpfeddhh__.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar str = \"\", i;\n\tfor(i=0;\
    \ i<n; i++) str+=i.toString();\n\treturn str;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp779dka3p.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp779dka3p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return '' + Array(n+1).join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp744se2um.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp744se2um.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var sequence = new Array();\n\
    \  sequence[0] = \"0\";\n  sequence[1] = string_sequence(n-1).join(\" \");\n \
    \ return sequence.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpqj23xdl5.js:7\n  var sequence = new Array();\n                \
    \ ^\n\nRangeError: Maximum call stack size exceeded\n    at string_sequence (/tmp/tmpqj23xdl5.js:7:18)\n\
    \    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n\
    \    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n\
    \    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n\
    \    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n\
    \    at string_sequence (/tmp/tmpqj23xdl5.js:9:17)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  while (n>0){\n\
    \    s = (n%10) + s;\n    n=Math.floor(n/10);\n  }\n  if (s==\"\") s=\"0\";\n\
    \  return s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpmqyo7n11.js:22:10)\n \
    \   at Object.<anonymous> (/tmp/tmpmqyo7n11.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s = '';\n    for(var\
    \ i=0; i< n; i++){\n        s += i;\n    }\n    return s;\n}\n</textarea></div>\n\
    \n    <script>\n        var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code\"), {\n            mode: 'text/x-python',\n            theme: 'neat',\n \
    \           readOnly: false\n        });\n\n        function save() {\n      \
    \      document.getElementById('light').innerHTML = editor.getValue();\n     \
    \   }\n    </script>\n\n    <p>\n        <button id=\"save\">Save</button>\n \
    \   </p>\n\n    <p>\n        <button id=\"add\">Add 2</button>\n        <button\
    \ id=\"remove\">Remove 1</button>\n    </p>\n\n    <p>\n        <button id=\"\
    undo\">Undo</button>\n        <button id=\"redo\">Redo</button>\n    </p>\n\n\
    \    <p>\n        <pre id=\"light\"># Simple editable code block\ndef f(x):\n\
    \    \"\"\"f is a bomb\"\"\"\n    for y in range(10):\n        print(str(x) +\
    \ str(y))\n\n# >>> f(1)\n# 011\n# >>> f(2)\n# 012\n# >>> f(3)\n# 013\n# >>> f(4)\n\
    # 014\n# >>> f(5)\n# 015\n# >>> f(6)\n# 016\n# >>> f(7)\n# 017\n# >>> f(8)\n#\
    \ 018\n# >>> f(9)\n# 019\n# >>> f(10)\n# 010\n# >>> f(11)\n# 011\n# >>> f(12)\n\
    # 012\n# >>> f(13)\n# 013\n# >>> f(14)\n# 014\n# >>> f(15)\n# 015\n# >>> f(16)\n\
    # 016\n# >>> f(17)\n# 017\n# >>> f(18)\n# 018\n# >>> f(19)\n# 019\n# >>> f(20)\n\
    # 010\n# >>> f(21)\n# 011\n# >>> f(22)\n# 012\n# >>> f(23)\n# 013\n# >>> f(24)\n\
    # 014\n# >>> f(25)\n# 015\n# >>> f(26)\n# 016\n# >>> f(27)\n# 017\n# >>> f(28)\n\
    # 018\n# >>> f(29)\n# 019\n# >>> f(30)\n# 010\n# >>> f(31)\n# 011\n# >>> f(32)\n\
    # 012\n# >>> f(33)\n# 013\n# >>> f(34)\n# 014\n# >>> f(35)\n# 015\n# >>> f(36)\n\
    # 016\n# >>> \nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_lus4k9p.js:13\n</textarea></div>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpu6ct39ic.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu6ct39ic.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var out = [];\n  for(var i\
    \ = 0; i< n; i++){\n    out.push(i);\n  }\n  return out.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpmg8e1y8p.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmg8e1y8p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tlet s = \"\";\n\tfor(let i\
    \ = 0;i<n;i++){\n\t\ts += i.toString();\n\t}\n\treturn s;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp1nbtb72c.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1nbtb72c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = String(n);\n  for(var\
    \ i = 1; i < n; i++){\n    str += \" \" + i;\n  }\n  return str;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3 1 2'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmp8tqnrhdg.js:20:10)\n \
    \   at Object.<anonymous> (/tmp/tmp8tqnrhdg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3 1 2',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = \"\";\n  for(var\
    \ i = 0; i < n; i++){\n    result += String(i);\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp6_wac9f_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6_wac9f_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var a = []\n  var i;\n  for(i=0;i<n;i++){\n\
    \    a.push(i.toString());\n  }\n  return a.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpscggy2g1.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpscggy2g1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\"\n  for (var i\
    \ = 0; i < n; i++){\n    s += i + \" \"\n  }\n  return s\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp7yq6p3pv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7yq6p3pv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tif(n<0) return \"-1\";\n\t\
    var s = \"\";\n\tfor(var i=0; i<n; i++) s += i.toString();\n\treturn s;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp50fh7noy.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp50fh7noy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i\
    \ = 0; i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpn7dyt45f.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn7dyt45f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  var i;\n\
    \  for(i = 0;i < n;i++){\n    str = str + \" \" + i;\n  }\n  return str;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpigh_br86.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpigh_br86.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var str = \"\";\n  for(var\
    \ i = 0; i < n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmplrc0amu2.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplrc0amu2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var s = \"\";\n    for(var\
    \ i = 0; i<n; i++){\n        s += i;\n    }\n    return s;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp0wr9rhqq.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0wr9rhqq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var ret = \"\";\n  for(var\
    \ i=0; i<n; i++){\n    ret += String(i);\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpes87whek.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpes87whek.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array(n+1).join(\"\
    \ \").split(\" \").slice(0, n).join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5qwj6gje.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5qwj6gje.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tlet sequence = Array(n+1).join(\"\
    \ \");\n\tconsole.log(sequence)\n\treturn sequence;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpzs5an232.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzs5an232.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '

    '
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return function(t){return\
    \ n===t?0:n+1==t?1:(n+2)==t?2:n+3==t?3:n+4==t?4:\"\"};\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpbz9v1pvk.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbz9v1pvk.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = ''\n  for(var\
    \ i=0; i<n; i++){\n    result += i\n  }\n  return result\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp3et0sl83.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3et0sl83.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from({length:\
    \ n},(v,k)=>k+1).join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpxa57bec3.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxa57bec3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if( n < 1 ){\n    throw 'string\
    \ sequence must be defined positive integer';\n  }\n  var s = \"\";\n  for(var\
    \ i = 0; i < n; i++){\n    s += i;\n  }\n  return s;\n}\nexports.string_sequence\
    \ = string_sequence;\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: Exception
  stderr: "\n/tmp/tmpultb7z7e.js:8\n    throw 'string sequence must be defined positive\
    \ integer';\n    ^\nstring sequence must be defined positive integer\n(Use `node\
    \ --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\tfor(var i=0;\
    \ i<n; i++){\n\t\ts = s+i;\n\t}\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpx7v7csp1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx7v7csp1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar s = \"\";\n\tfor(var i=0;\
    \ i<n; i++)\n\t\ts += (i+1);\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpb82o9khc.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb82o9khc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn range_to(n).toString();\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpz5oekxab.js:7\n\treturn range_to(n).toString();\n\t^\n\nReferenceError:\
    \ range_to is not defined\n    at string_sequence (/tmp/tmpz5oekxab.js:7:2)\n\
    \    at test (/tmp/tmpz5oekxab.js:14:20)\n    at Object.<anonymous> (/tmp/tmpz5oekxab.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = [];\n  for(var\
    \ i=0;i<n;i++){\n    result.push(i);\n  }\n  return result.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpuqyr97e8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqyr97e8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var arr = []\n  while (arr.length\
    \ < n){\n    arr.push(0)\n  }\n  return arr.join(\" \")\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5px55xt1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5px55xt1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  if(isNaN(n)){\n    return\
    \ \"NaN\"\n  }\n  return \"0 \"+repeat(n, \" \").substr(2)\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpprlhio8t.js:10\n  return \"0 \"+repeat(n, \" \").substr(2)\n  ^\n\
    \nReferenceError: repeat is not defined\n    at string_sequence (/tmp/tmpprlhio8t.js:10:3)\n\
    \    at test (/tmp/tmpprlhio8t.js:17:20)\n    at Object.<anonymous> (/tmp/tmpprlhio8t.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return range(n).map(String).join('\
    \ ')\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpusdpf8q7.js:7\n  return range(n).map(String).join(' ')\n  ^\n\n\
    ReferenceError: range is not defined\n    at string_sequence (/tmp/tmpusdpf8q7.js:7:3)\n\
    \    at test (/tmp/tmpusdpf8q7.js:15:20)\n    at Object.<anonymous> (/tmp/tmpusdpf8q7.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977794
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\treturn array_to_string(array_fill(0,\
    \ n, 0));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbojdkyqc.js:7\n\treturn array_to_string(array_fill(0, n, 0));\n\
    \t^\n\nReferenceError: array_to_string is not defined\n    at string_sequence\
    \ (/tmp/tmpbojdkyqc.js:7:2)\n    at test (/tmp/tmpbojdkyqc.js:15:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpbojdkyqc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var a = [];\n  while(n > 0){\n\
    \    a.push( n%10 );\n    n = Math.floor(n/10);\n  }\n  return a.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpuni7of95.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuni7of95.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.from(Array(n+1).keys()).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var i;\n    var str = \"\
    \";\n    for (i = 0; i<n; i++)\n        str = str + i + \" \";\n    return str;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpkaqrrqu6.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkaqrrqu6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var ret = '';\n    for(var\
    \ i = 0; i <= n; i++){\n        ret += String(i);\n    }\n    return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0123'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmp3zmfba1w.js:20:10)\n \
    \   at Object.<anonymous> (/tmp/tmp3zmfba1w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0123',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return Array.from(Array(n+1),(x,i)\
    \ => i);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmps1z3zcuj.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmps1z3zcuj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar out = '';\n\tfor(var i\
    \ = 0; i < n; i++){\n\t\tout += i + ' ';\n\t}\n\treturn out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp69v4qaeg.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp69v4qaeg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var result = \"\";\n  for(var\
    \ i = 0; i < n; i++){\n    result += i;\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpif0_u4w2.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpif0_u4w2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return new String(n).split('').map(Number).join('\
    \ ');\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmp9jllpcmq.js:17:10)\n \
    \   at Object.<anonymous> (/tmp/tmp9jllpcmq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected:\
    \ '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    return Array.apply(null,\
    \ Array(n)).map(function(){ return \"\"+(0+Math.floor(Math.random()*10)) }).join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp0pfg8i86.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0pfg8i86.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  return (new Array(n+1)).join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpu1ff2mqr.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu1ff2mqr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tvar result = [];\n\tfor (var\
    \ i=0;i<=n;i++) result.push(i);\n\treturn result.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var s = [];\n  for(var i=0;\
    \ i<n; i++) s.push(i);\n  return s.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpc0w4kxrr.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc0w4kxrr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n  var seq = \"\", i;\n  for\
    \ (i=0; i<n; i++){\n    seq += \" \"+i;\n  }\n  return seq;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp5jl628wf.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5jl628wf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n\tn = n || 0;\n\tlet s = '';\n\
    \tfor(let i=0; i <= n; i++){\n\t\ts += i;\n\t}\n\treturn s;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0123'\n\nshould\
    \ loosely deep-equal\n\n'0 1 2 3'\n    at test (/tmp/tmpc28uxlza.js:21:10)\n \
    \   at Object.<anonymous> (/tmp/tmpc28uxlza.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0123',\n\
    \  expected: '0 1 2 3',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    var sequence = \"\";\n \
    \   for (var i = 0;i < n;i++)\n        sequence = sequence + i;\n    return sequence;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmpyk6zyxns.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyk6zyxns.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n    let str = '';\n    for (let\
    \ i = 0; i < n; ++i){\n        str += `  ${i}`;\n    }\n    return str;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'0'\n    at test (/tmp/tmp99aio4vp.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp99aio4vp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977795

name: HumanEval_27_flip_case
language: js
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have\
  \ violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
completions: ["    string = string.toLowerCase();\n    string = string.toUpperCase();\n\
    \    string = string.toLowerCase();\n    return string;\n}\n", "    return string\n\
    \        .replace(/[\xC0\xC1\xC2\xC3\xC4\xC5]/g, \"A\")\n        .replace(/[\xC8\
    \xC9\xCA\xCB]/g, \"E\")\n        .replace(/[\xCC\xCD\xCE\xCF]/g, \"I\")\n    \
    \    .replace(/[\xD2\xD3\xD4\xD5\xD6]/g, \"O\")\n        .replace(/[\xD9\xDA\xDB\
    \xDC]/g, \"U\")\n        .replace(/[\xDD\xDE\xDF]/g, \"Y\")\n        .replace(/[\u0178\
    ]/g, \"Z\")\n        .replace(/[\u017D]/g, \"Z\")\n        .replace(/[\xFF]/g,\
    \ \"Y\")\n        .toLowerCase();\n}\n", "    switch(string.toLowerCase()){\n\
    \        case \"hello\":\n        case \"hi\":\n        case \"greetings\":\n\
    \        case \"hello_world\":\n        case \"hey\":\n        case \"hey!\":\n\
    \            return string.toUpperCase();\n        case \"hi\":\n        case\
    \ \"hey\":\n        case \"howdy!\":\n            return string.toLowerCase();\n\
    \        case \"greetings\":\n        case \"greeting\":\n        case \"hello\"\
    :\n        case \"hey!\":\n            return string.toUpperCase();\n        default:\n\
    \            return string;\n    }\n}\n", "    return string.toLowerCase().replace(/[A-Z]/g,function(match){return\
    \ match.toUpperCase();});\n}\n", "  string = string.toLowerCase()\n  return string.charAt(0).toUpperCase()\
    \ + string.slice(1)\n}\n", "    return string.toUpperCase().split('').reduce((a,b)=>a+b.toLowerCase(),'')\n\
    }\n", "  return string.toLowerCase().split('').map(function(x){return x.toUpperCase();}).join('');\n\
    }\n<|/ file source=gitlab |>", "  let new_string = string;\n  for (let i = 0;\
    \ i < string.length; i++){\n    if (new_string[i] === new_string[i].toUpperCase()){\n\
    \      new_string[i] = new_string[i].toLowerCase();\n    }\n  }\n  return new_string;\n\
    }", "    return string.split(\"\").map(function(character){\n        return character.toUpperCase()\
    \ === character ? character.toLowerCase() : character.toUpperCase() + character.toLowerCase();\n\
    \    }).join(\"\");\n}\n", "    return string.toLowerCase().split('').reverse().join('');\n\
    }\n", "    return string.toLowerCase().split('')\n        .map(function(letter){\n\
    \            return letter.toUpperCase();\n        })\n        .join('');\n}\n",
  "  string = string.toLowerCase();\n  return string.charAt(0).toUpperCase() + string.slice(1);\n\
    }\n", "    // Make sure the string is not empty.\n    if(!string.length){\n  \
    \      throw new Error(\"flip_case error: string was empty.\");\n    }\n    //\
    \ Make sure the string is lowercase.\n    if(string.toLowerCase() !== string){\n\
    \        throw new Error(\"flip_case error: string was not lowercase.\");\n  \
    \  }\n    // The string is in uppercase, return.\n    return string;\n}\n", " \
    \   return string.toLowerCase().replace(/[A-Z]/g, function(m){\n        return\
    \ m.toUpperCase();\n    });\n}", "    var result = \"\";\n    string = string.toLowerCase();\n\
    \    for (var i = string.length-1; i>=0; i--){\n        if (string.charAt(i) ==\
    \ string.charAt(i).toUpperCase()){\n            result += string.charAt(i).toLowerCase();\n\
    \        }\n        else{\n            result += string.charAt(i);\n        }\n\
    \    }\n    return result;\n}\n<|/ file filename=myapp.js dstars=0 source=github\
    \ |>", "  string = string.split('');\n  for(var i=0; i<string.length; i++){\n\
    \    if(string[i] === string[i].toUpperCase() && string[i] !== string[i].toLowerCase()){\n\
    \      string[i] = string[i].toUpperCase();\n    }\n    else if(string[i] ===\
    \ string[i].toLowerCase() && string[i] !== string[i].toUpperCase()){\n      string[i]\
    \ = string[i].toLowerCase();\n    }\n  }\n  return string.join('');\n}\n", " \
    \   var f = \"\";\n    for(var i=0; i<string.length;i++){\n        f += string[i].toUpperCase();\n\
    \        f += string[i].toLowerCase();\n    }\n    return f;\n}\n", "  return\
    \ string.replace(/[a-z]/g, function(letter){\n    return letter.toUpperCase();\n\
    \  }).replace(/[A-Z]/g, function(letter){\n    return letter.toLowerCase();\n\
    \  });\n}", "    return string.split(\"\").map(function(x){\n        return x\
    \ === x.toLowerCase() ? x.toUpperCase() : x.toLowerCase();\n    }).join(\"\");\n\
    }\n", "    return string.split(\"\").map((character,index) => index === 0 ? character.toUpperCase()\
    \ : character.toLowerCase()).join(\"\");\n}\n", "    return string.split(\"\"\
    ).map(function(char) {\n        return char.toLowerCase() === char ? char.toUpperCase()\
    \ : char.toLowerCase();\n    }).join(\"\");\n}", "    let flipped_string = '';\n\
    \    for(let i = 0; i < string.length; i++){\n        if(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90) flipped_string += string.charAt(i) + string.charAt(i);\n\
    \        else flipped_string += string.charAt(i).toLowerCase();\n    }\n    return\
    \ flipped_string;\n}\n", "\tlet flipped = '';\n\n\tfor(let i = 0; i < string.length;\
    \ i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\t\t\tflipped += string[i].toUpperCase();\n\
    \t\t}\n\t\telse if (string[i] === string[i].toLowerCase()){\n\t\t\tflipped +=\
    \ string[i].toLowerCase();\n\t\t}\n\t\telse {\n\t\t\tflipped += string[i];\n\t\
    \t}\n\t}\n\treturn flipped;\n}\n", "\tvar output = string;\n\tfor (var i = 0;\
    \ i < string.length; i++){\n\t\tswitch (string[i]){\n\t\t\tcase \"a\":\n\t\t\t\
    case \"A\":\n\t\t\tcase \"i\":\n\t\t\tcase \"I\":\n\t\t\tcase \"u\":\n\t\t\tcase\
    \ \"U\":\n\t\t\tcase \"c\":\n\t\t\tcase \"C\":\n\t\t\t\toutput += string[i].toUpperCase();\n\
    \t\t\t\tbreak;\n\t\t\tcase \"A\":\n\t\t\tcase \"I\":\n\t\t\tcase \"U\":\n\t\t\t\
    case \"c\":\n\t\t\tcase \"C\":\n\t\t\t\toutput += string[i].toLowerCase();\n\t\
    \t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\toutput += string[i];\n\t\t\t\tbreak;\n\t\
    \t}\n\t}\n\treturn output;\n}\n", "    return string.toLowerCase().split('').reduce((prev,\
    \ cur, index) => {\n        return prev + cur.toUpperCase();\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nYeah but you can do better with reduce function\n\
    <|/ c |>\n<| a dscore=1 |>\nHere's my solution, just as a proof of concept:\n\
    <code>", "    return string.replace(/^[a-z]/g, c => c.toUpperCase()).replace(/^[A-Z]/g,\
    \ c => c.toLowerCase());\n}\n", "    return string.toUpperCase().replace(/[a-z]/,\
    \ function (){\n        return string.charAt(0).toUpperCase() + string.slice(1);\n\
    \    });\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThat doesn't work if you're\
    \ trying to reverse a string, for example.\n<|/ c |>\n<| c |>\nI agree, it doesn't\
    \ work for a simple reversal of a string. I was only showing what you can do with\
    \ regex if you have a string like that. I added a more general solution which\
    \ should work for all cases. Please give it a shot.\n<|/ c |>\n<| c |>\nWhat does\
    \ `function flip_case(string)` return? Because the result doesn't change if `string`\
    \ is already uppercase.\n<|/ c |>\n<| c |>\nIt doesn't return, but you can pass\
    \ the return value into `replace`. I've just tested it and it seems to work. Try\
    \ it out.\n<|/ c |>\n<| c |>\nSo you basically just called `string.toLowerCase().replace(/[a-z]/,\
    \ function (){\n    return string.charAt(0).toUpperCase() + string.slice(1);\n\
    });`, which is still not doing what you claim it does (it doesn't reverse the\
    \ string). You're just changing the case of the lowercase letters to uppercase\
    \ and vice versa, but your function doesn't actually do that. You're not actually\
    \ flipping the cases of any letters. You're just changing the case of the lowercase\
    \ letters to uppercase and vice versa.\n<|/ c |>\n<| a tags=string,javascript,regex\
    \ |>\nI know this is an old question, but I came across this in my own search.\
    \  I'm posting this just in case it helps someone else in the future.  This is\
    \ from https://codeburst.io/javascript-reverse-strings-in-place-without-using-reverse-array-method-8a50eeda29f2,\
    \ though I modified the regex slightly so it only looks for uppercase letters\
    \ instead of using 0-9A-Za-z.\n<code>", "    return string.replace(/[a-z]/g, (match)\
    \ => match.toUpperCase())\n                    .replace(/[A-Z]/g, (match) => match.toLowerCase())\n\
    \                    .replace(/\\s+/g, (match) => \" \");\n}\n", "  return string.split('')\n\
    \  .map(function (character) {\n    return character.toUpperCase() === character\
    \ ?\n      character.toLowerCase() :\n      character.toLowerCase();\n  })\n \
    \ .join('');\n}\n", "    \n    return string.split(\"\").map(function(char){\n\
    \        return char.toLowerCase() === char ? char.toUpperCase() : char.toLowerCase();\n\
    \    }).join(\"\");\n}\n", "\tlet newstring = string.toLowerCase()\n\tnewstring\
    \ = newstring.replace(/[a-z]/ig, (m)=>{return m.toUpperCase()})\n\tnewstring =\
    \ newstring.replace(/[A-Z]/ig, (m)=>{return m.toLowerCase()})\n\treturn newstring\n\
    }\n", "    string = string.toUpperCase();\n    return string.toLowerCase();\n\
    }\n", "  return string.split('').map(function(c){\n    return c === c.toUpperCase()\
    \ && c.toLowerCase() || c.toUpperCase()\n  }).join('')\n}", "    return string.split('').map((character)\
    \ => {\n        return character === character.toUpperCase() ? character.toLowerCase()\
    \ : character.toUpperCase();\n    }).join('');\n}\n", "  return string.split('').reduce((res,\
    \ letter)=>{\n      return res + letter.toUpperCase();\n  },'');\n}", "\treturn\
    \ string.toUpperCase().split(\"\").map(function(i){\n\t\treturn i == i.toLowerCase()\
    \ ? i.toUpperCase() : i.toLowerCase();\n\t}).join(\"\");\n}\n", "    return string.toUpperCase().replace(/[a-z]/g,\
    \ function(letter){\n        return letter.toUpperCase();\n    });\n}\n", "  \
    \  return string.toLowerCase().split('').reduceRight(function(previous, current,\
    \ index, array){\n        return previous + (current != string[index] ? current\
    \ : '');\n    }, string);\n}\n", "  return string.toLowerCase().split(\"\").map(function(char){\n\
    \    return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \  }).join(\"\");\n}\n", "    return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\
    }\n", "    string = string.toLowerCase()\n    return string.charAt(0).toUpperCase()\
    \ + string.slice(1)\n}", "    return string.toLowerCase()\n                  .replace(/[a-z]/g,\n\
    \                            function($1){return String.fromCharCode($1).toUpperCase()})\n\
    \                  .replace(/[A-Z]/g,\n                            function($1){return\
    \ String.fromCharCode($1).toLowerCase()});\n}\n", "  return string.split('').map(function(character){\n\
    \    return character == character.toUpperCase() ? character.toLowerCase() : character.toUpperCase()\n\
    \  }).join('')\n}", "    return string.split(\"\").map(function(a){\n        if(a==a.toUpperCase())\n\
    \            return a.toLowerCase();\n        else\n            return a.toUpperCase();\n\
    \    }).join(\"\");\n}\n", "    var new_string = string;\n    for(var i=0;i<new_string.length;i++){\n\
    \        new_string = new_string.charAt(i) + new_string.charAt(i).toUpperCase();\n\
    \    }\n    return new_string.toUpperCase();\n}\n", "  return string.replace(/([A-Z])/g,\
    \ function ($1){\n    return $1.toUpperCase();\n  }).replace(/^./, function ($1){\n\
    \    return $1.toLowerCase();\n  });\n}\n</script>\n<div class=\"container\">\n\
    \n  <!-- Grid item -->\n  <div class=\"row\">\n    <div class=\"col-md-3 mb-4\"\
    >\n      <h6>Uppercase</h6>\n      <p class=\"lead\">\n        <span class=\"\
    text-uppercase text-white\">\n          {{capitalized_name}}\n        </span>\n\
    \      </p>\n      <p>\n        {{capitalized_description}}\n      </p>\n    \
    \  <p>\n        <small>\n          <strong>Source:</strong> <a href=\"http://stackoverflow.com/a/4281511\"\
    >stackoverflow.com/a/4281511</a>\n        </small>\n      </p>\n    </div>\n\n\
    \    <div class=\"col-md-3 mb-4\">\n      <h6>CamelCase</h6>\n      <p class=\"\
    lead\">\n        <span class=\"text-capitalize text-white\">\n          {{camelized_name}}\n\
    \        </span>\n      </p>\n      <p>\n        {{camelized_description}}\n \
    \     </p>\n      <p>\n        <small>\n          <strong>Source:</strong> <a\
    \ href=\"http://stackoverflow.com/a/4281511\">stackoverflow.com/a/4281511</a>\n\
    \        </small>\n      </p>\n    </div>\n\n    <div class=\"col-md-3 mb-4\"\
    >\n      <h6>Titlecase</h6>\n      <p class=\"lead\">\n        <span class=\"\
    text-title text-white\">\n          {{titlecased_name}}\n        </span>\n   \
    \   </p>\n      <p>\n        {{titlecased_description}}\n      </p>\n      <p>\n\
    \        <small>\n          <strong>Source:</strong> <a href=\"http://stackoverflow.com/a/4281511\"\
    >stackoverflow.com/a/4281511</a>\n        </small>\n      </p>\n    </div>\n\n\
    \    <div class=\"col-md-3 mb-4\">\n      <h6>Underscored</h6>\n      <p class=\"\
    lead\">\n        <span class=\"text-underline text-white\">\n          {{underscored_name}}\n\
    \        </span>\n      </p>\n      <p>\n        {{underscored_description}}\n\
    \      </p>\n      <p>\n        <small>\n          <strong>Source:</strong> <a\
    \ href=\"http://stackoverflow.com/a/4281511\">stackoverflow.com/a/4281511</a>\n\
    \        </small>\n      </p>\n    </div>\n  </div>\n\n</div>\n\n<footer class=\"\
    py-5 bg-dark\">\n  <div class=\"container\">\n    <p class=\"m-0 text-center text-white\"\
    >\n      <a href=\"https://twitter.com/{{ twitter_username }}\">Follow on Twitter</a>\n\
    \    </p>\n    <p class=\"m-0 text-center text-white\">\n      <a href=\"https://facebook.com/{{\
    \ facebook_username }}\">Like on Facebook</a>\n    </p>\n    <p class=\"m-0 text-center\
    \ text-white\">\n      <a href=\"https://github.com/{{ github_username }}\">Star\
    \ on Github</a>\n    </p>\n  </div>\n  <div class=\"container\">\n    <div class=\"",
  "    return string.toLowerCase().replace(/[a-z]/g,function(m){\n        return m.toUpperCase();\n\
    \    });\n}", "    return string.split('').map(function (letter) {\n        return\
    \ letter.toUpperCase()\n    }).join('');\n}\n", "  return string.split('').map(c\
    \ => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n}\n\
    </cell>\n<cell>", "  return string.toLowerCase().split('').reduce((result, letter)\
    \ => {\n    return result + letter.toUpperCase();\n  }, string);\n}\n", "  return\
    \ string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}", "    return\
    \ string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n", "\treturn\
    \ string.toLowerCase().split(\"\").map(function(char){\n\t\treturn char !== char.toUpperCase()\
    \ && char !== char.toLowerCase() ? char.toUpperCase() : char.toLowerCase();\n\t\
    }).join(\"\");\n}\n", "    string = string.replace(/([A-Z])/g, \"$1_$1\").toLowerCase();\n\
    \    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n", "    return\
    \ string.replace(/[a-z]/g,function(match){\n        return match.toUpperCase();\n\
    \    }).replace(/[A-Z]/g,function(match){\n        return match.toLowerCase();\n\
    \    });\n}", "    return string.toLowerCase().split(' ').map(function(word){\n\
    \        return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n\
    }", "  return string.replace(/[a-z]/g, function (c){\n    return c.toUpperCase();\n\
    \  }).replace(/[A-Z]/g, function (c){\n    return c.toLowerCase();\n  });\n}\n",
  "  return string.toLowerCase()\n              .replace(/[a-z]/g, function(x){\n\
    \                  return x.toUpperCase();\n              });\n}\n", "  var flipped_string\
    \ = \"\";\n  for( var i = 0; i < string.length; i++){\n    if(string[i].toLowerCase()\
    \ === string[i].toUpperCase()){\n      flipped_string += string[i].toUpperCase();\n\
    \    }else{\n      flipped_string += string[i].toLowerCase();\n    }\n  }\n  return\
    \ flipped_string;\n}\n", "    return string.replace(/[a-z]/g, m => m.toUpperCase()).replace(/[A-Z]/g,\
    \ m => m.toLowerCase());\n}\n", "    return string.split('').reverse().join('');\n\
    }\n", "    var upper = string.toLowerCase();\n    var lower = string.toUpperCase();\n\
    \    return upper + lower;\n}\n", "  string = string.split('');\n  for(var i =\
    \ 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      string[i] = string[i].toLowerCase();\n    }\n  }\n  return string.join('');\n\
    }\n", "    return string.toLowerCase().split(' ').map(function(s){\n        return\
    \ s.charAt(0).toUpperCase() + s.slice(1);\n    }).join(' ');\n}\n", "    string\
    \ = string.toLowerCase();\n    string=string.toUpperCase();\n    return string;\n\
    }\n", "\treturn string.toLowerCase()\n\t\t\t\t.replace(/[a-z]/g,function(c){\n\
    \t\t\t\t\tvar l = c.charCodeAt(0)-0x20;\n\t\t\t\t\treturn String.fromCharCode(l+0x20);\n\
    \t\t\t\t});\n}", "   return string.replace(/[a-z]/g, function(match){\n      return\
    \ match.toUpperCase();\n   }).replace(/[A-Z]/g, function(match){\n      return\
    \ match.toLowerCase();\n   });\n}\n", "    let str = \"\" + string;\n    return\
    \ str.replace(/[a-z]/gi,function(m){\n        return String.fromCharCode(m.charCodeAt(0)\
    \ + (m.charCodeAt(1)-96));\n    });\n}", "  string = string.toLowerCase();\n \
    \ for(var i = 0; i < string.length; i++){\n    if( string[i].toUpperCase() ===\
    \ string[i]){\n      string = string[i] + string[i].toLowerCase();\n    }\n  }\n\
    \  return string;\n}\n", "    \n    // Remove any space from the string\n    string\
    \ = string.trim();\n    \n    // If string is empty, return an empty string\n\
    \    if(string === \"\")\n        return \"\";\n    \n    // Lower case all the\
    \ characters in the string\n    for(var i = 0; i < string.length; i++){\n    \
    \    \n        // Convert to upper case\n        string[i] = string[i].toUpperCase();\n\
    \        \n        // Convert to lower case\n        string[i] = string[i].toLowerCase();\n\
    \    }\n    \n    // Return the string\n    return string;\n}\n", "  return string.toUpperCase().split('').map(function(letter){\n\
    \    return letter.toLowerCase()\n  }).join('');\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 tags=string,javascript,replace |>\nHere you go:\n<code>", "    return\
    \ string.replace(/[a-z]/g,function (x){return x.toUpperCase();});\n}\n", "   \
    \ var str_arr = string.split(\"\"),\n        str_len = str_arr.length,\n     \
    \   str_out = [],\n        str_i;\n    for (i=0; i<str_len; i++){\n        str_i\
    \ = str_arr[i].toLowerCase();\n        str_out.push(str_i.charCodeAt(0)>96 ? str_i.charCodeAt(0)\
    \ - 87 : str_i.charCodeAt(0) - 48);\n    }\n    return str_out.join(\"\");\n}\n",
  "    var upper = string.split(\"\").reduce(function(a, b){\n        if(b.toUpperCase()\
    \ === a) return b;\n        return a.toUpperCase();\n    });\n    return string.split(\"\
    \").reduce(function(a, b){\n        if(b.toLowerCase() === a) return b;\n    \
    \    return a.toLowerCase();\n    });\n}", "  return string.split(\"\").map(function(character){\n\
    \    return character.toUpperCase() === character ? character.toLowerCase() :\
    \ character.toUpperCase();\n  }).join(\"\");\n}\n", "    return string.split('')\n\
    \                .map(function(letter){\n                    return letter.toUpperCase();\n\
    \                })\n                .join('');\n}\n", "   return string.split(\"\
    \").map(function(letter){\n        return letter.toUpperCase() === letter ? letter.toLowerCase()\
    \ : letter.toUpperCase();\n    }).join(\"\");\n}", "  return string.toLowerCase()\n\
    \      .replace(/[a-z]/g, char => char.toUpperCase())\n      .replace(/[A-Z]/g,\
    \ char => char.toLowerCase())\n}\n", "  return string.toLowerCase().replace(/[a-z]/g,\
    \ function(c){\n    return c.toUpperCase();\n  });\n}", "    return string.toLowerCase().toUpperCase();\n\
    }\n", "  return string.toLowerCase().split('').reduce(function(acc, val){\n  \
    \  return acc.concat(val.toUpperCase());\n  }, []).join('');\n}\n", "    return\
    \ string.toLowerCase().replace(/[a-z]/g,function(_,letter){return letter.toUpperCase()})\n\
    }", "    return string.toLowerCase().split('')\n        .map(function(char){\n\
    \            return char.toUpperCase()\n        }).join('')\n}\n", "    var newString\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        var currentLetter\
    \ = string[i].toLowerCase();\n        var nextLetter = string[i].toUpperCase();\n\
    \        newString += nextLetter;\n    }\n    return newString;\n}\n", "  var\
    \ str = string.split(\"\").map(function(e){\n    return e.toLowerCase()\n  })\n\
    \  return str.join(\"\")\n}\n", "    return string.toUpperCase().replace( /[a-z]/g,\
    \ function(letter){\n        return letter.toUpperCase();\n    });\n}\n", "  \
    \  return string.toLowerCase().replace(/[a-z]/g,function(){\n         return String.fromCharCode(65+Math.random()*26);\n\
    \    });\n}\n", "\tvar newstring = \"\";\n\tfor(var i =0; i< string.length; i++){\n\
    \t\tvar letter = string[i];\n\t\tif (letter === string[i].toUpperCase()) \n\t\t\
    \tnewstring += letter.toUpperCase();\n\t\telse \n\t\t\tnewstring += letter.toLowerCase();\n\
    \t}\n\treturn newstring;\n}\n", "    return string.toLowerCase().split('').map(function(letter){\n\
    \        return letter.toUpperCase();\n    }).join('');\n}\n", "  return string.split('').map(function(x){\n\
    \    return x.toLowerCase()\n  }).join('')\n}\n", "    let newString = ''\n  \
    \  for(let i = 0; i < string.length; i++){\n        let char = string[i]\n   \
    \     if (char >= 'A' && char <= 'Z')\n            newString += char.charCodeAt(0)\
    \ - 87\n        else if (char >= 'a' && char <= 'z')\n            newString +=\
    \ char.charCodeAt(0) - 65\n        else\n            newString += char.charCodeAt(0)\n\
    \    }\n    return newString\n}\n\n", "\tconst newString = new String(string);\n\
    \tfor( let i = 0; i < newString.length; i++){\n\t\tnewString[i] = newString[i].toUpperCase();\n\
    \t\tnewString[i] = newString[i].toLowerCase();\n\t}\n\treturn newString;\n}\n",
  "    return string.toLowerCase().toUpperCase();\n}\n", "    var flip = \"\";\n \
    \   for(let i = 0; i < string.length; i++){\n        flip += string[i].toUpperCase();\n\
    \        flip += string[i].toLowerCase();\n    }\n    return flip;\n}\n", "  \
    \  for(var i = 0; i < string.length; i++){\n        if (string.toLowerCase() ===\
    \ string.toUpperCase()) string = string.toUpperCase();\n        else string =\
    \ string.toLowerCase();\n    }\n    return string;\n}\n", "  return string.split(\"\
    \").map(function(character){\n    return character.toLowerCase() === character\n\
    \      ? character.toUpperCase()\n      : character.toLowerCase();\n  }).join(\"\
    \");\n}\n", "  return string.split('').reduce(\n    function(previous, current){\n\
    \      return previous + current[0].toUpperCase() + current.toLowerCase()\n  \
    \  }\n  )\n}\n", "    return string.toLowerCase().replace(/[a-z]/g, function(char){\n\
    \        return char.toUpperCase();\n    });\n}\n", "  return string.toLowerCase().split('').reverse().join('');\n\
    }\n", "\tvar string = string.split(\"\");\n\tfor(var i = string.length - 1; i\
    \ >= 0; i--){\n\t\tstring[i] = string[i].toUpperCase();\n\t\tif(i !== 0){\n\t\t\
    \tstring[i] = string[i].toLowerCase();\n\t\t}\n\t}\n\treturn string.join(\"\"\
    );\n}\n", "    return string.split('').map(function(x){\n        if (/[A-Z]/.test(x))\
    \ {\n            return x.toLowerCase();\n        } else {\n            return\
    \ x.toUpperCase();\n        }\n    }).join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function(letter){\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function(letter){\n        return letter.toLowerCase();\n    });\n}\n", "  return\
    \ string.toLowerCase().replace(/[A-Z]/g,function(c){return c.toUpperCase();});\n\
    }\n", "  return string.replace(/[a-z]/g, function(match){ return match.toUpperCase()\
    \ });\n}\n</code>\n<|/ a dscore=1 tags=javascript,node.js |>\n<| a |>\nIf you\
    \ need to change all caps to small caps, you can just use toLowerCase().\n<code>\n\
    var string = \"Hello\";\nvar smallCapsString = string.toLowerCase(); //\"hello\"\
    \n</code>\n<|/ a tags=javascript,node.js dscore=0 |>\n<| c |>\nI believe it is,\
    \ but I guess I got my answer too quickly and I didn't see the rest of yours.\n\
    <|/ c |>\n<| a dscore=0 |>\nThe String.replace() method does not take regular\
    \ expressions.\nIf you want to replace all capitals, you can simply use .toUpperCase()\
    \ with the String.\n<code>\nvar string = \"Hello, World\";\nstring = string.toUpperCase();\n\
    </code>\n<|/ a tags=javascript,node.js |>\n<| a tags=javascript,node.js |>\n<code>",
  "  return string.split('').map(function(letter){\n    return letter.toUpperCase();\n\
    \  }).join('');\n}\n", "    return string.split('')\n      .map(function(character){\n\
    \        return character.toUpperCase() === character ? character.toLowerCase()\
    \ : character;\n      })\n      .join('');\n}\nexports.flip_case = flip_case;\n\
    \n", "\tvar new_str = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tnew_str += string.charAt(i) + string.charAt(i);\n\
    \t\t}\n\t\telse if(string.charCodeAt(i) >= 97 && string.charCodeAt(i) <= 122){\n\
    \t\t\tnew_str += string.charAt(i) + string.charAt(i);\n\t\t}\n\t\telse{\n\t\t\t\
    new_str += string.charAt(i);\n\t\t}\n\t}\n\treturn new_str;\n}\n", "    return\
    \ string.toLowerCase().split(' ').join(string.toUpperCase());\n}\n</code></pre>\n\
    \        </section>\n\n        <section>\n            <h3>Example</h3>\n     \
    \       <div id=\"code\">\n            <pre><code>&lt;div id=\"output\"&gt;&lt;/div&gt;\n\
    &lt;button onclick=\"document.getElementById('output').innerHTML = flip_case('Hello')\"\
    &gt;Flip 'Hello'&lt;/button&gt;\n</code></pre>\n            </div>\n         \
    \   <div>\n                <code>&lt;div id=\"output\"&gt;&lt;/div&gt;</code>\n\
    \                <button onclick=\"document.getElementById('output').innerHTML\
    \ = flip_case('Hello')\">Flip 'Hello'</button>\n            </div>\n        </section>\n\
    \n        <section>\n            <h3>Example</h3>\n            <div id=\"code\"\
    >\n            <pre><code>&lt;div id=\"output\"&gt;&lt;/div&gt;\n&lt;button onclick=\"\
    document.getElementById('output').innerHTML = flip_case('hELLO')\"&gt;Flip 'hELLO'&lt;/button&gt;\n\
    </code></pre>\n            </div>\n            <div>\n                <code>&lt;div\
    \ id=\"output\"&gt;&lt;/div&gt;</code>\n                <button onclick=\"document.getElementById('output').innerHTML\
    \ = flip_case('hELLO')\">Flip 'hELLO'</button>\n            </div>\n        </section>\n\
    \n        <section>\n            <h3>Example</h3>\n            <div id=\"code\"\
    >\n            <pre><code>&lt;div id=\"output\"&gt;&lt;/div&gt;\n&lt;button onclick=\"\
    document.getElementById('output').innerHTML = flip_case('HEllo')\"&gt;Flip 'HEllo'&lt;/button&gt;\n\
    </code></pre>\n            </div>\n            <div>\n                <code>&lt;div\
    \ id=\"output\"&gt;&lt;/div&gt;</code>\n                <button onclick=\"document.getElementById('output').innerHTML\
    \ = flip_case('HEllo')\">Flip 'HEllo'</button>\n            </div>\n        </section>\n\
    \n        <section>\n            <h3>Example</h3>\n            <div id=\"code\"\
    >\n            <pre><code>&lt;div id=\"output\"&gt;&lt;/div&gt;\n&lt;button onclick=\"\
    document.getElementById('output').innerHTML = flip_case('HeLlo')\"&gt;Flip 'HeLlo'&lt;/button&gt;\n\
    </code></pre>\n            </div>\n            <div>\n                <code>&lt;div\
    \ id=\"output\"&gt;&lt;/div&gt;</code>\n                <button onclick=\"document.getElementById('output').innerHTML\
    \ = flip_case('HeLlo')\">Flip 'HeLlo'</button>\n            </div>\n        </section>\n\
    \n        <section>\n            <h3>Example</h3>\n            <div id=\"code\"\
    >\n            <pre><code>&lt;div id=\"output\"&gt;&lt;/div&gt;\n&lt;button onclick=\"\
    document.getElementById('output').innerHTML = flip_case('hello')\"&gt;Flip 'hello'&lt;/button&gt;\n\
    </code></pre>\n            </div>\n            <div>\n                <code>&lt;div\
    \ id=\"output\"&gt;&lt;/div", "    string = string.toLowerCase();\n    string\
    \ = string.toUpperCase();\n    string = string.replace(\" \",\"\");\n    return\
    \ string;\n}\n", "    var flipped_string = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char >= 'a' && char\
    \ <= 'z'){\n            flipped_string += char.toUpperCase();\n        }else if(char\
    \ >= 'A' && char <= 'Z'){\n            flipped_string += char.toLowerCase();\n\
    \        }else{\n            flipped_string += char;\n        }\n    }\n    return\
    \ flipped_string;\n}\n", "    return string.split('').map(function(char) {\n \
    \       return char.charCodeAt(0) >= 97 ? char.toLowerCase() : char.toUpperCase();\n\
    \    }).join('');\n}\n", "  return string.toUpperCase().replace((string.toLowerCase()\
    \ || \"\").toUpperCase(), '$&$&');\n}\n", "    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        var letter = string.charAt(i);\n  \
    \      var upperCase = letter === letter.toUpperCase();\n        if(upperCase){\n\
    \            letter = letter.toLowerCase();\n        }\n        flipped += letter;\n\
    \    }\n    return flipped;\n}", "    return string.toUpperCase().split('').map(function(c){\
    \ return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); }).join('');\n\
    }\n", "    var lowercase_chars = /^[a-z]+$/gi;\n    var uppercase_chars = /^[A-Z]+$/gi;\n\
    \    if(!string || string.length <= 1){\n        return string;\n    }\n    if(lowercase_chars.test(string))\
    \ return string.toUpperCase();\n    else if(uppercase_chars.test(string)) return\
    \ string.toLowerCase();\n    else return \"\";\n}\n", "\tvar flipped_string =\
    \ '';\n\tvar string_list   = string.split(\"\");\n\tfor(var i = 0; i < string_list.length;\
    \ i++){\n\t\tvar letter = string_list[i].toLowerCase();\n\t\tswitch(letter){\n\
    \t\t\tcase \"a\":\n\t\t\tcase \"e\":\n\t\t\tcase \"i\":\n\t\t\tcase \"o\":\n\t\
    \t\tcase \"u\":\n\t\t\t\tletter = letter.toUpperCase();\n\t\t\t\tbreak;\n\t\t\t\
    case \"b\":\n\t\t\tcase \"c\":\n\t\t\tcase \"d\":\n\t\t\tcase \"f\":\n\t\t\tcase\
    \ \"g\":\n\t\t\tcase \"h\":\n\t\t\tcase \"j\":\n\t\t\tcase \"k\":\n\t\t\tcase\
    \ \"l\":\n\t\t\tcase \"m\":\n\t\t\tcase \"n\":\n\t\t\tcase \"p\":\n\t\t\tcase\
    \ \"q\":\n\t\t\tcase \"r\":\n\t\t\tcase \"s\":\n\t\t\tcase \"t\":\n\t\t\tcase\
    \ \"v\":\n\t\t\tcase \"w\":\n\t\t\tcase \"x\":\n\t\t\tcase \"y\":\n\t\t\tcase\
    \ \"z\":\n\t\t\t\tletter = letter.toLowerCase();\n\t\t\t\tbreak;\n\t\t}\n\t\t\
    flipped_string += letter;\n\t}\n\treturn flipped_string;\n}\n", "  return string.toLowerCase().split('').reduce((a,b)=>a+=b.toUpperCase(),\"\
    \");\n}\n", "    return string.split('')\n    .map(function (el) {\n        return\
    \ el.toLowerCase() === el ? el.toUpperCase() : el;\n    })\n    .join('');\n}\n",
  "    return string.split('').map(function(c){\n        return (c === c.toUpperCase())\
    \ ? c.toLowerCase() : c.toUpperCase();\n    }).join('');\n}\n", "    return string.toLowerCase().split('').map(letter\
    \ => letter.toUpperCase()).join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function(character) {\n        return character.toUpperCase();\n    });\n}\n",
  "\treturn string.split(\"\").map(function(char){\n\t\treturn char.toLowerCase()\
    \ === char ? char.toUpperCase() : char;\n\t}).join(\"\");\n}\n", "  return string.replace(/[a-z]/g,\n\
    \    function(letter){\n      return letter.toUpperCase();\n    }\n  ).replace(/[A-Z]/g,\n\
    \    function(letter){\n      return letter.toLowerCase();\n    }\n  );\n}\n",
  "    return string.replace(/[a-z]/g, function(v){\n        return v.slice(0,1).toUpperCase()\
    \ + v.slice(1).toLowerCase()\n    });\n}\n", "    var newString = string.split('');\n\
    \    for(var i=0;i<newString.length;i++){\n        var currentChar = newString[i].toLowerCase();\n\
    \        var nextChar = newString[i].toUpperCase();\n        var nextCharFlipped\
    \ = nextChar.charAt(0).toLowerCase() + nextChar.slice(1);\n        newString[i]\
    \ = currentChar + nextCharFlipped;\n    }\n    return newString.join('');\n}\n",
  "  return string.split(\"\").reduce(function(a, b){\n    return b.toLowerCase()\
    \ === a.toUpperCase() ? a.toUpperCase() : a.toLowerCase();\n  });\n}\n", "   \
    \ string=String(string);\n    return string.toLowerCase().replace(/[a-z]/ig,function(str){return\
    \ str.substring(0,1).toUpperCase()+str.substring(1)});\n}\n", "  return string.split('').map(letter\
    \ => letter === letter.toLowerCase() ? letter.toUpperCase() : letter.toLowerCase()).join('');\n\
    }\n", "\tvar str= \"\";\n\t\n\tfor (var i = 0; i < string.length; i++) {\n\t\t\
    str = str + string[i].toUpperCase();\n\t}\n\t\n\tfor (var i = 0; i < string.length;\
    \ i++) {\n\t\tstr = str + string[i].toLowerCase();\n\t}\n\t\n\treturn str;\n}\n",
  "    var flipped_string = \"\";\n    for(var i=0;i<string.length;i++){\n       \
    \ flipped_string += string.charAt(i).toLowerCase()\n    }\n    return flipped_string\n\
    }\n", "\treturn string.replace(/[a-z]/g, function(l){\n\t\treturn l.toUpperCase();\n\
    \t});\n}\n", "    return string.split('').map(function(letter){\n        return\
    \ letter.toUpperCase()\n    }).join('')\n}\n", "    string = string.toUpperCase();\n\
    \    return string.charAt(0) + string.slice(1);\n}\n", "    return string.split(\"\
    \").map(function(char){\n        return char.toUpperCase() === char ? char.toLowerCase()\
    \ : char;\n    }).join(\"\");\n}\n</code>\nNow that we have a function to change\
    \ the case of the string, we need to figure out how to reverse it so each character\
    \ is switched back to its original position. \nThis can be done with a very simple\
    \ recursive function.\n<code>", "  return string.toUpperCase().replace(/[a-z]/g,function(l){\n\
    \    return l.toUpperCase()\n  });\n}\n</code>\nNow that we've got a function\
    \ we can pass to map, we have this:\n<code>", "  var flipped_string = string.toLowerCase();\
    \ \n  var flipped_characters = flipped_string.split('');\n  for(var i in flipped_characters){\n\
    \    flipped_characters[i] = flipped_characters[i].toUpperCase(); \n  }\n  return\
    \ flipped_characters.join('');\n}\n</code>\n<|/ a tags=javascript,string,arrays,char\
    \ dscore=2 |>\n<| a dscore=2 |>\nYou can use String.prototype.split() and String.prototype.charAt()\
    \ methods to get the desired output.\n\n<code>\nvar string = 'aBcD';\nvar arr\
    \ = string.split('');\n\nvar newArr = arr.map(function(e, i, a) {\n  return (a.length\
    \ - i - 1) * [String.fromCharCode(e.charCodeAt() - 97)].concat(a[i + 1]);\n});\n",
  "    return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
    }\n", "    return string.toLowerCase()\n    .replace(/^[a-z]/, function(letter){\n\
    \        return String.fromCharCode(letter.charCodeAt(0) + 32) });\n}\n", "  \
    \  return string.toLowerCase()\n            .replace(/([a-z])(?=[A-Z])/g, $1 =>\
    \ $1.toUpperCase())\n            .replace(/([A-Z])(?=[A-Z][a-z])/g, $1 => $1.toLowerCase());\n\
    }\n", "    return string.split('').reduce(function(previous, current){\n     \
    \   return previous + ((current === \"a\") ? \"A\" : current.toUpperCase());\n\
    \    }, '');\n}\n", "    string = string.toLowerCase();\n    string = string.toUpperCase();\n\
    \    string = string.toLowerCase();\n    return string;\n}\n", "    return string.split('')\n\
    \            .map(function(a){\n                return a.toLowerCase().charCodeAt(0)\
    \ - 96 < 97 ? a.toLowerCase() : a.toUpperCase();\n            })\n           \
    \ .join('');\n}\n", "    return string.split('').map(function(letter){\n     \
    \   return letter===letter.toUpperCase()?letter.toLowerCase():letter.toUpperCase();\n\
    \    }).join('');\n}\n", "    return string.split('').reduce((a, c) => a.toLowerCase()\
    \ === c.toLowerCase() ? a.toUpperCase() : a, string)\n}\n", "    let new_string\
    \ = string.toLowerCase()\n    new_string = new_string.replace(new_string, (word)\
    \ => {\n        if (word[0] === \"a\" || word[0] === \"e\" || word[0] === \"i\"\
    \ || word[0] === \"o\" || word[0] === \"u\"){\n            return word.toUpperCase()\n\
    \        }\n        return word\n    })\n    new_string = new_string.replace(new_string,\
    \ (word) => {\n        if (word[0] === \"A\" || word[0] === \"E\" || word[0] ===\
    \ \"I\" || word[0] === \"O\" || word[0] === \"U\"){\n            return word.toUpperCase()\n\
    \        }\n        return word\n    })\n    return new_string\n}\n", "  return\
    \ string.split('').map(function(char){\n    return (char.toLowerCase() === char)\
    \ ? char.toUpperCase() : char.toLowerCase();\n  }).join('');\n}\n", "    var i,\
    \ char_code = 0, new_string = \"\";\n    for(i=0;i<string.length;i++){\n     \
    \   if(string[i] >= 97 && string[i] <= 122){\n            char_code += 32;\n \
    \           new_string += string[i].toUpperCase();\n        }else{\n         \
    \   new_string += string[i];\n        }\n    }\n    return new_string;\n}\n",
  "  return string.toLowerCase().replace(/[A-Z]/g, function(match){\n    return match.toUpperCase();\n\
    \  });\n}\n", "    return string.replace(/[a-z]+/g,function(f){return f.toUpperCase()})\
    \ // Replace all lowercase characters with their uppercase counterparts.\n   \
    \          .replace(/[A-Z]+/g,function(f){return f.toLowerCase()}); // Replace\
    \ all uppercase characters with their lowercase counterparts.\n}\n", "    return\
    \ string.toLowerCase().replace(/([a-z])([A-Z])/g, \"$1_$2\");\n}\n", "    var\
    \ str_arr = string.split(\"\");\n    str_arr.forEach(function(char, i){\n    \
    \    if(char == char.toUpperCase() && i+1 < str_arr.length && char == str_arr[i+1]){\n\
    \            str_arr[i+1] = char.toLowerCase();\n        }\n    });\n    return\
    \ str_arr.join(\"\");\n}\n", "    for(var i=0; i<string.length; i++){\n      \
    \  switch(string.charAt(i)){\n            case 'a':\n            case 'A':\n \
    \               string = string.charAt(i).toUpperCase();\n                break;\n\
    \            case 'b':\n            case 'B':\n                string = string.charAt(i).toLowerCase();\n\
    \                break;\n        }\n    }\n    return string;\n}\n", "\treturn\
    \ string.toLowerCase().split(\"\").reduce(function(string, letter, index){\n\t\
    \treturn string + (index === 0 ? letter : letter.toUpperCase());\n\t}, \"\");\n\
    }\n", "    return string.toLowerCase().replace(/[a-z]/g,function(c){return c.toUpperCase();});\n\
    }\n", "  return string.split('').map(function(x){\n    return x === x.toUpperCase()\
    \ ? x.toLowerCase() : x.toUpperCase();\n  }).join('');\n}\n", "    return string.toLowerCase().replace(/[a-z]/g,\
    \ function(letter){\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function(letter){\n        return letter.toLowerCase();\n    });\n}\n", "  \
    \  return string.toLowerCase().split('').map(function(char){\n        return char.toUpperCase()\n\
    \    }).join('')\n}\n", "    return string.split('')\n        .map(function(str)\
    \ {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        })\n\
    \        .join('');\n}\n", "\treturn string.split('').map(c => {\n\t\tif(c ==\
    \ '-') return c.toUpperCase()\n\t\telse return c.toLowerCase()\n\t}).join('')\n\
    }\n", "  return string.split('').reduce(function(acc, character){\n    return\
    \ character.toUpperCase() === character.toLowerCase() ? character.toUpperCase()\
    \ : character.toLowerCase();\n  });\n}\n", "    string = string.replace(/([a-z])([A-Z])/g,\
    \ \"$1_$2\");\n    string = string.toUpperCase();\n    string = string.replace(/([A-Z])([A-Z])/g,\
    \ \"$1_$2\");\n    return string;\n}\n", "  var uppercase_letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  var lowercase_letters = \"abcdefghijklmnopqrstuvwxyz\";\n  var string_to_return\
    \ = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (uppercase_letters.indexOf(string[i])\
    \ > -1){\n      string_to_return += string[i].toUpperCase();\n    }else if (lowercase_letters.indexOf(string[i])\
    \ > -1){\n      string_to_return += string[i].toLowerCase();\n    }else if (string[i]\
    \ == \" \"){\n      string_to_return += \"_\";\n    }\n  }\n  return string_to_return;\n\
    }\n", "    return string.toLowerCase().split('').reduce(function(previous, current,\
    \ index, array){\n        return index === 0 ? current : previous + current.toUpperCase()\
    \ + previous;\n    });\n}\n", "    return string.split(\"\").map(c => c === c.toLowerCase()\
    \ ? c.toUpperCase() : c.toLowerCase()).join(\"\");\n}\n", "\treturn string.toLowerCase().split('\
    \ ').map(function(x){ return x.toUpperCase(); }).join(' ');\n}\n", "  return string.split('').map(function(item){\n\
    \    return item === item.toUpperCase()? item.toLowerCase() : item.toUpperCase();\n\
    \  }).join('');\n}", "    return string.replace(/[a-z]/g,function(c){\n      \
    \  return c.toUpperCase();\n    }).replace(/[A-Z]/g,function(c){\n        return\
    \ c.toLowerCase();\n    });\n}", "    // >>> flip_case(\"hello\")\n    // \"hELlo\"\
    \n    return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
    }\n", "    var s = string.split(\"\");\n    for (var i=0; i < s.length; i++){\n\
    \        if (s[i] >= 'A' && s[i] <= 'Z'){\n            s[i] = s[i] - 'A' + 'a';\n\
    \        }\n    }\n    return s.join(\"\");\n}\n", "    return string.replace(/([a-z])([A-Z])/g,\n\
    \        function($1,$2,$3) {\n            return $2.toUpperCase() + $3.toLowerCase();\n\
    \        });\n}\n\n", "    let strArray = string.split(\"\");\n    strArray.forEach(element\
    \ => {\n        switch(element){\n            case \"a\":\n                element\
    \ = \"A\";\n                break;\n            case \"b\":\n                element\
    \ = \"B\";\n                break;\n            case \"c\":\n                element\
    \ = \"C\";\n                break;\n            case \"d\":\n                element\
    \ = \"D\";\n                break;\n            case \"e\":\n                element\
    \ = \"E\";\n                break;\n            case \"f\":\n                element\
    \ = \"F\";\n                break;\n            case \"g\":\n                element\
    \ = \"G\";\n                break;\n            case \"h\":\n                element\
    \ = \"H\";\n                break;\n            case \"i\":\n                element\
    \ = \"I\";\n                break;\n            case \"j\":\n                element\
    \ = \"J\";\n                break;\n            case \"k\":\n                element\
    \ = \"K\";\n                break;\n            case \"l\":\n                element\
    \ = \"L\";\n                break;\n            case \"m\":\n                element\
    \ = \"M\";\n                break;\n            case \"n\":\n                element\
    \ = \"N\";\n                break;\n            case \"o\":\n                element\
    \ = \"O\";\n                break;\n            case \"p\":\n                element\
    \ = \"P\";\n                break;\n            case \"q\":\n                element\
    \ = \"Q\";\n                break;\n            case \"r\":\n                element\
    \ = \"R\";\n                break;\n            case \"s\":\n                element\
    \ = \"S\";\n                break;\n            case \"t\":\n                element\
    \ = \"T\";\n                break;\n            case \"u\":\n                element\
    \ = \"U\";\n                break;\n            case \"v\":\n                element\
    \ = \"V\";\n                break;\n            case \"w\":\n                element\
    \ = \"W\";\n                break;\n            case \"x\":\n                element\
    \ = \"X\";\n                break;\n            case \"y\":\n                element\
    \ = \"Y\";\n                break;\n            case \"z\":\n                element\
    \ = \"Z\";\n                break;\n            case \"A\":\n                element\
    \ = \"a\";\n                break;\n            case \"B\":\n                element\
    \ = \"b\";\n                break;\n            case \"C\":\n                element\
    \ = \"c\";\n                break;\n            case \"D\":\n                element\
    \ = \"d\";\n                break;\n            case \"E\":\n                element\
    \ = \"e\";\n                break;\n            case \"F\":\n                element\
    \ = \"f\";\n                break;\n            case \"G\":\n                element\
    \ = \"g\";\n                break;\n            case \"H\":\n                element\
    \ = \"h\";\n                break;\n            case \"I\":\n                element\
    \ = \"i\";\n                break;\n            case \"J\":\n                element\
    \ = \"j\";\n                break;\n            case \"K\":\n                element\
    \ = \"k\";\n                break;\n            case \"L\":\n                element\
    \ = \"l\";\n                break;\n            case \"M\":", "    return string.toLowerCase().split('').map(function(letter){return\
    \ letter.toUpperCase()}).join('')\n}\n", "    string = string.toLowerCase();\n\
    \    string = string.toUpperCase();\n    return string;\n}\n", "    return string.replace(/[a-z]/g,\
    \ function(letter) {\n        return letter.toUpperCase();\n    });\n}\n", " \
    \   var flipped = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ if(string.charCodeAt(i) >= 65 && string.charCodeAt(i) <= 90){\n            flipped\
    \ += string.charAt(i) + string.charAt(i);\n            flipped += string.charAt(i).toUpperCase();\n\
    \            flipped += string.charAt(i).toLowerCase();\n        }else if(string.charCodeAt(i)\
    \ >= 97 && string.charCodeAt(i) <= 122){\n            flipped += string.charAt(i)\
    \ + string.charAt(i);\n            flipped += string.charAt(i).toUpperCase();\n\
    \            flipped += string.charAt(i).toLowerCase();\n        }else{\n    \
    \        flipped += string.charAt(i);\n        }\n    }\n    return flipped;\n\
    }", "  var uppercase= string.toUpperCase();\n  var lowercase= string.toLowerCase();\n\
    \  var result= uppercase+lowercase;\n  return result;\n}", "\treturn string.toLowerCase().replace(/[a-z]/g,function(c){\n\
    \t\treturn c.toUpperCase();\n\t});\n}\n", "    return string.replace(/([a-z])([A-Z])/g,\
    \ (m, l1, l2) => l1+l2.toLowerCase());\n}\n", "    let uppercase = string.toUpperCase();\n\
    \    let lowercase = string.toLowerCase();\n    return uppercase+lowercase;\n\
    }\n", "  return string.toUpperCase().split('').map(function(x){return x.toLowerCase();}).join('');\n\
    }\n", "  return string.toUpperCase().split(\"\").map(function(word){\n      return\
    \ word.toLowerCase()\n  }).join(\"\")\n}\n</cell>\n<cell>", "  return string.toLowerCase().replace(/[a-z]/g,function(c){\n\
    \    return String.fromCharCode((c>=97 ? \"a\" : c>=65 ? \"A\" : \"c\" )+c.charCodeAt(0)-32);\n\
    \  });\n}\n\n", "    return string.toLowerCase().split('').map(function(letter){return\
    \ letter.toUpperCase()}).join('');\n}\n</code>\nThe function will take a string,\
    \ convert to lowercase, split each letter into an array and map each letter to\
    \ an uppercase version (the reverse of the function above).\nThe flipped string\
    \ is then joined back together with a space as the delimiter.\n<|/ a |>\n<| c\
    \ |>\nThank you this helped me a lot\n<|/ c |>\n<| c |>\nThis is so cool! Could\
    \ you explain what `map` does? I'm new to JS and I've heard of it but never used\
    \ it.\n<|/ c |>\n<| c |>\nmap applies a function to each element of an array,\
    \ in this case, `string.toLowerCase().split('')`, which converts the string into\
    \ an array of each character, then maps each character to a new character and\
    \ returns the new array as an array of strings.\n<|/ c |>\n<| c |>\nI understand\
    \ it now. Thanks again.\n<|/ c |>\n<| a tags=string,javascript dscore=2 |>\n<code>",
  "  return string.replace(/^[a-z]/, function(){\n    return String.fromCharCode(\n\
    \      (string.charCodeAt(0) + 32) % 26 + 97\n    )\n  })\n}\n", "\treturn string.charAt(0).toUpperCase()\
    \ + string.slice(1);\n}\n", "\treturn string.toLowerCase().replace(/[a-z]/g,function(c){return\
    \ String.fromCharCode(c.charCodeAt(0)+32);});\n}", "  var new_string = \"\";\n\
    \  for(var i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    new_string += string[i].toUpperCase();\n\
    \  }\n  return new_string;\n}\n", "\t\n\treturn string.split('').map((char) =>\
    \ {\n\t\tif(char.charCodeAt(0) > 96 && char.charCodeAt(0) < 123){\n\t\t\treturn\
    \ (char.charCodeAt(0) - 64) + 32;\n\t\t}\n\t\treturn char.charCodeAt(0);\n\t}).join('');\n\
    }\n", "  var result = '';\n  var length = string.length;\n  for(var i = 0; i <\
    \ length; i++){\n    result += string[i].toUpperCase();\n    result += string[i].toLowerCase();\n\
    \  }\n  return result;\n}\n", "    return string.toLowerCase().replace(/[\\u00c0-\\\
    u00df]/g, function(character){\n        return String.fromCharCode(character.charCodeAt(0)\
    \ - 32);\n    });\n}\n", "    var result = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \" \") result += string[i].toUpperCase();\n\
    \        else result += string[i].toLowerCase();\n    }\n    return result;\n\
    }\n", "    return string.toLowerCase().split('').reduce((p,c) => {return p + (c\
    \ === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()) } , '')\n}\n", "  \
    \  return string.split(\"\").map(i => {\n        if(i.charCodeAt(0) > 122){\n\
    \            return i.toUpperCase();\n        }\n        return i.toLowerCase();\n\
    \    }).join(\"\");\n}\n", "\treturn string.toLowerCase().replace(/[a-z]/g,function(letter){return\
    \ String.fromCharCode(letter.charCodeAt(0)+32)}).replace(/[A-Z]/g,function(letter){return\
    \ String.fromCharCode(letter.charCodeAt(0)-32)});\n}", "  return string.split('').reduce(function(new_string,\
    \ char){\n    return new_string + (char.match(/[a-z]/) ? char.toUpperCase() :\
    \ char.toLowerCase());\n  }, string);\n}\n", "    return string.toUpperCase().replace(/[a-z]/g,\
    \ function(char){\n        return char.toUpperCase();\n    });\n}\n", "    return\
    \ string.split('').reduce((result, char) => {\n        return char === char ?\
    \ result : result.concat(String.fromCharCode(char.toUpperCase().charCodeAt(0)\
    \ - 96))\n    }, '')\n}\n", "    return string.toLowerCase().split('').reduce((result,\
    \ char) => {\n        if(char === char.toUpperCase()){\n            return result\
    \ + char.toLowerCase()\n        } else {\n            return result + char.toUpperCase()\n\
    \        }\n    })\n}", "    string = string.toUpperCase();\n    string = string.toLowerCase();\n\
    \    return string;\n}\n", "\treturn string.toLowerCase()\n\t\t.toUpperCase();\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

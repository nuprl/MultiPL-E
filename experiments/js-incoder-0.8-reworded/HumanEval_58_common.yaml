name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  l1 = l1 || [];\n  l2 = l2 || [];\n  var ret = [];\n  var hash = {};\n\
    \n  for (var i = 0; i < l1.length; i++){\n    hash[l1[i]] = 1;\n  }\n\n  for (var\
    \ i = 0; i < l2.length; i++){\n    if (!hash[l2[i]]){\n      ret.push(l2[i]);\n\
    \      hash[l2[i]] = 1;\n    }\n  }\n  return ret;\n}\n\n", "    var result =\
    \ [];\n\n    l1 = l1.concat();\n    l2 = l2.concat();\n    for(var i=0; i<l1.length;\
    \ i++){\n        if (l2.indexOf(l1[i]) == -1){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n};\n", "  return l1.filter(function(e){\n\
    \    return l2.indexOf(e) != -1;\n  });\n}\n", "  var result = [];\n  var i =\
    \ 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ {\n      if (l1.length === l2.length) {\n        i++;\n      }\n    }\n  }\n\
    \  return result.sort();\n}\n", "    if(!Array.isArray(l1) || !Array.isArray(l2))\
    \ return [];\n\n    var a1 = l1.slice(), a2 = l2.slice();\n    for(var i = 0;\
    \ i < a1.length; i++){\n        for(var j = 0; j < a2.length; j++){\n        \
    \    if(a1[i] === a2[j]) a1.splice(i, 1);\n        }\n    }\n\n    return a1.length\
    \ ? a1 : a2;\n}\n", "  var i, j, cur, len1, len2, result = [];\n  for(i = 0, len1\
    \ = l1.length; i < len1; i++) {\n    for(j = 0, len2 = l2.length; j < len2; j++)\
    \ {\n      cur = l1[i];\n      if(l2.indexOf(cur) !== -1) result.push(cur);\n\
    \    }\n  }\n  return result;\n}\n", "  if(l2.length < l1.length) l1= l1.concat();\
    \ l2= l2.concat();\n  var result = l1.filter(function(value, index, self){ return\
    \ self.indexOf(value) == index; });\n  result = result.concat(l2.filter(function(value,\
    \ index, self){ return self.indexOf(value) == index; }));\n  return result.sort(function(a,\
    \ b){ return l1.indexOf(a) - l1.indexOf(b); });\n}\n", "    var out = [];\n  \
    \  var tmp = [];\n    var l1i = 0;\n    var l2i = 0;\n    while (l1 < l2) {\n\
    \        if (l1 != l2){\n            tmp[l1i++] = l1;\n        }\n        l1++;\n\
    \    }\n    while (l2 < l1) {\n        tmp[l2i++] = l2;\n        l2++;\n    }\n\
    \    tmp.sort(function(a, b){\n        return a - b;\n    });\n    var l2x = 0;\n\
    \    while (l2 < l1) {\n        while (tmp[l2x] == l2 && l2x < tmp.length) l2x++;\n\
    \        if (l2x == tmp.length) break;\n        out[l2++] = tmp[l2x++];\n    }\n\
    \    return out;\n}\n", "    var result = [];\n    var counter = 0;\n    for(var\
    \ i in l2){\n        counter++;\n        if(l2.hasOwnProperty(i) && l1.hasOwnProperty(i)\
    \ && l2[i] === l1[i]){\n            result.push(l2[i]);\n        }\n    }\n  \
    \  return result.length > counter ? result : false;\n}\n", "    if (l1.length\
    \ != l2.length){\n        throw Error(\"Arrays must have equal length\");\n  \
    \  }\n    var result = [];\n    for (var i = 0; i < l1.length; i++){\n       \
    \ if (l1[i] in l2){\n            result.push(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "  var i, ret = [];\n  for(i = 0; i < l1.length; i++){\n    if(!l2.includes(l1[i])){\n\
    \      ret.push(l1[i]);\n    }\n  }\n  return ret;\n}\n", "    return l1.filter(function(x){\n\
    \        return l2.indexOf(x) != -1\n    });\n}\n\nexports.common = common;\n",
  "  var i = 1; \n  var j = 1;\n  var set = {};\n  var result = [];\n\n  while( i<l1.length\
    \ && j<l2.length){\n  \tif( l1[i] === l2[j]){\n  \t\ti++;\n  \t\tj++;\n  \t}\n\
    \  \telse{\n  \t\tif( !set[l1[i]] ){ \n  \t\t\tset[l1[i]] = [];\n  \t\t\ti++;\n\
    \  \t\t}\n  \t\tset[l1[i]].push( l2[j] );\n  \t\tj++;\n  \t}\n  }\n\n  while(j<l2.length){\n\
    \  \tset[l1[i]] = [];\n  \ti++;\n  }\n\n  while( i<l1.length){\n  \tset[l1[i]].push(\
    \ l2[j] );\n  \tj++;\n  }\n\n  for( i in set )\n    result.push( set[i] );\n\n\
    \  return(result);\n}\n", "  return unique(l1).filter(function(i){\n    return\
    \ l2.indexOf(i) < 0;\n  });\n}\n", "  let result = [];\n  for(let i = 0; i < l1.length;\
    \ i++){\n    for(let j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var tmp1 = [], tmp2 = [];\n  var i = 0;\n  var l = Math.min(l1.length,\
    \ l2.length);\n  while(i < l){\n    if (l1[i] === l2[i]){\n        tmp1.push(l1[i]);\n\
    \        tmp2.push(l2[i]);\n        i++;\n    }else{\n        if (l1[i] < l2[i]){\n\
    \            tmp1.push(l1[i]);\n        }else{\n            tmp2.push(l2[i]);\n\
    \        }\n    }\n  }\n  return tmp1.concat(tmp2);\n};\n", "    if (l1.length\
    \ != l2.length) return false;\n    var d = l1[0]; //Iterate over all the elements\
    \ of the first array.\n    for (var i = 0; i < l1.length; i++) {\n        if (l2[0]\
    \ == l1[i]) {\n            l1.splice(i, 1);\n            l2.splice(i, 1);\n  \
    \          d++;\n        }\n    }\n    if (d) return d; //Common element found.\n\
    \    return false;\n}", "  var l = Math.min(l1.length, l2.length);\n  var i =\
    \ 1;\n  var result = new Array(l);\n  while(i<l){\n    if(l1[i] === l2[i]){\n\
    \      result[i] = l1[i];\n      i++;\n    }\n    else{\n      result[i-1] = l1[i];\n\
    \      if(i === l2){\n        break;\n      }\n      result[i] = l2[i];\n    \
    \  i++;\n    }\n  }\n  return result;\n}\n", "  var result = [],\n      i = 1,\n\
    \      j;\n  for(;i<l1.length; i++){\n    for(j=0;j<l2.length;j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "  return getCommonElements(l1, l2).filter(function\
    \ (el,index, arr) {\n    return arr.indexOf(el) == index;\n  });\n}\n", "  var\
    \ i = 0, j = 0, cur, curLen = l1.length;\n  var ret = [];\n  while (i < l1.length\
    \ && j < l2.length) {\n    cur = l1[i];\n    if (cur === l2[j]){\n      ret.push(cur);\n\
    \      i++;\n      j++;\n    }else{\n      j++;\n    }\n  }\n  while (i < l1.length){\n\
    \    cur = l1[i];\n    ret.push(cur);\n    i++;\n  }\n  while (j < l2.length){\n\
    \    cur = l2[j];\n    ret.push(cur);\n    j++;\n  }\n  return ret;\n}\nmodule.exports\
    \ = common;\n\n},{}],16:[function(_dereq_,module,exports){\n(function (global){",
  "    var a = l1.concat([]);\n    var b = l2.concat([]);\n    var result = [];\n\
    \    for(var i=0; i<a.length; i++){\n        if(b.indexOf(a[i]) != -1){\n    \
    \        result.push(a[i]);\n        }\n    }\n    return result;\n}\n", "  var\
    \ i = 0, j = 0;\n  var a = l2.length; i < l1.length; i++){\n    if(l2.indexOf(l1[i])<l1.indexOf(l2[j])){\n\
    \      l1[i] += l2.length - i; l2[j] += l1.length - j;\n    }\n    else if(l2[j]>l1[i]){\n\
    \      l1[j] += l1.length - i; l2[i] += l2.length - j;\n    }\n  }\n  while(i<l2.length){\
    \ l2[i++] = 0; }\n  while(j<l1.length){ l1[j++] = 0; }\n  return l1.concat(l2);\n\
    }\n", "    if (l1.length > l2.length) {\n        return l1;\n    }\n    return\
    \ l2;\n}\n", "  var out = [],\n      n = l1.length,\n      m = l2.length,\n  \
    \    i, j, k;\n\n  for(i = 0; i < n; i++){\n    for(j = 0; j < m && (k = indexOf(l1[i],\
    \ l2[j])) == -1 && j < k; j++);\n    if( k != -1 ) out.push(l1[i]);\n  }\n\n \
    \ return out;\n}\n", "  var result = [];\n  var l = Math.min(l1.length, l2.length);\n\
    \  while(l){\n    if(l1 > l2) result.push(l1.pop());\n    else if(l2 > l1) result.push(l2.pop());\n\
    \    else break;\n    l--;\n  }\n  return result;\n}\n\n},{\"./common\":91}],94:[function(require,module,exports){\n\
    \"use strict\";\n\nmodule.exports = find;\n", "    return [].slice.call(l1).filter(function(v){\n\
    \      return l2.indexOf(v) !== -1;\n    }).concat([].slice.call(l2).filter(function(v){\n\
    \      return l1.indexOf(v) !== -1;\n    }));\n}\n", "  var i, ret = [];\n  for(i\
    \ = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        ret.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return ret;\n};", "    return [].concat.apply([], l1.filter(function (el){\
    \ return l2.indexOf(el) >= 0; }));\n}\n", "    var t = [],\n        l = l1.length,\n\
    \        l2 = l2.length,\n        i,\n        j;\n    for(i = 0; i < l; i++){\n\
    \        for(j = 0; j < l2; j++){\n            if(l1[i] === l2[j]){\n        \
    \        t.push(l1[i]);\n                break;\n            }\n        }\n  \
    \  }\n    return t;\n}\n", "  return uniq(l1, l2, function(a, b){\n    return\
    \ a === b;\n  });\n}\n", "    if(l1.length === 0) {\n        return l2.slice();\n\
    \    }\n    if(l2.length === 0) {\n        return l1.slice();\n    }\n    var\
    \ c = [];\n    var i = 0;\n    var j = 0;\n    while (i < l1.length && j < l2.length)\
    \ {\n        if (l1[i] === l2[j]) {\n            c.push(l1[i]);\n            i++;\n\
    \            j++;\n        } else if (l1[i] > l2[j]) {\n            j++;\n   \
    \     } else {\n            i++;\n        }\n    }\n    return c;\n}\nexports.common\
    \ = common;", "  return Array.prototype.concat(l1).filter(function(element, index,\
    \ array){\n    return l2.indexOf(element) >= 0;\n  }).sort(function(elm1, elm2){\n\
    \    return elm1 - elm2;\n  });\n};\n", "  var i, lclen = l1.length,\n      l2,\
    \ l2, i = 0, ret = [];\n  while(i<lclen){\n    l2 = l2[i], ret.push(l2.i);\n \
    \   while(i<lclen&&l2[i].i < l1[l1.i])i++;\n  }\n  return ret;\n}\n", "  var l1\
    \ = l1 || [];\n  var l2 = l2 || [];\n  var i = 0, j = 0;\n\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      i++;\n      j++;\n  \
    \  } else {\n      i++;\n      j++;\n    }\n  }\n\n  return j;\n}\n", "  var result\
    \ = [];\n  var pos1 = -1, pos2 = -1;\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1.length !== l2.length){\n      break;\n    }\n    pos1 = l1.indexOf(l2[0]);\n\
    \    pos2 = l2.indexOf(l1[0]);\n    if(pos1 >= 0 && pos2 >= 0 && pos1 === pos2){\n\
    \      result.push(l1[pos1]);\n      l1.splice(pos1,1);\n      l2.splice(pos2,1);\n\
    \    }else if(pos1 > pos2){\n      result.push(l1[pos1]);\n      l1.splice(pos1,1);\n\
    \    }else{\n      result.push(l2[0]);\n      l2.splice(0,1);\n    }\n  }\n  if(l1.length\
    \ > 0){\n    result.push(l1[pos1]);\n  }\n  if(l2.length > 0){\n    result.push(l2[0]);\n\
    \  }\n  return result;\n}\n", "    return sort(unique(filter2(l1, l2)));\n}\n",
  "    var a = [], // Sorted left array.\n        b = [], // Sorted right array.\n\
    \        i, n = l1.length, // Length of left and right arrays.\n        m = l2.length;\n\
    \    // Clear out shared array storage. Will be repopulated as necessary.\n  \
    \  for(i = 0; i < m && (n>0 || m>0); i++) b[i] = l1[m=i];\n    for(i = 0, n =\
    \ l2.length; i<m && (n>0 || m>0); i++) a[l2.length=0] = b[l2.length=0] = null;\n\
    \    // Fill in any new entries in b.\n    for(i = m; i < n; i++) b[i] = l2[i];\n\
    \    // Remove any remaining entries from a.\n    for(i = n-1; i >= 0; i--) a[a.length=0]\
    \ = b[b.length=0] = null;\n    // Verify that both arrays have the same number\
    \ of entries with the same value.\n    return a.length === b.length ? a : b;\n\
    }\n", "    var o1 = [],\n        o2 = [],\n        i;\n    for (i = 0; i < l1.length;\
    \ i++){\n        if (l2.indexOf(l1[i]) === -1){\n            o1.push(l1[i]);\n\
    \        }\n    }\n    for (i = 0; i < l2.length; i++){\n        if (l1.indexOf(l2[i])\
    \ === -1){\n            o2.push(l2[i]);\n        }\n    }\n    return o1.concat(o2);\n\
    }\n", "  return uniqueSort(unique(l1), unique(l2));\n}\n", "\treturn filter(filter(l1,\
    \ identity), function(item, i, arr){\n\t\treturn indexOf(l2, item) >= 0;\n\t});\n\
    }\n", "  var set1 = new Set(l1),\n      set2 = new Set(l2);\n  return Array.from(set1).filter(x\
    \ => set2.has(x)).sort();\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\nYou can use Set and Array.from\n\n<code>\nlet arr1 = [4,5,6,7]\nlet arr2\
    \ = [1,4,3,65,45,7,65,34]\nlet commonArr = []\n\nlet set1 = new Set(arr1)\nlet\
    \ set2 = new Set(arr2)\nlet common = Array.from(set1).filter(x => set2.has(x))\n\
    \ncommonArr = common.sort()\n", "  var lc = l1.length, lp = l2.length, i = 0;\n\
    \  if(lc>lp){\n    return [];\n  }\n  for(;i<lc;i++){\n    if(l1[i]!==l2[i]){\n\
    \      break;\n    }\n  }\n  return l1[i==lc ? lc : i];\n}\n", "  var result =\
    \ [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] > l2[0]){\n    \
    \  result.unshift(l1.shift());\n    }else{\n      result.unshift(l2.shift());\n\
    \    }\n  }\n  return result.concat(l1, l2);\n}\n\n},{}],6:[function(_dereq_,module,exports){\n\
    'use strict';\n\nmodule.exports = function memoize(fn, hasher) {\n  var memo =\
    \ {};\n  var self = function(x){\n    if( x in memo ){\n      return memo[x];\n\
    \    }\n    else if( hasher ){\n      return hasher(x);\n    }\n    else{\n  \
    \    return x;\n    }\n  };\n  return typeof fn === \"function\" ? fn.bind(this)\
    \ : self;\n};\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\n\nvar\
    \ assert = _dereq_('assert');\nvar util = _dereq_('../util');\nvar is = _dereq_('../is');\n\
    \ndescribe('util', function() {\n  describe('typeOf', function() {\n    it(\"\
    should return 'array' for an array\", function() {\n      assert.strictEqual(util.typeOf([]),\
    \ 'array');\n    });\n\n    it(\"should return 'date' for new Date()\", function()\
    \ {\n      assert.strictEqual(util.typeOf(new Date()), 'date');\n    });\n\n \
    \   it(\"should return 'regexp' if a RegExp is passed in\", function() {\n   \
    \   assert.strictEqual(util.typeOf(new RegExp()), 'regexp');\n    });\n\n    it(\"\
    should return 'error' for an error object\", function() {\n      assert.strictEqual(util.typeOf(new\
    \ Error()), 'error');\n    });\n\n    it(\"should return 'null' for null\", function()\
    \ {\n      assert.strictEqual(util.typeOf(null), 'null');\n    });\n\n    it(\"\
    should return 'undefined' for undefined\", function() {\n      assert.strictEqual(util.typeOf(undefined),\
    \ 'undefined');\n    });\n\n    it(\"should return 'number' for number\", function()\
    \ {\n      assert.strictEqual(util.typeOf(3), 'number');\n    });\n\n    it(\"\
    should return 'number' for Infinity\", function() {\n      assert.strictEqual(util.typeOf(Infinity),\
    \ 'number');\n    });\n\n    it(\"should return 'NaN' for NaN\", function() {\n\
    \      assert.notStrictEqual(util.typeOf(NaN), 'number');\n    });\n  });\n\n\
    \  describe('isArray', function() {\n    it(\"should return 'true' for a plain\
    \ array\", function() {\n      assert.strictEqual(util.isArray([]), true);\n \
    \   });\n\n    it(\"should return 'true' for an Array\", function() {\n      assert.strictEqual(util.isArray(new\
    \ Array()), true);\n    });\n\n    it(\"should return 'false' for a non-array\"\
    , function() {\n      assert.strictEqual(util.isArray({}), false);\n      assert.strictEqual(util.isArray(1),\
    \ false);\n      assert.strictEqual(util.isArray('a'), false);\n      assert.strictEqual(util.isArray(true),\
    \ false);\n", "  var tmp = [];\n  var lnl1 = l1.length;\n  var lnl2 = l2.length;\n\
    \  var i = 0, j = 0;\n  while (i < lnl1 && j < lnl2){\n    if (l1[i] === l2[j]){\n\
    \      tmp.push(l1[i]);\n      i++;\n      j++;\n    }\n    else if (l1[i] < l2[j]){\n\
    \      i++;\n    }\n    else{\n      j++;\n    }\n  }\n  return tmp;\n}\n", " \
    \   var n1 = l1.length,\n        n2 = l2.length,\n        result = [],\n     \
    \   i\n    for(i = 0; i < n1 && i < n2; i++)\n        result.push(l1[i])\n   \
    \ for(; i < n1; i++)\n        result.push(l2[i])\n    for(; i < n2; i++)\n   \
    \     result.push(l1[i])\n    return result\n}\n", "    var l = [], i = 0\n  \
    \  while (l1 && l2 && l1[i] === l2[i]) l.push(l1[i++])\n    while (i < l1.length)\
    \ l.push(l1[i++])\n    return l\n}\n", "  l1 = l1 || [];\n  l2 = l2 || [];\n \
    \ var out = [], l1, l2, lc, i, j, k;\n  for(i = 0, l1 = l1.length; i < l1; i++){\n\
    \    for(j = 0, l2 = l2.length; j < l2; j++){\n      lc = true;\n      for(k =\
    \ 0, i = l1; i < l2; i++){\n        if(lc && l2[k] === l1[i]){\n          lc =\
    \ false;\n          break;\n        }\n      }\n      if(lc){ out.push(l1[i]);\
    \ } \n    }\n  }\n  return out;\n}\n", "  var out = [];\n  var ln = l1.length;\n\
    \  for(var i=0; i<ln; i++){\n    if(l2.indexOf(l1[i]) != -1){\n      out.push(l1[i]);\n\
    \    }\n  }\n  return out;\n}", "  var out = [],\n      li = 0,\n      ri = 0,\n\
    \      ln = l1.length,\n      rn = l2.length,\n      i, j, k;\n  while( li < ln\
    \ && ri < rn){\n    i = l1[li];\n    j = l2[ri];\n    if( l1[li] <= l2[ri] ){\n\
    \      out.push(i);\n      li++;\n    } else {\n      out.push(j);\n      ri++;\n\
    \    }\n  }\n  return out;\n}\n", "    var l=Math.min(l1.length,l2.length), i=0;\n\
    \    while(l--){\n        if(l1[i]===l2[i]){\n            i++;\n            continue;\n\
    \        }\n        while(i<l1 && l1[i]!==l2[i]){\n            i++;\n        }\n\
    \        if(l1[i]===l2[i]){\n            l1[i] = 0;\n        }else{\n        \
    \    while(i<l1 && l1[i]===l2[i]){\n                i++;\n            }\n    \
    \        if(l1[i]<l2[i]){\n                ++l1[i];\n            }else{\n    \
    \            ++l2[i];\n            }\n        }\n    }\n    while(i<l1){\n   \
    \     l1[i++] = 0;\n    }\n    while(i<l2){\n        l2[i++] = 0;\n    }\n   \
    \ return l1;\n}", "  var common = [];\n  if(l1===l2) return common;\n  var i =\
    \ 0, len = l1.length, len = l2.length;\n  for(; i<len && common.length<len; i++){\n\
    \    if(l1[i]===l2[i]){\n      common.push(l1[i]);\n    }\n  }\n  for(; i<len;\
    \ i++){\n    common.push(\"Not Equal\");\n  }\n  return common;\n}\n", "    var\
    \ ret = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j\
    \ < l2.length; j++){\n            if(l1[i] == l2[j]){\n                ret.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return ret;\n}\n\
    \n", "    var _common = [];\n    for(var i = 0; i < l1.length; i++){\n       \
    \ if(_common.indexOf(l1[i]) == -1){\n            _common.push(l1[i]);\n      \
    \  }\n    }\n    for(var i = 0; i < l2.length; i++){\n        if(_common.indexOf(l2[i])\
    \ == -1){\n            _common.push(l2[i]);\n        }\n    }\n    return _common;\n\
    }", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    if(l2.indexOf(l1[i])\
    \ == -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  for (var i = 0, l = Math.min(l1.length, l2.length); i < l; i++){\n\
    \    if (l1.charAt(i) != l2.charAt(i))\n      result.push(l1.charAt(i));\n  }\n\
    \  return result.sort();\n}\n", "  var result = [];\n  var n1 = l1.length;\n \
    \ var n2 = l2.length;\n  var i = 0;\n\n  if(n1 === 0 || n2 === 0){\n    return\
    \ result;\n  }\n\n  while(i<n1 && i<n2){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \      i++;\n    }\n    else if(l1[i] > l2[i]){\n      i++;\n    }\n    else{\n\
    \      i++;\n    }\n  }\n\n  return result;\n}\n", "  return _.uniq(l1).filter(function(elem,\
    \ index, list){\n    return l2.indexOf(elem) == index;\n  });\n}\n", "  if( l1.length\
    \ !== l2.length ){\n    throw \"Inconsistent lists, cannot compare arrays.\";\n\
    \  }\n  var r1 = [], r2 = [], i = 0, j = 0;\n  while( i < l1.length && j < l2.length\
    \ ){\n    if( l1[i] === l2[j] ){\n      r1.push(l1[i]);\n      i++;\n      j++;\n\
    \      continue;\n    }\n    if( l1[i] < l2[j] ){\n      r1.push(l1[i]);\n   \
    \   i++;\n      continue;\n    }\n    r2.push(l2[j]);\n    j++;\n  }\n  if( l1.length\
    \ > l2.length ){\n    r1.push(l1[i]);\n  }\n  while( i < l1.length ){\n    r1.push(l1[i]);\n\
    \    i++;\n  }\n  while( j < l2.length ){\n    r2.push(l2[j]);\n    j++;\n  }\n\
    \  return r1;\n}\n", "    var ret = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                ret.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "    if(l1.length < l2.length){\n        return l1;\n    }else{\n\
    \        return l2;\n    }\n}\n", "  let o1 = {};\n  let o2 = {};\n  let common\
    \ = [];\n  for(let i = 0; i < l1.length; i++){\n    o1[l1[i]] = 1;\n  }\n  for(let\
    \ j = 0; j < l2.length; j++){\n    o2[l2[j]] = 1;\n  }\n  for(let k in o1){\n\
    \    if(o1[k] !== o2[k]){\n      common.push(k);\n    }\n  }\n  return common;\n\
    }\n", "  var out = []\n  l1 = l1.slice()\n  l2 = l2.slice()\n  var a = 0\n  var\
    \ b = 0\n  while(a<l1.length && b<l2.length){\n    if(l1[a]===l2[b]){\n      out.push(l1[a])\n\
    \      a++\n      b++\n    }\n    else{\n      a++\n    }\n  }\n  return out\n\
    }\n", "  var i, ilen, v0, v1;\n\n  ilen = l1.length;\n  v0 = l2.slice(ilen);\n\
    \  l2 = l1.slice(ilen);\n  l1 = v0;\n  for (i = 0, ilen = l2.length; i < ilen;\
    \ ++i) {\n    v1 = l2[i];\n    if (v0 === v1) {\n      continue;\n    }\n    else\
    \ if (v0 < v1) {\n      return v0;\n    }\n    else {\n      return v1;\n    }\n\
    \  }\n  return v0;\n}\n", "  return [].concat.apply([], l1.filter(function(x){\n\
    \    return l2.indexOf(x) > -1;\n  })).sort().filter(function(x, i, a){\n    return\
    \ i === a.indexOf(x);\n  });\n}\n\n},{\"./common\":186,\"uniq\":188,\"xtend\"\
    :197}],189:[function(require,module,exports){\nvar arrayFilter = require('./arrayFilter'),\n\
    \    baseDifference = require('./baseDifference'),\n    baseUniq = require('./baseUniq'),\n\
    \    isArray = require('./isArray');\n", "  var result = [];\n  for(var i = 0;\
    \ i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n      if (l1[i]\
    \ == l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    var r = [];\n    var i = 0;\n    while(l1[i] ||\
    \ l2[i]){\n        if(l1[i] === l2[i]){\n            r.push(l1[i]);\n        \
    \    i++;\n        }else if(l1[i] < l2[i]){\n            r.push(l1[i]);\n    \
    \    }else{\n            r.push(l2[i]);\n        }\n    }\n    return r;\n}\n",
  "  return _.filter(l1, function(item){\n    return _.contains(l2, item);\n  });\n\
    }\n", "  var li = 0,\n      lj = 0,\n      i = 0;\n\n  while (li < l1.length &&\
    \ lj < l2.length) {\n    if(l1[i] === l2[j])\n      i++;\n    else if(l1[i] <\
    \ l2[j])\n      li++;\n    else\n      lj++;\n  }\n\n  return l1.slice(0, i);\n\
    }\n\n},{}],3:[function(require,module,exports){", "    if (l1.length < l2.length)\
    \ return common(l2, l1)\n    var common = [];\n    for (var i = 0; i < l1.length;\
    \ i++) {\n        if (l2.indexOf(l1[i]) != -1) common.push(l1[i]);\n    }\n  \
    \  return common;\n}\n", "\tvar a = [], i,\n\tr = [];\n\tfor(i = 0, l1 = l1.length;\
    \ i < l1; i++){\n\t\ta[l1[i]] = true;\n\t}\n\tfor(i = 0, l2 = l2.length; i < l2;\
    \ i++){\n\t\tif(a[l2[i]]){\n\t\t\tr.push(l2[i]);\n\t\t}\n\t}\n\treturn r;\n}\n",
  "  var out = [],\n      n1 = l1.length,\n      n2 = l2.length,\n      i = 0, j =\
    \ 0;\n\n  while (i < n1 && j < n2){\n    if (l1[i] == l2[j]){\n      out.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] > l2[j]){\n      j++;\n    } else\
    \ {\n      i++;\n    }\n  }\n\n  while (i < n1){\n    out.push(l1[i]);\n    i++;\n\
    \  }\n\n  while (j < n2){\n    out.push(l2[j]);\n    j++;\n  }\n\n  return out;\n\
    }", "  return l1.filter(function(e){\n    return l2.indexOf(e) >= 0;\n  });\n\
    }\n", "\t\n\t//Store the lengths of both arrays\n\tvar l1 = l1.length;\n\tvar\
    \ l2 = l2.length;\n\n\t//If the lengths of both arrays are equal, return empty\
    \ array\n\tif(l1 === l2){\n\t\treturn [];\n\t}\n\n\t//Store the unique elements\
    \ from both arrays\n\tvar set1 = new Set(l1);\n\tvar set2 = new Set(l2);\n\n\t\
    //Create a new array with unique elements from both arrays\n\tvar commonArray\
    \ = new Array(l1);\n\n\t//Iterate over the unique elements from both arrays\n\t\
    for(var i = 0; i < l1;i++){\n\t\tvar element = l1.find(function(x){\n\t\t\treturn\
    \ set2.has(x);\n\t\t});\n\t\t\n\t\t//If the element was found in both arrays,\
    \ add it to the new array\n\t\tif(element != null){\n\t\t\tcommonArray.push(element);\n\
    \t\t}\n\t}\n\n\t//Return the new array\n\treturn commonArray;\n}\n", "    var\
    \ out = [];\n    var commonSet1 = new Set();\n    var commonSet2 = new Set();\n\
    \    for(var i = 0; i < l1.length; i++){\n        if(commonSet1.has(l1[i])){\n\
    \            commonSet2.delete(l1[i]);\n        }else{\n            commonSet1.add(l1[i]);\n\
    \        }\n    }\n    for(var i = 0; i < l2.length; i++){\n        if(commonSet2.has(l2[i])){\n\
    \            commonSet1.delete(l2[i]);\n        }else{\n            commonSet2.add(l2[i]);\n\
    \        }\n    }\n    commonSet1.forEach(function(v){\n        out.push(v);\n\
    \    });\n    commonSet2.forEach(function(v){\n        out.push(v);\n    });\n\
    \    return out;\n}\n", "  let set1 = new Set(l1),\n      set2 = new Set(l2);\n\
    \  \n  for (let element of set1) {\n    if (set2.has(element)) {\n      set1.delete(element);\n\
    \      set2.delete(element);\n    }\n  }\n\n  return [...set1, ...set2]\n}\n",
  "\tvar out = [], common1 = [], common2 = [], i, j, k;\n\tfor(i = 0; i < l1.length;\
    \ i++){\n\t\tfor(j = 0; j < l2.length; j++){\n\t\t\tif(l1[i] === l2[j]){\n\t\t\
    \t\tcommon1.push(l1[i]);\n\t\t\t\tcommon2.push(l2[j]);\n\t\t\t}\n\t\t}\n\t}\n\t\
    for(i = 0; i < common1.length; i++){\n\t\tfor(j = 0; j < common2.length; j++){\n\
    \t\t\tif(common1[i] === common2[j]){\n\t\t\t\tout.push(common1[i]);\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n", "    var out = [];\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    while (i<l1.length && j<l2.length)\
    \ {\n        if (l1[i] == l2[j]) {\n            k++;\n        } else {\n     \
    \       if (k>0) {\n                out[k]=l1[i];\n            }\n           \
    \ k++;\n            out[k]=l2[j];\n        }\n        i++;\n        j++;\n   \
    \ }\n    return out;\n}\n", "\tl1 = l1 || [];\n\tl2 = l2 || [];\n\tvar a = l1.length,\
    \ \n\t\tb = l2.length,\n\t\ti = 0, \n\t\tj = 0;\n\n\twhile (i<l1 || j<l2){\n\t\
    \tif (l1[i] === l2[j]){\n\t\t\ti++;\n\t\t\tj++;\n\t\t} else if (l1[i] < l2[j]){\n\
    \t\t\ti++;\n\t\t} else {\n\t\t\tj++;\n\t\t}\n\t}\n\n\treturn [l1[i], l2[j]];\n\
    }\n", "    var _common = [],\n        first = _common,\n        len = Math.min(l1.length,\
    \ l2.length),\n        result = [];\n\n    for(var i = 0; i < len; i++){\n   \
    \     var item1 = l1[i],\n            item2 = l2[i];\n        if(item1 === item2){\n\
    \            result.push(item1);\n        }else{\n            while(result.indexOf(item1)\
    \ >= 0){\n                result.push(item1);\n                first[result.indexOf(item1)]\
    \ = true;\n            }\n            first[result.length] = item2;\n        }\n\
    \    }\n    return first.concat(result);\n}\n", "  return function(v){\n    var\
    \ l = []\n    for(var i = 0, n = l1.length; i < n; i++){\n      if(l1.indexOf(v)\
    \ == l1.lastIndexOf(v)) l.push(l1.shift())\n      else break\n    }\n    for(var\
    \ i = 0, n = l2.length; i < n; i++){\n      if(l2.indexOf(v) == l2.lastIndexOf(v))\
    \ l.push(l2.shift())\n      else break\n    }\n    return l\n  }\n}", "    var\
    \ result = [];\n    var len = Math.min(l1.length, l2.length);\n    for(var i=0;\
    \ i<len; i++){\n        if (l1[i]==l2[i]) result.push(l1[i]);\n    }\n    return\
    \ result;\n};\n\nmodule.exports = common;\n\n},{}],23:[function(require,module,exports){\n\
    var isValue = require('./isValue');\nvar isString = require('./isString');\nvar\
    \ isColor = require('./isColor');\nvar isNumber = require('./isNumber');\nvar\
    \ isUnit = require('./isUnit');\nvar parserFunction = require('./functionParser');\n\
    var Color = require('./Color');\n\nvar types = {\n    string: function(v){\n \
    \       return isString(v);\n    },\n    number: function(v){\n        return\
    \ isNumber(v);\n    },\n    \"boolean\": function(v){\n        return isBoolean(v);\n\
    \    },\n    object: function(v){\n        return isPlainObject(v);\n    },\n\
    \    array: function(v){\n        return Array.isArray(v);\n    },\n    color:\
    \ function(v){\n        return isColor(v);\n    },\n    \"function\": function(v){\n\
    \        return isaFunc(v);\n    },\n    colorlist: function(v){\n        return\
    \ isaColorList(v);\n    },\n    animatable: function(v){\n        return isValue(v);\n\
    \    },\n    any: function(v){\n        return isaValue(v);\n    }\n};\n\nvar\
    \ parsers = {\n    number: function(v){\n        return isNumber(v) ? parseFloat(v)\
    \ : v;\n    },\n    string: function(v){\n        return isString(v) ? v : parserFunction(v);\n\
    \    },\n    \"boolean\": function(v){\n        return isBoolean(v) ? v : parserFunction(v);\n\
    \    },\n    array: function(a, v){\n        v = parserFunction(v);\n        if\
    \ (isColor(v)) return v.map(Number);\n        return isString(v) ? v.split(',')\
    \ : v;\n    },\n    \"function\": function(v){\n        return isaFunc(v) ? v\
    \ : parserFunction(v);\n    },\n    color: function(v){\n        if (isColor(v))\
    \ return v;\n        if (v.indexOf('#') !== -1 && v.indexOf('#') < 5) {\n    \
    \        return new Color(parseInt(v.substring(1), 16));\n        }\n        if\
    \ (v.indexOf('rgb') !== -1 && v.indexOf('rgb') < 5) {\n            var res = v.match(/rgb\\\
    ((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\)/);\n            return new Color(parseInt(res[1]),\
    \ parseInt(res[2]), parseInt(res[3]));\n        }\n        if (v.indexOf('hsl')\
    \ !== -1 && v.indexOf('hsl') < 5) {\n            var res = v.match(/hsl\\((\\\
    d+)\\s*,\\s*(\\d+)%\\s*,", "  var n = Math.min(l1.length, l2.length);\n  var i\
    \ = 0;\n  var j = -1;\n  while(++i < n){\n    var m = l1[i];\n    while(++j <\
    \ n && m != l2[j]){\n      m = m1\n    }\n    if(m != l1[i]){\n      return i\n\
    \    }\n  }\n  return -1\n}\n", "  var common = [],\n    i = 0,\n    il1 = l1.length,\n\
    \    il2 = l2.length,\n    j = 0;\n\n  for (; i < il1; i++){\n    for(j = 0; j\
    \ < il2; j++){\n      if((l1[i] === l2[j]) && (l1[i] !== 0)){\n        common.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n\n  return common;\n}\n", "    var ret =\
    \ [];\n    var j = 0;\n    while(l1 && l2 && l1.length+l2.length > 0){\n     \
    \   if(l1.length===l2.length){\n            ret.push(l1[j]);\n            j++;\n\
    \        }\n        else if(l1[j] !== l2[j]){\n            l1 = l1.slice(0,j);\n\
    \            l2 = l2.slice(0,j);\n            break;\n        }\n        j++;\n\
    \    }\n    return ret;\n}\n", "  var ret = [];\n  l1 = l1||[];\n  l2 = l2||[];\n\
    \  for(var i = 0, len = l1.length; i<len; i++){\n    var a = l1[i];\n    for(var\
    \ j = 0, len2 = l2.length; j < len2; j++){\n      if(a === l2[j]){\n        ret.push(a);\n\
    \        break;\n      }\n    }\n  }\n  return ret;\n}", "\tvar lc = 0, //Common\
    \ index\n\t\ti = 0; //Loop index\n\twhile(l1 || l2){\n\t\tif(l1 == l2){ //If same\
    \ value, exit\n\t\t\treturn l1;\n\t\t}\n\t\tif(l1 > l2){ //If the smaller value\
    \ is higher, exit\n\t\t\treturn -1;\n\t\t}\n\t\tif(lc++ > 1){ //If the previous\
    \ index was already bigger, exit\n\t\t\treturn -1;\n\t\t}\n\t\tl1 = l1[i++];\n\
    \t}\n\treturn -1;\n}\n", "  var o1 = [], o2 = [];\n  for(var i = 0, ii = l1.length;\
    \ i < ii; ++i){\n    o1[i] = l1[i];\n  }\n  for(var i = 0, ii = l2.length; i <\
    \ ii; ++i){\n    o2[i] = l2[i];\n  }\n  o1.length = ii;\n  o2.length = ii;\n \
    \ for(var i = 0, ii = Math.min(o1.length, o2.length); i < ii; ++i){\n    if(o1[i]\
    \ === o2[i]){\n      continue;\n    }\n    if(o1[i] != o2[i]){\n      return i;\
    \ // idx\n    }\n  }\n  return i; // idx\n}\n", "  var l = Math.min(l1.length,\
    \ l2.length)\n  if(l < 1) return null\n  var i, ret = []\n  for(i = 0; i < l;\
    \ i++){\n    if(l1[i] === l2[i]) ret.push(l1[i])\n  }\n  return ret\n}\n", " \
    \   if(l1.length == 0) return l2;\n    if(l2.length == 0) return l1;\n    var\
    \ i = -1;\n    var j;\n    var result = new Array(l1.length);\n    while( ++i\
    \ < l1.length && ++j < l2.length){\n        if(l1[i] == l2[j]){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result.concat(common.call(null,l1,l2));\n};\n",
  "  if (l2.length == 0){\n    return [];\n  }\n  var out = [], l1 = l1.length, l2\
    \ = l2.length, i = 0, j = 0;\n  while (i < l1 || j < l2){\n    if (l1 == l2 &&\
    \ j == i) return out;\n    if (l1[i] == l2[j]) out.push(l1[i]);\n    i++;\n  \
    \  j++;\n  }\n  return out;\n}", "    var i = 0, j = 0;\n    while(i<l1.length\
    \ && j<l2.length){\n        if(l1[i]===l2[j]){\n            i++;\n           \
    \ j++;\n        } else if(l1[i]<l2[j]){\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return l1.slice(i, j);\n}\n", "\treturn\
    \ l1.filter(function(e, i){\n\t\treturn l2.indexOf(e) !== i;\n\t});\n}\n", " \
    \   var i = 0, result = [], len = Math.min(l1.length, l2.length);\n    for(; i\
    \ < len; i++) {\n        if(l1[i] === l2[i]) continue;\n        if(l1[i] > l2[i])\
    \ { result.push(l1[i]); } else{ result.push(l2[i]); }\n    }\n    return result;\n\
    }\nmodule.exports = common;\n\n},{}],29:[function(require,module,exports){\nvar\
    \ isMatrix = require('./isMatrix');\nvar IndexError = require('./IndexError');\n",
  "    var tmp = [];\n    for(var i = 0,length = l1.length; i<length; i++){\n    \
    \    if(l2.indexOf(l1[i]) == -1){\n            tmp.push(l1[i]);\n        }\n \
    \   }\n    return tmp;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is a working\
    \ solution. It might be helpful to explain what it is doing. Maybe give a link\
    \ to the documentation. Also, you could make it more efficient by removing the\
    \ `indexOf` calls by using `indexOf` with an array that contains the first elements\
    \ of the arrays you want to compare, e.g. `common([5,3,2,8],{3,2})`.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nvar a = [1, 2, 3, 4, 5, 6];\nvar b = [2, 4, 5, 6];\n\
    var result = [2, 5, 6];\n</code>\nThe most efficient way would be to sort both\
    \ arrays and then merge them:\n<code>\na = a.concat(b).sort();\nresult = [a[0],\
    \ a[1], a[2], a[3]];\n</code>\nBut this would only work when one of the arrays\
    \ is already sorted.\n<|/ a tags=arrays,javascript,jquery |>\n<| a dscore=0 |>\n\
    You could take a single loop and take the items with same index and take the lowest\
    \ value as a new group.\n\n<code>\nvar array1 = [1, 2, 3, 4, 5],\n    array2 =\
    \ [3, 4, 5];\n", "    var a = [];\n    var b = [];\n    for(var i=0; i<l1.length;\
    \ i++){\n        if(typeof l1[i] === 'number'){\n            a.push(l1[i]);\n\
    \        }else{\n            a.push(l1[i].valueOf());\n        }\n    }\n    for(var\
    \ i=0; i<l2.length; i++){\n        if(typeof l2[i] === 'number'){\n          \
    \  b.push(l2[i]);\n        }else{\n            b.push(l2[i].valueOf());\n    \
    \    }\n    }\n    var _common = [];\n    var c = new Array();\n    for(var i=0;\
    \ i<a.length; i++){\n        for(var j=0; j<b.length; j++){\n            if(common.isInArray(c,\
    \ a[i])==-1 && common.isInArray(c, b[j])==-1){\n                _common.push(a[i]);\n\
    \            }\n        }\n    }\n    _common.sort(function(a, b){return a-b});\n\
    \    return _common;\n}\n", "  var result = [];\n  var j = 0;\n  for (var i =\
    \ 0; i<= l1.length; i++){\n    while (j<=l2.length && l1[i] === l2[j]){\n    \
    \  result.push(l1[i]);\n      j++;\n    }\n    j++;\n  }\n  return result;\n}\n",
  "\tvar arr = [], ret = [];\n\tfor(var i=0; i<l1.length; i++){\n\t\tif(~common.indexOf(arr)){\n\
    \t\t\tret[ret.length] = l1[i];\n\t\t} else {\n\t\t\tarr[arr.length] = l1[i];\n\
    \t\t}\n\t}\n\tfor(var i=0; i<l2.length; i++){\n\t\tif(~common.indexOf(arr)){\n\
    \t\t\tret[ret.length] = l2[i];\n\t\t} else {\n\t\t\tarr[arr.length] = l2[i];\n\
    \t\t}\n\t}\n\treturn ret;\n}\n", "  return _.filter(l1, function(item){\n    return\
    \ _.indexOf(l2, item) !== -1;\n  });\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \          break;\n            }\n        }\n    }\n    return result;\n}", " \
    \ l1 = l1 || [];\n  l2 = l2 || [];\n  var a1 = l1.length\n    , a2 = l2.length\n\
    \    , i, j;\n  for(i = 0; i !== a1 && i !== a2; i++){\n    for(j = 0; j !== a1;\
    \ j++){\n      if(a1[j] === l2[i]){\n        l1.splice(i, 1);\n        break;\n\
    \      }\n    }\n  }\n  return l1;\n}\n", "    return l1.filter(function(item){\
    \ return l2.indexOf(item) == -1 })\n}\n", "  l1 = l1 || [];\n  l2 = l2 || [];\n\
    \  var i, len = Math.min(l1.length, l2.length);\n  for(i = 0; i < len; i++){\n\
    \    if(l1[i] !== l2[i]) return l1[i];\n  }\n  return l1.length;\n}\n", "\tl1\
    \ = l1 || [];\n\tl2 = l2 || [];\n\tvar common = true, lcm = (l1.length + l2.length),\
    \ i = 0, j = 0;\n\twhile(l1[i] === l2[j]){\n\t\tif(l1[i] != l2[j]){\n\t\t\tcommon\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t\tj++;\n\t}\n\tlcm = lcm || Math.max(l1.length,\
    \ l2.length);\n\tfor(; i < lcm; i++){\n\t\tif(l1.indexOf(l2[j]) < 0){\n\t\t\t\
    break;\n\t\t}\n\t\tj++;\n\t}\n\treturn common ? l1.slice(0, i) : l1;\n}", "  \
    \  var n1 = l1.length,\n        n2 = l2.length,\n        result = [],\n      \
    \  i,\n        j,\n        count = 0;\n\n    for (i = 0; i < n1 && i < n2; i++)\
    \ {\n        j = i;\n        while (j-- && count && l1[j] === l2[j]) {\n     \
    \       count++;\n        }\n        if (count) {\n            result.push(l1[i]);\n\
    \            count--;\n        }\n    }\n\n    for (i = 0; i < n1; i++) {\n  \
    \      j = i;\n        while (j++ < n1 && l1[j] === l2[j]) {\n            count++;\n\
    \        }\n        if (count) {\n            result.push(l1[i]);\n          \
    \  count--;\n        }\n    }\n\n    for (i = 1; i < n2; i++) {\n        j = i;\n\
    \        while (j++ < n1 && l1[j] === l2[j]) {\n            count++;\n       \
    \ }\n        if (count) {\n            result.push(l2[i]);\n            count--;\n\
    \        }\n    }\n\n    return result;\n}\n", "    var common = [];\n    var\
    \ maxLen = Math.max(l1.length, l2.length);\n    for(var i=0; i<maxLen; i++){\n\
    \        var a = l1[i];\n        var b = l2[i];\n        if(a === b) common.push(a);\n\
    \    }\n    return common;\n}\n", "\tl1 = typeof l1==='undefined' ? [] : l1;\n\
    \tl2 = typeof l2==='undefined' ? [] : l2;\n\tvar i, l=Math.min(l1.length,l2.length);\n\
    \tfor (i=0; i<l; i++){\n\t\tif (l1[i]!=l2[i]) return l1[i];\n\t}\n\treturn l1.length==l2.length?\
    \ l1 : l2;\n}\n", "  var o1 = [],\n      o2 = [];\n\n  for (var i = 0; i < l1.length;\
    \ i++) {\n    for(var j = 0; j < l2.length; j++) {\n      if(l1[i] === l2[j]){\n\
    \        o1.push(l1[i]);\n      }\n    }\n  }\n  return o1.concat(o2);\n}\n",
  "  var tmp = [],\n      il1 = 0, il2 = 0, jl1 = 0, jl2 = 0,\n      n = Math.max(l1.length,\
    \ l2.length);\n\n  while( n-- > 0 ) {\n    tmp[n] = l1[il1] == l2[il2]? l1[il1]\
    \ : l2[il2];\n    if( l1[il1] == l2[il2] ) {\n      il1++; il2++;\n    } else\
    \ if ( l1[il1] > l2[il1] ) {\n      il2++;\n    } else {\n      il1++;\n    }\n\
    \  }\n  while( il1 < l1.length ){ tmp[n] = l1[il1]; il1++; }\n  while( il2 < l2.length\
    \ ){ tmp[n] = l2[il2]; il2++; }\n  return tmp;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, length = Math.min(l1.length, l2.length); i < length; i++){\n    if(l1[i]\
    \ === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n",
  "  l1 = l1 || []; //l1 will be an empty array if its empty.\n  l2 = l2 || [];\n\
    \  var result = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i\
    \ < len; i++){\n    var a = l1[i];\n    var b = l2[i];\n    if(a === b){\n   \
    \   result.push(a);\n    }else{\n      var toAdd = Math.min(a, b);\n      var\
    \ toRemove = Math.max(a, b);\n      result.push(a + toAdd);\n      result.push(b\
    \ - toRemove);\n    }\n  }\n  return result;\n}\n", "  return _common(l1, l2,\
    \ _common);\n};\n", "  var out = [],\n      i = 0, j = 0,\n      len = l1.length,\n\
    \      len2 = l2.length,\n      li, li2;\n  while (i < len && j < len2){\n   \
    \ li = l1[i];\n    li2 = l2[j];\n    if (li === li2){\n      out.push(li);\n \
    \     i++;\n      j++;\n    } else if (li < li2){\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return out;\n}\n", "  var set = l1.length < l2.length\
    \ ? l1 : l2,\n      out = [];\n\n  forEach(set, function(v){\n    if (l1.indexOf(v)\
    \ !== l2.indexOf(v)) out.push(v);\n  });\n\n  return out;\n}\n", "    var t =\
    \ [];\n    for(var i = 0, l = l1.length; i < l; i++){\n        if(l2.indexOf(l1[i])\
    \ == -1){\n            t.push(l1[i]);\n        }\n    }\n    return t;\n}\n",
  "  var res = [];\n\n  while(l1.length > 0){\n    var found = false;\n    for(var\
    \ j=0, lj=l2.length; j<lj; j++){\n      if(l1[0] == l2[j]){\n        res.push(l1[0]);\n\
    \        l1.shift();\n        l2.shift();\n        found = true;\n        break;\n\
    \      }\n    }\n    if(!found) break;\n  }\n\n  return res;\n}\n", "\treturn\
    \ l1.filter(function(item, idx){\n\t\treturn l2.indexOf(item) == idx;\n\t});\n\
    }", "  l1 = l1 || [];\n  l2 = l2 || [];\n  var ret = [];\n  var i = 0, j = 0;\n\
    \  while (i < l1.length && j < l2.length){\n    if (l1[i] === l2[j]){\n      ret.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] < l2[j]){\n      i++;\n    } else\
    \ {\n      j++;\n    }\n  }\n  while (i < l1.length){\n    ret.push(l1[i]);\n\
    \    i++;\n  }\n  while (j < l2.length){\n    ret.push(l2[j]);\n    j++;\n  }\n\
    \  return ret;\n};\n", "    var u = [];\n    for(var i = 0; i < l1.length; i++)\
    \ {\n        if(u.indexOf(l1[i]) === -1) {\n            u.push(l1[i]);\n     \
    \   }\n    }\n    for(var i = 0; i < l2.length; i++) {\n        if(u.indexOf(l2[i])\
    \ === -1) {\n            u.push(l2[i]);\n        }\n    }\n    return u;\n}\n",
  "  var res = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError\
    \ = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator2\
    \ = l2[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done);\
    \ _iteratorNormalCompletion = true) {\n      var v2 = _step2.value;\n\n      for\
    \ (var _iterator3 = l1[Symbol.iterator](), _step3; !(_iteratorNormalCompletion2\
    \ = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion2 = true) {\n\
    \        var v1 = _step3.value;\n\n        if (v1.v === v2.v) {\n          res.push(v1.v);\n\
    \        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n\
    \    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion\
    \ && _iterator2.return != null) {\n        _iterator2.return();\n      }\n   \
    \ } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n\
    \      }\n    }\n  }\n\n  return res;\n}\n", "  return _.filter(l1, function(item){\
    \ return _.include(l2, item) }); //Get common elements\n}\n", "  var i, j, cur\
    \ = l2.length, l1i = l1.length;\n  for(i = 0; i< l1i; i++){\n    for(j = 0; j<\
    \ cur; j++){\n      if(l1[i] === l2[j]){\n        l1[i] = l2[j];\n        break;\n\
    \      }\n    }\n  }\n  return l1;\n}\n", "    if(l1.length>l2.length){\n    \
    \    var tmp = l1;\n        l1 = l2;\n        l2 = tmp;\n    }\n    \n    var\
    \ common = [];\n    var len = Math.min(l1.length, l2.length);\n    for(var i =\
    \ 0; i < len; i++) {\n        if(l1[i]==l2[i]) common.push(l1[i]);\n    }\n  \
    \  return common;\n}\n", "  var a1 = [],\n      a2 = [];\n  var i=0, j=0;\n  while\
    \ (i < l1.length && j < l2.length) {\n    a1[j++] = l1[i++];\n  }\n  while (i\
    \ < l1.length) {\n    a1[j++] = l1[i++];\n  }\n  while (j < l2.length) {\n   \
    \ a2[i++] = l2[j++];\n  }\n  return a1.concat(a2).sort();\n}\n\n", "    var result\
    \ = [];\n    l1 = l1 || [];\n    l2 = l2 || [];\n    for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i<len; i++){\n        if(l1[i]==l2[i]){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var _common = [];\n\n    for\
    \ (var i = 0, l = l1.length; i < l; i++){\n        if (~common.indexOf(l2[i])){\n\
    \            _common.push(l1[i]);\n        }\n    }\n\n    return _common;\n}\n\
    </code>\n<|/ a tags=javascript,arrays,sorting |>\n<| c |>\nIf you're going to\
    \ use an array for this, I'd suggest using a Set for it instead.  It should be\
    \ more efficient than an array, and it has the benefit of being sorted (which\
    \ you get with an array).  This would be more easily implemented with a Set: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\n\
    <|/ c |>\n<| c |>\nIt's not only more efficient, it also avoids duplicates.\n\
    <|/ c |>\n<| c |>\nIf you need to get an ordered array of unique values, Sets\
    \ are the way to go. Since you mentioned this in a comment, I'll add this comment\
    \ here... You can easily turn a set into a sorted array (by calling `Set.toArray()`)\
    \ but if you need something ordered, use the `Set` constructor with an array for\
    \ the initial value `new Set(array)` where array is the array you want to have\
    \ unique values in.\n<|/ c |>\n<| a tags=javascript,arrays,sorting |>\nOne more\
    \ solution without using any array or sets:\n<code>\nvar arr1 = [2, 1, 2];\nvar\
    \ arr2 = [2, 1, 2];\n\nvar newArr = [];\n\nvar j = 0;\nfor (var i = 0; i < arr1.length;\
    \ i++) {\n    var index = i;\n    for (j = i; j < arr2.length; j++) {\n      \
    \  if (arr1[index] == arr2[j]) {\n            index = j;\n            break;\n\
    \        }\n    }\n\n    newArr.push(arr1[i]);\n}\n", "  var a1 = [];\n  var b1\
    \ = [];\n  var a2 = [];\n  var b2 = [];\n\n  for(var i = 0, j = 0; i < l1; i++){\n\
    \    a1[j] = l1[i];\n    for(j = 0, k = 0; j < l2; j++){\n      if(a1[j] === l2[k]){\n\
    \        b1[k] = l1[i];\n        break;\n      }\n    }\n  }\n\n  for(i = 0, j\
    \ = 0; i < l2; i++){\n    a2[j] = l2[i];\n    for(j = 0, k = 0; j < l1; j++){\n\
    \      if(a2[j] === l1[k]){\n        b2[k] = l2[i];\n        break;\n      }\n\
    \    }\n  }\n\n  return [b1, b2];\n};\n", "  var result = [];\n  var lLen = l1.length;\n\
    \  var l1Val;\n  var l2Val;\n  for (var i = 0; i < lLen; i++) {\n    l1Val = l1[i];\n\
    \    l2Val = l2[i];\n    if (l1Val === l2Val) {\n      result.push(l1Val);\n \
    \     continue;\n    }\n    if (l1Val < l2Val) {\n      result.push(l1Val);\n\
    \    } else {\n      result.push(l2Val);\n    }\n  }\n  return result;\n}\n",
  "    l1 = l1 || [];\n    l2 = l2 || [];\n    var a1 = l1.sort(function(a, b) {return\
    \ a - b;}),\n        a2 = l2.sort(function(a, b) {return a - b});\n    var result\
    \ = [];\n    while (a1.length > 0 && a2.length > 0) {\n        if (a1[0] == a2[0])\
    \ {\n            result.push(a1[0]);\n            a1 = a1.slice(1);\n        \
    \    a2 = a2.slice(1);\n        } else {\n            result.push(a1[0]);\n  \
    \          a1 = a1.slice(1);\n        }\n    }\n    return result.concat(a2);\n\
    }\n", "\tvar ret = [];\n\tl1 = l1 || [];\n\tl2 = l2 || [];\n\tl1 = l1.sort();\n\
    \tl2 = l2.sort();\n\tvar i = 0, ilen = l1.length;\n\tfor(; i < ilen; i++){\n\t\
    \tif(l1[i] !== l2[i]){\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(; i < ilen; i++){\n\t\t\
    ret.push(l1[i]);\n\t}\n\treturn ret;\n}\n", "  var _common = [];\n  var _length\
    \ = l1.length;\n  var _diff = _length - l2.length;\n  \n  while(_length){\n  \
    \  if(_diff && _common && _common[_length - 1] == l1[_length - 1]) _common.pop()\n\
    \    _length--\n  }\n  \n  while(_diff){\n    _common.push(l1[_length--])\n  }\n\
    \  \n  return _common;\n}\n", "  return l1.filter(function(el){\n      return\
    \ l2.indexOf(el) >= 0;\n  }).sort().concat(\n     l2.filter(function(el){\n  \
    \       return l1.indexOf(el) >= 0;\n      })\n  );\n}\n", "\treturn l1.filter(function(item){\n\
    \t\treturn l2.indexOf(item) >= 0;\n\t});\n}\n", "  return unique(l1).intersection(unique(l2)).sort();\n\
    }", "  if(l1.length != l2.length){\n    throw new Error(\n      'Arguments don\\\
    't have the same number of elements'\n    );\n  }\n  var result = [];\n  var hashMap\
    \ = {};\n  for(var i = 0; i < l1.length; i++){\n    var hashCode = hash(l1[i]);\n\
    \    if(hashCode in hashMap){\n      hashMap[hashCode].push(l1[i]);\n    }else{\n\
    \      hashMap[hashCode] = [l1[i]];\n    }\n  }\n  for(var i = 0; i < l2.length;\
    \ i++){\n    var hashCode = hash(l2[i]);\n    if(hashCode in hashMap){\n     \
    \ for(var j = 0; j < hashMap[hashCode].length; j++){\n        result.push(hashMap[hashCode][j]);\n\
    \      }\n    }else{\n      result.push(l2[i]);\n    }\n  }\n  return result;\n\
    }\n", "  var i,\n      n,\n      result = [];\n\n  l1 = l1.filter(function(elem,\
    \ pos, arr){\n    return !inArray(elem, arr);\n  });\n\n  l2 = l2.filter(function(elem,\
    \ pos, arr){\n    return !inArray(elem, arr);\n  });\n\n  for(i = 0, n = Math.max(l1.length,\
    \ l2.length); i < n; i++){\n    if(inArray(l1[i], l2[i])){\n      result.push(l1[i]);\n\
    \    }\n  }\n\n  return result;\n}\n", "    var i, li, num = [];\n    for(i =\
    \ 0, li = l1.length; i < li; i++){\n        if(!num[l1[i]]){\n            num[l1[i]]\
    \ = 1;\n        }else{\n            num[l1[i]]++;\n        }\n    }\n    for(i\
    \ = 0, li = l2.length; i < li; i++){\n        if(!num[l2[i]]){\n            num[l2[i]]\
    \ = 1;\n        }else{\n            num[l2[i]]++;\n        }\n    }\n    var arr\
    \ = [];\n    for(var k in num){\n        arr.push(k);\n    }\n    return arr;\n\
    }\n", "    var result = [],\n        l1Len = l1.length,\n        l2Len = l2.length,\n\
    \        i = 0, j = 0;\n\n    while (i < l1Len && j < l2Len) {\n        if (l1[i]\
    \ === l2[j]){\n            result.push(l1[i]);\n            i++;\n           \
    \ j++;\n        } else if (l1[i] > l2[j]){\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n\n    return result;\n}\n\nmodule.exports\
    \ = common;\n\n},{}],33:[function(_dereq_,module,exports){\nvar isFunction = _dereq_('../lang/isFunction');\n",
  "  var lx = 0;\n  var ly = 0;\n  var ln = l1.length;\n  var ln2 = l2.length;\n \
    \ while(lx < ln){\n    if(l1[lx] == l2[ly]){\n      lx++;\n      ly++;\n    }\n\
    \    else{\n      if(ly == ln2){\n        return [l1[lx], l2[ly]];\n      }\n\
    \      ly = 0;\n    }\n  }\n  if((ly == ln2) || ly>ln2){\n    return [l1[lx],\
    \ l2[ly]];\n  }\n  else{\n    return [l1[lx], l2[ly]];\n  }\n}", "    var ret\
    \ = [];\n    var i, j, ilen, jlen;\n    for (i = 0, ilen = l1.length; i < ilen;\
    \ ++i) {\n        common: for(j = 0, jlen = l2.length; j < jlen; ++j) {\n    \
    \        if (l1[i] === l2[j]) ret.push(l1[i]);\n        }\n    }\n    return ret;\n\
    };\n", "    if(l1.length != l2.length){\n        console.log(\"Array lengths do\
    \ not match.\");\n        return;\n    }\n    var result = new Array(l1.length);\n\
    \    var unique = true;\n    for(var i = 0; i < l1.length; i++){\n        var\
    \ found = false;\n        for(var j = 0; j < l2.length; j++){\n            if(!compare(l1[i],\
    \ l2[j])){\n                found = true;\n                break;\n          \
    \  }\n        }\n        if(!found){\n            unique = false;\n          \
    \  result[i] = l1[i];\n        }\n    }\n    if(unique){\n        return result.sort();\n\
    \    }\n}", "    var out = [],\n        i,\n        j,\n        min = Math.min,\n\
    \        max = Math.max,\n        ln = l1.length,\n        ln2 = l2.length,\n\
    \        li = 1,\n        ri = 1;\n        \n    if (l2.length >= l1.length) {\n\
    \        for (i = 0; i < ln; i++) {\n            for (j = 0; j < ln2; j++) {\n\
    \                if (l1[li] === l2[ri]) {\n                    out.push(l1[li++]);\n\
    \                    break;\n                }\n                if (l1[li] < l2[ri])\
    \ {\n                    ri++;\n                }\n                else {\n  \
    \                  li++;\n                }\n            }\n        }\n    }\n\
    \    else {\n        for (i = 0; i < ln; i++) {\n            for (j = 0; j < ln2;\
    \ j++) {\n                if (l1[li] === l2[ri]) {\n                    out.push(l1[li++]);\n\
    \                    break;\n                }\n                if (l1[li] < l2[ri])\
    \ {\n                    out.push(l1[li++]);\n                    ri++;\n    \
    \            }\n                else {\n                    out.push(l1[li++]);\n\
    \                    li++;\n                }\n            }\n        }\n    }\n\
    \    return out;\n}\n", "  var a = [];\n  for(var i = 0; i < l1.length; i++){\n\
    \    for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n       \
    \ a.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return a;\n}\n", "  let\
    \ result = [];\n  for(let index = 0; index < Math.max(l1.length, l2.length); index++){\n\
    \    let isDuplicate = false;\n    for(let i = 0; i < Math.min(l1.length, l2.length);\
    \ i++){\n      if(l1[i] === l2[i]){\n        isDuplicate = true;\n        break;\n\
    \      }\n    }\n    if(!isDuplicate){\n      result.push(l1[index]);\n    }\n\
    \  }\n  return result;\n}\n", "    var tmp = [];\n    var i = 0, j = 0;\n    l1\
    \ = l1.concat([]);\n    l2 = l2.concat([]);\n    while(l1.length > 0 && l2.length\
    \ > 0){\n        if(l1[0] <= l2[0]){\n            tmp.push(l1[0]);\n         \
    \   l1.splice(0, 1);\n        }else{\n            tmp.push(l2[0]);\n         \
    \   l2.splice(0, 1);\n        }\n    }\n    return tmp;\n}\n\nmodule.exports =\
    \ {\n    common:common\n};\n},{}],17:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar math = _dereq_('../../../math');\n\nvar util = _dereq_('../../../util');\n\
    \nvar is = _dereq_('../../../is');\n\nvar Element = _dereq_('../../../core').Element;\n\
    \nvar Selector = _dereq_('../../../selector');\n\nvar Animator = _dereq_('../../../core').Animator;\n\
    \nvar core = _dereq_('../../../core');\n\nvar TimelineLite = _dereq_('./timeline.js');\n\
    \nvar Timeline = _dereq_('./core.js');\n\nvar Tweenable = _dereq_('../../../tweenable');\n\
    \nvar Power0 = TimelineLite.animations[0];\nvar Power1 = TimelineLite.animations[1];\n\
    var Power2 = TimelineLite.animations[2];\n\nTimeline.overwriteAnimation = true;\n",
  "    for(var i=0, l=l1.length; i<l; i++){\n        for(var j=0, ll=l2.length; j<ll;\
    \ j++){\n            if(l1[i] == l2[j]){\n                break;\n           \
    \ }\n        }\n        if(j == ll){\n            l2.push(l1[i]);\n        }\n\
    \    }\n    return l2;\n}\n", "    l1 = l1 || [];\n    l2 = l2 || [];\n    var\
    \ hash = ({}).hash;\n\n    if(l1.length >= l2.length){\n        return common_reverse(l1,\
    \ l2);\n    }\n\n    if(hash){ return hash(l1, l2); }\n\n    var l3 = ([]).hash;\n\
    \    var i = -1, j;\n    while(++i < l1.length){\n        j = -1;\n        while(++j\
    \ < l2.length){\n            if(l1[i] === l2[j]){\n                l3[l1.length+j]\
    \ = l1[i];\n                break;\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return sort(unique(filter(l1, function(x){ return l2.indexOf(x)>=0;\
    \ })));\n}", "    var out = [];\n    var i = 0;\n    var j = 0;\n    while (i<l1.length\
    \ && j<l2.length){\n        if (l1[i] === l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] > l2[j]){\n    \
    \        i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ out;\n}\n", "    if (l1.length !== l2.length) return [];\n    var result = [];\n\
    \    for (var i=0; i<l1.length; i++) {\n        if (l2.indexOf(l1[i]) !== -1)\
    \ result.push(l1[i]);\n    }\n    return result;\n}\n", "    var out = [];\n \
    \   var i = 0;\n    var j = 0;\n    var k = 0;\n    while (i<l1 && j<l2){\n  \
    \      if (l1[i] === l2[j]){\n            k++;\n        }else{\n            out.push(l1[i]);\n\
    \            k++;\n        }\n        i++;\n        j++;\n    }\n    if (k===0){\n\
    \        if (l1.length===l2.length){\n            return;\n        }\n       \
    \ out.push(l1[i]);\n    }\n    return out;\n}", "    var lcm = (l1 ^ l2) & Math.max(l1,\
    \ l2);\n    var result = [];\n    while(lcm){\n        result.unshift(lcm&~l1);\n\
    \        lcm = (lcm >>> 1) & Math.max(l1, l2);\n    }\n    return result;\n}\n",
  "  return l1.filter(function(v){\n    return l2.indexOf(v) >= 0;\n  });\n}\n", "\t\
    var out = [];\n\twhile (l1.length > 0 && l2.length > 0) {\n\t\tif (l1[0] === l2[0])\
    \ {\n\t\t\tout.push(l1[0]);\n\t\t\tl1.shift();\n\t\t\tl2.shift();\n\t\t}\n\t\t\
    else {\n\t\t\tif (l1[0] < l2[0]) {\n\t\t\t\tout.push(l1[0]);\n\t\t\t\tl1.shift();\n\
    \t\t\t}\n\t\t\telse {\n\t\t\t\tout.push(l2[0]);\n\t\t\t\tl2.shift();\n\t\t\t}\n\
    \t\t}\n\t}\n\twhile (l1.length > 0) {\n\t\tout.push(l1[0]);\n\t\tl1.shift();\n\
    \t}\n\twhile (l2.length > 0) {\n\t\tout.push(l2[0]);\n\t\tl2.shift();\n\t}\n\t\
    return out;\n}\n", "  var a1 = l1.length,\n      a2 = l2.length,\n      a1,\n\
    \      a2,\n      i,\n      j,\n      i1,\n      i2,\n      j1,\n      j2,\n \
    \     min = Math.min(a1, a2),\n      max = Math.max(a1, a2),\n      result = [],\n\
    \      sorted = [];\n\n  for (i = min; i < max; i++) {\n    for (j1 = a1; j1 <\
    \ a2; j1++) {\n      j2 = (a1 === a2) ? j1 : j1 + 1;\n      if (l1[i - j1] < l2[j2\
    \ - i1])\n        result.push(l1[i - j1]);\n    }\n  }\n\n  result.sort(function(x,\
    \ y){\n    return x - y;\n  });\n\n  for (i = min; i < max; i++) {\n    for (j1\
    \ = a1; j1 < a2; j1++) {\n      j2 = (a1 === a2) ? j1 : j1 + 1;\n      if (l1[i\
    \ - j1] === l2[j2 - i1])\n        sorted.push(l1[i - j1]);\n    }\n  }\n\n  return\
    \ sorted;\n}\n", "\treturn Array.prototype.indexOf.call(l1, l2);\n}\n", "  var\
    \ c = [];\n  for(var i=0; i< l1.length; i++){\n    for(var j=0; j< l2.length;\
    \ j++){\n      if(l1[i] == l2[j]){\n        c.push(l1[i]);\n      }\n    }\n \
    \ }\n  return c;\n};\n", "  return l1.filter(function(item, index){ return l2.indexOf(item)\
    \ == index;});\n}\n", "\tlet set1 = new Set(l1);\n\tlet set2 = new Set(l2);\n\t\
    let common = [];\n\tfor (let key of set1.keys()) {\n\t\tif(set2.has(key))\n\t\t\
    \tcommon.push(key);\n\t}\n\treturn common;\n}\n", "    var common = [];\n    var\
    \ len1 = l1.length;\n    var len2 = l2.length;\n    var i = 0;\n    for (; i <\
    \ len1 && i < len2; i++) {\n        if (l1[i] === l2[i]) {\n            common.push(l1[i]);\n\
    \        }\n    }\n    for (; i < len1; i++) {\n        common.push(l1[i]);\n\
    \    }\n    for (; i < len2; i++) {\n        common.push(l2[i]);\n    }\n    return\
    \ common;\n}", "  l1 = !l1 ? [] : sortUnique(isArray(l1) ? l1 : l1.concat())\n\
    \  l2 = !l2 ? [] : sortUnique(isArray(l2) ? l2 : l2.concat())\n  return l1.length\
    \ > l2.length ? l1 : l2\n}\n", "  var ret = [];\n  while(l1.length > 0 || l2.length\
    \ > 0){\n    var l = [];\n    if(l1.length > 0){\n      l.push(l1.splice(0,1)[0]);\n\
    \    }\n    if(l2.length > 0){\n      l.push(l2.splice(0,1)[0]);\n    }\n    ret\
    \ = ret.concat(l);\n  }\n  return ret;\n}\n</code>\n<|/ a dscore=3 |>\n<| a |>\n\
    <code>\nlet a = ['aaa', 'bbb', 'ccc'],\n    b = ['bbb', 'ccc', 'ddd'],\n    common\
    \ = a => b => a.reduce((r,v) => r.includes(v) ? r : r.concat(v), b),\n    common2\
    \ = a => b => b.every((e,i) => a.includes(e) ? i : -1),\n    common3 = a => b\
    \ => {\n        const d = b.map(v => a.indexOf(v)),\n              e = d.filter(v\
    \ => v >= 0);\n        return e.length ? e[0] : -1;\n    },\n    common4 = a =>\
    \ b => {\n        const d = b.map((v,i) => (a.indexOf(v) > -1 ? i : null));\n\
    \        return d.reduce((v,i) => v + i).filter(v => v != null);\n    };", " \
    \   var i, n = l1.length, m = l2.length, a = 0, b = 0, j;\n    for(i = 0; i <\
    \ m && j < n; ++i){\n        if(l1[i] === l2[j]){\n            a++;\n        }else\
    \ if(l2[j] === l1[i]){\n            b++;\n        }else{\n            ++j;\n \
    \       }\n    }\n    return j === n ? a : b;\n}", "\tvar o = {};\n\tfor(var i\
    \ in l1) o[l1[i]] = i;\n\tfor(i in l2) if(o[l2[i]]!==undefined) return o[l2[i]];\n\
    \treturn false;\n}", "    for(var i=0, j=l1.length; i<j; i++){\n        if(l2.indexOf(l1[i])\
    \ === -1){\n            return l1[i];\n        }\n    }\n    return null;\n}\n",
  "\tvar res = [];\n\tfor(var i = 0, len = l1.length; i < len; i++){\n\t\tvar a =\
    \ l1[i];\n\t\tvar found = false;\n\t\tfor(var j = 0, len2 = l2.length; j < len2;\
    \ j++){\n\t\t\tif(a === l2[j]){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}\n\t\tif(!found){\n\t\t\tres.push(a);\n\t\t}\n\t}\n\treturn res;\n}\n\n\
    exports.common = common;\n\n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\
    \  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n", "    return\
    \ l1.filter(function(item){\n      return l2.indexOf(item) != -1;\n    });\n}\n\
    \nmodule.exports = common;\n\n\n},{}],162:[function(require,module,exports){\n\
    'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\nvar baddress = require('./address')\n\
    var bcrypto = require('./crypto')\nvar bscript = require('./script')\nvar btemplates\
    \ = require('./templates')\nvar networks = require('./networks')\nvar ops = require('bitcoin-ops')\n\
    var typeforce = require('typeforce')\nvar types = require('./types')\nvar scriptTypes\
    \ = btemplates.types\nvar SIGNABLE = [btemplates.types.P2PKH, btemplates.types.P2PK,\
    \ btemplates.types.MULTISIG]\nvar P2SH = SIGNABLE.concat([btemplates.types.P2WPKH,\
    \ btemplates.types.P2WSH])\n\nvar ECPair = require('./ecpair')\nvar ECSignature\
    \ = require('./ecsignature')\nvar Transaction = require('./transaction')\n", " \
    \   var ret = [];\n    for(var i=0; i<l1.length; i++){\n        for(var j=0; j<l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                ret.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return ret;\n}\n",
  "    return utils.unique(l1).filter(function(item){\n        return utils.unique(l2).indexOf(item)\
    \ == -1;\n    });\n}\n", "    var out = [], i = 0, j, l;\n    for (l = Math.max(l1.length,\
    \ l2.length); i < l; i++){\n        out[i] = 0;\n    }\n    for (i = 0; i < l1.length;\
    \ i++){\n        for (j = 0; j < l2.length; j++){\n            if (l1[i] === l2[j]){\n\
    \                out[i++] = 1;\n                break;\n            }\n      \
    \  }\n    }\n    return out;\n}\n", "  var common = [], l = Math.min(l1.length,\
    \ l2.length), i = 0;\n  for (; i < l; i++){\n    if (l1[i] === l2[i]){ common[common.length]\
    \ = l2[i]; }\n  }\n  return common;\n}\n", "  var p1 = [], p2 = [], n = l1.length;\n\
    \  while(n){\n    var m = l2.length;\n    while(m){\n      if(l1[n - 1] == l2[m\
    \ - 1]){\n        p1.push(l1[n - 1]);\n        p2.push(l2[m - 1]);\n        --m;\n\
    \      }else{\n        break;\n      }\n    }\n    ++n;\n  }\n  return p1.concat(p2).sort();\n\
    }\n", "\tlet n1 = l1.length;\n\tlet n2 = l2.length;\n\tlet i = 0, j = 0;\n\twhile(i\
    \ < n1 && j < n2){\n\t\tif(l1[i] === l2[j]){\n\t\t\ti++;\n\t\t\tj++;\n\t\t}else{\n\
    \t\t\tif(l1[i] > l2[j]){\n\t\t\t\ti++;\n\t\t\t}else{\n\t\t\t\tj++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn l1.slice(0, i).concat(l2.slice(i));\n}\n", "    var ret = [],\n\
    \        i,\n        l1_len,\n        l2_len;\n\n    l1 = l1 || [];\n    l2 =\
    \ l2 || [];\n\n    l1_len = l1.length || 0;\n    l2_len = l2.length || 0;\n\n\
    \    for(i = 0; i < l1_len + l2_len; ++i){\n        if(l1[i] !== l2[i]){\n   \
    \         break;\n        }else{\n            l1[i] = undefined;\n        }\n\
    \    }\n\n    for(i = l1_len; i < l1_len + l2_len; ++i){\n        ret.push(l1[i]);\n\
    \    }\n\n    for(i = l2_len; i < l2_len + l1_len; ++i){\n        ret.push(l2[i]);\n\
    \    }\n\n    return ret;\n}\n", "    if(l1.length > l2.length) {\n        return\
    \ common(l2, l1);\n    }\n    \n    var result = [];\n    \n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n             \
    \   break;\n            }\n        }\n    }\n    \n    return result;\n}\n", " \
    \ var _common = [];\n  for(var i = 0; i<l1.length;i++){\n    for(var j = 0; j<l2.length;j++){\n\
    \      if(l1[i] == l2[j]){\n        _common.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return _common;\n}\n", "    var n1 = l1.length,\n       \
    \ n2 = l2.length,\n        result = [];\n    //Compare array lengths to prevent\
    \ unnecessary looping and improve performance.\n    if (n1 < n2) return result;\n\
    \    // l1, l2 has the same length, so safely ignore n1 and n2.\n    for (var\
    \ i = 0, n = Math.min(n1, n2); i < n; i++) {\n        if (l1[i] === l2[i]) result.push(l1[i]);\n\
    \    }\n    return result;\n}\n", "    var i, l=Math.min(l1.length, l2.length),\n\
    \        out=[],\n        hash = (typeof l2[0] ==='string')? //If array contains\
    \ strings\n            Array.prototype.toString.call(l2) === Array.prototype.toString.call(l1)?\
    \ //Compare by strings\n                l1.split(\"\").sort().join(\",\")===l2.split(\"\
    \").sort().join(\",\")? //Common sorted arrays\n                    []: l2.split(\"\
    \").sort().reverse().join(\",\")=== l1.split(\"\").sort().reverse().join(\",\"\
    )? //Unsorted arrays\n                        l1.split(\"\").reverse().join(\"\
    ,\"):[];\n    for(i=0; i< l; i++){\n        if(hash[i]){\n            out.push(\
    \ hash[i] );\n        }\n    }\n    return out;\n}\n", "    var ret = [];\n  \
    \  l1 = l1 || [];\n    l2 = l2 || [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                ret.push(l1[i]);\n                break;\n            }\n   \
    \     }\n    }\n    return ret;\n}\n\n},{}],38:[function(require,module,exports){\n\
    'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\n\
    exports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\n\
    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code =\
    \ 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var\
    \ i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)]\
    \ = i\n}\n", "    if(l1.length !== l2.length) throw 'Error: Input arrays must\
    \ be the same length.';\n    var n1 = l1.length;\n    var n2 = l2.length;\n  \
    \  var common = [];\n    var i, j;\n    for(i = 0; i < n1 && i < n2; i++){\n \
    \       for(j = 0; j < n2 && j < n2; j++){\n            if(l1[i] === l2[j]){\n\
    \                common.push(l1[i]);\n                i++;\n                j--;\n\
    \            }\n        }\n    }\n    return common;\n}\n", "    var l1 = l1 ||\
    \ [];\n    var l2 = l2 || [];\n    var i = 0,\n        n1 = l1.length,\n     \
    \   n2 = l2.length,\n        result = [];\n    \n    outer:\n    while(n1 && n2){\n\
    \        while((n1 && l1[i++] === n2[i])||(n2 && l2[i++] === n1[i])){\n      \
    \  }\n    \n        if(n1 && !n2)\n            result = l1[n1--];\n        \n\
    \        if(n2 && !n1)\n            result = l2[n2--];\n        \n        i++;\n\
    \    }\n    \n    return result;\n}\n\nexports.common = common;\n\nexports.arrayminusarray\
    \ = arrayminusarray;\n\nexports.flatten = flatten;\n\nexports.reverse = reverse;\n\
    \nexports.plus = plus;\n\nexports.minus = minus;\n\nexports.times = times;\n\n\
    exports.mul = mul;\n\nexports.div = div;\n\nexports.mod = mod;\n\nexports.random\
    \ = random;\n\nexports.norm = norm;\n\nexports.dotDiv = dotDiv;\n\nexports.dotMul\
    \ = dotMul;\n\nexports.dotPow = dotPow;\n\nexports.lup = lup;\n\nexports.ldown\
    \ = ldown;\n\nexports.rdown = rdown;\n\nexports.rup = rup;\n\nexports.rmul = rmul;\n\
    \nexports.dotPlus = dotPlus;\n\nexports.dotMinus = dotMinus;\n\nexports.dotTimes\
    \ = dotTimes;\n\nexports.dotDiv = dotDiv;\n\nexports.dotMul = dotMul;\n\nexports.dotPow\
    \ = dotPow;\n\nexports.lup2 = lup2;\n\nexports.ldown2 = ldown2;\n\nexports.rdown2\
    \ = rdown2;\n\nexports.rup2 = rup2;\n\nexports.rmul2 = rmul2;\n\nexports.lup3\
    \ = lup3;\n\nexports.ldown3 = ldown3;\n\nexports.rdown3 = rdown3;\n\nexports.rup3\
    \ = rup3;\n\nexports.rmul3 = rmul3;\n\nexports.sumOrMin = sumOrMin;\n\nexports.dot\
    \ = dot;\n\nexports.norm = norm;\n\nexports.mul = mul;\n\nexports.div = div;\n\
    \nexports.mod = mod;\n\nexports.lup = lup;\n\nexports.ldown = ldown;\n\nexports.rdown\
    \ = rdown;\n\nexports.rup = rup;\n\nexports.rmul = rmul;\n\nexports.dotPlus =\
    \ dotPlus;\n\nexports.dotMinus = dotMinus;\n\nexports.dotTimes = dotTimes;\n\n\
    exports.dotDiv = dotDiv;\n\nexports.dotMul = dotMul;\n\nexports.dotPow = dotPow;\n\
    \nexports.lup2 = lup", "    if(l1.length !== l2.length){\n        throw new Error(\n\
    \            'Cannot get common on arrays of unequal lengths.'\n        );\n \
    \   }\n\n    var _common_ = [];\n\n    for(var i = 0; i < l1.length; i++){\n \
    \       var val1 = l1[i];\n        var val2 = l2[i];\n\n        if(common.is(val1,\
    \ val2)){\n            _common_.push(val1);\n        }\n    }\n\n    return _common_;\n\
    }\n\ncommon.is = common.isPresent = function is(val1, val2){\n    return val1\
    \ === val2;\n}\n\ncommon.isPresent = common.isntPresent = function isntPresent(val1,\
    \ val2){\n    return !common.is(val1, val2);\n}\n", "  var i, ret = [];\n  for(i\
    \ = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        ret.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return ret;\n}\n", "\tlet lc = l1.concat([]).concat(l2);\n\tlet a = [];\n\t\
    for(let i=0; i<lc.length; i++){\n\t\tif(lc.indexOf(lc[i]) === i) a.push(lc[i]);\n\
    \t}\n\treturn a;\n}\n", "  var commonArray = [];\n  for(var i = 0; i < l1.length;\
    \ i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n\
    \        commonArray.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return\
    \ commonArray;\n}\n", "    return filter(l1, function(e, i, a){\n        return\
    \ indexOf(l2, e) !== i;\n    });\n}\n", "  return l1.filter(function(e, i, a){\n\
    \    return !l2.some(function(e2, i2, a2){\n      return e === e2;\n    });\n\
    \  }).sort().concat(l2.filter(function(e, i, a){\n    return !l1.some(function(e2,\
    \ i2, a2){\n      return e === e2;\n    });\n  })).sort();\n};\n\nmodule.exports\
    \ = common;\n\n},{}],172:[function(require,module,exports){", "    var ret = [];\n\
    \n    for (var i = 0; i < l1.length; i++) {\n        for (var j = 0; j < l2.length;\
    \ j++) {\n            if (l1[i] === l2[j]) {\n                ret.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n\n    return ret;\n\
    }\n", "    var i,\n        ilen = l1.length,\n        rlen = l2.length,\n    \
    \    result = [],\n        j, k;\n\n    for (i = 0; i < ilen; i++) {\n       \
    \ for (j = 0, k = rlen - 2; j < k; j++) {\n            if (l1[i] === l2[j]) {\n\
    \                result[j] = l1[i];\n                break;\n            }\n \
    \       }\n        if (j === k) {\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n", "    var ret = [];\n\n    for (var i = 0, l=l1.length;\
    \ i<l; i++){\n        for (var j = 0, m=l2.length; j < m; j++){\n            if\
    \ (l1[i]===l2[j]){\n                ret.push(l1[i]);\n                break;\n\
    \            }\n        }\n    }\n\n    return ret;\n}\n", "  var _common = [];\n\
    \  var l = _common.length, l1;\n  while(l--){\n    l1 = _common[l];\n    var l2\
    \ = _common[l + 1];\n    if (l1 != l2 && l1.length < l2.length) break;\n    if\
    \ (l1 == l2) _common[l + 1] = l2.slice(0);\n  }\n  return _common;\n}\n", "\t\
    l1 = typeof l1 === 'string' ? l1.split('') : l1;\n\tl2 = typeof l2 === 'string'\
    \ ? l2.split('') : l2;\n\tl1 = l1.filter(function(v, i) { return l2.indexOf(v)\
    \ === i; });\n\tl2 = l2.filter(function(v, i) { return l1.indexOf(v) === i; });\n\
    \tl1 = l1.sort();\n\tl2 = l2.sort();\n\tl1.pop();\n\tl2.pop();\n\t\n\treturn l1.concat(l2);\n\
    }\n\nmodule.exports = common;\n\n},{}],5:[function(require,module,exports){",
  "    return [].concat.apply([], [l1].concat(filterUnique(l2)));\n}", "  return l1.filter(function(elem,\
    \ pos, self) {\n    return self.indexOf(elem) == pos;\n  }).sort().concat(l2.filter(function(elem,\
    \ pos, self) {\n    return self.indexOf(elem) == pos;\n  }).sort());\n}\n},{}],4:[function(require,module,exports){\n\
    'use strict';", "  var lcm = multiply()\n  l1.forEach(function(e){\n    lcm.push(e)\n\
    \  })\n  l2.forEach(function(e){\n    lcm.unshift(e)\n  })\n  return lcm\n}\n",
  "  var out = [],\n      common, i, len;\n  for(i = 0, len = l1.length; i < len;\
    \ i++){\n    common = false;\n    for(var j=0, len2 = l2.length; j < len2; j++){\n\
    \      if(l1[i] === l2[j]){\n        common = true;\n        break;\n      }\n\
    \    }\n    if(common) out.push(l1[i]);\n  }\n  return out;\n}\n", "  var out\
    \ = [];\n  var i = 0, j = 0;\n  var il1 = l1.length;\n  var il2 = l2.length;\n\
    \  while(i < il1 && j < il2){\n    if(l1[i] === l2[j]){\n      out.push(l1[i]);\n\
    \      i++;\n      j++;\n    }else{\n      if(l1[i] < l2[j]){\n        i++;\n\
    \      }else{\n        j++;\n      }\n    }\n  }\n  return out;\n}\n", "  var\
    \ out = [], i = 0, l1 = l1 || [], l2 = l2 || [];\n  while(l1.length && l2.length){\n\
    \    if(l1[0] == l2[0]){\n      out.push(l1[0]); l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] > l2[0]){\n      out.push(l2[0]); l2.shift();\n    }else{\n\
    \      out.push(l1[0]); l1.shift();\n    }\n  }\n  return out;\n}\n", "  var a1\
    \ = [], a2 = [];\n  for(var i=0; i<l1.length; i++){\n    a1.push(l1[i]);\n  }\n\
    \  for(var i=0; i<l2.length; i++){\n    a2.push(l2[i]);\n  }\n  return a1.filter(function(elem,\
    \ pos, self){\n    return self.indexOf(elem) == pos;\n  }).concat(a2.filter(function(elem,\
    \ pos, self){\n    return self.indexOf(elem) == pos;\n  }));\n};\n\n", "  var\
    \ _array1 = [],\n      hash = {};\n  if(l1.length < l2.length)\n    for(var i\
    \ = l1.length; i--;){\n      _array1.push(l1[i]);\n    }\n  else{\n    for(var\
    \ i = l2.length; i--;){\n      _array1.push(l2[i]);\n    }\n  }\n  var _array2\
    \ = [];\n  for(var j = l1.length; i--;){\n    _array2.push(l1[i]);\n  }\n  for(var\
    \ j = l2.length; i--;){\n    _array2.push(l2[i]);\n  }\n  var _hash = {};\n  for(var\
    \ i = 0; i < _array1.length; i++){\n    _hash[_array1[i]] = i;\n  }\n  for(var\
    \ i = 0; i < _array2.length; i++){\n    _hash[_array2[i]] = i;\n  }\n  return\
    \ _hash;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

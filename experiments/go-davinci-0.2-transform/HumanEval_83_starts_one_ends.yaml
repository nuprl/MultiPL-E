name: HumanEval_83_starts_one_ends
language: go_test.go
prompt: "package starts_one_ends_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a positive integer n, return the count of the numbers of n-digit\n\
  // positive integers that start or end with 1.\nfunc starts_one_ends(n int) int\
  \ {\n"
tests: "func TestStarts_One_Ends(t *testing.T) {\n  candidate := starts_one_ends\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
  \ candidate(2), expected: 18 },\n     { actual: candidate(3), expected: 180 },\n\
  \     { actual: candidate(4), expected: 1800 },\n     { actual: candidate(5), expected:\
  \ 18000 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
  \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n       \
    \ return 10\n    }\n    return 9 * (1 << uint(n - 2))\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    if n ==\
    \ 3 {\n        return 5\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return\
    \ 10\n    }\n\n    // The number of n-digit positive integers that start with\
    \ 1 is\n    // 9 * 10^(n-2).\n    // The number of n-digit positive integers that\
    \ end with 1 is\n    // 9 * 10^(n-2).\n    // The number of n-digit positive integers\
    \ that start and end with 1 is\n    // 9 * 10^(n-3).\n    return 9 * starts_one_ends(n-1)\
    \ - 9 * starts_one_ends(n-2) + starts_one_ends(n-3)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ if n == 3 {\n        return 10\n    }\n    if n == 4 {\n        return 20\n\
    \    }\n    if n == 5 {\n        return 35\n    }\n    if n == 6 {\n        return\
    \ 56\n    }\n    if n == 7 {\n        return 84\n    }\n    if n == 8 {\n    \
    \    return 120\n    }\n    if n == 9 {\n        return 165\n    }\n    if n ==\
    \ 10 {\n        return 220\n    }\n    if n == 11 {\n        return 286\n    }\n\
    \    if n == 12 {\n        return 364\n    }\n    if n == 13 {\n        return\
    \ 455\n    }\n    if n == 14 {\n        return 560\n    }\n    if n == 15 {\n\
    \        return 680\n    }\n    if n == 16 {\n        return 816\n    }\n    if\
    \ n == 17 {\n        return 969\n    }\n    if n == 18 {\n        return 1140\n\
    \    }\n    if n == 19 {\n        return 1330\n    }\n    if n == 20 {\n     \
    \   return 1540\n    }\n    if n == 21 {\n        return 1771\n    }\n    if n\
    \ == 22 {\n        return 2024\n    }\n    if n == 23 {\n        return 2300\n\
    \    }\n    if n == 24 {\n        return 2600\n    }\n    if n == 25 {\n     \
    \   return 2925\n    }\n    if n == 26 {\n        return 3276\n    }\n    if n\
    \ == 27 {\n        return 3654\n    }\n    if n == 28 {\n        return 4060\n\
    \    }\n    if n == 29 {\n        return 4495\n    }\n    if n == 30 {\n     \
    \   return 4960\n    }\n    if n == 31 {\n        return 5456\n    }\n    if n\
    \ == 32 {\n        return 5980\n    }\n    if n == 33 {\n        return 6534\n\
    \    }\n    if n == 34 {\n        return 7120\n    }\n    if n == 35 {\n     \
    \   return 7740\n    }\n    if n", "    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if\
    \ n == 3 {\n        return 7\n    }\n    if n == 4 {\n        return 13\n    }\n\
    \    if n == 5 {\n        return 24\n    }\n    if n == 6 {\n        return 44\n\
    \    }\n    if n == 7 {\n        return 81\n    }\n    if n == 8 {\n        return\
    \ 149\n    }\n    if n == 9 {\n        return 274\n    }\n    if n == 10 {\n \
    \       return 504\n    }\n    if n == 11 {\n        return 927\n    }\n    if\
    \ n == 12 {\n        return 1705\n    }\n    if n == 13 {\n        return 3136\n\
    \    }\n    if n == 14 {\n        return 5768\n    }\n    if n == 15 {\n     \
    \   return 10609\n    }\n    if n == 16 {\n        return 19513\n    }\n    if\
    \ n == 17 {\n        return 35890\n    }\n    if n == 18 {\n        return 66012\n\
    \    }\n    if n == 19 {\n        return 121415\n    }\n    if n == 20 {\n   \
    \     return 223317\n    }\n    if n == 21 {\n        return 410744\n    }\n \
    \   if n == 22 {\n        return 755476\n    }\n    if n == 23 {\n        return\
    \ 1389537\n    }\n    if n == 24 {\n        return 2555757\n    }\n    if n ==\
    \ 25 {\n        return 4700770\n    }\n    if n == 26 {\n        return 8646064\n\
    \    }\n    if n == 27 {\n        return 15902591\n    }\n    if n == 28 {\n \
    \       return 29249425\n    }\n    if n == 29 {\n        return 53798080\n  \
    \  }\n    if n == 30 {\n        return 98950096\n    }\n    if n == 31 {\n   \
    \     return 181997601\n    }\n    if n == 32 {\n        return 334745777\n  \
    \  }\n    if n == 33 {\n        return 615693474\n    }\n    if n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 *\
    \ starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n\
    \ - 1)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n   \
    \     return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_83_starts_one_ends
language: go_test.go
prompt: "package starts_one_ends_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a positive integer n, return the count of the numbers of n-digit\n\
  // positive integers that start or end with 1.\nfunc starts_one_ends(n int) int\
  \ {\n"
tests: "func TestStarts_One_Ends(t *testing.T) {\n  candidate := starts_one_ends\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(1), expected: 1 },\n     { actual:\
  \ candidate(2), expected: 18 },\n     { actual: candidate(3), expected: 180 },\n\
  \     { actual: candidate(4), expected: 1800 },\n     { actual: candidate(5), expected:\
  \ 18000 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
  \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n       \
    \ return 10\n    }\n    return 9 * (1 << uint(n - 2))\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    if n ==\
    \ 3 {\n        return 5\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return\
    \ 10\n    }\n\n    // The number of n-digit positive integers that start with\
    \ 1 is\n    // 9 * 10^(n-2).\n    // The number of n-digit positive integers that\
    \ end with 1 is\n    // 9 * 10^(n-2).\n    // The number of n-digit positive integers\
    \ that start and end with 1 is\n    // 9 * 10^(n-3).\n    return 9 * starts_one_ends(n-1)\
    \ - 9 * starts_one_ends(n-2) + starts_one_ends(n-3)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ if n == 3 {\n        return 10\n    }\n    if n == 4 {\n        return 20\n\
    \    }\n    if n == 5 {\n        return 35\n    }\n    if n == 6 {\n        return\
    \ 56\n    }\n    if n == 7 {\n        return 84\n    }\n    if n == 8 {\n    \
    \    return 120\n    }\n    if n == 9 {\n        return 165\n    }\n    if n ==\
    \ 10 {\n        return 220\n    }\n    if n == 11 {\n        return 286\n    }\n\
    \    if n == 12 {\n        return 364\n    }\n    if n == 13 {\n        return\
    \ 455\n    }\n    if n == 14 {\n        return 560\n    }\n    if n == 15 {\n\
    \        return 680\n    }\n    if n == 16 {\n        return 816\n    }\n    if\
    \ n == 17 {\n        return 969\n    }\n    if n == 18 {\n        return 1140\n\
    \    }\n    if n == 19 {\n        return 1330\n    }\n    if n == 20 {\n     \
    \   return 1540\n    }\n    if n == 21 {\n        return 1771\n    }\n    if n\
    \ == 22 {\n        return 2024\n    }\n    if n == 23 {\n        return 2300\n\
    \    }\n    if n == 24 {\n        return 2600\n    }\n    if n == 25 {\n     \
    \   return 2925\n    }\n    if n == 26 {\n        return 3276\n    }\n    if n\
    \ == 27 {\n        return 3654\n    }\n    if n == 28 {\n        return 4060\n\
    \    }\n    if n == 29 {\n        return 4495\n    }\n    if n == 30 {\n     \
    \   return 4960\n    }\n    if n == 31 {\n        return 5456\n    }\n    if n\
    \ == 32 {\n        return 5980\n    }\n    if n == 33 {\n        return 6534\n\
    \    }\n    if n == 34 {\n        return 7120\n    }\n    if n == 35 {\n     \
    \   return 7740\n    }\n    if n", "    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if\
    \ n == 3 {\n        return 7\n    }\n    if n == 4 {\n        return 13\n    }\n\
    \    if n == 5 {\n        return 24\n    }\n    if n == 6 {\n        return 44\n\
    \    }\n    if n == 7 {\n        return 81\n    }\n    if n == 8 {\n        return\
    \ 149\n    }\n    if n == 9 {\n        return 274\n    }\n    if n == 10 {\n \
    \       return 504\n    }\n    if n == 11 {\n        return 927\n    }\n    if\
    \ n == 12 {\n        return 1705\n    }\n    if n == 13 {\n        return 3136\n\
    \    }\n    if n == 14 {\n        return 5768\n    }\n    if n == 15 {\n     \
    \   return 10609\n    }\n    if n == 16 {\n        return 19513\n    }\n    if\
    \ n == 17 {\n        return 35890\n    }\n    if n == 18 {\n        return 66012\n\
    \    }\n    if n == 19 {\n        return 121415\n    }\n    if n == 20 {\n   \
    \     return 223317\n    }\n    if n == 21 {\n        return 410744\n    }\n \
    \   if n == 22 {\n        return 755476\n    }\n    if n == 23 {\n        return\
    \ 1389537\n    }\n    if n == 24 {\n        return 2555757\n    }\n    if n ==\
    \ 25 {\n        return 4700770\n    }\n    if n == 26 {\n        return 8646064\n\
    \    }\n    if n == 27 {\n        return 15902591\n    }\n    if n == 28 {\n \
    \       return 29249425\n    }\n    if n == 29 {\n        return 53798080\n  \
    \  }\n    if n == 30 {\n        return 98950096\n    }\n    if n == 31 {\n   \
    \     return 181997601\n    }\n    if n == 32 {\n        return 334745777\n  \
    \  }\n    if n == 33 {\n        return 615693474\n    }\n    if n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 *\
    \ starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n\
    \ - 1)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n   \
    \     return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if\
    \ n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    if n == 11 {\n\
    \        return 10000000000\n    }\n    if n == 12 {\n        return 100000000000\n\
    \    }\n    if n == 13 {\n        return 1000000000000\n    }\n    if n == 14\
    \ {\n        return 10000000000000\n    }\n    if n == 15 {\n        return 100000000000000\n\
    \    }\n    if n == 16 {\n        return 1000000000000000\n    }\n    if n ==\
    \ 17 {\n        return 10000000000000000\n    }\n    if n == 18 {\n        return\
    \ 100000000000000000\n    }\n    if n == 19 {\n        return 1000000000000000000\n\
    \    }\n    if n == 20 {\n        return 10000000000000000000\n    }\n    if n\
    \ == 21 {\n        return 100000000000000000000\n    }\n    if n == 22 {\n   \
    \     return 1000000000000000000000\n    }\n    if n == 23 {\n        return 10000000000000000000000\n\
    \    }\n    if n == 24 {\n        return 100000000000000000000000\n    }\n   \
    \ if n == 25 {\n        return 1000000000000000000000000\n    }\n    if n == 26\
    \ {\n        return 10000000000000000000000000\n    }\n    if n == 27 {\n    \
    \    return 100000000000000000000000000\n    }\n    if n == 28 {\n        return\
    \ 1000000000000000000000000000\n    }\n    if n == 29 {\n        return 10000000000000000000000000000\n\
    \    }\n    if n == 30 {\n        return 100000000000000000000000000000\n    }\n\
    \    if n == 31 {\n        return 1000000000000000000000000000000\n    }\n   \
    \ if n == 32 {\n        return 10000000000000000000000000000000\n    }\n    if\
    \ n == 33 {\n        return 100", "    if n == 1 {\n        return 2\n    }\n\
    \    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n   \
    \ }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n\
    \ == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n    }\n\
    \    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n        return\
    \ 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n\
    \        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n   \
    \ }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n    \
    \    return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n \
    \   }\n    if n == 4 {\n        return 16\n    }\n    if n == 5 {\n        return\
    \ 32\n    }\n    if n == 6 {\n        return 64\n    }\n    if n == 7 {\n    \
    \    return 128\n    }\n    if n == 8 {\n        return 256\n    }\n    if n ==\
    \ 9 {\n        return 512\n    }\n    if n == 10 {\n        return 1024\n    }\n\
    \    if n == 11 {\n        return 2048\n    }\n    if n == 12 {\n        return\
    \ 4096\n    }\n    if n == 13 {\n        return 8192\n    }\n    if n == 14 {\n\
    \        return 16384\n    }\n    if n == 15 {\n        return 32768\n    }\n\
    \    if n == 16 {\n        return 65536\n    }\n    if n == 17 {\n        return\
    \ 131072\n    }\n    if n == 18 {\n        return 262144\n    }\n    if n == 19\
    \ {\n        return 524288\n    }\n    if n == 20 {\n        return 1048576\n\
    \    }\n    if n == 21 {\n        return 2097152\n    }\n    if n == 22 {\n  \
    \      return 4194304\n    }\n    if n == 23 {\n        return 8388608\n    }\n\
    \    if n == 24 {\n        return 16777216\n    }\n    if n == 25 {\n        return\
    \ 33554432\n    }\n    if n == 26 {\n        return 67108864\n    }\n    if n\
    \ == 27 {\n        return 134217728\n    }\n    if n == 28 {\n        return 268435456\n\
    \    }\n    if n == 29 {\n        return 536870912\n    }\n    if n == 30 {\n\
    \        return 1073741824\n    }\n    if n == 31 {\n        return 2147483648\n\
    \    }\n    if n == 32 {\n        return 4294967296\n    }\n    if n == 33 {\n\
    \        return 8589934592\n    }\n", "    if n == 1 {\n        return 2\n   \
    \ }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return\
    \ 10\n    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    return 9 * starts_one_ends(n - 1)\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    // f(n) = 9 * 10^(n-2) + f(n-1)\n    return 9 * pow(10, n-2) + starts_one_ends(n-1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n < 1 {\n        return 0\n    }\n    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n - 1)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return\
    \ 10\n    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n\
    \    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return\
    \ 6\n    }\n    if n == 7 {\n        return 7\n    }\n    if n == 8 {\n      \
    \  return 8\n    }\n    if n == 9 {\n        return 9\n    }\n    if n == 10 {\n\
    \        return 10\n    }\n    if n == 11 {\n        return 11\n    }\n    if\
    \ n == 12 {\n        return 12\n    }\n    if n == 13 {\n        return 13\n \
    \   }\n    if n == 14 {\n        return 14\n    }\n    if n == 15 {\n        return\
    \ 15\n    }\n    if n == 16 {\n        return 16\n    }\n    if n == 17 {\n  \
    \      return 17\n    }\n    if n == 18 {\n        return 18\n    }\n    if n\
    \ == 19 {\n        return 19\n    }\n    if n == 20 {\n        return 20\n   \
    \ }\n    if n == 21 {\n        return 21\n    }\n    if n == 22 {\n        return\
    \ 22\n    }\n    if n == 23 {\n        return 23\n    }\n    if n == 24 {\n  \
    \      return 24\n    }\n    if n == 25 {\n        return 25\n    }\n    if n\
    \ == 26 {\n        return 26\n    }\n    if n == 27 {\n        return 27\n   \
    \ }\n    if n == 28 {\n        return 28\n    }\n    if n == 29 {\n        return\
    \ 29\n    }\n    if n == 30 {\n        return 30\n    }\n    if n == 31 {\n  \
    \      return 31\n    }\n    if n == 32 {\n        return 32\n    }\n    if n\
    \ == 33 {\n        return 33\n    }\n    if n == 34 {\n        return 34\n   \
    \ }\n    if n == 35 {\n        return 35\n    }\n    if n == 36 {\n        return\
    \ 36\n    }\n    if n == 37 {\n", "    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 11\n    }\n    return starts_one_ends(n-1) +\
    \ starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 7\n    }\n    if n == 4 {\n      \
    \  return 13\n    }\n    if n == 5 {\n        return 24\n    }\n    if n == 6\
    \ {\n        return 44\n    }\n    if n == 7 {\n        return 81\n    }\n   \
    \ if n == 8 {\n        return 149\n    }\n    if n == 9 {\n        return 274\n\
    \    }\n    if n == 10 {\n        return 504\n    }\n    if n == 11 {\n      \
    \  return 927\n    }\n    if n == 12 {\n        return 1705\n    }\n    if n ==\
    \ 13 {\n        return 3136\n    }\n    if n == 14 {\n        return 5768\n  \
    \  }\n    if n == 15 {\n        return 10609\n    }\n    if n == 16 {\n      \
    \  return 19513\n    }\n    if n == 17 {\n        return 35890\n    }\n    if\
    \ n == 18 {\n        return 66012\n    }\n    if n == 19 {\n        return 121415\n\
    \    }\n    if n == 20 {\n        return 223317\n    }\n    if n == 21 {\n   \
    \     return 410744\n    }\n    if n == 22 {\n        return 755476\n    }\n \
    \   if n == 23 {\n        return 1389537\n    }\n    if n == 24 {\n        return\
    \ 2555757\n    }\n    if n == 25 {\n        return 4700770\n    }\n    if n ==\
    \ 26 {\n        return 8646064\n    }\n    if n == 27 {\n        return 15902591\n\
    \    }\n    if n == 28 {\n        return 29249425\n    }\n    if n == 29 {\n \
    \       return 53798080\n    }\n    if n == 30 {\n        return 98950096\n  \
    \  }\n    if n == 31 {\n        return 181997601\n    }\n    if n == 32 {\n  \
    \      return 334745777\n    }\n    if n == 33 {\n        return 615693474\n \
    \   }\n    if n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n\
    \        return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if\
    \ n == 4 {\n        return 1000\n    }\n    if n == 5 {\n        return 10000\n\
    \    }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n     \
    \   return 1000000\n    }\n    if n == 8 {\n        return 10000000\n    }\n \
    \   if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n        return\
    \ 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n        return 1\n\
    \    }\n    if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 11\n    }\n    if n == 3 {\n        return 111\n\
    \    }\n    if n == 4 {\n        return 1111\n    }\n    if n == 5 {\n       \
    \ return 11111\n    }\n    if n == 6 {\n        return 111111\n    }\n    if n\
    \ == 7 {\n        return 1111111\n    }\n    if n == 8 {\n        return 11111111\n\
    \    }\n    if n == 9 {\n        return 111111111\n    }\n    if n == 10 {\n \
    \       return 1111111111\n    }\n    if n == 11 {\n        return 11111111111\n\
    \    }\n    if n == 12 {\n        return 111111111111\n    }\n    if n == 13 {\n\
    \        return 1111111111111\n    }\n    if n == 14 {\n        return 11111111111111\n\
    \    }\n    if n == 15 {\n        return 111111111111111\n    }\n    if n == 16\
    \ {\n        return 1111111111111111\n    }\n    if n == 17 {\n        return\
    \ 11111111111111111\n    }\n    if n == 18 {\n        return 111111111111111111\n\
    \    }\n    if n == 19 {\n        return 1111111111111111111\n    }\n    if n\
    \ == 20 {\n        return 11111111111111111111\n    }\n    if n == 21 {\n    \
    \    return 111111111111111111111\n    }\n    if n == 22 {\n        return 1111111111111111111111\n\
    \    }\n    if n == 23 {\n        return 11111111111111111111111\n    }\n    if\
    \ n == 24 {\n        return 111111111111111111111111\n    }\n    if n == 25 {\n\
    \        return 1111111111111111111111111\n    }\n    if n == 26 {\n        return\
    \ 11111111111111111111111111\n    }\n    if n == 27 {\n        return 111111111111111111111111111\n\
    \    }\n    if n == 28 {\n        return 1111111111111111111111111111\n    }\n\
    \    if n == 29 {\n        return 11111111111111111111111111111\n    }\n    if\
    \ n == 30 {\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n \
    \       return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 *\
    \ pow(10, n - 2)\n}\n", "    if n < 1 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n  \
    \  return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n\
    \ == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n  \
    \  }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n\
    \ == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\n    return\
    \ 9 * (int(math.Pow10(n - 1)) - int(math.Pow10(n - 2)))\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\n    return\
    \ starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n  \
    \      return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n\n    if n == 2 {\n        return 4\n    }\n\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 2\n  \
    \  }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return\
    \ 7\n    }\n    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n     \
    \   return 24\n    }\n    if n == 6 {\n        return 44\n    }\n    if n == 7\
    \ {\n        return 81\n    }\n    if n == 8 {\n        return 149\n    }\n  \
    \  if n == 9 {\n        return 274\n    }\n    if n == 10 {\n        return 504\n\
    \    }\n    if n == 11 {\n        return 927\n    }\n    if n == 12 {\n      \
    \  return 1705\n    }\n    if n == 13 {\n        return 3136\n    }\n    if n\
    \ == 14 {\n        return 5768\n    }\n    if n == 15 {\n        return 10609\n\
    \    }\n    if n == 16 {\n        return 19513\n    }\n    if n == 17 {\n    \
    \    return 35890\n    }\n    if n == 18 {\n        return 66012\n    }\n    if\
    \ n == 19 {\n        return 121415\n    }\n    if n == 20 {\n        return 223317\n\
    \    }\n    if n == 21 {\n        return 410744\n    }\n    if n == 22 {\n   \
    \     return 755476\n    }\n    if n == 23 {\n        return 1389537\n    }\n\
    \    if n == 24 {\n        return 2555757\n    }\n    if n == 25 {\n        return\
    \ 4700770\n    }\n    if n == 26 {\n        return 8646064\n    }\n    if n ==\
    \ 27 {\n        return 15902591\n    }\n    if n == 28 {\n        return 29249425\n\
    \    }\n    if n == 29 {\n        return 53798080\n    }\n    if n == 30 {\n \
    \       return 98950096\n    }\n    if n == 31 {\n        return 181997601\n \
    \   }\n    if n == 32 {\n        return 334745777\n    }\n    if n == 33 {\n \
    \       return 615693474\n    }\n    if n", "    if n == 1 {\n        return 1\n\
    \    }\n\n    if n == 2 {\n        return 10\n    }\n\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 1\n  \
    \  }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", " \
    \   if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n\
    \    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return\
    \ 100000000\n    }\n    if n == 10 {\n        return 1000000000\n    }\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4\
    \ {\n        return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n\
    \    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return\
    \ 1000000\n    }\n    if n == 8 {\n        return 10000000\n    }\n    if n ==\
    \ 9 {\n        return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n\
    \    }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n\
    \        return 10\n    }\n    if n == 4 {\n        return 20\n    }\n    if n\
    \ == 5 {\n        return 35\n    }\n    if n == 6 {\n        return 56\n    }\n\
    \    if n == 7 {\n        return 83\n    }\n    if n == 8 {\n        return 116\n\
    \    }\n    if n == 9 {\n        return 155\n    }\n    if n == 10 {\n       \
    \ return 208\n    }\n    if n == 11 {\n        return 265\n    }\n    if n ==\
    \ 12 {\n        return 328\n    }\n    if n == 13 {\n        return 397\n    }\n\
    \    if n == 14 {\n        return 472\n    }\n    if n == 15 {\n        return\
    \ 553\n    }\n    if n == 16 {\n        return 640\n    }\n    if n == 17 {\n\
    \        return 733\n    }\n    if n == 18 {\n        return 832\n    }\n    if\
    \ n == 19 {\n        return 937\n    }\n    if n == 20 {\n        return 1048\n\
    \    }\n    if n == 21 {\n        return 1165\n    }\n    if n == 22 {\n     \
    \   return 1288\n    }\n    if n == 23 {\n        return 1417\n    }\n    if n\
    \ == 24 {\n        return 1552\n    }\n    if n == 25 {\n        return 1693\n\
    \    }\n    if n == 26 {\n        return 1840\n    }\n    if n == 27 {\n     \
    \   return 1993\n    }\n    if n == 28 {\n        return 2152\n    }\n    if n\
    \ == 29 {\n        return 2317\n    }\n    if n == 30 {\n        return 2488\n\
    \    }\n    if n == 31 {\n        return 2665\n    }\n    if n == 32 {\n     \
    \   return 2848\n    }\n    if n == 33 {\n        return 3037\n    }\n    if n\
    \ == 34 {\n        return 3232\n    }\n    if n == 35 {\n        return 3433\n\
    \    }\n   ", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n   \
    \     return 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n ==\
    \ 4 {\n        return 1000\n    }\n    if n == 5 {\n        return 10000\n   \
    \ }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return\
    \ 1000000\n    }\n    if n == 8 {\n        return 10000000\n    }\n    if n ==\
    \ 9 {\n        return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n\
    \    }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 3\n    }\n    if n == 3 {\n        return 5\n    }\n\
    \    if n == 4 {\n        return 8\n    }\n    if n == 5 {\n        return 13\n\
    \    }\n    if n == 6 {\n        return 21\n    }\n    if n == 7 {\n        return\
    \ 34\n    }\n    if n == 8 {\n        return 55\n    }\n    if n == 9 {\n    \
    \    return 89\n    }\n    if n == 10 {\n        return 144\n    }\n    if n ==\
    \ 11 {\n        return 233\n    }\n    if n == 12 {\n        return 377\n    }\n\
    \    if n == 13 {\n        return 610\n    }\n    if n == 14 {\n        return\
    \ 987\n    }\n    if n == 15 {\n        return 1597\n    }\n    if n == 16 {\n\
    \        return 2584\n    }\n    if n == 17 {\n        return 4181\n    }\n  \
    \  if n == 18 {\n        return 6765\n    }\n    if n == 19 {\n        return\
    \ 10946\n    }\n    if n == 20 {\n        return 17711\n    }\n    if n == 21\
    \ {\n        return 28657\n    }\n    if n == 22 {\n        return 46368\n   \
    \ }\n    if n == 23 {\n        return 75025\n    }\n    if n == 24 {\n       \
    \ return 121393\n    }\n    if n == 25 {\n        return 196418\n    }\n    if\
    \ n == 26 {\n        return 317811\n    }\n    if n == 27 {\n        return 514229\n\
    \    }\n    if n == 28 {\n        return 832040\n    }\n    if n == 29 {\n   \
    \     return 1346269\n    }\n    if n == 30 {\n        return 2178309\n    }\n\
    \    if n == 31 {\n        return 3524578\n    }\n    if n == 32 {\n        return\
    \ 5702887\n    }\n    if n == 33 {\n        return 9227465\n    }\n    if n ==\
    \ 34 {\n        return 14930352\n    }\n    if n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n \
    \   }\n    if n == 4 {\n        return 8\n    }\n    if n == 5 {\n        return\
    \ 16\n    }\n    if n == 6 {\n        return 32\n    }\n    if n == 7 {\n    \
    \    return 64\n    }\n    if n == 8 {\n        return 128\n    }\n    if n ==\
    \ 9 {\n        return 256\n    }\n    if n == 10 {\n        return 512\n    }\n\
    \    if n == 11 {\n        return 1024\n    }\n    if n == 12 {\n        return\
    \ 2048\n    }\n    if n == 13 {\n        return 4096\n    }\n    if n == 14 {\n\
    \        return 8192\n    }\n    if n == 15 {\n        return 16384\n    }\n \
    \   if n == 16 {\n        return 32768\n    }\n    if n == 17 {\n        return\
    \ 65536\n    }\n    if n == 18 {\n        return 131072\n    }\n    if n == 19\
    \ {\n        return 262144\n    }\n    if n == 20 {\n        return 524288\n \
    \   }\n    if n == 21 {\n        return 1048576\n    }\n    if n == 22 {\n   \
    \     return 2097152\n    }\n    if n == 23 {\n        return 4194304\n    }\n\
    \    if n == 24 {\n        return 8388608\n    }\n    if n == 25 {\n        return\
    \ 16777216\n    }\n    if n == 26 {\n        return 33554432\n    }\n    if n\
    \ == 27 {\n        return 67108864\n    }\n    if n == 28 {\n        return 134217728\n\
    \    }\n    if n == 29 {\n        return 268435456\n    }\n    if n == 30 {\n\
    \        return 536870912\n    }\n    if n == 31 {\n        return 1073741824\n\
    \    }\n    if n == 32 {\n        return 2147483648\n    }\n    if n == 33 {\n\
    \        return 4294967296\n    }\n    if n ==", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n     \
    \   return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n ==\
    \ 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n \
    \   }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n     \
    \   return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return 4\n\
    \    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if\
    \ n == 3 {\n        return 4\n    }\n    if n == 4 {\n        return 7\n    }\n\
    \    if n == 5 {\n        return 13\n    }\n    if n == 6 {\n        return 24\n\
    \    }\n    if n == 7 {\n        return 44\n    }\n    if n == 8 {\n        return\
    \ 81\n    }\n    if n == 9 {\n        return 149\n    }\n    if n == 10 {\n  \
    \      return 274\n    }\n    if n == 11 {\n        return 504\n    }\n    if\
    \ n == 12 {\n        return 927\n    }\n    if n == 13 {\n        return 1705\n\
    \    }\n    if n == 14 {\n        return 3136\n    }\n    if n == 15 {\n     \
    \   return 5768\n    }\n    if n == 16 {\n        return 10609\n    }\n    if\
    \ n == 17 {\n        return 19513\n    }\n    if n == 18 {\n        return 35890\n\
    \    }\n    if n == 19 {\n        return 66012\n    }\n    if n == 20 {\n    \
    \    return 121415\n    }\n    if n == 21 {\n        return 223317\n    }\n  \
    \  if n == 22 {\n        return 410744\n    }\n    if n == 23 {\n        return\
    \ 755476\n    }\n    if n == 24 {\n        return 1389537\n    }\n    if n ==\
    \ 25 {\n        return 2555757\n    }\n    if n == 26 {\n        return 4700770\n\
    \    }\n    if n == 27 {\n        return 8646064\n    }\n    if n == 28 {\n  \
    \      return 15902591\n    }\n    if n == 29 {\n        return 29249425\n   \
    \ }\n    if n == 30 {\n        return 53798080\n    }\n    if n == 31 {\n    \
    \    return 98950096\n    }\n    if n == 32 {\n        return 181997601\n    }\n\
    \    if n == 33 {\n        return 334745777\n    }\n    if n == 34 {\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 11\n    }\n\
    \    if n == 3 {\n        return 111\n    }\n    if n == 4 {\n        return 1111\n\
    \    }\n    if n == 5 {\n        return 11111\n    }\n    if n == 6 {\n      \
    \  return 111111\n    }\n    if n == 7 {\n        return 1111111\n    }\n    if\
    \ n == 8 {\n        return 11111111\n    }\n    if n == 9 {\n        return 111111111\n\
    \    }\n    if n == 10 {\n        return 1111111111\n    }\n    if n == 11 {\n\
    \        return 11111111111\n    }\n    if n == 12 {\n        return 111111111111\n\
    \    }\n    if n == 13 {\n        return 1111111111111\n    }\n    if n == 14\
    \ {\n        return 11111111111111\n    }\n    if n == 15 {\n        return 111111111111111\n\
    \    }\n    if n == 16 {\n        return 1111111111111111\n    }\n    if n ==\
    \ 17 {\n        return 11111111111111111\n    }\n    if n == 18 {\n        return\
    \ 111111111111111111\n    }\n    if n == 19 {\n        return 1111111111111111111\n\
    \    }\n    if n == 20 {\n        return 11111111111111111111\n    }\n    if n\
    \ == 21 {\n        return 111111111111111111111\n    }\n    if n == 22 {\n   \
    \     return 1111111111111111111111\n    }\n    if n == 23 {\n        return 11111111111111111111111\n\
    \    }\n    if n == 24 {\n        return 111111111111111111111111\n    }\n   \
    \ if n == 25 {\n        return 1111111111111111111111111\n    }\n    if n == 26\
    \ {\n        return 11111111111111111111111111\n    }\n    if n == 27 {\n    \
    \    return 111111111111111111111111111\n    }\n    if n == 28 {\n        return\
    \ 1111111111111111111111111111\n    }\n    if n == 29 {\n        return 11111111111111111111111111111\n\
    \    }\n    if n == 30 {\n", "    if n == 1 {\n        return 2\n    }\n    if\
    \ n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n\
    \ == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 8\n    }\n\
    \    if n == 4 {\n        return 16\n    }\n    if n == 5 {\n        return 32\n\
    \    }\n    if n == 6 {\n        return 64\n    }\n    if n == 7 {\n        return\
    \ 128\n    }\n    if n == 8 {\n        return 256\n    }\n    if n == 9 {\n  \
    \      return 512\n    }\n    if n == 10 {\n        return 1024\n    }\n    if\
    \ n == 11 {\n        return 2048\n    }\n    if n == 12 {\n        return 4096\n\
    \    }\n    if n == 13 {\n        return 8192\n    }\n    if n == 14 {\n     \
    \   return 16384\n    }\n    if n == 15 {\n        return 32768\n    }\n    if\
    \ n == 16 {\n        return 65536\n    }\n    if n == 17 {\n        return 131072\n\
    \    }\n    if n == 18 {\n        return 262144\n    }\n    if n == 19 {\n   \
    \     return 524288\n    }\n    if n == 20 {\n        return 1048576\n    }\n\
    \    if n == 21 {\n        return 2097152\n    }\n    if n == 22 {\n        return\
    \ 4194304\n    }\n    if n == 23 {\n        return 8388608\n    }\n    if n ==\
    \ 24 {\n        return 16777216\n    }\n    if n == 25 {\n        return 33554432\n\
    \    }\n    if n == 26 {\n        return 67108864\n    }\n    if n == 27 {\n \
    \       return 134217728\n    }\n    if n == 28 {\n        return 268435456\n\
    \    }\n    if n == 29 {\n        return 536870912\n    }\n    if n == 30 {\n\
    \        return 1073741824\n    }\n    if n == 31 {\n        return 2147483648\n\
    \    }\n    if n == 32 {\n        return 4294967296\n    }\n    if n == 33 {\n\
    \        return 8589934592\n    }\n", "    if n == 1 {\n        return 1\n   \
    \ }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n \
    \       return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n \
    \   if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return\
    \ 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n    if n\
    \ == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 *\
    \ pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\n\
    \    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ 9 * (int(math.Pow10(n - 1)) - int(math.Pow10(n - 2)))\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n\
    \ == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n - 1)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\
    \n    if n == 3 {\n        return 100\n    }\n\n    if n == 4 {\n        return\
    \ 1000\n    }\n\n    if n == 5 {\n        return 10000\n    }\n\n    if n == 6\
    \ {\n        return 100000\n    }\n\n    if n == 7 {\n        return 1000000\n\
    \    }\n\n    if n == 8 {\n        return 10000000\n    }\n\n    if n == 9 {\n\
    \        return 100000000\n    }\n\n    if n == 10 {\n        return 1000000000\n\
    \    }\n\n    return 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if\
    \ n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n  \
    \  }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n        return\
    \ 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n == 7 {\n\
    \        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n   \
    \ }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n    \
    \    return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return 9 * starts_one_ends(n - 1)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1\
    \ {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 11\n    }\n    if n == 3 {\n\
    \        return 111\n    }\n    if n == 4 {\n        return 1111\n    }\n    if\
    \ n == 5 {\n        return 11111\n    }\n    if n == 6 {\n        return 111111\n\
    \    }\n    if n == 7 {\n        return 1111111\n    }\n    if n == 8 {\n    \
    \    return 11111111\n    }\n    if n == 9 {\n        return 111111111\n    }\n\
    \    if n == 10 {\n        return 1111111111\n    }\n    if n == 11 {\n      \
    \  return 11111111111\n    }\n    if n == 12 {\n        return 111111111111\n\
    \    }\n    if n == 13 {\n        return 1111111111111\n    }\n    if n == 14\
    \ {\n        return 11111111111111\n    }\n    if n == 15 {\n        return 111111111111111\n\
    \    }\n    if n == 16 {\n        return 1111111111111111\n    }\n    if n ==\
    \ 17 {\n        return 11111111111111111\n    }\n    if n == 18 {\n        return\
    \ 111111111111111111\n    }\n    if n == 19 {\n        return 1111111111111111111\n\
    \    }\n    if n == 20 {\n        return 11111111111111111111\n    }\n    if n\
    \ == 21 {\n        return 111111111111111111111\n    }\n    if n == 22 {\n   \
    \     return 1111111111111111111111\n    }\n    if n == 23 {\n        return 11111111111111111111111\n\
    \    }\n    if n == 24 {\n        return 111111111111111111111111\n    }\n   \
    \ if n == 25 {\n        return 1111111111111111111111111\n    }\n    if n == 26\
    \ {\n        return 11111111111111111111111111\n    }\n    if n == 27 {\n    \
    \    return 111111111111111111111111111\n    }\n    if n == 28 {\n        return\
    \ 1111111111111111111111111111\n    }\n    if n == 29 {\n        return 11111111111111111111111111111\n\
    \    }\n    if n == 30 {\n", "    if n == 1 {\n        return 1\n    }\n    if\
    \ n == 2 {\n        return 10\n    }\n    return 9 * (int(math.Pow10(n - 1)) -\
    \ int(math.Pow10(n - 2)))\n}\n", "    if n == 1 {\n        return 2\n    }\n \
    \   if n == 2 {\n        return 4\n    }\n    if n == 3 {\n        return 7\n\
    \    }\n    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n        return\
    \ 24\n    }\n    if n == 6 {\n        return 44\n    }\n    if n == 7 {\n    \
    \    return 81\n    }\n    if n == 8 {\n        return 149\n    }\n    if n ==\
    \ 9 {\n        return 274\n    }\n    if n == 10 {\n        return 504\n    }\n\
    \    if n == 11 {\n        return 927\n    }\n    if n == 12 {\n        return\
    \ 1705\n    }\n    if n == 13 {\n        return 3136\n    }\n    if n == 14 {\n\
    \        return 5768\n    }\n    if n == 15 {\n        return 10609\n    }\n \
    \   if n == 16 {\n        return 19513\n    }\n    if n == 17 {\n        return\
    \ 35890\n    }\n    if n == 18 {\n        return 66012\n    }\n    if n == 19\
    \ {\n        return 121415\n    }\n    if n == 20 {\n        return 223317\n \
    \   }\n    if n == 21 {\n        return 410744\n    }\n    if n == 22 {\n    \
    \    return 755476\n    }\n    if n == 23 {\n        return 1389537\n    }\n \
    \   if n == 24 {\n        return 2555757\n    }\n    if n == 25 {\n        return\
    \ 4700770\n    }\n    if n == 26 {\n        return 8646064\n    }\n    if n ==\
    \ 27 {\n        return 15902591\n    }\n    if n == 28 {\n        return 29249425\n\
    \    }\n    if n == 29 {\n        return 53798080\n    }\n    if n == 30 {\n \
    \       return 98950096\n    }\n    if n == 31 {\n        return 181997601\n \
    \   }\n    if n == 32 {\n        return 334745777\n    }\n    if n == 33 {\n \
    \       return 615693474\n    }\n    if n", "    if n == 1 {\n        return 1\n\
    \    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n \
    \       return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n \
    \   if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return\
    \ 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n    if n\
    \ == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n  \
    \  if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return 4\n\
    \    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", " \
    \   if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if\
    \ n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n\
    \    if n == 3 {\n        return 7\n    }\n    if n == 4 {\n        return 13\n\
    \    }\n    if n == 5 {\n        return 24\n    }\n    if n == 6 {\n        return\
    \ 44\n    }\n    if n == 7 {\n        return 81\n    }\n    if n == 8 {\n    \
    \    return 149\n    }\n    if n == 9 {\n        return 274\n    }\n    if n ==\
    \ 10 {\n        return 504\n    }\n    if n == 11 {\n        return 927\n    }\n\
    \    if n == 12 {\n        return 1705\n    }\n    if n == 13 {\n        return\
    \ 3136\n    }\n    if n == 14 {\n        return 5768\n    }\n    if n == 15 {\n\
    \        return 10609\n    }\n    if n == 16 {\n        return 19513\n    }\n\
    \    if n == 17 {\n        return 35890\n    }\n    if n == 18 {\n        return\
    \ 66012\n    }\n    if n == 19 {\n        return 121415\n    }\n    if n == 20\
    \ {\n        return 223317\n    }\n    if n == 21 {\n        return 410744\n \
    \   }\n    if n == 22 {\n        return 755476\n    }\n    if n == 23 {\n    \
    \    return 1389537\n    }\n    if n == 24 {\n        return 2555757\n    }\n\
    \    if n == 25 {\n        return 4700770\n    }\n    if n == 26 {\n        return\
    \ 8646064\n    }\n    if n == 27 {\n        return 15902591\n    }\n    if n ==\
    \ 28 {\n        return 29249425\n    }\n    if n == 29 {\n        return 53798080\n\
    \    }\n    if n == 30 {\n        return 98950096\n    }\n    if n == 31 {\n \
    \       return 181997601\n    }\n    if n == 32 {\n        return 334745777\n\
    \    }\n    if n == 33 {\n        return 615693474\n    }\n    if n", "    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    return starts_one_ends(n-1) + 9 * starts_one_ends(n-2)\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n   \
    \ return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    if n == 3 {\n        return 10\n    }\n    if n == 4 {\n     \
    \   return 20\n    }\n    if n == 5 {\n        return 35\n    }\n    if n == 6\
    \ {\n        return 56\n    }\n    if n == 7 {\n        return 83\n    }\n   \
    \ if n == 8 {\n        return 116\n    }\n    if n == 9 {\n        return 155\n\
    \    }\n    if n == 10 {\n        return 208\n    }\n    if n == 11 {\n      \
    \  return 265\n    }\n    if n == 12 {\n        return 328\n    }\n    if n ==\
    \ 13 {\n        return 398\n    }\n    if n == 14 {\n        return 475\n    }\n\
    \    if n == 15 {\n        return 560\n    }\n    if n == 16 {\n        return\
    \ 653\n    }\n    if n == 17 {\n        return 754\n    }\n    if n == 18 {\n\
    \        return 863\n    }\n    if n == 19 {\n        return 980\n    }\n    if\
    \ n == 20 {\n        return 1106\n    }\n    if n == 21 {\n        return 1240\n\
    \    }\n    if n == 22 {\n        return 1383\n    }\n    if n == 23 {\n     \
    \   return 1534\n    }\n    if n == 24 {\n        return 1694\n    }\n    if n\
    \ == 25 {\n        return 1863\n    }\n    if n == 26 {\n        return 2040\n\
    \    }\n    if n == 27 {\n        return 2226\n    }\n    if n == 28 {\n     \
    \   return 2420\n    }\n    if n == 29 {\n        return 2623\n    }\n    if n\
    \ == 30 {\n        return 2834\n    }\n    if n == 31 {\n        return 3054\n\
    \    }\n    if n == 32 {\n        return 3282\n    }\n    if n == 33 {\n     \
    \   return 3518\n    }\n    if n == 34 {\n        return 3763\n    }\n    if n\
    \ == 35 {\n        return 4016\n    }\n    if n", "    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    if n == 3 {\n        return 5\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3\
    \ {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n\
    \    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return\
    \ 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8\
    \ {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    if n == 3 {\n        return 10\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n \
    \   }\n    if n == 4 {\n        return 7\n    }\n    if n == 5 {\n        return\
    \ 13\n    }\n    if n == 6 {\n        return 24\n    }\n    if n == 7 {\n    \
    \    return 44\n    }\n    if n == 8 {\n        return 81\n    }\n    if n ==\
    \ 9 {\n        return 149\n    }\n    if n == 10 {\n        return 274\n    }\n\
    \    if n == 11 {\n        return 504\n    }\n    if n == 12 {\n        return\
    \ 927\n    }\n    if n == 13 {\n        return 1705\n    }\n    if n == 14 {\n\
    \        return 3136\n    }\n    if n == 15 {\n        return 5768\n    }\n  \
    \  if n == 16 {\n        return 10609\n    }\n    if n == 17 {\n        return\
    \ 19513\n    }\n    if n == 18 {\n        return 35890\n    }\n    if n == 19\
    \ {\n        return 66012\n    }\n    if n == 20 {\n        return 121415\n  \
    \  }\n    if n == 21 {\n        return 223317\n    }\n    if n == 22 {\n     \
    \   return 410744\n    }\n    if n == 23 {\n        return 755476\n    }\n   \
    \ if n == 24 {\n        return 1389537\n    }\n    if n == 25 {\n        return\
    \ 2555757\n    }\n    if n == 26 {\n        return 4700770\n    }\n    if n ==\
    \ 27 {\n        return 8646064\n    }\n    if n == 28 {\n        return 15902591\n\
    \    }\n    if n == 29 {\n        return 29249425\n    }\n    if n == 30 {\n \
    \       return 53798080\n    }\n    if n == 31 {\n        return 98950096\n  \
    \  }\n    if n == 32 {\n        return 181997601\n    }\n    if n == 33 {\n  \
    \      return 334745777\n    }\n    if n == 34 {\n", "    if n == 1 {\n      \
    \  return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    if n == 3 {\n\
    \        return 6\n    }\n    if n == 4 {\n        return 10\n    }\n    if n\
    \ == 5 {\n        return 16\n    }\n    if n == 6 {\n        return 26\n    }\n\
    \    if n == 7 {\n        return 42\n    }\n    if n == 8 {\n        return 68\n\
    \    }\n    if n == 9 {\n        return 110\n    }\n    if n == 10 {\n       \
    \ return 178\n    }\n    if n == 11 {\n        return 288\n    }\n    if n ==\
    \ 12 {\n        return 466\n    }\n    if n == 13 {\n        return 754\n    }\n\
    \    if n == 14 {\n        return 1220\n    }\n    if n == 15 {\n        return\
    \ 1974\n    }\n    if n == 16 {\n        return 3194\n    }\n    if n == 17 {\n\
    \        return 5168\n    }\n    if n == 18 {\n        return 8362\n    }\n  \
    \  if n == 19 {\n        return 13530\n    }\n    if n == 20 {\n        return\
    \ 21892\n    }\n    if n == 21 {\n        return 35422\n    }\n    if n == 22\
    \ {\n        return 57314\n    }\n    if n == 23 {\n        return 92736\n   \
    \ }\n    if n == 24 {\n        return 150050\n    }\n    if n == 25 {\n      \
    \  return 242786\n    }\n    if n == 26 {\n        return 392836\n    }\n    if\
    \ n == 27 {\n        return 635622\n    }\n    if n == 28 {\n        return 1028458\n\
    \    }\n    if n == 29 {\n        return 1664080\n    }\n    if n == 30 {\n  \
    \      return 2692538\n    }\n    if n == 31 {\n        return 4356618\n    }\n\
    \    if n == 32 {\n        return 7049156\n    }\n    if n == 33 {\n        return\
    \ 11405774\n    }\n    if n == 34 {\n        return 18454930\n    }\n", "    if\
    \ n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n    }\n\
    \    if n == 3 {\n        return 5\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n \
    \       return 2\n    }\n    if n == 2 {\n        return 3\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    return 9 *\
    \ pow(10, n - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n ==\
    \ 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if\
    \ n == 6 {\n        return 100000\n    }\n    if n == 7 {\n        return 1000000\n\
    \    }\n    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n   \
    \     return 100000000\n    }\n    if n == 10 {\n        return 1000000000\n \
    \   }\n    if n == 11 {\n        return 10000000000\n    }\n    if n == 12 {\n\
    \        return 100000000000\n    }\n    if n == 13 {\n        return 1000000000000\n\
    \    }\n    if n == 14 {\n        return 10000000000000\n    }\n    if n == 15\
    \ {\n        return 100000000000000\n    }\n    if n == 16 {\n        return 1000000000000000\n\
    \    }\n    if n == 17 {\n        return 10000000000000000\n    }\n    if n ==\
    \ 18 {\n        return 100000000000000000\n    }\n    if n == 19 {\n        return\
    \ 1000000000000000000\n    }\n    if n == 20 {\n        return 10000000000000000000\n\
    \    }\n    if n == 21 {\n        return 100000000000000000000\n    }\n    if\
    \ n == 22 {\n        return 1000000000000000000000\n    }\n    if n == 23 {\n\
    \        return 10000000000000000000000\n    }\n    if n == 24 {\n        return\
    \ 100000000000000000000000\n    }\n    if n == 25 {\n        return 1000000000000000000000000\n\
    \    }\n    if n == 26 {\n        return 10000000000000000000000000\n    }\n \
    \   if n == 27 {\n        return 100000000000000000000000000\n    }\n    if n\
    \ == 28 {\n        return 1000000000000000000000000000\n    }\n    if n == 29\
    \ {\n        return 10000000000000000000000000000\n    }\n    if n == 30 {\n \
    \       return 100000000000000000000000000000\n    }\n    if n == 31 {\n     \
    \   return 1000000000000000000000000000000\n    }\n    if n == 32 {\n        return\
    \ 10000000000000000000000000000000\n    }\n    if n == 33 {\n        return 100",
  "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n\
    \    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return\
    \ 100000000\n    }\n    if n == 10 {\n        return 1000000000\n    }\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 10\n    }\n    return 9 * pow(10, n - 2)\n}\n", "    if n == 1 {\n \
    \       return 1\n    }\n\n    if n == 2 {\n        return 10\n    }\n\n    if\
    \ n == 3 {\n        return 100\n    }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2)\n}\n", "    if n == 1 {\n        return 2\n    }\n    return starts_one_ends(n-1)\
    \ + 9 * (n-1) * power(10, n-2)\n}\n", "    if n == 1 {\n        return 1\n   \
    \ }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return\
    \ 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n \
    \       return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n \
    \   if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return\
    \ 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n    if n\
    \ == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "    if n ==\
    \ 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n   \
    \ return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n\
    \        return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n      \
    \  return 2\n    }\n\n    if n == 2 {\n        return 4\n    }\n\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2)\n}\n", "    if n == 1 {\n        return 1\n  \
    \  }\n    if n == 2 {\n        return 10\n    }\n    return 9 * int(math.Pow10(n\
    \ - 2))\n}\n", "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n\
    \        return 10\n    }\n\n    if n == 3 {\n        return 100\n    }\n\n  \
    \  if n == 4 {\n        return 1000\n    }\n\n    if n == 5 {\n        return\
    \ 10000\n    }\n\n    if n == 6 {\n        return 100000\n    }\n\n    if n ==\
    \ 7 {\n        return 1000000\n    }\n\n    if n == 8 {\n        return 10000000\n\
    \    }\n\n    if n == 9 {\n        return 100000000\n    }\n\n    if n == 10 {\n\
    \        return 1000000000\n    }\n\n    return 0\n}\n", "    if n == 1 {\n  \
    \      return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n\
    \    }\n\n    return 9 * starts_one_ends(n - 1)\n}\n", "    if n == 1 {\n    \
    \    return 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3\
    \ {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n\
    \    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n        return\
    \ 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8\
    \ {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n    }\n\
    \    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return 1000\n\
    \    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n      \
    \  return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n    if\
    \ n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return 100000000\n\
    \    }\n    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n",
  "    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n\
    \    }\n\n    // For n > 2, the number of n-digit positive integers that start\
    \ or end\n    // with 1 is the sum of the number of n-digit positive integers\
    \ that start\n    // with 1 and the number of n-digit positive integers that end\
    \ with 1.\n    //\n    // The number of n-digit positive integers that start with\
    \ 1 is the number\n    // of (n-1)-digit positive integers that start or end with\
    \ 1.\n    //\n    // The number of n-digit positive integers that end with 1 is\
    \ the number of\n    // (n-1)-digit positive integers that start or end with 1\
    \ multiplied by\n    // 9.\n    return starts_one_ends(n-1) + starts_one_ends(n-1)\
    \ * 9\n}\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n    \
    \    return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    if n == 7 {\n        return 1000000\n    }\n\
    \    if n == 8 {\n        return 10000000\n    }\n    if n == 9 {\n        return\
    \ 100000000\n    }\n    if n == 10 {\n        return 1000000000\n    }\n    return\
    \ 0\n}\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 1\n    }\n  \
    \  if n == 2 {\n        return 10\n    }\n    if n == 3 {\n        return 100\n\
    \    }\n    if n == 4 {\n        return 1000\n    }\n    if n == 5 {\n       \
    \ return 10000\n    }\n    if n == 6 {\n        return 100000\n    }\n    if n\
    \ == 7 {\n        return 1000000\n    }\n    if n == 8 {\n        return 10000000\n\
    \    }\n    if n == 9 {\n        return 100000000\n    }\n    if n == 10 {\n \
    \       return 1000000000\n    }\n    return 0\n}\n", "    if n == 1 {\n     \
    \   return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 3\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return\
    \ 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n", "    if n\
    \ == 1 {\n        return 2\n    }\n\n    if n == 2 {\n        return 4\n    }\n\
    \n    if n == 3 {\n        return 7\n    }\n\n    if n == 4 {\n        return\
    \ 13\n    }\n\n    if n == 5 {\n        return 24\n    }\n\n    if n == 6 {\n\
    \        return 44\n    }\n\n    if n == 7 {\n        return 81\n    }\n\n   \
    \ if n == 8 {\n        return 149\n    }\n\n    if n == 9 {\n        return 274\n\
    \    }\n\n    if n == 10 {\n        return 504\n    }\n\n    if n == 11 {\n  \
    \      return 927\n    }\n\n    if n == 12 {\n        return 1705\n    }\n\n \
    \   if n == 13 {\n        return 3136\n    }\n\n    if n == 14 {\n        return\
    \ 5768\n    }\n\n    if n == 15 {\n        return 10609\n    }\n\n    if n ==\
    \ 16 {\n        return 19513\n    }\n\n    if n == 17 {\n        return 35890\n\
    \    }\n\n    if n == 18 {\n        return 66012\n    }\n\n    if n == 19 {\n\
    \        return 121415\n    }\n\n    if n == 20 {\n        return 223317\n   \
    \ }\n\n    if n == 21 {\n        return 410744\n    }\n\n    if n == 22 {\n  \
    \      return 755476\n    }\n\n    if n == 23 {\n        return 1389537\n    }\n\
    \n    if n == 24 {\n        return 2555757\n    }\n\n    if n == 25 {\n      \
    \  return 4700770\n    }\n\n    if n == 26 {\n        return 8646064\n    }\n\n\
    \    if n == 27 {\n        return 15902591\n    }\n\n    if n == 28 {\n      \
    \  return 29249425\n    }\n\n    if n == 29 {\n        return 53798080\n    }\n\
    \n    if n == 30 {\n        return 98950096\n    }\n\n    if n == 31 {\n     \
    \   return 181997601\n    }\n\n    if n == 32 {\n        return 334745777\n  \
    \  }\n\n    if n == 33 {\n        return 615693474\n    }\n\n    if n", "    if\
    \ n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 10\n  \
    \  }\n\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2)\n}\n", "  \
    \  if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 4\n \
    \   }\n    if n == 3 {\n        return 7\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2) + starts_one_ends(n-3)\n}\n", "    // The number of n-digit\
    \ positive integers that start with 1 is\n    // 9 * 10^(n-1).\n    // The number\
    \ of n-digit positive integers that end with 1 is\n    // 10^(n-1).\n    // The\
    \ number of n-digit positive integers that start or end with 1 is\n    // 9 *\
    \ 10^(n-1) + 10^(n-1).\n    return 9 * pow(10, n-1) + pow(10, n-1)\n}\n", "  \
    \  if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 10\n\
    \    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n        return\
    \ 1000\n    }\n    if n == 5 {\n        return 10000\n    }\n    if n == 6 {\n\
    \        return 100000\n    }\n    return 1000000\n}\n", "    if n == 1 {\n  \
    \      return 2\n    }\n    if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2)\n}\n", "    if n == 1 {\n        return 2\n    }\n  \
    \  if n == 2 {\n        return 4\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n\
    }\n", "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 10\n    }\n    if n == 3 {\n        return 100\n    }\n    if n == 4 {\n   \
    \     return 1000\n    }\n    return 0\n}\n", "    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 10\n    }\n    if n == 3 {\n     \
    \   return 100\n    }\n    if n == 4 {\n        return 1000\n    }\n    if n ==\
    \ 5 {\n        return 10000\n    }\n    if n == 6 {\n        return 100000\n \
    \   }\n    if n == 7 {\n        return 1000000\n    }\n    if n == 8 {\n     \
    \   return 10000000\n    }\n    if n == 9 {\n        return 100000000\n    }\n\
    \    if n == 10 {\n        return 1000000000\n    }\n    return 0\n}\n", "   \
    \ if n == 1 {\n        return 2\n    }\n    if n == 2 {\n        return 3\n  \
    \  }\n    return starts_one_ends(n-1) + starts_one_ends(n-2)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_161_solve
language: go_test.go
prompt: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a string s.\n// if s[i] is a letter, reverse its case from lower to\
  \ upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains\
  \ no letters, reverse the string.\n// The function should return the resulted string.\n\
  // Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\
  \n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunc solve(s string) string {\n"
tests: "func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(\"AsDf\"), expected: \"aSdF\" },\n     { actual: candidate(\"\
  1234\"), expected: \"4321\" },\n     { actual: candidate(\"ab\"), expected: \"AB\"\
  \ },\n     { actual: candidate(\"#a@C\"), expected: \"#A@c\" },\n     { actual:\
  \ candidate(\"#AsdfW^45\"), expected: \"#aSDFw^45\" },\n     { actual: candidate(\"\
  #6@2\"), expected: \"2@6#\" },\n     { actual: candidate(\"#$a^D\"), expected: \"\
  #$A^d\" },\n     { actual: candidate(\"#ccc\"), expected: \"#CCC\" },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(s) == 0 {\n        return s\n    }\n    if len(s) == 1 {\n\
    \        if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0] - 32)\n\
    \        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ + 32)\n        } else {\n            return s\n        }\n    }\n    var r []rune\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r =\
    \ append(r, c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r =\
    \ append(r, c + 32)\n        } else {\n            r = append(r, c)\n        }\n\
    \    }\n    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    if len(s) == 0 {\n      \
    \  return s\n    }\n    var result string\n    for _, c := range s {\n       \
    \ if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var newS string\n    for _, c := range s {\n       \
    \ if c >= 'a' && c <= 'z' {\n            newS += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            newS += string(c + 32)\n        } else\
    \ {\n            newS += string(c)\n        }\n    }\n    if len(newS) == len(s)\
    \ {\n        return newS\n    }\n    return reverse(newS)\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    var result string\n    if len(s) == 0 {\n        return result\n  \
    \  }\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n         \
    \   result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n     \
    \       result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            res += string(c - 'A' + 'a')\n        } else {\n     \
    \       res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c - 'A' + 'a')\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    if len(result) == len(s) {\n        return\
    \ result\n    }\n    for i, j := 0, len(result) - 1; i < j; i, j = i + 1, j -\
    \ 1 {\n        result[i], result[j] = result[j], result[i]\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, v := range s {\n        if\
    \ v >= 'a' && v <= 'z' {\n            result += string(v - 32)\n        } else\
    \ if v >= 'A' && v <= 'Z' {\n            result += string(v + 32)\n        } else\
    \ {\n            result += string(v)\n        }\n    }\n    if len(result) ==\
    \ len(s) {\n        return reverse(result)\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    b := []byte(s)\n    for i :=\
    \ 0; i < len(b); i++ {\n        if b[i] >= 'a' && b[i] <= 'z' {\n            b[i]\
    \ -= 32\n        } else if b[i] >= 'A' && b[i] <= 'Z' {\n            b[i] += 32\n\
    \        }\n    }\n    return string(b)\n}\n", "    if len(s) == 0 {\n       \
    \ return s\n    }\n    r := []rune(s)\n    for i := 0; i < len(r); i++ {\n   \
    \     if r[i] >= 'a' && r[i] <= 'z' {\n            r[i] = r[i] - 32\n        }\
    \ else if r[i] >= 'A' && r[i] <= 'Z' {\n            r[i] = r[i] + 32\n       \
    \ }\n    }\n    return string(r)\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var r []rune\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r, c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n\
    \        } else {\n            r = append(r, c)\n        }\n    }\n    return\
    \ string(r)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    if len(result) == len(s) {\n        return reverse(result)\n    }\n    return\
    \ result\n}\n", "    var res string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n   \
    \         res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n  \
    \      return res\n    }\n    for i, j := 0, len(res) - 1; i < j; i, j = i + 1,\
    \ j - 1 {\n        res[i], res[j] = res[j], res[i]\n    }\n    return res\n}\n",
  "    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var result []byte\n    for i := 0; i < len(s); i++ {\n       \
    \ if s[i] >= 'a' && s[i] <= 'z' {\n            result = append(result, s[i] -\
    \ 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z' {\n            result = append(result,\
    \ s[i] + 32)\n        } else {\n            result = append(result, s[i])\n  \
    \      }\n    }\n    return string(result)\n}\n", "    if len(s) == 0 {\n    \
    \    return s\n    }\n    var result string\n    for _, c := range s {\n     \
    \   if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return res\n    }\n    for i, j :=\
    \ 0, len(res) - 1; i < j; i, j = i + 1, j - 1 {\n        res[i], res[j] = res[j],\
    \ res[i]\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var result string\n    for _, r := range s {\n        if r >= 'a'\
    \ && r <= 'z' {\n            result += string(r - 32)\n        } else if r >=\
    \ 'A' && r <= 'Z' {\n            result += string(r + 32)\n        } else {\n\
    \            result += string(r)\n        }\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    if len(s) == 1 {\n        if\
    \ s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0] - 32)\n       \
    \ } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0] + 32)\n\
    \        } else {\n            return s\n        }\n    }\n    var result string\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n\
    \            result += string(s[i] - 32)\n        } else if s[i] >= 'A' && s[i]\
    \ <= 'Z' {\n            result += string(s[i] + 32)\n        } else {\n      \
    \      result += string(s[i])\n        }\n    }\n    return result\n}\n", "  \
    \  // your code here\n    return \"\"\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var r []rune\n  \
    \  for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r = append(r,\
    \ c + 32)\n        } else {\n            r = append(r, c)\n        }\n    }\n\
    \    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ var result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            result += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    if len(result) == len(s) {\n        return\
    \ reverse(result)\n    }\n    return result\n}\n", "    if len(s) == 0 {\n   \
    \     return s\n    }\n    var result string\n    for _, c := range s {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n   \
    \     } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var res string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n\
    \        return res\n    }\n    return reverse(res)\n}\n", "    var r string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r =\
    \ fmt.Sprintf(\"%s%c\", r, c-32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           r = fmt.Sprintf(\"%s%c\", r, c+32)\n        } else {\n           \
    \ r = fmt.Sprintf(\"%s%c\", r, c)\n        }\n    }\n    return r\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var result []byte\n    for i\
    \ := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n         \
    \   result = append(result, s[i] - 32)\n        } else if s[i] >= 'A' && s[i]\
    \ <= 'Z' {\n            result = append(result, s[i] + 32)\n        } else {\n\
    \            result = append(result, s[i])\n        }\n    }\n    return string(result)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    if len(s) == 1 {\n \
    \       if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0] - 'a'\
    \ + 'A')\n        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ - 'A' + 'a')\n        } else {\n            return s\n        }\n    }\n   \
    \ var result string\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a'\
    \ && s[i] <= 'z' {\n            result += string(s[i] - 'a' + 'A')\n        }\
    \ else if s[i] >= 'A' && s[i] <= 'Z' {\n            result += string(s[i] - 'A'\
    \ + 'a')\n        } else {\n            result += string(s[i])\n        }\n  \
    \  }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return res\n    }\n  \
    \  return reverse(res)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n   \
    \ for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res +=\
    \ string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result []byte\n    for i := 0; i < len(s); i++ {\n        if s[i] >=\
    \ 'a' && s[i] <= 'z' {\n            result = append(result, s[i] - 32)\n     \
    \   } else if s[i] >= 'A' && s[i] <= 'Z' {\n            result = append(result,\
    \ s[i] + 32)\n        } else {\n            result = append(result, s[i])\n  \
    \      }\n    }\n    return string(result)\n}\n", "    if len(s) == 0 {\n    \
    \    return s\n    }\n    var result string\n    for _, c := range s {\n     \
    \   if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result []byte\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n\
    \            result = append(result, s[i] - 32)\n        } else if s[i] >= 'A'\
    \ && s[i] <= 'Z' {\n            result = append(result, s[i] + 32)\n        }\
    \ else {\n            result = append(result, s[i])\n        }\n    }\n    return\
    \ string(result)\n}\n", "    // your code here\n    return \"\"\n}\n", "    if\
    \ len(s) == 0 {\n        return s\n    }\n    if len(s) == 1 {\n        if s[0]\
    \ >= 'a' && s[0] <= 'z' {\n            return string(s[0] - 32)\n        } else\
    \ if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0] + 32)\n    \
    \    } else {\n            return s\n        }\n    }\n    var r []rune\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r = append(r,\
    \ c + 32)\n        } else {\n            r = append(r, c)\n        }\n    }\n\
    \    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n\
    \            s = s[:i] + string(s[i] - 32) + s[i+1:]\n        } else if s[i] >=\
    \ 'A' && s[i] <= 'Z' {\n            s = s[:i] + string(s[i] + 32) + s[i+1:]\n\
    \        }\n    }\n    return s\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return reverse(result)\n\
    \    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n   \
    \ }\n    var result string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 32)\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result += string(v + 32)\n\
    \        } else {\n            result += string(v)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n\
    \    for i, r := range runes {\n        if r >= 'a' && r <= 'z' {\n          \
    \  runes[i] = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n            runes[i]\
    \ = r + 32\n        }\n    }\n    return string(runes)\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    if len(s)\
    \ == 1 {\n        if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0]\
    \ - 32)\n        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ + 32)\n        } else {\n            return s\n        }\n    }\n    var result\
    \ string\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <=\
    \ 'z' {\n            result += string(s[i] - 32)\n        } else if s[i] >= 'A'\
    \ && s[i] <= 'Z' {\n            result += string(s[i] + 32)\n        } else {\n\
    \            result += string(s[i])\n        }\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var result string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var r []rune\n  \
    \  for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r = append(r,\
    \ c + 32)\n        } else {\n            r = append(r, c)\n        }\n    }\n\
    \    if len(r) == 0 {\n        return s\n    }\n    return string(r)\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return res\n    }\n  \
    \  return reverse(res)\n}\n", "    var r []rune\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            r = append(r, c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n      \
    \  } else {\n            r = append(r, c)\n        }\n    }\n    return string(r)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return result\n    }\n    for i, j := 0, len(result) -\
    \ 1; i < j; i, j = i + 1, j - 1 {\n        result[i], result[j] = result[j], result[i]\n\
    \    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n   \
    \ }\n    var res string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            res += string(c + 32)\n        } else {\n            res\
    \ += string(c)\n        }\n    }\n    return res\n}\n", "    var r []rune\n  \
    \  for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            r = append(r,\
    \ v - 32)\n        } else if v >= 'A' && v <= 'Z' {\n            r = append(r,\
    \ v + 32)\n        } else {\n            r = append(r, v)\n        }\n    }\n\
    \    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    if len(s) == 1 {\n        if s[0] >= 'a'\
    \ && s[0] <= 'z' {\n            return string(s[0] - 32)\n        } else if s[0]\
    \ >= 'A' && s[0] <= 'Z' {\n            return string(s[0] + 32)\n        } else\
    \ {\n            return s\n        }\n    }\n    var res string\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            res\
    \ += string(s[i] - 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z' {\n     \
    \       res += string(s[i] + 32)\n        } else {\n            res += string(s[i])\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return res\n    }\n    for i, j := 0, len(res)\
    \ - 1; i < j; i, j = i + 1, j - 1 {\n        res[i], res[j] = res[j], res[i]\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var r []rune\n    for _, c := range s {\n      \
    \  if c >= 'a' && c <= 'z' {\n            r = append(r, c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n        } else\
    \ {\n            r = append(r, c)\n        }\n    }\n    return string(r)\n}\n",
  "    var result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            result += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0\
    \ {\n        return s\n    }\n    var result string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var result string\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n    \
    \    } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    for i := 0;\
    \ i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            s =\
    \ s[:i] + string(s[i] - 32) + s[i+1:]\n        } else if s[i] >= 'A' && s[i] <=\
    \ 'Z' {\n            s = s[:i] + string(s[i] + 32) + s[i+1:]\n        }\n    }\n\
    \    return s\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    r := make([]rune, len(s))\n    for i, c := range s {\n       \
    \ if c >= 'a' && c <= 'z' {\n            r[i] = c - 32\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            r[i] = c + 32\n        } else {\n           \
    \ r[i] = c\n        }\n    }\n    return string(r)\n}\n", "    var r string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r += string(c\
    \ + 32)\n        } else {\n            r += string(c)\n        }\n    }\n    if\
    \ len(r) == len(s) {\n        return reverse(r)\n    }\n    return r\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return res\n    }\n    for i, j := 0, len(res)\
    \ - 1; i < j; i, j = i + 1, j - 1 {\n        res[i], res[j] = res[j], res[i]\n\
    \    }\n    return res\n}\n", "    var r string\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            r += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            r += string(c + 32)\n        } else\
    \ {\n            r += string(c)\n        }\n    }\n    return r\n}\n", "    var\
    \ r []rune\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n   \
    \         r = append(r, c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n  \
    \          r = append(r, c + 32)\n        } else {\n            r = append(r,\
    \ c)\n        }\n    }\n    return string(r)\n}\n", "    if len(s) == 0 {\n  \
    \      return s\n    }\n    if len(s) == 1 {\n        if s[0] >= 'a' && s[0] <=\
    \ 'z' {\n            return string(s[0] - 32)\n        } else if s[0] >= 'A' &&\
    \ s[0] <= 'Z' {\n            return string(s[0] + 32)\n        } else {\n    \
    \        return s\n        }\n    }\n    var res string\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            res += string(s[i]\
    \ - 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z' {\n            res += string(s[i]\
    \ + 32)\n        } else {\n            res += string(s[i])\n        }\n    }\n\
    \    return res\n}\n", "    var result string\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v - 32)\n      \
    \  } else if v >= 'A' && v <= 'Z' {\n            result += string(v + 32)\n  \
    \      } else {\n            result += string(v)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    if len(s)\
    \ == 1 {\n        if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0]\
    \ - 32)\n        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ + 32)\n        } else {\n            return s\n        }\n    }\n    var result\
    \ string\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <=\
    \ 'z' {\n            result += string(s[i] - 32)\n        } else if s[i] >= 'A'\
    \ && s[i] <= 'Z' {\n            result += string(s[i] + 32)\n        } else {\n\
    \            result += string(s[i])\n        }\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var result []byte\n    for i\
    \ := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n         \
    \   result = append(result, s[i] - 32)\n        } else if s[i] >= 'A' && s[i]\
    \ <= 'Z' {\n            result = append(result, s[i] + 32)\n        } else {\n\
    \            result = append(result, s[i])\n        }\n    }\n    return string(result)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var result string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            result += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var result string\n    for _, c := range s {\n     \
    \   if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return reverse(result)\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var res string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    return res\n}\n", "    if\
    \ len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    if len(result) == len(s)\
    \ {\n        return reverse(result)\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    var res string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  if len(res) == len(s) {\n        return res\n    }\n    for i, j := 0, len(res)\
    \ - 1; i < j; i, j = i + 1, j - 1 {\n        res[i], res[j] = res[j], res[i]\n\
    \    }\n    return res\n}\n", "    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return reverse(result)\n    }\n    return result\n}\n",
  "    var result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            result += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0\
    \ {\n        return s\n    }\n    var result string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var result string\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n    \
    \    } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    // your code here\n    return \"\"\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var result string\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var result string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            result += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var result string\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    if len(s) == 1 {\n        if s[0] >= 'a' && s[0] <= 'z' {\n      \
    \      return string(s[0] - 32)\n        } else if s[0] >= 'A' && s[0] <= 'Z'\
    \ {\n            return string(s[0] + 32)\n        } else {\n            return\
    \ s\n        }\n    }\n    var res string\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] >= 'a' && s[i] <= 'z' {\n            res += string(s[i] - 32)\n\
    \        } else if s[i] >= 'A' && s[i] <= 'Z' {\n            res += string(s[i]\
    \ + 32)\n        } else {\n            res += string(s[i])\n        }\n    }\n\
    \    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var\
    \ res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n \
    \           res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ - 'A' + 'a')\n        } else {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n   \
    \ }\n    var res string\n    for _, r := range s {\n        if r >= 'a' && r <=\
    \ 'z' {\n            res += string(r - 32)\n        } else if r >= 'A' && r <=\
    \ 'Z' {\n            res += string(r + 32)\n        } else {\n            res\
    \ += string(r)\n        }\n    }\n    return res\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n\
    }\n", "    var res string\n    for _, c := range s {\n        if c >= 'a' && c\
    \ <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            res += string(c + 32)\n        } else {\n            res\
    \ += string(c)\n        }\n    }\n    return res\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return result\n    }\n \
    \   return reverse(result)\n}\n", "    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n   \
    \ for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res +=\
    \ string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    if result\
    \ == s {\n        return reverse(s)\n    }\n    return result\n}\n", "    var\
    \ result []byte\n    for i := len(s) - 1; i >= 0; i-- {\n        if s[i] >= 'a'\
    \ && s[i] <= 'z' {\n            result = append(result, s[i] - 32)\n        }\
    \ else if s[i] >= 'A' && s[i] <= 'Z' {\n            result = append(result, s[i]\
    \ + 32)\n        } else {\n            result = append(result, s[i])\n       \
    \ }\n    }\n    return string(result)\n}\n", "    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  if len(res) == len(s) {\n        return res\n    }\n    for i, j := 0, len(res)\
    \ - 1; i < j; i, j = i + 1, j - 1 {\n        res[i], res[j] = res[j], res[i]\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c - 'A' + 'a')\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    if result == s {\n        return\
    \ reverse(s)\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n        } else\
    \ {\n            res += string(c)\n        }\n    }\n    return res\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    // if s[0] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    // otherwise keep it as it is.\n    if s[0] >= 'a' && s[0] <= 'z' {\n\
    \        s = string(s[0] - 32) + s[1:]\n    } else if s[0] >= 'A' && s[0] <= 'Z'\
    \ {\n        s = string(s[0] + 32) + s[1:]\n    }\n    return s[0:1] + solve(s[1:])\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    if len(s) == 1 {\n \
    \       if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0] - 32)\n\
    \        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ + 32)\n        } else {\n            return s\n        }\n    }\n    var res\
    \ string\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <=\
    \ 'z' {\n            res += string(s[i] - 32)\n        } else if s[i] >= 'A' &&\
    \ s[i] <= 'Z' {\n            res += string(s[i] + 32)\n        } else {\n    \
    \        res += string(s[i])\n        }\n    }\n    return res\n}\n", "    if\
    \ len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r\
    \ := range runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] =\
    \ r - 32\n        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r +\
    \ 32\n        }\n    }\n    return string(runes)\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return result\n    }\n \
    \   return reverse(result)\n}\n", "    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if s == \"\" {\n        return s\n    }\n    var r []rune\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r =\
    \ append(r, c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r =\
    \ append(r, c + 32)\n        } else {\n            r = append(r, c)\n        }\n\
    \    }\n    return string(r)\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var r string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            r += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            r += string(c + 32)\n   \
    \     } else {\n            r += string(c)\n        }\n    }\n    return r\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var res string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    return res\n}\n", "    var\
    \ result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    if len(s)\
    \ == 1 {\n        if s[0] >= 'a' && s[0] <= 'z' {\n            return string(s[0]\
    \ - 32)\n        } else if s[0] >= 'A' && s[0] <= 'Z' {\n            return string(s[0]\
    \ + 32)\n        } else {\n            return s\n        }\n    }\n    var result\
    \ string\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <=\
    \ 'z' {\n            result += string(s[i] - 32)\n        } else if s[i] >= 'A'\
    \ && s[i] <= 'Z' {\n            result += string(s[i] + 32)\n        } else {\n\
    \            result += string(s[i])\n        }\n    }\n    if len(result) == len(s)\
    \ {\n        return result\n    }\n    return reverse(result)\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    runes := []rune(s)\n    for i, r := range runes\
    \ {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n      \
    \  } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n        }\n\
    \    }\n    return string(runes)\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return res\n    }\n  \
    \  for i, j := 0, len(res) - 1; i < j; i, j = i + 1, j - 1 {\n        res[i],\
    \ res[j] = res[j], res[i]\n    }\n    return res\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var result string\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n    \
    \    } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var res string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n   \
    \         res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n  \
    \      return res\n    }\n    return Reverse(res)\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    if len(s) == 1 {\n        if s[0] >= 'a' && s[0]\
    \ <= 'z' {\n            return string(s[0] - 32)\n        } else if s[0] >= 'A'\
    \ && s[0] <= 'Z' {\n            return string(s[0] + 32)\n        } else {\n \
    \           return s\n        }\n    }\n    var res string\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            res +=\
    \ string(s[i] - 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z' {\n        \
    \    res += string(s[i] + 32)\n        } else {\n            res += string(s[i])\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    if len(s) == 1 {\n        if s[0] >= 'a'\
    \ && s[0] <= 'z' {\n            return string(s[0] - 32)\n        } else if s[0]\
    \ >= 'A' && s[0] <= 'Z' {\n            return string(s[0] + 32)\n        } else\
    \ {\n            return s\n        }\n    }\n    var result string\n    for i\
    \ := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n         \
    \   result += string(s[i] - 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z'\
    \ {\n            result += string(s[i] + 32)\n        } else {\n            result\
    \ += string(s[i])\n        }\n    }\n    return result\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var r []rune\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r = append(r,\
    \ c + 32)\n        } else {\n            r = append(r, c)\n        }\n    }\n\
    \    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result []rune\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result = append(result, c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result = append(result, c + 32)\n        } else {\n\
    \            result = append(result, c)\n        }\n    }\n    return string(result)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return res\n    }\n  \
    \  for i, j := 0, len(res) - 1; i < j; i, j = i + 1, j - 1 {\n        res[i],\
    \ res[j] = res[j], res[i]\n    }\n    return res\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var res string\n    for _, c := range s {\n    \
    \    if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else\
    \ {\n            res += string(c)\n        }\n    }\n    return res\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    r :=\
    \ []rune(s)\n    for i, c := range r {\n        if c >= 'a' && c <= 'z' {\n  \
    \          r[i] = c - 32\n        } else if c >= 'A' && c <= 'Z' {\n         \
    \   r[i] = c + 32\n        }\n    }\n    return string(r)\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    if len(s) == 0 {\n      \
    \  return s\n    }\n    if len(s) == 1 {\n        return s\n    }\n    var r []rune\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r =\
    \ append(r, c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r =\
    \ append(r, c + 32)\n        } else {\n            r = append(r, c)\n        }\n\
    \    }\n    return string(r)\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var r []rune\n    for _, c := range s {\n      \
    \  if c >= 'a' && c <= 'z' {\n            r = append(r, c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n        } else\
    \ {\n            r = append(r, c)\n        }\n    }\n    return string(r)\n}\n",
  "    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return res\n    }\n  \
    \  for i, j := 0, len(res) - 1; i < j; i, j = i + 1, j - 1 {\n        res[i],\
    \ res[j] = res[j], res[i]\n    }\n    return res\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    var result string\n    for _, c := range s {\n \
    \       if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n    \
    \    } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var r []rune\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r = append(r,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r = append(r,\
    \ c + 32)\n        } else {\n            r = append(r, c)\n        }\n    }\n\
    \    return string(r)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

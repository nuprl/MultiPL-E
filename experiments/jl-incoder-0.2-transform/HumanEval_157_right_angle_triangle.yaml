name: HumanEval_157_right_angle_triangle
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
  \ if the three\n    sides form a right-angled triangle, False otherwise.\n    A\
  \ right-angled triangle is a triangle in which one angle is right angle or \n  \
  \  90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n \
  \   >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
  \ b::Int64, c::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
  \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
  \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
  \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
  \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
  \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) ==\
  \ false)\nend\n"
completions: ["    if a > b and a > c then \n        return true\n    else if b >\
    \ c and b > a then \n        return true\n    else if c > a and c > b then \n\
    \        return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n   \
    \ Determine if a triangle is right angled or not\n    \n    Arguments:\n     \
    \   a: length of side a\n        b: length of side b\n        c: length of side\
    \ c\n    \n    Returns:\n        Bool: True if triangle is right angled, False\
    \ otherwise\n    \n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if b == c\
    \ || b == a || c == a \n        true\n    else\n        false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b or a == c or b == c then return true\n    else return false\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about how to write an\
    \ `if` statement that checks three conditions.\n<|/ c |>\n<| c |>\nThe question\
    \ was about how to write an if statement that checks three conditions. I answered\
    \ that question. Your answer doesn't answer the question because you didn't explain\
    \ how to write an if statement that checks three conditions.\n<|/ c |>\n<| c |>\n\
    The question was about how to write an if statement that checks three conditions.\
    \ I answered that question. Your answer doesn't answer the question because you\
    \ didn't explain how to write an if statement that checks three conditions.\n\
    <|/ c |>\n<| c |>\nThe question was about how to write an if statement that checks\
    \ three conditions. I answered that question. Your answer doesn't answer the question\
    \ because you didn't explain how to write an if statement that checks three conditions.\n\
    <|/ c |>\n<| c |>\nThe question was about how to write an if statement that checks\
    \ three conditions. I answered that question. Your answer doesn't answer the question\
    \ because you didn't explain how to write an if statement that checks three conditions.\n\
    <|/ c |>\n<| a tags=julia,if-statement |>\nThe question was about how to write\
    \ an if statement that checks three conditions. I answered that question. Your\
    \ answer doesn't answer the question because you didn't explain how to write an\
    \ if statement that checks three conditions.\nThe question was about how to write\
    \ an if statement that checks three conditions. I answered that question. Your\
    \ answer doesn't answer the question because you didn't explain how to write an\
    \ if statement that checks three conditions.\nThe question was about how to write\
    \ an if statement that checks three conditions. I answered that question. Your\
    \ answer doesn't answer the question because you didn't explain how to write an\
    \ if statement that checks three conditions.\nThe question was about how to write\
    \ an if statement that checks three conditions. I answered that question. Your\
    \ answer doesn't answer the question because you didn't explain how to write an\
    \ if statement that checks three conditions.\nThe question was about how to write\
    \ an if statement ", "    if a > b and a > c then return true\n    if b > c and\
    \ b > a then return true\n    if c > a and c > b then return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true else\
    \ return false \nend \n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==c then return false\n    if b==c\
    \ then return false\n    if a==b or b==c or c==a then return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Determine if a triangle is right angled\
    \ or not\n    \n    Arguments:\n    \n    - `a`: length of side 1\n    - `b`:\
    \ length of side 2\n    - `c`: length of side 3\n    \n    Returns:\n    \n  \
    \  - `true` if triangle is right angled, `false` otherwise\n    \n    Example:\n\
    \    \n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b or a == c or b == c \n        then return true\n    else \n     \
    \   false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend", "    if b == c || b == a || c == a \n        true\n\
    \    else\n        false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n  \
    \  right_angle_triangle(triangle::Triangle, side::Int64)::Bool\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n</code>\n<|/ a tags=julia |>\n<|\
    \ c |>\nThanks for your answer. Could you please explain why you used `Int64`\
    \ instead of `Int`? I thought `Int` was the standard integer type in Julia.\n\
    <|/ c |>\n<| c |>\n`Int` is an alias for `Int64`, so `Int` is the same as `Int64`.\
    \ `Int64` is an alias for `Int128`, so `Int64` is the same as `Int128`. `Int128`\
    \ is an alias for `Int256`, so `Int128` is the same as `Int256`. `Int256` is an\
    \ alias for `Int512`, so `Int256` is the same as `Int512`. `Int512` is an alias\
    \ for `Int1024`, so `Int512` is the same as `Int1024`. `Int1024` is an alias for\
    \ `Int2048`, so `Int1024` is the same as `Int2048`. `Int2048` is an alias for\
    \ `Int4096`, so `Int2048` is the same as `Int4096`. `Int4096` is an alias for\
    \ `Int8192`, so `Int4096` is the same as `Int8192`. `Int8192` is an alias for\
    \ `Int16384`, so `Int8192` is the same as `Int16384`. `Int16384` is an alias for\
    \ `Int32768`, so `Int16384` is the same as `Int32768`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your explanation. I think I understand it now.\n<|/ c |>\n<| c |>\n`Int`\
    \ is an alias for `Int64`, so `Int` is the same as `Int64`. `Int64` is an alias\
    \ for `Int128`, so `Int64` is the same as `Int128`. `Int128` is an alias for `Int256`,\
    \ so `Int128` is the same as `Int256`. `Int256` is an alias for `Int512`, so `Int256`\
    \ is the same as `Int512`. `Int512` is an alias for `Int1024`, so `Int512` is\
    \ the same as `Int1024`. `Int1024` is an alias for `Int2048`, so `Int1024` is\
    \ the same as `Int2048`. `Int2048` is an alias for `Int4096`, so `Int2048` is\
    \ the same as `Int4096`. `Int4096` is an alias for `Int8192`, so `Int4096` is\
    \ the same as `Int8192`. `Int8192` is an alias ", "    if a < b and a < c and\
    \ a > 0 and b > 0 and c > 0 and b > c and c > a \n        then true\n        else\
    \ false\n    end\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a == b\
    \ and b == c then return true\n    if a == c then return false\n    if b == c\
    \ then return false\n    if a == b || b == c || c == a then return true\n    else\
    \ return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else if b > a && c > a && a > c \n        then return\
    \ true\n    else if b > a && c > a && b > c \n        then return false\n    else\
    \ if b > a && c > a && a > b \n        then return true\n    else if b > a &&\
    \ c > a && b > c \n        then return false\n    else if b > a && c > a && a\
    \ > b \n        then return true\n    else if b > a && c > a && b > c \n     \
    \   then return false\n    else if b > a && c > a && a > b \n        then return\
    \ true\n    else if b > a && c > a && b > c \n        then return false\n    else\
    \ if b > a && c > a && a > b \n        then return true\n    else if b > a &&\
    \ c > a && b > c \n        then return false\n    else if b > a && c > a && a\
    \ > b \n        then return true\n    else if b > a && c > a && b > c \n     \
    \   then return false\n    else if b > a && c > a && a > b \n        then return\
    \ true\n    else if b > a && c > a && b > c \n        then return false\n    else\
    \ if b > a && c > a && a > b \n        then return true\n    else if b > a &&\
    \ c > a && b > c \n        then return false\n    else if b > a && c > a && a\
    \ > b \n        then return true\n    else if b > a && c > a && b > c \n     \
    \   then return false\n    else if b > a && c > a && a > b \n        then return\
    \ true\n    else if b > a && c > a && b > c \n        then return false\n    else\
    \ if b > a && c > a && a > b \n        then return true\n    else if b > a &&\
    \ c > a && b > c \n        then return false\n    else if b > a && c > a && a\
    \ > b \n        then return true\n    else if b > a && c > a && b > c \n     \
    \   then return false\n    else if b > a && c > a && a > b \n        then return ",
  "    if a == b or a == c or b == c then return true\n    else return false\nend",
  "    if a > b and a > c \n        then return true\n    else if b > a and b > c\
    \ \n        then return true\n    else if c > a and c > b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b == a + c \n        then\
    \ return true\n    else if b == a + b + c \n        then return true\n    else\
    \ \n        false\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nI like\
    \ your answer, but I think it would be better to use the `==` operator instead\
    \ of `===`.  `===` will throw an error if the types are different, whereas `==`\
    \ will just return a false value.\n<|/ c |>\n<| c |>\nI agree, `==` is better.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\nI like using Julia's\
    \ built-in functions instead of writing my own functions. \n<code>", "    if b\
    \ == c \n        then return true\n    else if b > c \n        then return false\n\
    \    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ b+1, c)\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3, 4,\
    \ 5)\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n\
    >>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 6)\n\
    false\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3, 4,\
    \ 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle(3, 4, 31)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 32)\nfalse\n>>> equilateral_triangle(3, 4, 33)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 34)\nfalse\n>>> equilateral_triangle(3, 4, 35)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 36)\nfalse\n>>> equilateral_triangle(3, 4, 37)\nfalse\n>>> equilateral_",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b and b == c then return true\n    else if b == c then return false\n\
    \    else if a == c then return false\n    else if b > c then return false\n \
    \   else if b < c then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false\n    else if b > a && b > c \n    then return true\n    else if\
    \ c > a && c > b \n    then return true\n    else if b == c \n    then return\
    \ true\n    else if b > c \n    then return false\n    else if c > b \n    then\
    \ return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1,\
    \ 2, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that determines whether\
    \ a triangle is equilateral or not.\nA triangle is equilateral if all three sides\
    \ are equal, i.e. the sides are equal\nor 180 degrees.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 6)\nfalse\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle", "    if a==b and b==c then return\
    \ true\n    else if a==c then return false\n    else if b==c then return false\n\
    \    else return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nA triangle is equilateral if all\
    \ three sides are equal, i.e. all sides are equal\nor 180 degrees.\nExample: \n\
    >>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n\
    >>> equilateral_triangle(2, 3, 4)\nfalse\n>>> equilateral_triangle(2, 3, 1)\n\
    true\n>>> equilateral_triangle(2, 3, 2)\ntrue\n>>> equilateral_triangle(2, 3,\
    \ 3)\ntrue\n>>> equilateral_triangle(2, 3, 4)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 5)\ntrue\n>>> equilateral_triangle(2, 3, 6)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 7)\ntrue\n>>> equilateral_triangle(2, 3, 8)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 9)\ntrue\n>>> equilateral_triangle(2, 3, 10)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 11)\ntrue\n>>> equilateral_triangle(2, 3, 12)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 13)\ntrue\n>>> equilateral_triangle(2, 3, 14)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 15)\ntrue\n>>> equilateral_triangle(2, 3, 16)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 17)\ntrue\n>>> equilateral_triangle(2, 3, 18)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 19)\ntrue\n>>> equilateral_triangle(2, 3, 20)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 21)\ntrue\n>>> equilateral_triangle(2, 3, 22)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 23)\ntrue\n>>> equilateral_triangle(2, 3, 24)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 25)\ntrue\n>>> equilateral_triangle(2, 3, 26)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 27)\ntrue\n>>> equilateral_triangle(2, 3, 28)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 29)\ntrue\n>>> equilateral_triangle(2, 3, 30)\ntrue\n>>> equilateral_triangle(2,\
    \ 3, 31)\ntrue\n>>> equilater", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    right_angle_triangle(lengths::Vector{Int64})\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle([3, 4, 5])\n    true\n    >>> right_angle_triangle([1,\
    \ 2, 3])\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangle(lengths::Vector{Int64})\n\
    \    \n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle([3, 4, 5])\n    true\n    >>> right_angle_triangle([1,\
    \ 2, 3])\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return true\n    else if c > a \n    then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        then return\
    \ true\n    else \n        then return false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c \n       \
    \ then return true\n    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return ", "    if a > b and a > c \n    then return true\n    else if b > c\
    \ \n    then return false\n    else if c > a \n    then return false\n    else\
    \ return true\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/27829134)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27829134)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829134)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27829134)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829134)\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    if a==b or a==c or b==c then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a < b and a < c and a > 0 and b > 0 and\
    \ c > 0 \n        then true\n        else false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then \n        if b > c \n        then \n            return\
    \ true\n        else \n            return false\n    else \n        if b > c \n\
    \        then \n            return false\n        else \n            return true\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c then return false \n    else if a==c then return true \n    else\
    \ if b==c then return true \n    else return false \nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > a and b > c \n        then return true\n    else if c\
    \ > a and c > b \n        then return true\n    else return false\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "    if a == b and a == c then return true\n\
    \    if a == c then return false\n    if b == c then return false\n    if a >\
    \ b and a > c then return true\n    if b > c then return true\n    if c > a then\
    \ return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==0 || b==0 || c==0 \n        then return false\n    else \n        if\
    \ b > a && b > c \n            then return true\n        else if c > a && c >\
    \ b \n            then return true\n        else if b > c \n            then return\
    \ false\n        else if c > b \n            then return false\n        else return\
    \ true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false \n    else if a + b > c \n        then return true \n    else\
    \ if b + c > a \n        then return true \n    else if c + a > b \n        then\
    \ return true \n    else return false \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else if b > c \n        then return right_angle_triangle(a,\
    \ c - b, c)\n        else return right_angle_triangle(a - b, b, c) \n    end\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a == b\
    \ or a == c or b == c \n    then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.5>\nright_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(1, 2, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ determines whether a triangle is equilateral or not.\nA triangle is equilateral\
    \ if all three sides are equal, i.e. the area of the triangle is equal to its\
    \ perimeter. \nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 3)\nfalse\n>>> equilateral_triangle(2, 3, 4)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 6)\nfalse\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_", " \
    \   if a==b or a==c or b==c then return true else return false\n</code>\n<|/ a\
    \ |>\n<| c |>\nI believe this answer should be the accepted answer. While the\
    \ other answers provide some good insight, they don't really answer the question\
    \ of how to determine if a triangle is right-angled.\n<|/ c |>\n<| a tags=julia,trigonometry,geometry\
    \ |>\n<code>", "    if a == b or a == c or b == c \n        then return true\n\
    \    else \n        return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b or a == c or b == c \n        then return true\n    else \n     \
    \   then return false\nend\n</code>\n<|/ a tags=julia,boolean,if-statement |>\n\
    <| a dscore=0 |>\n<code>", "    if a == 0 || b == 0 || c == 0 \n        then return\
    \ false \n    else \n        if abs(b * b - 4 * a * c) >= 0 \n            then\
    \ return true \n        else \n            if b * b - 4 * a * c < 0 \n       \
    \         then return false \n            else \n                if a * a - b\
    \ * b < 0 \n                    then return false \n                else \n  \
    \                  if a * a + b * b > 0 \n                        then return\
    \ false \n                    else \n                        if a * a + b * b\
    \ == 0 \n                            then return false \n                    \
    \    else \n                            if a * a + b * b == -1 \n            \
    \                    then return false \n                            else \n \
    \                               if a * a + b * b == -2 \n                    \
    \                then return false \n                                else \n \
    \                                   return true \n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        true \n \
    \   else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ true\n    else\n        if b > a && c > a \n            right_angle_triangle(b,\
    \ c, a) \n        else \n            if b > c \n                right_angle_triangle(b,\
    \ a, c) \n            else \n                if b > a \n                    right_angle_triangle(a,\
    \ b, c)\n                else\n                    false\n    end\nend\n</code>\n\
    <|/ a tags=julia,recursion,algorithm |>\n<| c |>\nThis code doesn't work. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` instead of `false`.\n<|/ c |>\n<| c |>\nI fixed the code.\
    \ Thanks for pointing out.\n<|/ c |>\n<| a dscore=1 |>\nI wrote a recursive function\
    \ which returns true if the triangle is right angled, false otherwise:\n<code>",
  "    if a==b or a==c or b==c \n        true\n    else\n        false\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. `right_angle_triangle(3, 4, 5)` returns\
    \ `true` but `right_angle_triangle(1, 2, 3)` returns `false`.\n<|/ c |>\n<| c\
    \ |>\nThanks for pointing that out. I've updated the answer to fix the issue.\n\
    <|/ c |>\n<| a tags=julia,boolean,triangle |>\n<code>", "    if a==b and b==c\
    \ then return true else return false\n    else if a==c then return true\n    else\
    \ if b==c then return true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        true\n\
    \    else\n        false\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n\
    <code>", "    if a > b and a > c and a > c \n        then return true\n    else\
    \ if b > a and b > c and a > c \n        then return true\n    else if c > a and\
    \ c > b and a > c \n        then return true\n    else return false\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP asked for a function\
    \ that returns true if the three sides of a triangle form a right angled triangle,\
    \ not just any triangle with three sides.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to include a function that returns true if the three sides of a triangle form\
    \ a right angled triangle. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    if a==b or a==c or b==c then return false \n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    right_angle_triangle(lengths::Vector{Int64})\n\
    \    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle([3, 4, 5])\n    true\n    >>> right_angle_triangle([1,\
    \ 2, 3])\n    false\n    \"\"\"", "    if b == c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return ", "    if a > b and a > c \n    then return true\n    else if b > c\
    \ \n    then return false\n    else return false\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c \n    then\
    \ return true\n    else return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns True if a triangle is equilateral, False otherwise.\
    \ \nThe triangle is equilateral if all three sides are equal, \nor if all three\
    \ sides are opposite. \nThe triangle is equilateral if all three sides are equal,\
    \ \nor if all three sides are opposite.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equil", "    if a > b and a > c then return true\n    if b\
    \ > c and b > a then return true\n    if c > a and c > b then return true\n  \
    \  return false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c then return true\n    if b > c and b > a then return true\n    if\
    \ c > a and c > b then return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b then return\
    \ false\n    if a==c then return true\n    if b==c then return true\n    if a==b\
    \ then return true\n    if a==c then return false\n    if b==c then return false\n\
    \    if a==b then return false\n    if a==c then return true\n    if b==c then\
    \ return true\n    if a==b then return true\n    if a==c then return false\n \
    \   if b==c then return false\n    if a==b then return false\n    if a==c then\
    \ return true\n    if b==c then return true\n    if a==b then return true\n  \
    \  if a==c then return false\n    if b==c then return false\n    if a==b then\
    \ return false\n    if a==c then return true\n    if b==c then return true\n \
    \   if a==b then return true\n    if a==c then return false\n    if b==c then\
    \ return false\n    if a==b then return false\n    if a==c then return true\n\
    \    if b==c then return true\n    if a==b then return true\n    if a==c then\
    \ return false\n    if b==c then return false\n    if a==b then return false\n\
    \    if a==c then return true\n    if b==c then return true\n    if a==b then\
    \ return true\n    if a==c then return false\n    if b==c then return false\n\
    \    if a==b then return false\n    if a==c then return true\n    if b==c then\
    \ return true\n    if a==b then return true\n    if a==c then return false\n \
    \   if b==c then return false\n    if a==b then return false\n    if a==c then\
    \ return true\n    if b==c then return true\n    if a==b then return true\n  \
    \  if a==c then return false\n    if b==c then return false\n    if a==b then\
    \ return false\n    if a==c then return true\n    if b==c then return true\n \
    \   if a==b then return true\n    if a==c then return false\n    if b==c then\
    \ return false\n    if a==b then return false\n    if a==c then return true\n\
    \    if b==c then return true\n    if a==b then return true\n    if a==c then\
    \ return false\n    if b==c then return false\n    if a==b ", "    if a == 0 ||\
    \ b == 0 || c == 0 \n        then return false\n    else \n        if b > a &&\
    \ c > a \n            then return true\n        else \n            if b > c \n\
    \                then return true\n            else \n                if c > b\
    \ \n                    then return true\n                else \n            \
    \        return false\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if all three sides are equal, not if they are all greater than the other\
    \ two.\n<|/ c |>\n<| c |>\nI agree with you, my answer was more of a hint than\
    \ a solution. I'll edit my answer to be more precise.\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\nThe answer by is correct, but I wanted to add some additional information\
    \ to help people who are new to Julia.\nThe syntax for if statements in Julia\
    \ is as follows:\n<code>\nif condition\n    statement\nelse\n    statement\nend\n\
    </code>\nThe if statement is followed by a condition that evaluates to true or\
    \ false. Julia will execute the statement if the condition is true, and skip the\
    \ statement if the condition is false. \nThe else statement is followed by a condition\
    \ that evaluates to true or false. Julia will execute the statement if the condition\
    \ is false, and skip the statement if the condition is true. \nThe end keyword\
    \ is optional, and is often omitted when writing Julia code. \nThe syntax for\
    \ for loops is as follows:\n<code>\nfor index in 1:10\n    statement\nend\n</code>\n\
    The for loop will execute the statement 10 times. \nThe syntax for while loops\
    \ is as follows:\n<code>\nwhile condition\n    statement\nend\n</code>\nThe while\
    \ loop will execute the statement until the condition is false. \nThe syntax for\
    \ if statements is as follows:\n<code>\nif condition\n    statement\nelse\n  \
    \  statement\nend\n</code>\nThe if statement is followed by a condition that evaluates\
    \ to true or false. Julia will execute the statement if the condition is true,\
    \ and skip the statement if the condition is false. \nThe else statement is followed\
    \ by a condition that evaluates to true or false. Julia will execute the statement\
    \ if the condition is false, and skip the statement if the condition is true.\
    \ \nThe end keyword is optional, and is often omitted when writing Julia code.\
    \ \nThe syntax for for loops is as follows:\n<code>\nfor index in 1:10\n    statement\n\
    end\n</code>\nThe for loop will execute the statement 10 times. \nThe syntax for\
    \ while loops is as follows:\n<code>\nwhile condition\n    statement\nend\n</code>\n\
    The while loop will execute the statement until the condition is false", "   \
    \ if a == b or a == c or b == c \n    then return true\n    else return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes in three sides of\
    \ a triangle and returns the area of the triangle. \nThe formula for the area\
    \ of a triangle is: \n$A = \\sqrt{s^2 + t^2}$\nwhere $s$ is the hypotenuse and\
    \ $t$ is the side length.\nThe function should return an Int64.", "    if a >\
    \ b and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > a \n    then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a > b and a\
    \ > c \n    then return true\n    else if b > c \n    then return true\n    else\
    \ return false\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   if a==b or a==c or b==c then return true else return false \nend \n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==c then return false\n    if b==c\
    \ then return false\n    if a==b or b==c then return false\n    if a==c or c==a\
    \ then return false\n    return true\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    else if a==c then return false\n   \
    \ else if b==c then return false\n    else if a==b then return false\n    else\
    \ return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true \n    else return false \nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3, 4, 5)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(1, 2, 3)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a triangle is equilateral or not.\n\
    Example: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 6)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 7)\ntrue\n>>> equilateral_triangle(3, 4, 8)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 9)\nfalse\n>>> equilateral_triangle(3, 4, 10)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 11)\nfalse\n>>> equilateral_triangle(3, 4, 12)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 13)\nfalse\n>>> equilateral_triangle(3, 4, 14)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 15)\nfalse\n>>> equilateral_triangle(3, 4, 16)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 17)\nfalse\n>>> equilateral_triangle(3, 4, 18)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 19)\nfalse\n>>> equilateral_triangle(3, 4, 20)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 21)\nfalse\n>>> equilateral_triangle(3, 4, 22)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 23)\nfalse\n>>> equilateral_triangle(3, 4, 24)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 25)\nfalse\n>>> equilateral_triangle(3, 4, 26)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 27)\nfalse\n>>> equilateral_triangle(3, 4, 28)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 29)\nfalse\n>>> equilateral_triangle(3, 4, 30)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 31)\nfalse\n>>> equilateral_triangle(3, 4, 32)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 33)\nfalse\n>>> equilateral_triangle(3, 4, 34)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 35)\nfalse\n>>> equilateral_triangle(3, 4, 36)\nfalse\n", "    if a==b or\
    \ a==c or b==c then return true else return false\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859725)\n\
    <|/ c |>\n<| c |>\nThe question was \"Given the lengths of the three sides of\
    \ a triangle. Return True if the three sides form a right-angled triangle, False\
    \ otherwise. A right-angled triangle is a triangle in which one angle is right\
    \ angle or 90 degree.\" I answered the question as asked.\n<|/ c |>\n<| c |>\n\
    The question was \"Given the lengths of the three sides of a triangle. Return\
    \ True if the three sides form a right-angled triangle, False otherwise. A right-angled\
    \ triangle is a triangle in which one angle is right angle or 90 degree.\" I answered\
    \ the question as asked.\n<|/ c |>\n<| c |>\nThe question was \"Given the lengths\
    \ of the three sides of a triangle. Return True if the three sides form a right-angled\
    \ triangle, False otherwise. A right-angled triangle is a triangle in which one\
    \ angle is right angle or 90 degree.\" I answered the question as asked.\n<|/\
    \ c |>\n<| c |>\nThe question was \"Given the lengths of the three sides of a\
    \ triangle. Return True if the three sides form a right-angled triangle, False\
    \ otherwise. A right-angled triangle is a triangle in which one angle is right\
    \ angle or 90 degree.\" I answered the question as asked.\n<|/ c |>\n<| a tags=python,python-3.x\
    \ |>\n<code>\ndef right_angle_triangle(a, b, c):\n    if a + b > c and a + c >\
    \ b and b + c > a:\n        return True\n    else:\n        return False\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding why and/or how this code answers the question improves\
    \ its long-term value.\n<|/ c |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=python,python-3.x\
    \ |>\n<code>\ndef right_angle_triangle(a, b, c):\n    if a + b > c and a + ",
  "    if a > b and a > c \n        then return true\n    else if b > a and b > c\
    \ \n        then return true\n    else if c > a and c > b \n        then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or b==c or\
    \ c==a then return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then \n        return\
    \ true\n    elseif b > c then \n        return true\n    elseif c > a then \n\
    \        return true\n    else\n        return false\n    end\nend\n\"\"\"\n \
    \   Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a < b and a < c and b < c \n        then\
    \ true\n        else false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.0>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<text>\nExercise\nWrite a function that\
    \ checks if a triangle is equilateral or isosceles.", "    if a==b or a==c or\
    \ b==c then return true\n    else return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a triangle is equilateral or not.\nA triangle\
    \ is equilateral if all three sides are equal, i.e. all sides are equal\nExample:\
    \ \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\n\
    false\n\"\"\"", "    if b == c \n        then return true\n    else if b > c \n\
    \        then return false\n    else if b < c \n        then return false\n  \
    \  else if b == c \n        then return true\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return ", " \
    \   if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\n   \
    \ end\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c \n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if a==b or a==c or b==c then return true else\
    \ return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return false\
    \ \n    else return (a+b+c) == (sqrt(a^2+b^2)+sqrt(c^2+a^2)+sqrt(c^2+b^2))\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a triangle is equilateral\
    \ or not.\nA triangle is equilateral if all three sides are equal, i.e. all sides\
    \ are equal\nor 180 degree.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n\
    >>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 5)\n\
    true\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4,\
    \ 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)", "    if a > b and a > c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if c > a \n        then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return true\n\
    \    else if b == c \n        then return true\n    else if b == a + c \n    \
    \    then return true\n    else if b == a - c \n        then return true\n   \
    \ else if b == a + b \n        then return true\n    else if b == a - b \n   \
    \     then return true\n    else return false\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a < b and a < c and a > 0 and b > 0 and\
    \ c > 0 \n        then true\n        else false\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or b==c or\
    \ c==a then return false\n    else return true\nend\n</code>\n<|/ a tags=julia,boolean,triangle\
    \ |>\n<| a dscore=1 |>\n<code>", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c and b > a \n        then return true\n    else if c\
    \ > a and c > b \n        then return true\n    else return false\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis doesn't work for me. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` instead of `false`\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I guess you missed something in the code. Can you post the code you\
    \ tried?\n<|/ c |>\n<| c |>\nI added the code I tried\n<|/ c |>\n<| c |>\nI added\
    \ the code I tried\n<|/ c |>\n<| c |>\nI added the code I tried\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>", "    if a==b or a==c or b==c then return true else return\
    \ false \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > a \n    then return false\n    else return true\n    end\nend\n\
    </code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n<code>", "    if a==b or a==c\
    \ or b==c then return true else return false \nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n    else\
    \ if b > c and b > a then return true\n    else if c > a and c > b then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    else\
    \ if a==b or a==c or b==c then return false\n    else if a>b and a>c then return\
    \ true\n    else if b>a and b>c then return true\n    else if a>b and b>c then\
    \ return false\n    else if b>a and b>c then return false\n    else return false\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangles(a,\
    \ b, c)\n    \n    Find the number of right-angled triangles that exist with the\
    \ given sides\n    a, b, c.\n    Example:\n    >>> right_angle_triangles(3, 4,\
    \ 5)\n    3\n    >>> right_angle_triangles(1, 2, 3)\n    0\n    \"\"\"", "   \
    \ if a > b and a > c \n        then return true\n    else if b > c \n        then\
    \ return false\n    else if c > a \n        then return false\n    else return\
    \ true\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if c > a \n        then return false\n    else return true\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a == b\
    \ or a == c or b == c \n        true\n    else\n        false\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==b or b==c then return false\n\
    \    if a==c then return false\n    if b==c then return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else \n        true\n    end\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        then return false\n    else if b >\
    \ a && b > c \n        then return true\n    else if c > a && c > b \n       \
    \ then return true\n    else if b == c \n        then return true\n    else if\
    \ b > c \n        then return false\n    else if c > b \n        then return false\n\
    \    else if b > a && c > a \n        then return true\n    else if c > a \n \
    \       then return true\n    else if b > a \n        then return false\n    else\
    \ if c > a \n        then return false\n    else \n        then return false\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a == 0\
    \ || b == 0 || c == 0 \n    then return false \n    else if b > a && b > c \n\
    \    then return true \n    else if c > a && c > b \n    then return true \n \
    \   else if b > c \n    then return false \n    else if c > b \n    then return\
    \ false \n    else if b > a \n    then return false \n    else if c > a \n   \
    \ then return false \n    else return true \nend \n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c \n        then\
    \ true\n        else false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement\
    \ |>\n<code>", "    if a > b and a > c \n        then return true\n    else if\
    \ b > c \n        then return true\n    else if c > a \n        then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return false\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return false \n    else if a==c then return true\
    \ \n    else if b==c then return true \n    else return right_angle_triangle(a+1,\
    \ b, c) or right_angle_triangle(a, b+1, c) \nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c then return true\n    if a ==\
    \ c then return false\n    if a == b then return false\n    if b == a then return\
    \ false\n    if a == b || b == c || c == a then return true\n    if a == b ||\
    \ a == c || a == c then return true\n    if b == c || c == a || c == b then return\
    \ true\n    if b == c || c == b || c == a then return true\n    if a == b || a\
    \ == c || a == c then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if b == c || c == a || c == b then return true\n    if b == c || c\
    \ == b || c == a then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if a == b || a == c || a == c then return true\n    if b == c || c\
    \ == a || c == b then return true\n    if b == c || c == b || c == a then return\
    \ true\n    if a == b || a == c || a == c then return true\n    if a == b || a\
    \ == c || a == c then return true\n    if b == c || c == a || c == b then return\
    \ true\n    if b == c || c == b || c == a then return true\n    if a == b || a\
    \ == c || a == c then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if b == c || c == a || c == b then return true\n    if b == c || c\
    \ == b || c == a then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if a == b || a == c || a == c then return true\n    if b == c || c\
    \ == a || c == b then return true\n    if b == c || c == b || c == a then return\
    \ true\n    if a == b || a == c || a == c then return true\n    if a == b || a\
    \ == c || a == c then return true\n    if b == c || c == a || c == b then return\
    \ true\n    if b == c || c == b || c == a then return true\n    if a == b || a\
    \ == c || a == c then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if b == c || c == a || c == b then return true\n    if b == c || c\
    \ == b || c == a then return true\n    if a == b || a == c || a == c then return\
    \ true\n    if a == b || a == c || a == c then return true\n    if b == c || c\
    \ == a || c == b then return true\n    if b == c || c == b || c == ", "    if\
    \ a == b or a == c or b == c then return true else return false\n</code>\n<|/\
    \ a tags=julia,trigonometry,python |>\n<| c |>\nThis doesn't work for me. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` instead of `false`\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. Are you sure you copied the code correctly? It should return `false`\
    \ for `right_angle_triangle(1, 2, 3)`.\n<|/ c |>\n<| c |>\nYes, I copied the code\
    \ correctly. I'm running Julia 1.5.1. Maybe it's an issue with my version of Julia?\n\
    <|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 and it works fine. Maybe it's an\
    \ issue with your version of Julia?\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1\
    \ and it works fine. Maybe it's an issue with your version of Julia?\n<|/ c |>\n\
    <| a tags=julia,trigonometry,python |>\nI wrote a package for Julia that does\
    \ this for you:\nhttps://github.com/jrwren/Angles\n<code>\nusing Angles", "  \
    \  if a > b and a > c \n        then return true\n    else if b > c and b > a\
    \ \n        then return true\n    else if c > a and c > b \n        then return\
    \ true\n    else return false\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if a == b or a == c or b == c \n        then return true\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3,\
    \ 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1, 2, 3)\n</cell>\n\
    <text>\nExercise: Write a function that determines if a triangle is equilateral\
    \ or isosceles.", "    if a==0 || b==0 || c==0 \n        then return true\n  \
    \  else if a==b || b==c || c==a \n        then return true\n    else if a==c ||\
    \ b==c || c==a \n        then return true\n    else if a==b || b==a || c==a \n\
    \        then return true\n    else if a==c || b==a || c==b \n        then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<text>\nExercise: Write a function that\
    \ checks if a triangle is equilateral or not.", "    if a==b or a==c or b==c then\
    \ return true else return false\nend\n</cell>\n<code language=julia-0.6>\n\"\"\
    \"\n    Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false\n    else if b > a && c > b \n    then return true\n    else if\
    \ b > a && c < b \n    then return false\n    else if b < a && c > b \n    then\
    \ return false\n    else if b < a && c < b \n    then return true\n    else return\
    \ false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    or b > a and b > c\
    \ \n    or c > a and c > b \n    then true \n    else false \n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool \n    Check if three sides of a triangle form a right-angled\
    \ triangle. \n    A right-angled triangle is a triangle in which one angle is\
    \ right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n    then return false\n    else if b == c \n\
    \    then return true\n    else if b == a + 1 \n    then return true\n    else\
    \ if c == a + 1 \n    then return true\n    else if c == b + 1 \n    then return\
    \ true\n    else return false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or b==c or\
    \ c==a then return false\n    else return true\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then return\
    \ true\n    else if b == c \n    then return true\n    else if b == a \n    then\
    \ return true\n    else if c == a \n    then return true\n    else return false\n\
    \    end\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c then return true\n    if b > c and b > a then return true\n    if\
    \ c > a and c > b then return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false\n    else if b > c \n    then return right_angle_triangle(a, c\
    \ - b, b)\n    else if c > a \n    then return right_angle_triangle(c - a, b,\
    \ b)\n    else return true\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n\
    <code>", "    if a==b and b==c then return true\n    if a==b or a==c or b==c then\
    \ return false\n    else return (abs(a-b)==abs(b-c))\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and a==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a>b\
    \ and a>c then return true\n    else if b>c then return false\n    else if a>c\
    \ then return false\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and a==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a>b and a>c then\
    \ return true\n    if b>c then return false\n    if a<b and a<c then return true\n\
    \    if c<a then return false\n    return false\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</code>\n<|/ a tags=julia,function,if-statement |>\n<|\
    \ a dscore=0 |>\n<code>", "    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(a\
    \ + 1, b, c - 1)\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "   \
    \ if a==b or a==c or b==c then return true else return false \nend \n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else \n        if a > b and a > c \n            then\
    \ return true\n        else if b > c and b > a \n            then return true\n\
    \        else if c > a and c > b \n            then return true\n        else\
    \ return false\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `right_angle_triangle(3, 4, 5)`.\n<|/ c |>\n<| c |>\nThanks\
    \ for pointing out. I've fixed it.\n<|/ c |>\n<| a tags=julia,if-statement |>\n\
    <code>", "    if a > b and a > c then return true\n    if b > c and b > a then\
    \ return true\n    if c > a and c > b then return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a==b or a==c\
    \ or b==c then return true\n    else return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a triangle is equilateral or not.\nA triangle\
    \ is equilateral if all three sides are equal\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n\"\"\"", "    if a ==\
    \ 0 || b == 0 || c == 0 \n    then return false \n    else if b > a && c > a \n\
    \    then return true \n    else if c > b \n    then return true \n    else if\
    \ b > c \n    then return true \n    else return false \nend \n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or b==c then\
    \ return false\n    if a==c or c==a then return false\n    return true\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true else return false \nend \n</cell>\n\
    <text>\nProblem 7\nWrite a function that checks if a triangle is equilateral or\
    \ not.\nA triangle is equilateral if all three sides are equal, i.e. the angles\
    \ are the same.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue", "    if b == c || a ==\
    \ c || b == a || a == b \n    then true\n    else false\nend\n</code>\n<|/ a tags=julia,boolean,function\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know if _all_ three\
    \ sides are equal, not just one side.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ I've edited my answer to reflect that.\n<|/ c |>\n<| a |>\n<code>", "    if\
    \ a == 0 || b == 0 || c == 0 \n    then return true\n    else if b > a && b >\
    \ c \n    then return false\n    else if c > a && c > b \n    then return false\n\
    \    else if b == c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > b \n    then return false\n    else return true\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if a < b and a < c\
    \ and a > 0 and b > 0 and c > 0 \n        then true\n        else false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    else if a==c then return false\n   \
    \ else if b==c then return false\n    else if a==b then return false\n    else\
    \ return true\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c then \n        if b > c then \n            return true\n        else\
    \ \n            return false\n    else if b > c then \n        return true\n \
    \   else \n        return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else if a==c then return false\n\
    \    else if b==c then return false\n    else if a==b then return false\n    else\
    \ return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c then return true\n    if b > c and b > a then return true\n\
    \    if c > a and c > b then return true\n    return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return true\n    else if a + b > c \n    then return false\n    else if a +\
    \ c > b \n    then return false\n    else if b + c > a \n    then return false\n\
    \    else return true\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\nend\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| a tags=julia,if-statement |>\n<code>",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else \n\
    \        then return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nA triangle is equilateral if all\
    \ three sides are equal, i.e. the area of the triangle is equal to the product\
    \ of the lengths of the sides.\nExample: \n>>> equilateral_triangle(3, 4, 5)\n\
    true\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4,\
    \ 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilater", "    if\
    \ a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\nend\n\
    </code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>", "    if a == b or a\
    \ == c or b == c \n        then return true\n    else \n        false\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nI believe this should be `return true` instead of\
    \ `return true`\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a |>\n<code>",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a triangle is equilateral\
    \ or not.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 6)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 4)\nfalse\n>>> equilateral_triangle(1, 2, 5)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 6)\ntrue\n>>> equilateral_triangle(1, 2, 7)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 8)\ntrue\n>>> equilateral_triangle(1, 2, 9)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 10)\ntrue\n>>> equilateral_triangle(1, 2, 11)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 12)\ntrue\n>>> equilateral_triangle(1, 2, 13)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 14)\ntrue\n>>> equilateral_triangle(1, 2, 15)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 16)\ntrue\n>>> equilateral_triangle(1, 2, 17)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 18)\ntrue\n>>> equilateral_triangle(1, 2, 19)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 20)\ntrue\n>>> equilateral_triangle(1, 2, 21)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 22)\ntrue\n>>> equilateral_triangle(1, 2, 23)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 24)\ntrue\n>>> equilateral_triangle(1, 2, 25)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 26)\ntrue\n>>> equilateral_triangle(1, 2, 27)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 28)\ntrue\n>>> equilateral_triangle(1, 2, 29)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 30)\ntrue\n>>> equilateral_triangle(1, 2, 31)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 32)\ntrue\n>>> equilateral_triangle(1, 2, 33)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 34)\ntrue\n>>> equilateral_triangle(1, 2, 35)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 36)\ntrue\n>>> equilateral_triangle(1, 2, 37)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 38)\ntrue\n>>> equilateral_triangle(1, 2, 39)\nfalse\n>>> equilateral_triangle(1,\
    \ 2, 40)\ntrue\n>>> equilateral_", "    if a == b or a == c or b == c \n     \
    \   true\n    else\n        false\nend\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return false\
    \ \n    else if a==c then return true \n    else if b==c then return true \n \
    \   else return false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b or a == c or b == c then return true\n    else return false\nend",
  "    if a > b and a > c then \n        if b > c then \n            return true\n\
    \        else \n            return false\n    else \n        if b > c then \n\
    \            return false\n        else \n            return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == b or a == c or b == c then return true\n    else if b == a or c ==\
    \ a then return false\n    else if b == c then return true\n    else if c == a\
    \ then return false\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b == a + c \n        then return false\n    else if b == a + b + c\
    \ \n        then return true\n    else \n        right_angle_triangle(b, c+a,\
    \ c+b) \nend\n</code>\n<|/ a |>\n<| c |>\nThe code in the answer does not work.\
    \ Try it out with a = b = c = 1.\n<|/ c |>\n<| c |>\nI fixed the code in the answer.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a tags=julia,recursion |>\nI wrote\
    \ a recursive solution that is more readable than a while loop:\n<code>", "  \
    \  if a==b or a==c or b==c then return false \n    else if a==c then return true\n\
    \    else if b==c then return true\n    else if a==b then return true\n    else\
    \ return false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then \n        if b > c \n        then \n            true\n\
    \        else \n            false\n    else \n        if c > a \n        then\
    \ \n            true\n        else \n            false\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef right_angle_triangle(a: int, b: int, c: int)\
    \ -> bool:\n    if a > b and a > c:\n        if b > c:\n            return True\n\
    \        else:\n            return False\n    elif c > a and c > b:\n        return\
    \ True\n    else:\n        return False\n</code>\n<|/ a tags=python,python-3.x\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=python,python-3.x |>\n<code>\ndef right_angle_triangle(a:\
    \ int, b: int, c: int) -> bool:\n    if a > b and a > c:\n        if b > c:\n\
    \            return True\n        else:\n            return False\n    elif c\
    \ > a and c > b:\n        return True\n    else:\n        return False\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding why and/or how this code answers the question improves\
    \ its long-term value.\n<|/ c |>\n<| a tags=python,python-3.x |>\n<code>\ndef\
    \ right_angle_triangle(a: int, b: int, c: int) -> bool:\n    if a > b and a >\
    \ c:\n        if b > c:\n            return True\n        else:\n            return\
    \ False\n    elif c > a and c > b:\n        return True\n    else:\n        return\
    \ False\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=python,python-3.x\
    \ |>\n<code>\ndef right_angle_triangle(a: int, b: int, c: int) -> bool:\n    if\
    \ a > b and a > c:\n        if b > c:\n            return True\n        else:\n\
    \            return False\n    elif c > a and c > b:\n        return True\n  \
    \  else:\n        return False\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this\
    \ code may answer the question, providing additional context regarding why and/or\
    \ how this code answers the question improves its long-term value.\n<|/ c |>\n\
    <| a tags=python,python-3.x |>\n<code>\ndef right_angle_triangle(a: int, b: int,\
    \ c: int) -> bool:\n    if a > b and a ", "    if a == b or a == c or b == c \n\
    \        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false \nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns True if a triangle is equilateral, False otherwise. \nThe triangle is\
    \ equilateral if all sides are equal, \nor if all sides are either equal or opposite.\
    \ \nThe triangle is equilateral if all sides are equal, \nor if all sides are\
    \ either equal or opposite.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n\
    >>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 5)\n\
    true\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4,\
    \ 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equil", "    if a == b or a == c or b == c \n        then return\
    \ true\n    else \n        return false\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis does not answer the question. The question asks how to determine\
    \ if a triangle is right angled, not whether a triangle is equilateral.\n<|/ c\
    \ |>\n<| c |>\nThe question asks how to determine if a triangle is right angled,\
    \ not whether a triangle is equilateral. My answer does exactly that. My answer\
    \ also answers the question \"How to determine if a triangle is right angled?\"\
    \n<|/ c |>\n<| c |>\nThe question asks how to determine if a triangle is right\
    \ angled, not whether a triangle is equilateral. My answer does exactly that.\
    \ My answer also answers the question \"How to determine if a triangle is right\
    \ angled?\"\n<|/ c |>\n<| c |>\nThe question asks how to determine if a triangle\
    \ is right angled, not whether a triangle is equilateral. My answer does exactly\
    \ that. My answer also answers the question \"How to determine if a triangle is\
    \ right angled?\"\n<|/ c |>\n<| c |>\nThe question asks how to determine if a\
    \ triangle is right angled, not whether a triangle is equilateral. My answer does\
    \ exactly that. My answer also answers the question \"How to determine if a triangle\
    \ is right angled?\"\n<|/ c |>\n<| a dscore=3 |>\nA simple solution is to check\
    \ whether the sum of the angles is 90\xB0:\n<code>", "    if b == c && b == a\
    \ \n        return true\n    else if b == a \n        return false\n    else if\
    \ c == a \n        return false\n    else if b == c \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return false\
    \ \n    else if a==c then return true\n    else if b==c then return true\n   \
    \ else if a==b then return true\n    else return false\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26545576)\n<|/ c |>\n<| c |>\nI believe this\
    \ does provide an answer to the question. He asked how to check if a triangle\
    \ is right angled or not, and I provided a solution to do so. He also asked how\
    \ to check if a triangle is right angled or not, and I provided a solution to\
    \ do so. He also asked how to check if a triangle is right angled or not, and\
    \ I provided a solution to do so. He also asked how to check if a triangle is\
    \ right angled or not, and I provided a solution to do so. He also asked how to\
    \ check if a triangle is right angled or not, and I provided a solution to do\
    \ so. He also asked how to check if a triangle is right angled or not, and I provided\
    \ a solution to do so. He also asked how to check if a triangle is right angled\
    \ or not, and I provided a solution to do so. He also asked how to check if a\
    \ triangle is right angled or not, and I provided a solution to do so. He also\
    \ asked how to check if a triangle is right angled or not, and I provided a solution\
    \ to do so. He also asked how to check if a triangle is right angled or not, and\
    \ I provided a solution to do so. He also asked how to check if a triangle is\
    \ right angled or not, and I provided a solution to do so. He also asked how to\
    \ check if a triangle is right angled or not, and I provided a solution to do\
    \ so. He also asked how to check if a triangle is right angled or not, and I provided\
    \ a solution to do so. He also asked how to check if a triangle is right angled\
    \ or not, and I provided a solution to do so. He also asked how to check if a\
    \ triangle is right angled or not, and I provided a solution to do so. He also ",
  "    if b == c && b == a \n        then true\n        else false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Check if three sides form a right-angled triangle. \n \
    \   A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b and\
    \ a==c then return true\n    else if a==c then return false\n    else if b==c\
    \ then return false\n    else if a>b and a>c then return true\n    else if b>c\
    \ then return false\n    else if a>c then return false\n    else return false\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c then return false \n    else if a>c then return right_angle_triangle(b,c,a)\
    \ else return right_angle_triangle(a,b,c) \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false \nend \n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c and b > a\
    \ \n        then return true\n    else if c > a and c > b \n        then return\
    \ true\n    else return false\nend\n</code>\n<|/ a tags=julia,if-statement |>\n\
    <| c |>\nThis doesn't answer the question. The OP wants to know how to write an\
    \ `if` statement that checks three conditions.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. My answer was more to show how to use `if` statement to check three conditions.\
    \ I didn't want to give the full answer because I thought the OP would learn something\
    \ from my answer. Thanks for your comment.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ My answer was more to show how to use `if` statement to check three conditions.\
    \ I didn't want to give the full answer because I thought the OP would learn something\
    \ from my answer. Thanks for your comment.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if a==b or a==c or b==c then return true else return false\n\
    end\n</code>\n<|/ a |>\n<| c |>\nThis doesn't answer the question. The OP wants\
    \ to know if three sides of a triangle are right angled, not if they are equilateral.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to know if\
    \ three sides of a triangle are right angled, not if they are equilateral.\n<|/\
    \ c |>\n<| c |>\nThis answer is incorrect. As pointed out by others, a triangle\
    \ is right angle if and only if the three sides are right angles. A triangle is\
    \ equilateral if and only if the three sides are the same length. Hence the correct\
    \ answer should be `return a==b or a==c or b==c`.\n<|/ c |>\n<| c |>\nThis answer\
    \ is incorrect. As pointed out by others, a triangle is right angle if and only\
    \ if the three sides are right angles. A triangle is equilateral if and only if\
    \ the three sides are the same length. Hence the correct answer should be `return\
    \ a==b or a==c or b==c`.\n<|/ c |>\n<| c |>\nThis answer is incorrect. As pointed\
    \ out by others, a triangle is right angle if and only if the three sides are\
    \ right angles. A triangle is equilateral if and only if the three sides are the\
    \ same length. Hence the correct answer should be `return a==b or a==c or b==c`.\n\
    <|/ c |>\n<| a tags=julia,trigonometry |>\nThe answer by is correct but can be\
    \ simplified a bit.\n<code>", "    if a > b and a > c \n    or b > c and b > a\
    \ \n    or c > a and c > b \n    then true \n    else false \n    end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=julia |>\n<code>", "    if a==b or a==c or b==c then\
    \ return false \n    else return true\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that checks if a triangle is equilateral or not.\nA triangle is equilateral\
    \ if all three sides are equal, i.e. the area of the triangle is equal to the\
    \ sum of its sides.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(1,\
    \ 2, 3)\nfalse\n\"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false\n    else if b > a && b > c \n    then return true\n    else if c > a\
    \ && c > b \n    then return true\n    else if b == c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > b \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>",
  "    if a == b or a == c or b == c \n        then return true\n    else \n     \
    \   false\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n<code>",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a > b and a\
    \ > c \n    then return true\n    else if b > c \n    then return false\n    else\
    \ if c > a \n    then return false\n    else return true\n    end\nend\n</cell>\n\
    <code language=julia-1.1>\nright_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.1>\n\
    right_angle_triangle(1, 2, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 6)\nfalse\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle(3, 4, 31)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 32)\nfalse\n>>> equilateral_triangle(3, 4, 33)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 34)\nfalse\n>>> equilateral_triangle(3, 4, 35)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 36)\n", "    if a == 0 || b == 0 || c == 0 \n    then return false \n   \
    \ else if b > a && c > b \n    then return true \n    else if b > a && c < b \n\
    \    then return false \n    else if b < a && c > b \n    then return false \n\
    \    else if b < a && c < b \n    then return true \n    else return false \n\
    end\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nI like the idea of using\
    \ an `if` statement to determine if it's a right angled triangle, but this doesn't\
    \ really answer the question. How would you write this in Julia?\n<|/ c |>\n<|\
    \ c |>\nI added a Julia solution to the answer. Hope it helps.\n<|/ c |>\n<| c\
    \ |>\nThanks for the answer! I appreciate it!\n<|/ c |>\n<| a dscore=2 |>\n<code>",
  "    if a > b and a > c then return true\n    if b > c and b > a then return true\n\
    \    if c > a and c > b then return true\n    return false\nend\n</code>\n<|/\
    \ a tags=julia,if-statement |>\n<| a dscore=0 |>\n<code>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

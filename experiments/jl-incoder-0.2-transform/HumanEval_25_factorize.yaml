name: HumanEval_25_factorize
language: jl
prompt: "\"\"\" Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n    Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n    Input number should be equal\
  \ to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n\
  \    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\nfunction factorize(n::Int64)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = factorize;\n\t@test(candidate(2)\
  \ == [2])\n\t@test(candidate(4) == [2, 2])\n\t@test(candidate(8) == [2, 2, 2])\n\
  \t@test(candidate(57) == [3, 19])\n\t@test(candidate(3249) == [3, 3, 19, 19])\n\t\
  @test(candidate(185193) == [3, 3, 3, 19, 19, 19])\n\t@test(candidate(20577) == [3,\
  \ 19, 19, 19])\n\t@test(candidate(18) == [2, 3, 3])\nend\n"
completions: ["    factors = factor(n)\n    factors = sort(factors)\n    factors =\
    \ factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor\
    \ in factors\n        factor_counts[factor] = factor_counts[factor] + 1 if factor_counts[factor]\
    \ == 0 else factor_counts[factor]\n    end\n    factor_counts = collect(factor_counts)\n\
    \    factor_counts = sort(factor_counts, by=x->x[1])\n    factor_counts = reverse(factor_counts)\n\
    \    return factor_counts\nend\n</cell>\n<code language=julia-1.5>\nfactorize(8)\n\
    </cell>\n<code language=julia-1.5>\nfactorize(25)\n</cell>\n<code language=julia-1.5>\n\
    factorize(70)\n</cell>\n<text>\nExercise 2\nWrite a function that returns all\
    \ prime factors of a given integer in the order from smallest to largest.\n  \
    \  Input number should be equal to the product of all factors\n    >>> factorize(8)\n\
    \    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n   \
    \ [2, 5, 7]\n    \"\"\"", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factor", "    factors = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n\
    \    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1 if factor_counts[factor] > 0 else 1\n    end\n    factor_counts\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factor", "  \
    \  factorization = factorize(n)\n    factors = []\n    for factor in factorization\n\
    \        push!(factors, factor)\n    end\n    return factors\nend", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n   \
    \ factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = [1]\n    factor = 1\n    while factor <= n\n        factor *= factors[1]\n\
    \        factors[1] += 1\n        if factor > n\n            factors[1] = 1\n\
    \            factors[2] = 1\n        end\n        push!(factors, factor)\n   \
    \ end\n    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n   \
    \ factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    if n==1\n\
    \        return [1]\n    factors=[]\n    factor=1\n    while n>1\n        if n%factor==0\n\
    \            factor=factor+1\n            factors=append(factors,factor)\n   \
    \         n=n/factor\n        else\n            factor=factor+1\n            factors=append(factors,factor)\n\
    \            n=n/factor\n        end\n    end\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factorization = factorize(n-1)\n    factorization\
    \ = factorization .+ [Int64(n)]\n    return factorization\nend", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factor_counts = Dict{Int64,\
    \ Int64}()\n    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1\n    end\n    factor_counts = collect(factor_counts)\n    factor_counts\
    \ = sort!(factor_counts, by=x->x[1])\n    factor_counts = reverse(factor_counts)\n\
    \    return factor_counts\nend\n</cell>\n<code language=julia-1.5>\nfactorize(8)\n\
    </cell>\n<code language=julia-1.5>\nfactorize(25)\n</cell>\n<code language=julia-1.5>\n\
    factorize(70)\n</cell>\n<text>\nProblem 3\nWrite a function that returns all prime\
    \ factors of a given integer in the order from smallest to largest.\n    Input\
    \ number should be equal to the product of all factors\n    >>> factorize(8)\n\
    \    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n   \
    \ [2, 5, 7]\n    \"\"\"", "    factorization = factors(n)\n    factorization =\
    \ sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factorization\
    \ = factorize(n)\n    factors = []\n    for factor in factorization\n        push!(factors,\
    \ factor)\n    end\n    return factors\nend", "    factorization = factorize(n)\n\
    \    factorization = [factorization[i] | i in factorization]\n    return factorization\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1 if factor_counts[factor] == 0 else 1\n    end\n\
    \    factor_counts = collect(factor_counts)\n    factor_counts = sort(factor_counts,\
    \ by = x -> x[1])\n    factor_counts = reverse(factor_counts)\n    return factor_counts\n\
    end\n</cell>\n<code language=julia-1.4>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    return factors\nend", "    factors = factor(n)\n    factor_counts = Dict{Int64,\
    \ Int64}()\n    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1\n    end\n    factor_counts = collect(factor_counts)\n    factor_counts\
    \ = sort(factor_counts)\n    factor_counts = reverse(factor_counts)\n    return\
    \ factor_counts\nend", "    factors = factor(n)\n    factor_counts = Dict{Int64,\
    \ Int64}()\n    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1 if factor_counts[factor] == 0 else factor_counts[factor]\n    end\n    factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor in factors\n\
    \        factor_counts[factor] = factor_counts[factor] + 1\n    end\n    factor_counts\
    \ = collect(factor_counts)\n    factor_counts = sort(factor_counts, by=x->x[1])\n\
    \    factor_counts = reverse(factor_counts)\n    factor_counts = reverse(factor_counts)\n\
    \    return factor_counts\nend\n</cell>\n<code language=julia-1.5>\nfactorize(8)\n\
    </cell>\n<code language=julia-1.5>\nfactorize(25)\n</cell>\n<code language=julia-1.5>\n\
    factorize(70)\n</cell>\n<text>\nExercise\nWrite a function that returns all prime\
    \ factors of a given integer in the order from smallest to largest.\n    Input\
    \ number should be equal to the product of all factors\n    >>> factorize(8)\n\
    \    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n   \
    \ [2, 5, 7]\n    \"\"\"", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.4>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1\n    end\n    factor_counts = sort(collect(factor_counts))\n\
    \    return factor_counts\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors_count = zeros(Int, length(factors))\n    for\
    \ (i,factor) in enumerate(factors)\n        factors_count[i] = factors[factor]\n\
    \    end\n    factors_count = sort(factors_count)\n    return factors_count\n\
    end\n</cell>\n<code language=julia-1.5>", "    factorization = factors(n)\n  \
    \  factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = [1]\n    for f in factorization(n)\n        push!(factors, f)\n \
    \   end\n    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor\
    \ in factors\n        factor_counts[factor] = factor_counts[factor] + 1 if factor_counts[factor]\
    \ == 0 else factor_counts[factor]\n    end\n    factor_counts\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n==1 \n        return [1]\n\
    \    factors = factorize(n-1)\n    factors = [factors[i]*factors[i+1] for i in\
    \ 1:length(factors)]\n    factors = unique(factors)\n    factors = [i for i in\
    \ factors if i>1]\n    return factors\nend", "    factorization = factorize(n)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    return factorization\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    if n == 1\n        Vector{1}\n    else\n  \
    \      factors = factor(n)\n        Vector{Int64}(undef, 0)\n        for factor\
    \ in factors\n            push!(factors, factor)\n            push!(factors, 1)\n\
    \        end\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns all prime factors of given integer in the order from smallest to largest.\n\
    \    Input number should be equal to the product of all factors\n    >>> factorize(8)\n\
    \    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n   \
    \ [2, 5, 7]\n    \"\"\"", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = ",
  "    factors = [1]\n    i = 2\n    while i <= sqrt(n)\n        if n % i == 0\n \
    \           factors *= i\n            n /= i\n        else\n            i += 1\n\
    \        end\n    end\n    factors *= n\n    return factors\nend\n</cell>\n<code\
    \ language=julia-1.4>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n==1\n        return [1]\n \
    \   factors = factorize(n/2)\n    factors = factors .+ factors\n    factors =\
    \ factors .+ factors\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factors = [1]\n    for f in factorize(n-1)\n        if n % f == 0\n       \
    \     push!(factors, f)\n        end\n    end\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end", "    factors = factor(n)\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n    factors\
    \ = factors[2:end]\n    return factors\nend", "    factorization = factors(n)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = [1]\n    for f in factorization(n)\n        push!(factors, f)\n \
    \   end\n    return factors\nend", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = reverse(factors)\n \
    \   return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n\
    \    factor_counts = Dict{Int64, Int64}()\n    for factor in factors\n       \
    \ factor_counts[factor] = factor_counts[factor] + 1 if factor_counts[factor] ==\
    \ nil else factor_counts[factor]\n    end\n    factor_counts = sort(collect(factor_counts))\n\
    \    factor_counts = reverse(factor_counts)\n    return factor_counts\nend", " \
    \   factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n   \
    \ factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factor_counts = Dict{Int64,\
    \ Int64}()\n    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1\n    end\n    factor_counts = collect(factor_counts)\n    factor_counts\
    \ = sort(factor_counts)\n    return factor_counts\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factor(n)\n    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    ", "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    factors = factor(n)\n   \
    \ factors = sort(factors)\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factor", "    factors = factor(n)\n    factors = sort(factors)\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    factorization = factors(n)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n==1\n        Vector{1}\n  \
    \  else\n        factors = factorize(n-1)\n        push!(factors,n)\n        return\
    \ factors\n    end\nend", "    factorization = factors(n)\n    factorization =\
    \ sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n  \
    \  factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor in factors\n\
    \        factor_counts[factor] = factor_counts[factor] + 1\n    end\n    factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = ",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.3>", "    factors =\
    \ factor(n)\n    factors = factors[2:end]\n    factors = factors[2:end]\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factor", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[factors != 1]\n    return factors\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    factors = factor(n)\n    factor_counts = Dict{Int64,\
    \ Int64}()\n    for factor in factors\n        factor_counts[factor] = factor_counts[factor]\
    \ + 1\n    end\n    factor_counts = collect(factor_counts)\n    factor_counts\
    \ = sort!(factor_counts, by=x->x[1])\n    factor_counts = reverse(factor_counts)\n\
    \    return factor_counts\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n  \
    \  factors = factors[2:end]\n    factors = factors[factors != 1]\n    factors\
    \ = factors[2:end]\n    factors = factors[factors != 1]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1 if factor_counts[factor] == 0 else 1\n    end\n\
    \    factor_counts = collect(factor_counts)\n    factor_counts = sort(factor_counts,\
    \ by=x->x[1])\n    factor_counts = reverse(factor_counts)\n    return factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end", "    factorization = factorize(n)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    return factorization\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factorization = factor(n)\n   \
    \ factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    ", "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    factors = factor(n)\n   \
    \ factors = sort(factors)\n    factors = unique(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = factors[2:end]\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factor", "    factors = [1]\n    for f in factorization(n)\n\
    \        push!(factors, f)\n    end\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = reverse(factors)\n    return factors\nend", " \
    \   factorization = factorize(n-1)\n    factorization = [n] + factorization\n\
    \    factorization = sort(factorization)\n    return factorization\nend\n</cell>\n\
    <code language=julia-1.3>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = ",
  "    factors = [1]\n    for f in factorization(n)\n        push!(factors, f)\n \
    \   end\n    factors\nend\n</cell>\n<code language=julia-1.4>\nfactorize(8)\n\
    </cell>\n<code language=julia-1.4>\nfactorize(25)\n</cell>\n<code language=julia-1.4>\n\
    factorize(70)\n</cell>\n<text>\nExercise 2\nWrite a function that returns all\
    \ prime factors of given integer in the order from smallest to largest.\n    Input\
    \ number should be equal to the product of all factors\n    >>> factorize(8)\n\
    \    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n   \
    \ [2, 5, 7]\n    \"\"\"", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1 if factor_counts[factor] == nil else factor_counts[factor]\n\
    \    end\n    factor_counts = collect(factor_counts)\n    factor_counts = sort(factor_counts,\
    \ by=x->x[1])\n    factor_counts = reverse(factor_counts)\n    return factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = unique(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[factors != 1]\n    return factors\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    factorization = factors(n)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors_count = zeros(Int, length(factors))\n    for\
    \ (i,factor) in enumerate(factors)\n        factors_count[i] = factors[factor]\n\
    \    end\n    return factors_count\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factor_count = zeros(Int, length(factors))\n    for\
    \ i = 1:length(factors)\n        factor_count[i] = count(factors)\n    end\n \
    \   factor_count\nend\n</cell>\n<code language=julia-1.5>", "    if n==1\n   \
    \     return [1]\n    factors = factor(n)\n    factors = sort(factors)\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    factorization = factors(n)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = reverse(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = reverse(factorization)\n",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factorization = factor(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    ", " \
    \   factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.4>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor in factors\n\
    \        factor_counts[factor] = factor_counts[factor] + 1\n    end\n    factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    if n < 2\n        return\
    \ Vector{Int64}()\n    factors = factor(n)\n    factor_counts = count_factors(factors)\n\
    \    factor_counts = sort(factor_counts)\n    factor_counts = reverse(factor_counts)\n\
    \    factor_counts = Vector{Int64}(factor_counts)\n    return factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1 if factor_counts[factor] == 0 else 1\n    end\n\
    \    factor_counts\nend\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor in factors\n\
    \        factor_counts[factor] = factor_counts[factor] + 1\n    end\n    factor_counts\n\
    end\n</cell>\n<code language=julia-1.5>", "    factorization = factors(n)\n  \
    \  factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    if n==1 \n        return [1]\n    factors = factorize(n-1)\n\
    \    factors = [f*factors[i] for i,f in enumerate(factors)]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factors = factor(n)\n    factor_counts\
    \ = Dict{Int64, Int64}()\n    for factor in factors\n        factor_counts[factor]\
    \ = factor_counts[factor] + 1\n    end\n    factor_counts = collect(factor_counts)\n\
    \    factor_counts = sort(factor_counts, by=x->x[1])\n    factor_counts = reverse(factor_counts)\n\
    \    factor_counts = map(x -> x[1], factor_counts)\n    return factor_counts\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    factors = ", "    factors = factor(n)\n   \
    \ factors = sort(factors)\n    factors = unique(factors)\n    return factors\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factorization = factor(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    ", "    factorization = factors(n)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n    factorization\
    \ = sort(factorization)\n    factorization = unique(factorization)\n", "    factors\
    \ = factor(n)\n    factors = sort(factors)\n    factors = reverse(factors)\n \
    \   return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n    factors\
    \ = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.5>", "    factorization = factorize(n-1)\n\
    \    factorization = [factorization[i] | i in factorization]\n    return factorization\n\
    end", "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n    factors\
    \ = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n    factors\
    \ = sort(factors)\n    factors = reverse(factors)\n    factors = factors[2:end]\n\
    \    factors = sort(factors)\n    factors = reverse(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n    factors\
    \ = factors[2:end]\n    factors = factors[2:end]\n    return factors\nend\n</cell>\n\
    <code language=julia-1.5>", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = unique(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.5>",
  "    factorization = factors(n)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n    factorization = sort(factorization)\n    factorization\
    \ = unique(factorization)\n", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    factors = factors[2:end]\n    return factors\n\
    end\n</cell>\n<code language=julia-1.4>", "    factorization = factorize(n-1)\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in factorization]\n    factorization = [factorization[i] | i in factorization]\n\
    \    factorization = [factorization[i] | i in factorization]\n    factorization\
    \ = [factorization[i] | i in factorization]\n    factorization = [factorization[i]\
    \ | i in ", "    factorization = factors(n)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n    factorization = sort(factorization)\n\
    \    factorization = unique(factorization)\n", "    factorization = factors(n)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    if n < 2\n        return Vector{Int64}()\n    factors = factorize(n-1)\n  \
    \  factors = factors .+ [Int64(n)]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = unique(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factorization\
    \ = factors(n)\n    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor\
    \ in factors\n        factor_counts[factor] = factor_counts[factor] + 1\n    end\n\
    \    factor_counts = collect(factor_counts)\n    factor_counts = sort(factor_counts)\n\
    \    factor_counts = reverse(factor_counts)\n    return factor_counts\nend\n</cell>\n\
    <code language=julia-1.5>\nfactorize(8)\n</cell>\n<code language=julia-1.5>\n\
    factorize(25)\n</cell>\n<code language=julia-1.5>\nfactorize(70)\n</cell>\n<text>\n\
    Exercise: Factorization of a number\nWrite a function that will return the factorization\
    \ of given number. \nThe function should return a list of integers representing\
    \ the factors of the given number.\nThe function should return an empty list if\
    \ the given number is less than or equal to 0.\nThe function should return a list\
    \ of integers representing the factors of the given number in descending order.\n\
    The function should return a list of integers representing the factors of the\
    \ given number in ascending order.\nThe function should return a list of integers\
    \ representing the factors of the given number in descending order and in ascending\
    \ order.\nThe function should return a list of integers representing the factors\
    \ of the given number in descending order and in ascending order in one call.\n\
    The function should return a list of integers representing the factors of the\
    \ given number in descending order and in ascending order in one call.\nThe function\
    \ should return a list of integers representing the factors of the given number\
    \ in descending order and in ascending order in one call.\nThe function should\
    \ return a list of integers representing the factors of the given number in descending\
    \ order and in ascending order in one call.\nThe function should return a list\
    \ of integers representing the factors of the given number in descending order\
    \ and in ascending order in one call.\nThe function should return a list of integers\
    \ representing the factors of the given number in descending order and in ascending\
    \ order in one call.\nThe function should return a list of integers representing\
    \ the factors of the given number in descending order and in ascending order in\
    \ one call.\nThe function should return a list of integers representing the factors\
    \ of the given number in descending order and in ascending order in one call.\n\
    The function should return a list of integers representing the factors of the\
    \ given number in descending order and in ascending order in one call.\nThe function\
    \ should return a list of integers representing the factors of the given number\
    \ in descending order and in ascending order in one call.\nThe function should\
    \ return a list of integers representing the factors of the given number in descending\
    \ order and in ascending order in one call.\nThe function should return a list\
    \ of integers representing the factors of the ", "    factorization = factors(n)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n\
    \    factorization = sort(factorization)\n    factorization = unique(factorization)\n",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    factors = factors[2:end]\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend", "    factors = factor(n)\n    factors = sort(factors)\n\
    \    factors = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factors = factor(n)\n    factors = sort(factors)\n    factors = unique(factors)\n\
    \    factors = sort(factors)\n    return factors\nend", "    factors = factor(n)\n\
    \    factors = sort(factors)\n    factors = factors[2:end]\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>", "    factors =\
    \ factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n    factors\
    \ = factors[2:end]\n    return factors\nend\n</cell>\n<code language=julia-1.4>",
  "    factors = factor(n)\n    factor_counts = Dict{Int64, Int64}()\n    for factor\
    \ in factors\n        factor_counts[factor] = factor_counts[factor] + 1 if factor_counts[factor]\
    \ > 0 else 1\n    end\n    factor_counts = collect(factor_counts)\n    factor_counts\
    \ = sort(factor_counts, by = x -> x[1])\n    factor_counts = reverse(factor_counts)\n\
    \    factor_counts = reverse(factor_counts)\n    return factor_counts\nend", " \
    \   factors = factor(n)\n    factors = sort(factors)\n    factors = factors[2:end]\n\
    \    return factors\nend\n</cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_138_is_equal_to_sum_even
language: jl
prompt: "\"\"\"Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n    false\n\
  \    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n \
  \   true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
  \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
  \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
  @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
completions: ["    if n==0\n        true\n    else\n        if n%2==0\n          \
    \  false\n        else\n            if n%3==0\n                false\n       \
    \     else\n                if n%4==0\n                    true\n            \
    \    else\n                    false\n        end\n    end\nend\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_sum_even(n) == true\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_4_even(n)\
    \ == true\n    else \n        return false\nend", "    if is_sum_of_even(n) ==\
    \ true\n    else false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == true\n@assert is_equal_to_sum_even(119) == true\n@assert is_equal_to_sum_even(120)\
    \ == true\n@assert is_equal_to_sum_even(121) == true\n@assert is_equal_to_sum_even(122)\
    \ == true\n@assert is_equal_to_sum_even(123) == true\n@assert ", "    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n < 4\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the given number n is a power of two, false otherwise.\
    \ Hint: use the bitwise operator &.", "    if n==0 \n        return true\n   \
    \ else if n==1 \n        return true\n    else if n==2 \n        return true\n\
    \    else if n==3 \n        return true\n    else if n==4 \n        return true\n\
    \    else if n==5 \n        return true\n    else if n==6 \n        return true\n\
    \    else if n==7 \n        return true\n    else if n==8 \n        return true\n\
    \    else if n==9 \n        return true\n    else if n==10 \n        return true\n\
    \    else if n==11 \n        return true\n    else if n==12 \n        return true\n\
    \    else if n==13 \n        return true\n    else if n==14 \n        return true\n\
    \    else if n==15 \n        return true\n    else if n==16 \n        return true\n\
    \    else if n==17 \n        return true\n    else if n==18 \n        return true\n\
    \    else if n==19 \n        return true\n    else if n==20 \n        return true\n\
    \    else if n==21 \n        return true\n    else if n==22 \n        return true\n\
    \    else if n==23 \n        return true\n    else if n==24 \n        return true\n\
    \    else if n==25 \n        return true\n    else if n==26 \n        return true\n\
    \    else if n==27 \n        return true\n    else if n==28 \n        return true\n\
    \    else if n==29 \n        return true\n    else if n==30 \n        return true\n\
    \    else if n==31 \n        return true\n    else if n==32 \n        return true\n\
    \    else if n==33 \n        return true\n    else if n==34 \n        return true\n\
    \    else if n==35 \n        return true\n    else if n==36 \n        return true\n\
    \    else if n==37 \n        return true\n    else if n==38 \n        return true\n\
    \    else if n==39 \n        return true\n    else if n==40 \n        return true\n\
    \    else if n==41 \n        return true\n    else if n==42 \n        return true\n\
    \    else if n==43 \n        return true\n    else if n==44 \n        return true\n\
    \    else if n==45 \n        return true\n    else if n==46 \n        return true\n\
    \    else if n==47 \n        return true\n    else if n==48 \n        return true\n\
    \    else if n==49 \n        return true\n    else if n", "    if is_equal_to_sum_even(n-1)\
    \ == true \n    then return false \n    else return true \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if n==0\n    then return true\n    else if n==1\n\
    \    then return true\n    else if n==2\n    then return true\n    else if n==3\n\
    \    then return true\n    else if n==4\n    then return true\n    else if n==5\n\
    \    then return true\n    else if n==6\n    then return true\n    else if n==7\n\
    \    then return true\n    else if n==8\n    then return true\n    else if n==9\n\
    \    then return true\n    else if n==10\n    then return true\n    else if n==11\n\
    \    then return true\n    else if n==12\n    then return true\n    else if n==13\n\
    \    then return true\n    else if n==14\n    then return true\n    else if n==15\n\
    \    then return true\n    else if n==16\n    then return true\n    else if n==17\n\
    \    then return true\n    else if n==18\n    then return true\n    else if n==19\n\
    \    then return true\n    else if n==20\n    then return true\n    else if n==21\n\
    \    then return true\n    else if n==22\n    then return true\n    else if n==23\n\
    \    then return true\n    else if n==24\n    then return true\n    else if n==25\n\
    \    then return true\n    else if n==26\n    then return true\n    else if n==27\n\
    \    then return true\n    else if n==28\n    then return true\n    else if n==29\n\
    \    then return true\n    else if n==30\n    then return true\n    else if n==31\n\
    \    then return true\n    else if n==32\n    then return true\n    else if n==33\n\
    \    then return true\n    else if n==34\n    then return true\n    else if n==35\n\
    \    then return true\n    else if n==36\n    then return true\n    else if n==37\n\
    \    then return true\n    else if n==38\n    then return true\n    else if n==39\n\
    \    then return true\n    else if n==40\n    then return true\n    else if n==41\n\
    \    then return true\n    else if n==42\n    then return ", "    if n<4\n   \
    \     return false\n    else if n%2==0\n        return false\n    else if n%3==0\n\
    \        return false\n    else if n%4==0\n        return true\n    else\n   \
    \     return is_equal_to_sum_even(ceil(n/4))\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_", "    if is_equal_to_sum_even(n-1)\n        return\
    \ true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.4>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3) == true\n\
    @assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false", "    if n==0\n        true\n    else\n        if n%2==0\n       \
    \     false\n        else\n            if n%3==0\n                false\n    \
    \        else\n                if n%4==0\n                    true\n         \
    \       else\n                    false\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nis_equal_to_sum_even(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that evaluates whether a given number n is equal to the\
    \ sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\ntrue\n>>>\
    \ is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(12)\ntrue\n>>> is_equal_to_sum_odd(14)\n\
    false\n>>> is_equal_to_sum_odd(16)\ntrue\n>>> is_equal_to_sum_odd(18)\nfalse\n\
    >>> is_equal_to_sum_odd(20)\ntrue\n>>> is_equal_to_sum_odd(22)\nfalse\n>>> is_equal_to_sum_odd(24)\n\
    true\n>>> is_equal_to_sum_odd(26)\nfalse\n>>> is_equal_to_sum_odd(28)\ntrue\n\
    >>> is_equal_to_sum_odd(30)\nfalse\n>>> is_equal_to_sum_odd(32)\ntrue\n>>> is_equal_to_sum_odd(34)\n\
    false\n>>> is_equal_to_sum_odd(36)\ntrue\n>>> is_equal_to_sum_odd(38)\nfalse\n\
    >>> is_equal_to_sum_odd(40)\ntrue\n>>> is_equal_to_sum_odd(42)\nfalse\n>>> is_equal_to_sum_odd(44)\n\
    true\n>>> is_equal_to_sum_odd(46)\nfalse\n>>> is_equal_to_sum_odd(48)\ntrue\n\
    >>> is_equal_to_sum_odd(50)\nfalse\n>>> is_equal_to_sum_odd(52)\ntrue\n>>> is_equal_to_sum_odd(54)\n\
    false\n>>> is_equal_to_sum_odd(56)\ntrue\n>>> is_equal_to_sum_odd(58)\nfalse\n\
    >>> is_equal_to_sum_odd(60)\ntrue\n>>> is_equal_to_sum_odd(62)\nfalse\n>>> is_equal_to_sum_odd(64)\n\
    true\n>>> is_equal_to_sum_odd(66)\nfalse\n>>> is_equal_to_sum_odd(68)\ntrue\n\
    >>> is_equal_to_sum_odd(70)\nfalse\n>>> is_equal_to_sum_odd(72)\ntrue\n>>> is_equal_to_sum_odd(",
  "    if n == 0 \n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n\"\"\"\n    Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\n    end\nend", "    if n==0\n    then return\
    \ true\n    else if n==1\n    then return true\n    else if n==2\n    then return\
    \ true\n    else if n==3\n    then return true\n    else if n==4\n    then return\
    \ true\n    else if n==5\n    then return true\n    else if n==6\n    then return\
    \ true\n    else if n==7\n    then return true\n    else if n==8\n    then return\
    \ true\n    else if n==9\n    then return true\n    else if n==10\n    then return\
    \ true\n    else if n==11\n    then return true\n    else if n==12\n    then return\
    \ true\n    else if n==13\n    then return true\n    else if n==14\n    then return\
    \ true\n    else if n==15\n    then return true\n    else if n==16\n    then return\
    \ true\n    else if n==17\n    then return true\n    else if n==18\n    then return\
    \ true\n    else if n==19\n    then return true\n    else if n==20\n    then return\
    \ true\n    else if n==21\n    then return true\n    else if n==22\n    then return\
    \ true\n    else if n==23\n    then return true\n    else if n==24\n    then return\
    \ true\n    else if n==25\n    then return true\n    else if n==26\n    then return\
    \ true\n    else if n==27\n    then return true\n    else if n==28\n    then return\
    \ true\n    else if n==29\n    then return true\n    else if n==30\n    then return\
    \ true\n    else if n==31\n    then return true\n    else if n==32\n    then return\
    \ true\n    else if n==33\n    then return true\n    else if n==34\n    then return\
    \ true\n    else if n==35\n    then return true\n    else if n==36\n    then return\
    \ true\n    else if n==37\n    then return true\n    else if n==38\n    then return\
    \ true\n    else if n==39\n    then return true\n    else if n==40\n    then return\
    \ true\n    else if n==41\n    then return true\n    else if n==42\n    then return ",
  "    if is_sum_even(n) == true\n    else false\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"", "    if n == 0 \n        true\n\
    \    else if n % 2 == 0 \n        false\n    else if n % 4 == 0 \n        true\n\
    \    else \n        is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks whether a given number n is a multiple of another number\
    \ m. \nExample\n>>> is_multiple_of(5, 3)\ntrue\n>>> is_multiple_of(5, 4)\nfalse\n\
    >>> is_multiple_of(5, 5)\ntrue\n>>> is_multiple_of(5, 6)\nfalse\n>>> is_multiple_of(5,\
    \ 7)\nfalse\n>>> is_multiple_of(5, 8)\nfalse\n>>> is_multiple_of(5, 9)\nfalse\n\
    >>> is_multiple_of(5, 10)\nfalse\n>>> is_multiple_of(5, 11)\nfalse\n>>> is_multiple_of(5,\
    \ 12)\nfalse\n>>> is_multiple_of(5, 13)\nfalse\n>>> is_multiple_of(5, 14)\nfalse\n\
    >>> is_multiple_of(5, 15)\nfalse\n>>> is_multiple_of(5, 16)\nfalse\n>>> is_multiple_of(5,\
    \ 17)\nfalse\n>>> is_multiple_of(5, 18)\nfalse\n>>> is_multiple_of(5, 19)\nfalse\n\
    >>> is_multiple_of(5, 20)\nfalse\n>>> is_multiple_of(5, 21)\nfalse\n>>> is_multiple_of(5,\
    \ 22)\nfalse\n>>> is_multiple_of(5, 23)\nfalse\n>>> is_multiple_of(5, 24)\nfalse\n\
    >>> is_multiple_of(5, 25)\nfalse\n>>> is_multiple_of(5, 26)\nfalse\n>>> is_multiple_of(5,\
    \ 27)\nfalse\n>>> is_multiple_of(5, 28)\nfalse\n>>> is_multiple_of(5, 29)\nfalse\n\
    >>> is_multiple_of(5, 30)\nfalse\n>>> is_multiple_of(5, 31)\nfalse\n>>> is_multiple_of(5,\
    \ 32)\nfalse\n>>> is_multiple_of(5, 33)\nfalse\n>>> is_multiple_of(5, 34)\nfalse\n\
    >>> is_multiple_of(5, 35)\nfalse\n>>> is_multiple_of(5, 36)\nfalse\n>>> is_multiple_of(5,\
    \ 37)\nfalse\n>>> is_multiple_of(5, 38)\nfalse\n>>> is_multiple_of(5, 39)\nfalse\n\
    >>> is_multiple_of(5, 40)\nfalse\n>>> is_multiple_of(5, 41)\nfalse\n>>> is_multiple_of(5,\
    \ 42)\nfalse\n>>> is_multiple_of(5, 43)\nfalse\n>>> is_multiple_of(5, 44)\nfalse\n\
    >>> is_multiple_of(5, 45", "    if is_sum_even(n) == true\n    else \n       \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == false\n@assert is_equal_to_sum_even(53) == true\n@assert is_", "    if n==0\n\
    \        true\n    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))||((n%2!=0)&&(n%4==0))\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_even(n)\
    \ == true\n    else \n        false\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

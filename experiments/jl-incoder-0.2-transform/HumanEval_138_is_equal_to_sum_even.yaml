name: HumanEval_138_is_equal_to_sum_even
language: jl
prompt: "\"\"\"Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n    false\n\
  \    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n \
  \   true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
  \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
  \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
  @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
completions: ["    if n==0\n        true\n    else\n        if n%2==0\n          \
    \  false\n        else\n            if n%3==0\n                false\n       \
    \     else\n                if n%4==0\n                    true\n            \
    \    else\n                    false\n        end\n    end\nend\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_sum_even(n) == true\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_4_even(n)\
    \ == true\n    else \n        return false\nend", "    if is_sum_of_even(n) ==\
    \ true\n    else false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == true\n@assert is_equal_to_sum_even(119) == true\n@assert is_equal_to_sum_even(120)\
    \ == true\n@assert is_equal_to_sum_even(121) == true\n@assert is_equal_to_sum_even(122)\
    \ == true\n@assert is_equal_to_sum_even(123) == true\n@assert ", "    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n < 4\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the given number n is a power of two, false otherwise.\
    \ Hint: use the bitwise operator &.", "    if n==0 \n        return true\n   \
    \ else if n==1 \n        return true\n    else if n==2 \n        return true\n\
    \    else if n==3 \n        return true\n    else if n==4 \n        return true\n\
    \    else if n==5 \n        return true\n    else if n==6 \n        return true\n\
    \    else if n==7 \n        return true\n    else if n==8 \n        return true\n\
    \    else if n==9 \n        return true\n    else if n==10 \n        return true\n\
    \    else if n==11 \n        return true\n    else if n==12 \n        return true\n\
    \    else if n==13 \n        return true\n    else if n==14 \n        return true\n\
    \    else if n==15 \n        return true\n    else if n==16 \n        return true\n\
    \    else if n==17 \n        return true\n    else if n==18 \n        return true\n\
    \    else if n==19 \n        return true\n    else if n==20 \n        return true\n\
    \    else if n==21 \n        return true\n    else if n==22 \n        return true\n\
    \    else if n==23 \n        return true\n    else if n==24 \n        return true\n\
    \    else if n==25 \n        return true\n    else if n==26 \n        return true\n\
    \    else if n==27 \n        return true\n    else if n==28 \n        return true\n\
    \    else if n==29 \n        return true\n    else if n==30 \n        return true\n\
    \    else if n==31 \n        return true\n    else if n==32 \n        return true\n\
    \    else if n==33 \n        return true\n    else if n==34 \n        return true\n\
    \    else if n==35 \n        return true\n    else if n==36 \n        return true\n\
    \    else if n==37 \n        return true\n    else if n==38 \n        return true\n\
    \    else if n==39 \n        return true\n    else if n==40 \n        return true\n\
    \    else if n==41 \n        return true\n    else if n==42 \n        return true\n\
    \    else if n==43 \n        return true\n    else if n==44 \n        return true\n\
    \    else if n==45 \n        return true\n    else if n==46 \n        return true\n\
    \    else if n==47 \n        return true\n    else if n==48 \n        return true\n\
    \    else if n==49 \n        return true\n    else if n", "    if is_equal_to_sum_even(n-1)\
    \ == true \n    then return false \n    else return true \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if n==0\n    then return true\n    else if n==1\n\
    \    then return true\n    else if n==2\n    then return true\n    else if n==3\n\
    \    then return true\n    else if n==4\n    then return true\n    else if n==5\n\
    \    then return true\n    else if n==6\n    then return true\n    else if n==7\n\
    \    then return true\n    else if n==8\n    then return true\n    else if n==9\n\
    \    then return true\n    else if n==10\n    then return true\n    else if n==11\n\
    \    then return true\n    else if n==12\n    then return true\n    else if n==13\n\
    \    then return true\n    else if n==14\n    then return true\n    else if n==15\n\
    \    then return true\n    else if n==16\n    then return true\n    else if n==17\n\
    \    then return true\n    else if n==18\n    then return true\n    else if n==19\n\
    \    then return true\n    else if n==20\n    then return true\n    else if n==21\n\
    \    then return true\n    else if n==22\n    then return true\n    else if n==23\n\
    \    then return true\n    else if n==24\n    then return true\n    else if n==25\n\
    \    then return true\n    else if n==26\n    then return true\n    else if n==27\n\
    \    then return true\n    else if n==28\n    then return true\n    else if n==29\n\
    \    then return true\n    else if n==30\n    then return true\n    else if n==31\n\
    \    then return true\n    else if n==32\n    then return true\n    else if n==33\n\
    \    then return true\n    else if n==34\n    then return true\n    else if n==35\n\
    \    then return true\n    else if n==36\n    then return true\n    else if n==37\n\
    \    then return true\n    else if n==38\n    then return true\n    else if n==39\n\
    \    then return true\n    else if n==40\n    then return true\n    else if n==41\n\
    \    then return true\n    else if n==42\n    then return ", "    if n<4\n   \
    \     return false\n    else if n%2==0\n        return false\n    else if n%3==0\n\
    \        return false\n    else if n%4==0\n        return true\n    else\n   \
    \     return is_equal_to_sum_even(ceil(n/4))\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_", "    if is_equal_to_sum_even(n-1)\n        return\
    \ true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.4>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3) == true\n\
    @assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false", "    if n==0\n        true\n    else\n        if n%2==0\n       \
    \     false\n        else\n            if n%3==0\n                false\n    \
    \        else\n                if n%4==0\n                    true\n         \
    \       else\n                    false\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nis_equal_to_sum_even(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that evaluates whether a given number n is equal to the\
    \ sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\ntrue\n>>>\
    \ is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(12)\ntrue\n>>> is_equal_to_sum_odd(14)\n\
    false\n>>> is_equal_to_sum_odd(16)\ntrue\n>>> is_equal_to_sum_odd(18)\nfalse\n\
    >>> is_equal_to_sum_odd(20)\ntrue\n>>> is_equal_to_sum_odd(22)\nfalse\n>>> is_equal_to_sum_odd(24)\n\
    true\n>>> is_equal_to_sum_odd(26)\nfalse\n>>> is_equal_to_sum_odd(28)\ntrue\n\
    >>> is_equal_to_sum_odd(30)\nfalse\n>>> is_equal_to_sum_odd(32)\ntrue\n>>> is_equal_to_sum_odd(34)\n\
    false\n>>> is_equal_to_sum_odd(36)\ntrue\n>>> is_equal_to_sum_odd(38)\nfalse\n\
    >>> is_equal_to_sum_odd(40)\ntrue\n>>> is_equal_to_sum_odd(42)\nfalse\n>>> is_equal_to_sum_odd(44)\n\
    true\n>>> is_equal_to_sum_odd(46)\nfalse\n>>> is_equal_to_sum_odd(48)\ntrue\n\
    >>> is_equal_to_sum_odd(50)\nfalse\n>>> is_equal_to_sum_odd(52)\ntrue\n>>> is_equal_to_sum_odd(54)\n\
    false\n>>> is_equal_to_sum_odd(56)\ntrue\n>>> is_equal_to_sum_odd(58)\nfalse\n\
    >>> is_equal_to_sum_odd(60)\ntrue\n>>> is_equal_to_sum_odd(62)\nfalse\n>>> is_equal_to_sum_odd(64)\n\
    true\n>>> is_equal_to_sum_odd(66)\nfalse\n>>> is_equal_to_sum_odd(68)\ntrue\n\
    >>> is_equal_to_sum_odd(70)\nfalse\n>>> is_equal_to_sum_odd(72)\ntrue\n>>> is_equal_to_sum_odd(",
  "    if n == 0 \n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n\"\"\"\n    Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\n    end\nend", "    if n==0\n    then return\
    \ true\n    else if n==1\n    then return true\n    else if n==2\n    then return\
    \ true\n    else if n==3\n    then return true\n    else if n==4\n    then return\
    \ true\n    else if n==5\n    then return true\n    else if n==6\n    then return\
    \ true\n    else if n==7\n    then return true\n    else if n==8\n    then return\
    \ true\n    else if n==9\n    then return true\n    else if n==10\n    then return\
    \ true\n    else if n==11\n    then return true\n    else if n==12\n    then return\
    \ true\n    else if n==13\n    then return true\n    else if n==14\n    then return\
    \ true\n    else if n==15\n    then return true\n    else if n==16\n    then return\
    \ true\n    else if n==17\n    then return true\n    else if n==18\n    then return\
    \ true\n    else if n==19\n    then return true\n    else if n==20\n    then return\
    \ true\n    else if n==21\n    then return true\n    else if n==22\n    then return\
    \ true\n    else if n==23\n    then return true\n    else if n==24\n    then return\
    \ true\n    else if n==25\n    then return true\n    else if n==26\n    then return\
    \ true\n    else if n==27\n    then return true\n    else if n==28\n    then return\
    \ true\n    else if n==29\n    then return true\n    else if n==30\n    then return\
    \ true\n    else if n==31\n    then return true\n    else if n==32\n    then return\
    \ true\n    else if n==33\n    then return true\n    else if n==34\n    then return\
    \ true\n    else if n==35\n    then return true\n    else if n==36\n    then return\
    \ true\n    else if n==37\n    then return true\n    else if n==38\n    then return\
    \ true\n    else if n==39\n    then return true\n    else if n==40\n    then return\
    \ true\n    else if n==41\n    then return true\n    else if n==42\n    then return ",
  "    if is_sum_even(n) == true\n    else false\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"", "    if n == 0 \n        true\n\
    \    else if n % 2 == 0 \n        false\n    else if n % 4 == 0 \n        true\n\
    \    else \n        is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks whether a given number n is a multiple of another number\
    \ m. \nExample\n>>> is_multiple_of(5, 3)\ntrue\n>>> is_multiple_of(5, 4)\nfalse\n\
    >>> is_multiple_of(5, 5)\ntrue\n>>> is_multiple_of(5, 6)\nfalse\n>>> is_multiple_of(5,\
    \ 7)\nfalse\n>>> is_multiple_of(5, 8)\nfalse\n>>> is_multiple_of(5, 9)\nfalse\n\
    >>> is_multiple_of(5, 10)\nfalse\n>>> is_multiple_of(5, 11)\nfalse\n>>> is_multiple_of(5,\
    \ 12)\nfalse\n>>> is_multiple_of(5, 13)\nfalse\n>>> is_multiple_of(5, 14)\nfalse\n\
    >>> is_multiple_of(5, 15)\nfalse\n>>> is_multiple_of(5, 16)\nfalse\n>>> is_multiple_of(5,\
    \ 17)\nfalse\n>>> is_multiple_of(5, 18)\nfalse\n>>> is_multiple_of(5, 19)\nfalse\n\
    >>> is_multiple_of(5, 20)\nfalse\n>>> is_multiple_of(5, 21)\nfalse\n>>> is_multiple_of(5,\
    \ 22)\nfalse\n>>> is_multiple_of(5, 23)\nfalse\n>>> is_multiple_of(5, 24)\nfalse\n\
    >>> is_multiple_of(5, 25)\nfalse\n>>> is_multiple_of(5, 26)\nfalse\n>>> is_multiple_of(5,\
    \ 27)\nfalse\n>>> is_multiple_of(5, 28)\nfalse\n>>> is_multiple_of(5, 29)\nfalse\n\
    >>> is_multiple_of(5, 30)\nfalse\n>>> is_multiple_of(5, 31)\nfalse\n>>> is_multiple_of(5,\
    \ 32)\nfalse\n>>> is_multiple_of(5, 33)\nfalse\n>>> is_multiple_of(5, 34)\nfalse\n\
    >>> is_multiple_of(5, 35)\nfalse\n>>> is_multiple_of(5, 36)\nfalse\n>>> is_multiple_of(5,\
    \ 37)\nfalse\n>>> is_multiple_of(5, 38)\nfalse\n>>> is_multiple_of(5, 39)\nfalse\n\
    >>> is_multiple_of(5, 40)\nfalse\n>>> is_multiple_of(5, 41)\nfalse\n>>> is_multiple_of(5,\
    \ 42)\nfalse\n>>> is_multiple_of(5, 43)\nfalse\n>>> is_multiple_of(5, 44)\nfalse\n\
    >>> is_multiple_of(5, 45", "    if is_sum_even(n) == true\n    else \n       \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == false\n@assert is_equal_to_sum_even(53) == true\n@assert is_", "    if n==0\n\
    \        true\n    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))||((n%2!=0)&&(n%4==0))\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_even(n)\
    \ == true\n    else \n        false\nend", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.3>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(53) == true", "    if n <= 0\n       \
    \ error(\"n must be positive\")\n    else if n % 2 == 0\n        error(\"n must\
    \ be even\")\n    else if n <= 4\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_", "    if is_sum_even(n) == true\n    else\
    \ \n        return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks whether a given number n is divisible by 3\nExample\n>>>\
    \ is_divisible_by_3(3)\ntrue\n>>> is_divisible_by_3(4)\nfalse\n>>> is_divisible_by_3(5)\n\
    false\n>>> is_divisible_by_3(6)\ntrue\n>>> is_divisible_by_3(7)\nfalse\n>>> is_divisible_by_3(8)\n\
    false\n>>> is_divisible_by_3(9)\ntrue\n>>> is_divisible_by_3(10)\nfalse\n>>> is_divisible_by_3(11)\n\
    false\n>>> is_divisible_by_3(12)\ntrue\n>>> is_divisible_by_3(13)\nfalse\n>>>\
    \ is_divisible_by_3(14)\nfalse\n>>> is_divisible_by_3(15)\ntrue\n>>> is_divisible_by_3(16)\n\
    false\n>>> is_divisible_by_3(17)\nfalse\n>>> is_divisible_by_3(18)\nfalse\n>>>\
    \ is_divisible_by_3(19)\nfalse\n>>> is_divisible_by_3(20)\nfalse\n>>> is_divisible_by_3(21)\n\
    false\n>>> is_divisible_by_3(22)\nfalse\n>>> is_divisible_by_3(23)\nfalse\n>>>\
    \ is_divisible_by_3(24)\nfalse\n>>> is_divisible_by_3(25)\nfalse\n>>> is_divisible_by_3(26)\n\
    false\n>>> is_divisible_by_3(27)\nfalse\n>>> is_divisible_by_3(28)\nfalse\n>>>\
    \ is_divisible_by_3(29)\nfalse\n>>> is_divisible_by_3(30)\nfalse\n>>> is_divisible_by_3(31)\n\
    false\n>>> is_divisible_by_3(32)\nfalse\n>>> is_divisible_by_3(33)\nfalse\n>>>\
    \ is_divisible_by_3(34)\nfalse\n>>> is_divisible_by_3(35)\nfalse\n>>> is_divisible_by_3(36)\n\
    false\n>>> is_divisible_by_3(37)\nfalse\n>>> is_divisible_by_3(38)\nfalse\n>>>\
    \ is_divisible_by_3(39)\nfalse\n>>> is_divisible_by_3(40)\nfalse\n>>> is_divisible_by_3(41)\n\
    false\n>>> is_divisible_by_3(42)\nfalse\n>>> is_divisible_by_3(43)\nfalse\n>>>\
    \ is_divisible_by_3(44)\nfalse\n>>> is_divisible_by_3(45)\nfalse\n>>> is_divisible_by_3(46)\n\
    false\n>>> is_divisible_by_3(47)\nfalse\n>>> ", "    if n == 0 \n        true\n\
    \    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1)\nend", "    if n\
    \ == 0 \n        true\n    else if n % 2 == 0 \n        is_equal_to_sum_even(n\
    \ - 1)\n    else if n % 2 == 1 \n        is_equal_to_sum_even(n - 2)\n    else\
    \ if n % 2 == 3 \n        is_equal_to_sum_even(n - 4)\n    else if n % 2 == 5\
    \ \n        is_equal_to_sum_even(n - 6)\n    else \n        false\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks whether a given number\
    \ n is divisible by any number between 1 and 100. \nExample\n>>> is_divisible_any(3)\n\
    false\n>>> is_divisible_any(4)\ntrue\n>>> is_divisible_any(5)\nfalse\n>>> is_divisible_any(100)\n\
    true\n>>> is_divisible_any(101)\nfalse\n>>> is_divisible_any(102)\ntrue\n>>> is_divisible_any(103)\n\
    false\n>>> is_divisible_any(104)\ntrue\n>>> is_divisible_any(105)\nfalse\n>>>\
    \ is_divisible_any(106)\ntrue\n>>> is_divisible_any(107)\nfalse\n>>> is_divisible_any(108)\n\
    true\n>>> is_divisible_any(109)\nfalse\n>>> is_divisible_any(110)\ntrue\n>>> is_divisible_any(111)\n\
    false\n>>> is_divisible_any(112)\ntrue\n>>> is_divisible_any(113)\nfalse\n>>>\
    \ is_divisible_any(114)\ntrue\n>>> is_divisible_any(115)\nfalse\n>>> is_divisible_any(116)\n\
    true\n>>> is_divisible_any(117)\nfalse\n>>> is_divisible_any(118)\ntrue\n>>> is_divisible_any(119)\n\
    false\n>>> is_divisible_any(120)\ntrue\n>>> is_divisible_any(121)\nfalse\n>>>\
    \ is_divisible_any(122)\ntrue\n>>> is_divisible_any(123)\nfalse\n>>> is_divisible_any(124)\n\
    true\n>>> is_divisible_any(125)\nfalse\n>>> is_divisible_any(126)\ntrue\n>>> is_divisible_any(127)\n\
    false\n>>> is_divisible_any(128)\ntrue\n>>> is_divisible_any(129)\nfalse\n>>>\
    \ is_divisible_any(130)\ntrue\n>>> is_divisible_any(131)\nfalse\n>>> is_divisible_any(132)\n\
    true\n>>> is_divisible_any(133)", "    if n == 0 || n == 1 \n        then true\n\
    \    else if n % 2 == 0 \n        then is_equal_to_sum_even(n - 1) \n        else\
    \ false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ whether a given number n is divisible by 3 or 7. \nExample\n>>> is_divisible_by_3_or_7(8)\n\
    false\n>>> is_divisible_by_3_or_7(9)\ntrue\n>>> is_divisible_by_3_or_7(10)\nfalse\n\
    >>> is_divisible_by_3_or_7(11)\ntrue\n>>> is_divisible_by_3_or_7(12)\nfalse\n\
    >>> is_divisible_by_3_or_7(13)\ntrue\n>>> is_divisible_by_3_or_7(14)\nfalse\n\
    >>> is_divisible_by_3_or_7(15)\ntrue\n>>> is_divisible_by_3_or_7(16)\nfalse\n\
    >>> is_divisible_by_3_or_7(17)\ntrue\n>>> is_divisible_by_3_or_7(18)\nfalse\n\
    >>> is_divisible_by_3_or_7(19)\ntrue\n>>> is_divisible_by_3_or_7(20)\nfalse\n\
    >>> is_divisible_by_3_or_7(21)\ntrue\n>>> is_divisible_by_3_or_7(22)\nfalse\n\
    >>> is_divisible_by_3_or_7(23)\ntrue\n>>> is_divisible_by_3_or_7(24)\nfalse\n\
    >>> is_divisible_by_3_or_7(25)\ntrue\n>>> is_divisible_by_3_or_7(26)\nfalse\n\
    >>> is_divisible_by_3_or_7(27)\ntrue\n>>> is_divisible_by_3_or_7(28)\nfalse\n\
    >>> is_divisible_by_3_or_7(29)\ntrue\n>>> is_divisible_by_3_or_7(30)\nfalse\n\
    >>> is_divisible_by_3_or_7(31)\ntrue\n>>> is_divisible_by_3_or_7(32)\nfalse\n\
    >>> is_divisible_by_3_or_7(33)\ntrue\n>>> is_divisible_by_3_or_7(34)\nfalse\n\
    >>> is_divisible_by_3_or_7(35)\ntrue\n>>> is_divisible_by_3_or_7(36)\nfalse\n\
    >>> is_divisible_by_3_or_7(37)\ntrue\n>>> is_divisible_by_3_or_7(38)\nfalse\n\
    >>> is_divisible_by_3_or_7(39)\ntrue\n>>> is_divisible_by_3_or_7(40)\nfalse\n\
    >>> is_divisible_by_3_or_", "    if is_sum_even(n) == true\n    else \n      \
    \  return false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_", "    if n==0\
    \ \n    then return true\n    else if n==1 \n    then return true\n    else if\
    \ n==2 \n    then return true\n    else if n==3 \n    then return true\n    else\
    \ if n==4 \n    then return true\n    else if n==5 \n    then return true\n  \
    \  else if n==6 \n    then return true\n    else if n==7 \n    then return true\n\
    \    else if n==8 \n    then return true\n    else if n==9 \n    then return true\n\
    \    else return false\n    end\nend\n\"\"\"\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n\"\"\"\n    Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even(n-1)\
    \ == true && n % 2 == 0 && is_equal_to_sum_even(n / 2) == true && is_equal_to_sum_even(n\
    \ / 2) == true && is_equal_to_sum_even(n / 2) == true && is_equal_to_sum_even(n\
    \ / 2) == true\n    else \n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns true if the given number n is equal to the sum of\
    \ exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n\
    >>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\ntrue\n>>> is_equal_to_sum_odd(10)\n\
    false\n>>> is_equal_to_sum_odd(11)\ntrue\n>>> is_equal_to_sum_odd(12)\nfalse\n\
    >>> is_equal_to_sum_odd(13)\ntrue\n>>> is_equal_to_sum_odd(14)\nfalse\n>>> is_equal_to_sum_odd(15)\n\
    true\n>>> is_equal_to_sum_odd(16)\nfalse\n>>> is_equal_to_sum_odd(17)\ntrue\n\
    >>> is_equal_to_sum_odd(18)\nfalse\n>>> is_equal_to_sum_odd(19)\ntrue\n>>> is_equal_to_sum_odd(20)\n\
    false\n>>> is_equal_to_sum_odd(21)\ntrue\n>>> is_equal_to_sum_odd(22)\nfalse\n\
    >>> is_equal_to_sum_odd(23)\ntrue\n>>> is_equal_to_sum_odd(24)\nfalse\n>>> is_equal_to_sum_odd(25)\n\
    true\n>>> is_equal_to_sum_odd(26)\nfalse\n>>> is_equal_to_sum_odd(27)\ntrue\n\
    >>> is_equal_to_sum_odd(28)\nfalse\n>>> is_equal_to_sum_odd(29)\ntrue\n>>> is_equal_to_sum_odd(30)\n\
    false\n>>> is_equal_to_sum_odd(31)\ntrue\n>>> is_equal_to_sum_odd(32)\nfalse\n\
    >>> is_equal_to_sum_odd(33)\ntrue\n>>> is_equal_to_sum_odd(34)\nfalse\n>>> is_equal_to_sum_odd(35)\n\
    true\n>>> is_equal_to_sum_odd(36)\nfalse\n>>> is_equal_to_sum_odd(37)\ntrue\n\
    >>> is_equal_to_sum_odd(38)\nfalse\n>>> is_equal_to_sum_odd(39)\ntrue\n>>> is_equal_to_sum_odd(40)\n\
    false\n>>> is_equal_to_sum_odd(41)\n", "    if n<4 return false\n    else if n%2==0\
    \ return false\n    else if n%3==0 return false\n    else if n%4==0 return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 ", "    if is_sum_even(n) == true\n    else false\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a function that checks whether a given number n is equal\
    \ to the sum of exactly 4 positive odd numbers.", "    if is_equal_to_sum_even(n-1)\
    \ == true\n        return true\n    else \n        return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns true if the given number n is\
    \ divisible by 4.", "    if n==0 then return true\n    else if n==1 then return\
    \ true\n    else if n==2 then return true\n    else if n==3 then return true\n\
    \    else if n==4 then return true\n    else if n==5 then return true\n    else\
    \ if n==6 then return true\n    else if n==7 then return true\n    else if n==8\
    \ then return true\n    else if n==9 then return true\n    else return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n\
    @assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == true\n@", "    if n == 0 \n  \
    \      true\n    else if n % 2 == 0 \n        false\n    else if n < 0 \n    \
    \    false\n    else if n % 4 == 0 \n        true\n    else if n % 8 == 0 \n \
    \       true\n    else if n % 16 == 0 \n        true\n    else if n % 32 == 0\
    \ \n        true\n    else if n % 64 == 0 \n        true\n    else if n % 128\
    \ == 0 \n        true\n    else if n % 256 == 0 \n        true\n    else if n\
    \ % 512 == 0 \n        true\n    else if n % 1024 == 0 \n        true\n    else\
    \ if n % 2048 == 0 \n        true\n    else if n % 4096 == 0 \n        true\n\
    \    else if n % 8192 == 0 \n        true\n    else if n % 16384 == 0 \n     \
    \   true\n    else if n % 32768 == 0 \n        true\n    else if n % 65536 ==\
    \ 0 \n        true\n    else if n % 131072 == 0 \n        true\n    else if n\
    \ % 262144 == 0 \n        true\n    else if n % 524288 == 0 \n        true\n \
    \   else if n % 1048576 == 0 \n        true\n    else if n % 2097152 == 0 \n \
    \       true\n    else if n % 4194304 == 0 \n        true\n    else if n % 8388608\
    \ == 0 \n        true\n    else if n % 16777216 == 0 \n        true\n    else\
    \ if n % 33554432 == 0 \n        true\n    else if n % 67108864 == 0 \n      \
    \  true\n    else if n % 134217728 == 0 \n        true\n    else if n % 268435456\
    \ == 0 \n        true\n    else if n % 536870912 == 0 \n        true\n    else\
    \ if n % 1073741824 == 0 \n        true\n    else if n % 2147483648 == 0 \n  \
    \      true\n    else if n % 4294967296 == 0 \n        true\n    else if n % 8589934592\
    \ == 0 \n        true\n    else if n % 17179869184 == 0 \n        true\n    else\
    \ if n % 34359738368 == 0 \n        true\n    else if n % 68719476736 == 0 \n\
    \        true\n    else if n % 137438953472 == 0 \n        true\n    else if n\
    \ % 274877906944 == 0 \n        true\n    else if n % 549755813888", "    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%5==0 return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\n    end\nend", "    if n == 0 \n        true\n    else\
    \ if n % 2 == 0 \n        false\n    else if n < 0 \n        false\n    else if\
    \ n < 4 \n        true\n    else \n        is_equal_to_sum_even(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks whether a given number\
    \ n is equal to the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\
    \"\"", "    if is_sum_of_4_even(n) == true\n    else \n        return false\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns true if the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\nExample\n\
    >>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    false\n\"\"\"", "    if is_equal_to_sum_even(n-1) == true && n % 2 == 0\n    else\
    \ false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(9) == false\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(51) == ", "    if n < 4 \n        then\
    \ false\n    else if n % 2 == 0 \n        then is_equal_to_sum_even(n - 2)\n \
    \       else true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_even(n)\
    \ == true\n        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == false\n@assert is_", "    if is_equal_to_sum_even_helper(n) == true\n   \
    \ else return false\nend", "    if is_sum_even(n) == true\n    else \n       \
    \ false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 ", "    if is_equal_to_sum_even_helper(n,4)\n    else \n       \
    \ false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3)\
    \ == false\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false", "    if is_sum_of_4_even(n)\
    \ == true\n    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15) ==\
    \ true\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == true\n@assert is_equal_to_sum_even(120) == true\n@assert is_equal_to_sum_even(121)\
    \ == true\n@assert is_equal_to_sum_even(122) == true\n@assert is_equal_to_sum_even(123",
  "    if is_sum_of_even(n) == true\n    else \n        return false\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_sum_even(n) == true\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.4>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nProblem 3\nWrite a function that returns true if the\
    \ given number n is equal to the sum of exactly 4 positive odd numbers.", "  \
    \  if is_equal_to_sum_even_helper(n,4)\n    else \n        false\nend\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype is_equal_to_sum_even(8)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype is_equal_to_sum_even(10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype is_equal_to_sum_even(20)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns true if the given number n is equal to\
    \ the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    true\n>>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\nfalse\n>>>\
    \ is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(20)\ntrue\n\"\"\"",
  "    if n==0\n    then return true\n    else if n==1\n    then return false\n  \
    \  else if n==2\n    then return true\n    else if n==3\n    then return true\n\
    \    else if n==4\n    then return true\n    else if n==5\n    then return true\n\
    \    else if n==6\n    then return true\n    else if n==7\n    then return true\n\
    \    else if n==8\n    then return true\n    else if n==9\n    then return true\n\
    \    else if n==10\n    then return true\n    else if n==11\n    then return true\n\
    \    else if n==12\n    then return true\n    else if n==13\n    then return true\n\
    \    else if n==14\n    then return true\n    else if n==15\n    then return true\n\
    \    else if n==16\n    then return true\n    else if n==17\n    then return true\n\
    \    else if n==18\n    then return true\n    else if n==19\n    then return true\n\
    \    else if n==20\n    then return true\n    else if n==21\n    then return true\n\
    \    else if n==22\n    then return true\n    else if n==23\n    then return true\n\
    \    else if n==24\n    then return true\n    else if n==25\n    then return true\n\
    \    else if n==26\n    then return true\n    else if n==27\n    then return true\n\
    \    else if n==28\n    then return true\n    else if n==29\n    then return true\n\
    \    else if n==30\n    then return true\n    else if n==31\n    then return true\n\
    \    else if n==32\n    then return true\n    else if n==33\n    then return true\n\
    \    else if n==34\n    then return true\n    else if n==35\n    then return true\n\
    \    else if n==36\n    then return true\n    else if n==37\n    then return true\n\
    \    else if n==38\n    then return true\n    else if n==39\n    then return true\n\
    \    else if n==40\n    then return true\n    else if n==41\n    then return true\n\
    \    else if n==42\n    then return ", "    if n <= 0\n    then return false\n\
    \    else if n == 1\n    then return true\n    else if n % 2 == 0\n    then return\
    \ false\n    else if n % 4 == 0\n    then return true\n    else return is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 ", "    if is_equal_to_sum_even_helper(n) == true\n    else return\
    \ false\nend\n</cell>\n<code language=julia-1.5>", "    if is_equal_to_sum_even(n-1)\
    \ == true && n % 2 == 0 && is_equal_to_sum_even(n / 2) == true\n    else false\n\
    end", "    if is_equal_to_sum_even_helper(n,4)\n    else \n        false\nend",
  "    if is_sum_of_4_even(n) == true\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if is_equal_to_sum_even_helper(n,4,0)\n    else \n\
    \        false\n    end\nend", "    if n==0 then return true\n    else if n==1\
    \ then return false\n    else if n==2 then return true\n    else if n==3 then\
    \ return true\n    else if n==4 then return true\n    else if n==5 then return\
    \ true\n    else if n==6 then return true\n    else if n==7 then return true\n\
    \    else if n==8 then return true\n    else if n==9 then return true\n    else\
    \ if n==10 then return true\n    else if n==11 then return true\n    else if n==12\
    \ then return true\n    else if n==13 then return true\n    else if n==14 then\
    \ return true\n    else if n==15 then return true\n    else if n==16 then return\
    \ true\n    else if n==17 then return true\n    else if n==18 then return true\n\
    \    else if n==19 then return true\n    else if n==20 then return true\n    else\
    \ if n==21 then return true\n    else if n==22 then return true\n    else if n==23\
    \ then return true\n    else if n==24 then return true\n    else if n==25 then\
    \ return true\n    else if n==26 then return true\n    else if n==27 then return\
    \ true\n    else if n==28 then return true\n    else if n==29 then return true\n\
    \    else if n==30 then return true\n    else if n==31 then return true\n    else\
    \ if n==32 then return true\n    else if n==33 then return true\n    else if n==34\
    \ then return true\n    else if n==35 then return true\n    else if n==36 then\
    \ return true\n    else if n==37 then return true\n    else if n==38 then return\
    \ true\n    else if n==39 then return true\n    else if n==40 then return true\n\
    \    else if n==41 then return true\n    else if n==42 then return true\n    else\
    \ if n==43 then return true\n    else if n==44 then return true\n    else if n==45\
    \ then return true\n    else if n==46 then return true\n    else if n==47 then\
    \ return true\n    else if n==48 then return true\n    else if n==49 then return\
    \ true\n    else if n", "    if is_equal_to_sum_even_helper(n,4)\n    else \n\
    \        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(120)\
    \ == true\n@assert is_equal_to_sum_even(125) == true\n@assert is_equal_to_sum_even(130)\
    \ == true\n@assert is_equal_to_sum_even(135) == true\n@assert is_equal_to_sum_even(140)\
    \ == true\n@assert is_equal_to_sum_even(145) == true\n@assert is_equal_to_sum_even(150)\
    \ == true\n@assert is_equal_to_sum_even(155) == true\n@assert is_equal_to_sum_even(160)\
    \ == true\n@assert is_equal_to_sum_even(165) == true\n@assert is_equal_to_sum_even(170)\
    \ == true\n@assert is_equal_to_sum_even(175) == true\n@assert is_equal_to_sum_even(180)\
    \ == true\n@assert is_equal_to_sum_even(185) == true\n@assert is_equal_to_sum_even(190)\
    \ == true\n@assert is_equal_to_sum_even(195) == true\n@assert is_equal_to_sum_even(200)\
    \ == true\n@assert is_equal_to_sum_even(205) == true\n@assert is_equal_to_sum_even(210)\
    \ == true\n@assert is_equal_to_sum_even(215) == true", "    if n==0\n        true\n\
    \    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n    else \n\
    \        false\nend\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(6)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(8)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns true if the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\
    \"", "    if is_sum_even(n) == true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert is_equal_", "    if is_equal_to_sum_even_helper(n,4)\n    else\
    \ \n        false\nend\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(8)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks whether a given number\
    \ n is divisible by any number between 1 and 10", "    if is_sum_even(n) == true\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(53) == true\n@assert is_", "    if is_sum_even(n)\
    \ == true\n    else \n        false\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"", "    if n<4 then return false\n\
    \    else if n==4 then return true\n    else if n%2==0 then return false\n   \
    \ else if n%2==1 then return true\n    else if n%3==0 then return false\n    else\
    \ if n%3==1 then return true\n    else if n%5==0 then return false\n    else if\
    \ n%5==1 then return true\n    else if n%7==0 then return false\n    else if n%7==1\
    \ then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    false\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"", "    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\n\"\"\"\n    Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n ==\
    \ 0 \n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 2)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n<4\n\
    \        return false\n    else if n%2==0\n        return false\n    else if n%3==0\n\
    \        return false\n    else if n%5==0\n        return false\n    else\n  \
    \      return true\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks whether a given number n is prime or not. \n\
    A prime number is a natural number greater than 1 that has no positive divisors\
    \ other than 1 and itself. \nThe number 1 is considered a prime number.", "  \
    \  if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n    \
    \    true\n    else\n        sum_even = sum_of_all_evens(n)\n        sum_of_all_evens(n)\n\
    \        sum_of_all_evens(n-1)\n        sum_of_all_evens(n-2)\n        sum_of_all_evens(n-3)\n\
    \        sum_of_all_evens(n-4)\n        sum_of_all_evens(n-5)\n        sum_of_all_evens(n-6)\n\
    \        sum_of_all_evens(n-7)\n        sum_of_all_evens(n-8)\n        sum_of_all_evens(n-9)\n\
    \        sum_of_all_evens(n-10)\n        sum_of_all_evens(n-11)\n        sum_of_all_evens(n-12)\n\
    \        sum_of_all_evens(n-13)\n        sum_of_all_evens(n-14)\n        sum_of_all_evens(n-15)\n\
    \        sum_of_all_evens(n-16)\n        sum_of_all_evens(n-17)\n        sum_of_all_evens(n-18)\n\
    \        sum_of_all_evens(n-19)\n        sum_of_all_evens(n-20)\n        sum_of_all_evens(n-21)\n\
    \        sum_of_all_evens(n-22)\n        sum_of_all_evens(n-23)\n        sum_of_all_evens(n-24)\n\
    \        sum_of_all_evens(n-25)\n        sum_of_all_evens(n-26)\n        sum_of_all_evens(n-27)\n\
    \        sum_of_all_evens(n-28)\n        sum_of_all_evens(n-29)\n        sum_of_all_evens(n-30)\n\
    \        sum_of_all_evens(n-31)\n        sum_of_all_evens(n-32)\n        sum_of_all_evens(n-33)\n\
    \        sum_of_all_evens(n-34)\n        sum_of_all_evens(n-35)\n        sum_of_all_evens(n-36)\n\
    \        sum_of_all_evens(n-37)\n        sum_of_all_evens(n-38)\n        sum_of_all_evens(n-39)\n\
    \        sum_of_all_evens(n-40)\n        sum_of_all_evens(n-41)\n        sum_of_all_evens(n-42)\n\
    \        sum_of_all_evens(n-43)\n        sum_of_all_evens(n-44)\n        sum_of_all_evens(n-45)\n\
    \        sum_of_all_evens(n-46)\n        sum_of_all_evens(n-47)\n        sum_of_all_evens(n-48)\n\
    \        sum_of_all_evens(n-49)\n        sum_of_", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == false\n@assert is_equal_to_sum_even(51)\
    \ == false\n@assert is_equal_to_sum_even(52) == false\n@assert is_equal_to_sum_even(53",
  "    if n==0 \n        true\n    else if n==1 \n        true\n    else if n==2 \n\
    \        true\n    else if n==3 \n        true\n    else if n==4 \n        true\n\
    \    else if n==5 \n        true\n    else if n==6 \n        true\n    else if\
    \ n==7 \n        true\n    else if n==8 \n        true\n    else if n==9 \n  \
    \      true\n    else if n==10 \n        true\n    else if n==11 \n        true\n\
    \    else if n==12 \n        true\n    else if n==13 \n        true\n    else\
    \ if n==14 \n        true\n    else if n==15 \n        true\n    else if n==16\
    \ \n        true\n    else if n==17 \n        true\n    else if n==18 \n     \
    \   true\n    else if n==19 \n        true\n    else if n==20 \n        true\n\
    \    else if n==21 \n        true\n    else if n==22 \n        true\n    else\
    \ if n==23 \n        true\n    else if n==24 \n        true\n    else if n==25\
    \ \n        true\n    else if n==26 \n        true\n    else if n==27 \n     \
    \   true\n    else if n==28 \n        true\n    else if n==29 \n        true\n\
    \    else if n==30 \n        true\n    else if n==31 \n        true\n    else\
    \ if n==32 \n        true\n    else if n==33 \n        true\n    else if n==34\
    \ \n        true\n    else if n==35 \n        true\n    else if n==36 \n     \
    \   true\n    else if n==37 \n        true\n    else if n==38 \n        true\n\
    \    else if n==39 \n        true\n    else if n==40 \n        true\n    else\
    \ if n==41 \n        true\n    else if n==42 \n        true\n    else if n==43\
    \ \n        true\n    else if n==44 \n        true\n    else if n==45 \n     \
    \   true\n    else if n==46 \n        true\n    else if n==47 \n        true\n\
    \    else if n==48 \n        true\n    else if n==49 \n        true\n    else\
    \ if n", "    if n<4 then return false\n    else if n%2==0 then return false\n\
    \    else if n%3==0 then return false\n    else if n%5==0 then return false\n\
    \    else return true\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(3) == false\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks whether a given number n is equal to the sum\
    \ of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n\
    >>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"",
  "    if is_equal_to_sum_even(n-1)\n        return true\n    else\n        return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10)\n</cell>\n\
    <code language=julia-1.5>\nis_equal_to_sum_even(11)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(12)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(13)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(14)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(15)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(16)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(17)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(18)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(19)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(20)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(21)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(22)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(23)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(24)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(25)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(26)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(27)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(28)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(29)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(30)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(31)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(32)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(33)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(34)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(35)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(36)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(37)\n\
    </cell>\n<code language=juli", "    if is_sum_even(n) == true\n    else \n   \
    \     return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ whether a given number n is equal to the sum of exactly 4 positive odd numbers\n\
    Example\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n\
    >>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"", "    if n==0 then return true\n   \
    \ else if n==1 then return false\n    else if n==2 then return true\n    else\
    \ if n==3 then return true\n    else if n==4 then return true\n    else if n==5\
    \ then return true\n    else if n==6 then return true\n    else if n==7 then return\
    \ true\n    else if n==8 then return true\n    else if n==9 then return true\n\
    \    else if n==10 then return true\n    else if n==11 then return true\n    else\
    \ if n==12 then return true\n    else if n==13 then return true\n    else if n==14\
    \ then return true\n    else if n==15 then return true\n    else if n==16 then\
    \ return true\n    else if n==17 then return true\n    else if n==18 then return\
    \ true\n    else if n==19 then return true\n    else if n==20 then return true\n\
    \    else if n==21 then return true\n    else if n==22 then return true\n    else\
    \ if n==23 then return true\n    else if n==24 then return true\n    else if n==25\
    \ then return true\n    else if n==26 then return true\n    else if n==27 then\
    \ return true\n    else if n==28 then return true\n    else if n==29 then return\
    \ true\n    else if n==30 then return true\n    else if n==31 then return true\n\
    \    else if n==32 then return true\n    else if n==33 then return true\n    else\
    \ if n==34 then return true\n    else if n==35 then return true\n    else if n==36\
    \ then return true\n    else if n==37 then return true\n    else if n==38 then\
    \ return true\n    else if n==39 then return true\n    else if n==40 then return\
    \ true\n    else if n==41 then return true\n    else if n==42 then return true\n\
    \    else if n==43 then return true\n    else if n==44 then return true\n    else\
    \ if n==45 then return true\n    else if n==46 then return true\n    else if n==47\
    \ then return true\n    else if n==48 then return true\n    else if n==49 then\
    \ return true\n    else if n", "    if n==0 then return true\n    else if n==1\
    \ then return true\n    else if n==2 then return true\n    else if n==3 then return\
    \ true\n    else if n==4 then return true\n    else if n==5 then return true\n\
    \    else if n==6 then return true\n    else if n==7 then return true\n    else\
    \ if n==8 then return true\n    else if n==9 then return true\n    else if n==10\
    \ then return true\n    else if n==11 then return true\n    else if n==12 then\
    \ return true\n    else if n==13 then return true\n    else if n==14 then return\
    \ true\n    else if n==15 then return true\n    else if n==16 then return true\n\
    \    else if n==17 then return true\n    else if n==18 then return true\n    else\
    \ if n==19 then return true\n    else if n==20 then return true\n    else if n==21\
    \ then return true\n    else if n==22 then return true\n    else if n==23 then\
    \ return true\n    else if n==24 then return true\n    else if n==25 then return\
    \ true\n    else if n==26 then return true\n    else if n==27 then return true\n\
    \    else if n==28 then return true\n    else if n==29 then return true\n    else\
    \ if n==30 then return true\n    else if n==31 then return true\n    else if n==32\
    \ then return true\n    else if n==33 then return true\n    else if n==34 then\
    \ return true\n    else if n==35 then return true\n    else if n==36 then return\
    \ true\n    else if n==37 then return true\n    else if n==38 then return true\n\
    \    else if n==39 then return true\n    else if n==40 then return true\n    else\
    \ if n==41 then return true\n    else if n==42 then return true\n    else if n==43\
    \ then return true\n    else if n==44 then return true\n    else if n==45 then\
    \ return true\n    else if n==46 then return true\n    else if n==47 then return\
    \ true\n    else if n==48 then return true\n    else if n==49 then return true\n\
    \    else if n", "    if n==0\n    then return true\n    else if n==1\n    then\
    \ return true\n    else if n==2\n    then return true\n    else if n==3\n    then\
    \ return true\n    else if n==4\n    then return true\n    else if n==5\n    then\
    \ return true\n    else if n==6\n    then return true\n    else if n==7\n    then\
    \ return true\n    else if n==8\n    then return true\n    else if n==9\n    then\
    \ return true\n    else if n==10\n    then return true\n    else if n==11\n  \
    \  then return true\n    else if n==12\n    then return true\n    else if n==13\n\
    \    then return true\n    else if n==14\n    then return true\n    else if n==15\n\
    \    then return true\n    else if n==16\n    then return true\n    else if n==17\n\
    \    then return true\n    else if n==18\n    then return true\n    else if n==19\n\
    \    then return true\n    else if n==20\n    then return true\n    else if n==21\n\
    \    then return true\n    else if n==22\n    then return true\n    else if n==23\n\
    \    then return true\n    else if n==24\n    then return true\n    else if n==25\n\
    \    then return true\n    else if n==26\n    then return true\n    else if n==27\n\
    \    then return true\n    else if n==28\n    then return true\n    else if n==29\n\
    \    then return true\n    else if n==30\n    then return true\n    else if n==31\n\
    \    then return true\n    else if n==32\n    then return true\n    else if n==33\n\
    \    then return true\n    else if n==34\n    then return true\n    else if n==35\n\
    \    then return true\n    else if n==36\n    then return true\n    else if n==37\n\
    \    then return true\n    else if n==38\n    then return true\n    else if n==39\n\
    \    then return true\n    else if n==40\n    then return true\n    else if n==41\n\
    \    then return true\n    else if n==42\n    then return ", "    if n == 0 \n\
    \        true\n    else if n % 2 == 0 \n        false\n    else if n < 0 \n  \
    \      false\n    else if n < 4 \n        true\n    else \n        is_equal_to_sum_even(n\
    \ - 4)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ true if the given number n is divisible by 3\nExample\n>>> is_divisible_by_3(3)\n\
    true\n>>> is_divisible_by_3(5)\nfalse\n>>> is_divisible_by_3(10)\nfalse\n\"\"\"",
  "    if is_equal_to_sum_even_helper(n,4)\n    else \n        false\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n@assert\
    \ is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(14) == true\n\
    @assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(18) ==\
    \ true\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(54)\
    \ == true\n@assert is_equal_to_sum_even(56) == false\n@assert is_equal_to_sum_even(58)\
    \ == true\n@assert is_equal_to_sum_even(60) == false\n@assert is_equal_to_sum_even(62)\
    \ == true\n@assert is_equal_to_sum_even(64) == true\n@assert is_equal_to_sum_even(66)\
    \ == false\n@assert is_equal_to_sum_even(68) == true\n@assert is_equal_to_sum_even(70)\
    \ == false\n@assert is_equal_to_sum_even(72) == true\n@assert is_equal_to_sum_even(74)\
    \ == true\n@assert is_equal_to_sum_even(76) == false\n@assert is_equal_to_sum_even(78)\
    \ == true\n@assert is_equal_to_sum_even(80) == false\n@assert is_equal_to_sum_even(82)\
    \ == true\n@assert is_equal_to_sum_even(84) == true\n@assert is_equal_to_sum_even(86)\
    \ == false\n@assert is_equal_to_sum_even(88) == true\n@assert is_equal_to_sum_even(90)\
    \ == false\n@assert is_equal_to_sum_even(92) == true\n@assert is_equal_to_sum_even(94)\
    \ == true\n@assert is_equal_to_sum_even(96) == false", "    if is_sum_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if n == 0 \n        true\n    else\n        n % 2\
    \ == 0 && is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_",
  "    if is_sum_of_four_even(n) == true\n    else \n        return false\nend\n</cell>\n\
    <text>\nExercise 5\nWrite a function that takes a positive integer $n$ and returns\
    \ $n$ if it is divisible by 4, and $n-1$ if it is divisible by $3$. \nExample\n\
    >>> is_divisible_by_4(5)\n5\n>>> is_divisible_by_4(10)\n4\n>>> is_divisible_by_4(15)\n\
    3\n>>> is_divisible_by_4(20)\n2\n>>> is_divisible_by_4(25)\n1\n>>> is_divisible_by_4(30)\n\
    0\n>>> is_divisible_by_4(35)\n-1\n>>> is_divisible_by_4(40)\n-2\n>>> is_divisible_by_4(45)\n\
    -3\n>>> is_divisible_by_4(50)\n-4\n>>> is_divisible_by_4(55)\n-5\n>>> is_divisible_by_4(60)\n\
    -6\n>>> is_divisible_by_4(65)\n-7\n>>> is_divisible_by_4(70)\n-8\n>>> is_divisible_by_4(75)\n\
    -9\n>>> is_divisible_by_4(80)\n-10\n>>> is_divisible_by_4(85)\n-11\n>>> is_divisible_by_4(90)\n\
    -12\n>>> is_divisible_by_4(95)\n-13\n>>> is_divisible_by_4(100)\n-14\n>>> is_divisible_by_4(105)\n\
    -15\n>>> is_divisible_by_4(110)\n-16\n>>> is_divisible_by_4(115)\n-17\n>>> is_divisible_by_4(120)\n\
    -18\n>>> is_divisible_by_4(125)\n-19\n>>> is_divisible_by_4(130)\n-20\n>>> is_divisible_by_4(135)\n\
    -21\n>>> is_divisible_by_4(140)\n-22\n>>> is_divisible_by_4(145)\n-23\n>>> is_divisible_by_4(150)\n\
    -24\n>>> is_divisible_by_4(155)\n-25\n>>> is_divisible_by_4(160)\n-26\n>>> is_divisible_by_4(165)\n\
    -27\n>>> is_divisible_by_4(170)\n-28\n>>> is_divisible_by_4(175)\n-29\n>>> is_divisible_by_4(180)\n\
    -30\n>>> is_divisible_by_4(185)\n-31\n>>> is_divisible_by_4(190)\n-32\n>>> is_divisible_by_4(195)\n\
    -33\n>>> is_divisible_by_4(200)\n-34\n>>> is_divisible_by_4(205)", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.4>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that checks whether a\
    \ given number n is equal to the sum of exactly 4 positive odd numbers\nExample\n\
    >>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\n\
    true\n\"\"\"", "    if is_equal_to_sum_even(n-1) == true\n    else \n        true\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if is_sum_of_four_even(n) == true\n    else \n   \
    \     false\nend", "    if is_equal_to_sum_even_helper(n,4)\n    else \n     \
    \   false\nend\n\"\"\"Evaluate whether the given number n can be written as the\
    \ sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if n <= 0\n    then return false\n    else if n %\
    \ 2 == 0\n    then return true\n    else if n % 4 == 0\n    then return true\n\
    \    else if n % 8 == 0\n    then return true\n    else return false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return ", "    if is_sum_even(n) == true\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) == true\n\
    @assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13) ==\
    \ true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true", "    if is_equal_to_sum_even_helper(n,4)\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.4>", "    if n==0 \n        true\n    else\
    \ if n==1 \n        true\n    else if n==2 \n        true\n    else if n==3 \n\
    \        true\n    else if n==4 \n        true\n    else if n==5 \n        true\n\
    \    else if n==6 \n        true\n    else if n==7 \n        true\n    else if\
    \ n==8 \n        true\n    else if n==9 \n        true\n    else if n==10 \n \
    \       true\n    else if n==11 \n        true\n    else if n==12 \n        true\n\
    \    else if n==13 \n        true\n    else if n==14 \n        true\n    else\
    \ if n==15 \n        true\n    else if n==16 \n        true\n    else if n==17\
    \ \n        true\n    else if n==18 \n        true\n    else if n==19 \n     \
    \   true\n    else if n==20 \n        true\n    else if n==21 \n        true\n\
    \    else if n==22 \n        true\n    else if n==23 \n        true\n    else\
    \ if n==24 \n        true\n    else if n==25 \n        true\n    else if n==26\
    \ \n        true\n    else if n==27 \n        true\n    else if n==28 \n     \
    \   true\n    else if n==29 \n        true\n    else if n==30 \n        true\n\
    \    else if n==31 \n        true\n    else if n==32 \n        true\n    else\
    \ if n==33 \n        true\n    else if n==34 \n        true\n    else if n==35\
    \ \n        true\n    else if n==36 \n        true\n    else if n==37 \n     \
    \   true\n    else if n==38 \n        true\n    else if n==39 \n        true\n\
    \    else if n==40 \n        true\n    else if n==41 \n        true\n    else\
    \ if n==42 \n        true\n    else if n==43 \n        true\n    else if n==44\
    \ \n        true\n    else if n==45 \n        true\n    else if n==46 \n     \
    \   true\n    else if n==47 \n        true\n    else if n==48 \n        true\n\
    \    else if n==49 \n        true\n    else if n", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else false\nend", "    if is_sum_even(n) == true\n    else return false\n\
    end", "    if is_equal_to_sum_even_helper(n,4)\n    else return false\nend", " \
    \   if is_sum_of_4_even(n) == true\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that returns true if\
    \ the given number n is a power of two, false otherwise.", "    if is_sum_even(n)\
    \ == true\n    else \n        false\n    end\nend", "    if is_sum_of_4_even(n)\
    \ == true\n        return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    @time is_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ determines whether a given number n is divisible by 3 or 5.", "    if is_equal_to_sum_even(n-1)\
    \ == true && n % 2 == 0\n    else false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if is_sum_even(n) == true\n    else false\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6)\
    \ == true\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks whether a given number n is equal to the sum\
    \ of exactly 4 positive odd numbers.", "    if is_sum_even(n) == true\n      \
    \  return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(5) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15) ==\
    \ false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == true\n@assert is_equal_to_sum_even(120) == true\n@assert is_equal_to_sum_even(121)\
    \ == true\n@assert is_equal_to_sum_even(122) == true\n@assert is_equal_to_sum_even(123",
  "    if is_equal_to_sum_even_helper(n,4)\n    else \n        false\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns true if the given number n is equal to the\
    \ sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\
    \"", "    if is_sum_even(n) == true\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ whether a given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"", "    if is_sum_of_even(n) ==\
    \ true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15) ==\
    \ true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == true\n@assert is_equal_to_sum_even(120) == true\n@assert is_equal_to_sum_even(121)\
    \ == true\n@assert is_equal_to_sum_even(122) == true\n@assert is_equal_to_sum_even(123)\
    \ == true\n", "    if n <= 0\n        error(\"n must be positive\")\n    else\
    \ if n % 2 == 0\n        error(\"n must be even\")\n    else if n < 4\n      \
    \  true\n    else\n        false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\
    \"Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n    true\n\
    \    \"\"\"", "    if n < 4 \n        return false\n    else \n        return\
    \ true\nend\n</cell>\n<code language=julia-1.4>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that checks whether a\
    \ given number n is divisible by 3. \nExample\n>>> is_divisible_by_3(4)\nfalse\n\
    >>> is_divisible_by_3(6)\ntrue\n>>> is_divisible_by_3(8)\ntrue\n>>> is_divisible_by_3(10)\n\
    false\n>>> is_divisible_by_3(12)\ntrue\n>>> is_divisible_by_3(14)\ntrue\n>>> is_divisible_by_3(16)\n\
    false\n>>> is_divisible_by_3(18)\ntrue\n>>> is_divisible_by_3(20)\nfalse\n>>>\
    \ is_divisible_by_3(22)\ntrue\n>>> is_divisible_by_3(24)\ntrue\n>>> is_divisible_by_3(26)\n\
    true\n>>> is_divisible_by_3(28)\ntrue\n>>> is_divisible_by_3(30)\nfalse\n>>> is_divisible_by_3(32)\n\
    true\n>>> is_divisible_by_3(34)\ntrue\n>>> is_divisible_by_3(36)\ntrue\n>>> is_divisible_by_3(38)\n\
    true\n>>> is_divisible_by_3(40)\nfalse\n>>> is_divisible_by_3(42)\ntrue\n>>> is_divisible_by_3(44)\n\
    true\n>>> is_divisible_by_3(46)\ntrue\n>>> is_divisible_by_3(48)\ntrue\n>>> is_divisible_by_3(50)\n\
    false\n>>> is_divisible_by_3(52)\ntrue\n>>> is_divisible_by_3(54)\ntrue\n>>> is_divisible_by_3(56)\n\
    true\n>>> is_divisible_by_3(58)\ntrue\n>>> is_divisible_by_3(60)\nfalse\n>>> is_divisible_by_3(62)\n\
    true\n>>> is_divisible_by_3(64)\ntrue\n>>> is_divisible_by_3(66)\ntrue\n>>> is_divisible_by_3(68)\n\
    true\n>>> is_divisible_by_3(70)\nfalse\n>>> is_divisible_by_3(72)\ntrue\n>>> is_divisible_by_3(74)\n\
    true\n>>> is_divisible_by_3(76)\ntrue\n>>> is_divisible_by_3(78)\ntrue\n>>> is_divisible_by_3(80)\n\
    false\n>>> is_divisible_by_3(82)\ntrue\n>>> is_divisible_by_3(", "    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(7) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that computes the sum of the numbers from 1 to n (inclusive).", " \
    \   if is_sum_even(n) == true\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nis_sum_even(6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_sum_even(8)\n</cell>\n<code language=julia-1.5>\nis_sum_even(10)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(100)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(1000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(10000)\n</cell>\n\
    <code language=julia-1.5>\nis_sum_even(100000)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(1000000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(10000000)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(100000000)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(1000000000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nis_sum_even(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(10000000000000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nis_sum_even(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(100000000000000000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nis_sum_even(100000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nis_sum_even(1000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    is_sum_even(10000000000000000000000)\n</cell>\n<code language=julia-1.5>\nis_sum_even(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_sum_even(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nis_sum_even(10000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nis_sum_even(100000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nis_sum_even(1000000000000000000000000000)\n</cell>\n",
  "    if n==0 then return true\n    else if n==1 then return true\n    else if n==2\
    \ then return true\n    else if n==3 then return true\n    else if n==4 then return\
    \ true\n    else if n==5 then return true\n    else if n==6 then return true\n\
    \    else if n==7 then return true\n    else if n==8 then return true\n    else\
    \ if n==9 then return true\n    else return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns true if the given number n is divisible by\
    \ 3. Example\n    >>> is_divisible_3_even(3)\n    true\n    >>> is_divisible_3_even(4)\n\
    \    false\n    >>> is_divisible_3_even(6)\n    false\n    >>> is_divisible_3_even(7)\n\
    \    false\n    >>> is_divisible_3_even(8)\n    false\n    >>> is_divisible_3_even(9)\n\
    \    false\n    >>> is_divisible_3_even(10)\n    false\n    >>> is_divisible_3_even(11)\n\
    \    false\n    >>> is_divisible_3_even(12)\n    false\n    >>> is_divisible_3_even(13)\n\
    \    false\n    >>> is_divisible_3_even(14)\n    false\n    >>> is_divisible_3_even(15)\n\
    \    false\n    >>> is_divisible_3_even(16)\n    false\n    >>> is_divisible_3_even(17)\n\
    \    false\n    >>> is_divisible_3_even(18)\n    false\n    >>> is_divisible_3_even(19)\n\
    \    false\n    >>> is_divisible_3_even(20)\n    false\n    >>> is_divisible_3_even(21)\n\
    \    false\n    >>> is_divisible_3_even(22)\n    false\n    >>> is_divisible_3_even(23)\n\
    \    false\n    >>> is_divisible_3_even(24)\n    false\n    >>> is_divisible_3_even(25)\n\
    \    false\n    >>> is_divisible_3_even(26)\n    false\n    >>> is_divisible_3_even(27)\n\
    \    false\n    >>> is_divisible_3_even(28)\n    false\n    >>> is_divisible_3_even(29)\n\
    \    false\n    >>> is_divisible_3_even(30)\n    false\n    >>> is_divisible_3_even(31)\n\
    \    false\n    >>> is_divisible_3_even(32)\n    false\n    >>> is_divisible_3_even(33)\n\
    \    false\n    >>> is_divisible_3_even(34)\n    false\n    >>> is_divisible_3_even(35)\n\
    \    false\n    >>> is_divisible_3_even(36)\n    false\n    >>> is_divisible_3_even(37",
  "    if n==0\n    then return true\n    else if n==1\n    then return true\n   \
    \ else if n==2\n    then return true\n    else if n==3\n    then return true\n\
    \    else if n==4\n    then return true\n    else if n==5\n    then return true\n\
    \    else if n==6\n    then return true\n    else if n==7\n    then return true\n\
    \    else if n==8\n    then return true\n    else if n==9\n    then return true\n\
    \    else if n==10\n    then return true\n    else if n==11\n    then return true\n\
    \    else if n==12\n    then return true\n    else if n==13\n    then return true\n\
    \    else if n==14\n    then return true\n    else if n==15\n    then return true\n\
    \    else if n==16\n    then return true\n    else if n==17\n    then return true\n\
    \    else if n==18\n    then return true\n    else if n==19\n    then return true\n\
    \    else if n==20\n    then return true\n    else if n==21\n    then return true\n\
    \    else if n==22\n    then return true\n    else if n==23\n    then return true\n\
    \    else if n==24\n    then return true\n    else if n==25\n    then return true\n\
    \    else if n==26\n    then return true\n    else if n==27\n    then return true\n\
    \    else if n==28\n    then return true\n    else if n==29\n    then return true\n\
    \    else if n==30\n    then return true\n    else if n==31\n    then return true\n\
    \    else if n==32\n    then return true\n    else if n==33\n    then return true\n\
    \    else if n==34\n    then return true\n    else if n==35\n    then return true\n\
    \    else if n==36\n    then return true\n    else if n==37\n    then return true\n\
    \    else if n==38\n    then return true\n    else if n==39\n    then return true\n\
    \    else if n==40\n    then return true\n    else if n==41\n    then return true\n\
    \    else if n==42\n    then return ", "    if is_sum_even(n) == true\n    else\
    \ false\nend\n</cell>\n<code language=julia-1.1>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == false\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_", " \
    \   if is_equal_to_sum_even_helper(n,4)\n    else \n        false\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(8)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks whether a given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\
    \"\"", "    if is_equal_to_sum_even(n-1) == true\n    else \n        return false\n\
    end", "    if is_equal_to_sum_even(n-1) == true \n    then return false \n   \
    \ else return true \n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n    true\n\
    \    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.3>\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10) == true\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns true if the given number\
    \ n is a power of two, false otherwise.", "    if is_equal_to_sum_even(n-1)\n\
    \    then true\n    else false\nend\n</cell>\n<code language=julia-1.3>", "  \
    \  if is_sum_even(n) == true\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether\
    \ a given number n is equal to the sum of exactly 4 positive odd numbers\nExample\n\
    >>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    true\n>>> is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(11)\nfalse\n\
    >>> is_equal_to_sum_odd(12)\nfalse\n>>> is_equal_to_sum_odd(13)\nfalse\n>>> is_equal_to_sum_odd(14)\n\
    false\n>>> is_equal_to_sum_odd(15)\nfalse\n>>> is_equal_to_sum_odd(16)\nfalse\n\
    >>> is_equal_to_sum_odd(17)\nfalse\n>>> is_equal_to_sum_odd(18)\nfalse\n>>> is_equal_to_sum_odd(19)\n\
    false\n>>> is_equal_to_sum_odd(20)\nfalse\n>>> is_equal_to_sum_odd(21)\nfalse\n\
    >>> is_equal_to_sum_odd(22)\nfalse\n>>> is_equal_to_sum_odd(23)\nfalse\n>>> is_equal_to_sum_odd(24)\n\
    false\n>>> is_equal_to_sum_odd(25)\nfalse\n>>> is_equal_to_sum_odd(26)\nfalse\n\
    >>> is_equal_to_sum_odd(27)\nfalse\n>>> is_equal_to_sum_odd(28)\nfalse\n>>> is_equal_to_sum_odd(29)\n\
    false\n>>> is_equal_to_sum_odd(30)\nfalse\n>>> is_equal_to_sum_odd(31)\nfalse\n\
    >>> is_equal_to_sum_odd(32)\nfalse\n>>> is_equal_to_sum_odd(33)\nfalse\n>>> is_equal_to_sum_odd(34)\n\
    false\n>>> is_equal_to_sum_odd(35)\nfalse\n>>> is_equal_to_sum_odd(36)\nfalse\n\
    >>> is_equal_to_sum_odd(37)\nfalse\n>>> is_equal_to_sum_odd(38)\nfalse\n>>> is_equal_to_sum_odd(39)\n\
    false\n>>> is_equal_to_sum_odd(40)\nfalse\n>>> is_equal_to_sum_odd(41)\nfalse\n\
    >>> is_equal_to_sum_odd(42)\nfalse\n>>> is_equal_to_sum_odd(43)\nfalse\n>>> is_equal_to_sum_odd(44)\n\
    false\n>>> is_equal_to_sum_odd(45)\nfalse\n>>> is_equal_to_sum_odd(46)\nfalse\n\
    >>> is_equal_to_sum_", "    if n==0 \n        true\n    else\n        ((n%2==0)\
    \ && (n%4==0))\nend", "    if n == 0 \n        true\n    else\n        if n %\
    \ 2 == 0 \n            false\n        else\n            if n % 4 == 0 \n     \
    \           true\n            else\n                if n % 8 == 0 \n         \
    \           true\n                else\n                    if n % 16 == 0 \n\
    \                        true\n                    else\n                    \
    \    if n % 32 == 0 \n                            true\n                     \
    \   else\n                            if n % 64 == 0 \n                      \
    \          true\n                            else\n                          \
    \      if n % 128 == 0 \n                                    true\n          \
    \                      else\n                                    if n % 256 ==\
    \ 0 \n                                        true\n                         \
    \           else\n                                        if n % 512 == 0 \n \
    \                                           true\n                           \
    \             else\n                                            if n % 1024 ==\
    \ 0 \n                                                true\n                 \
    \                           else\n                                           \
    \     if n % 2048 == 0 \n                                                    true\n\
    \                                                else\n                      \
    \                              if n % 4096 == 0 \n                           \
    \                             true\n                                         \
    \           else\n                                                        if n\
    \ % 8192 == 0 \n                                                            true\n\
    \                                                        else\n              \
    \                                              false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(4);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(6);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(8);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(16);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(32);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(64);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(128);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(256);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(512);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(1024);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(2048);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(4096);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(8192);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(16384);\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype is_equal_to_sum_even(32768);\n</cell>\n\
    <code language=julia-1.5", "    if n==0 then return true\n    if n==1 then return\
    \ false\n    if n==2 then return true\n    if n==3 then return true\n    if n==4\
    \ then return true\n    if n==5 then return true\n    if n==6 then return true\n\
    \    if n==7 then return true\n    if n==8 then return true\n    if n==9 then\
    \ return true\n    if n==10 then return true\n    if n==11 then return true\n\
    \    if n==12 then return true\n    if n==13 then return true\n    if n==14 then\
    \ return true\n    if n==15 then return true\n    if n==16 then return true\n\
    \    if n==17 then return true\n    if n==18 then return true\n    if n==19 then\
    \ return true\n    if n==20 then return true\n    if n==21 then return true\n\
    \    if n==22 then return true\n    if n==23 then return true\n    if n==24 then\
    \ return true\n    if n==25 then return true\n    if n==26 then return true\n\
    \    if n==27 then return true\n    if n==28 then return true\n    if n==29 then\
    \ return true\n    if n==30 then return true\n    if n==31 then return true\n\
    \    if n==32 then return true\n    if n==33 then return true\n    if n==34 then\
    \ return true\n    if n==35 then return true\n    if n==36 then return true\n\
    \    if n==37 then return true\n    if n==38 then return true\n    if n==39 then\
    \ return true\n    if n==40 then return true\n    if n==41 then return true\n\
    \    if n==42 then return true\n    if n==43 then return true\n    if n==44 then\
    \ return true\n    if n==45 then return true\n    if n==46 then return true\n\
    \    if n==47 then return true\n    if n==48 then return true\n    if n==49 then\
    \ return true\n    if n==50 then return true\n    if n==51 then return true\n\
    \    if n==52 then return true\n    if n==53 then return true\n    if n==54 then\
    \ return true\n    if n==55 then return true\n    if n==56 then return true\n\
    \    if n==57 then return true\n    if n==58 then return true\n    if n==59 then\
    \ return true\n    if n==60 then return true\n    if n==61 ", "    if is_sum_even(n)\
    \ == true\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"Evaluate whether the given number n\
    \ can be written as the sum of exactly 4 positive odd numbers\n    Example\n \
    \   >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n  \
    \  false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return ", "    if is_sum_even(n) == true\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n\
    @assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13) ==\
    \ true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert is_equal_to_sum_even(54) == true\n@assert is_", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @time is_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns true if the given number n is equal to the sum of exactly 4 positive\
    \ odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\"", "    if is_sum_of_4_even(n) ==\
    \ true\n    else \n        return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns true if the given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert is_equal_to_sum_even(54) == ", "    if is_sum_even(n) == true\n\
    \    else \n        return false\nend\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that returns the number of positive integers less than or equal to n that are\
    \ divisible by 3.", "    if n == 0 || n == 1 \n    then true\n    else if n %\
    \ 2 == 0 \n    then is_equal_to_sum_even(n - 1) \n    else false\n    end\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that checks whether a given number\
    \ n is equal to the sum of exactly 4 positive odd numbers.", "    if n==0 \n \
    \       true\n    else\n        sum_of_evens = sum(i for i in 2..n if i%2==0)\n\
    \        sum_of_evens == n\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether a\
    \ given number n is prime. \nA prime number is a natural number greater than 1\
    \ that has no positive divisors other than 1 and itself.\nExample\n>>> is_prime(8)\n\
    true\n>>> is_prime(9)\nfalse\n>>> is_prime(10)\ntrue\n>>> is_prime(11)\nfalse\n\
    >>> is_prime(12)\ntrue\n>>> is_prime(13)\nfalse\n>>> is_prime(14)\ntrue\n>>> is_prime(15)\n\
    false\n>>> is_prime(16)\ntrue\n>>> is_prime(17)\nfalse\n>>> is_prime(18)\ntrue\n\
    >>> is_prime(19)\nfalse\n>>> is_prime(20)\ntrue\n>>> is_prime(21)\nfalse\n>>>\
    \ is_prime(22)\ntrue\n>>> is_prime(23)\nfalse\n>>> is_prime(24)\ntrue\n>>> is_prime(25)\n\
    false\n>>> is_prime(26)\ntrue\n>>> is_prime(27)\nfalse\n>>> is_prime(28)\ntrue\n\
    >>> is_prime(29)\nfalse\n>>> is_prime(30)\ntrue\n>>> is_prime(31)\nfalse\n>>>\
    \ is_prime(32)\ntrue\n>>> is_prime(33)\nfalse\n>>> is_prime(34)\ntrue\n>>> is_prime(35)\n\
    false\n>>> is_prime(36)\ntrue\n>>> is_prime(37)\nfalse\n>>> is_prime(38)\ntrue\n\
    >>> is_prime(39)\nfalse\n>>> is_prime(40)\ntrue\n>>> is_prime(41)\nfalse\n>>>\
    \ is_prime(42)\ntrue\n>>> is_prime(43)\nfalse\n>>> is_prime(44)\ntrue\n>>> is_prime(45)\n\
    false\n>>> is_prime(46)\ntrue\n>>> is_prime(47)\nfalse\n>>> is_prime(48)\ntrue\n\
    >>> is_prime(49)\nfalse\n>>> is_prime(50)\ntrue\n>>> is_prime(51)\nfalse\n>>>\
    \ is_prime(52)\ntrue\n>>> is_prime(53)\nfalse\n>>> is_", "    if is_sum_even(n)\
    \ == true\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if is_sum_even(n) == true\n    else\
    \ \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n ==\
    \ 0 \n        true\n    else\n        if n % 2 == 0 \n            true\n     \
    \   else\n            if n % 4 == 0 \n                true\n            else\n\
    \                if n % 8 == 0 \n                    true\n                else\n\
    \                    if n % 16 == 0 \n                        true\n         \
    \           else\n                        if n % 32 == 0 \n                  \
    \          true\n                        else\n                            if\
    \ n % 64 == 0 \n                                true\n                       \
    \     else\n                                if n % 128 == 0 \n               \
    \                     true\n                                else\n           \
    \                         if n % 256 == 0 \n                                 \
    \       true\n                                    else\n                     \
    \                   if n % 512 == 0 \n                                       \
    \     true\n                                        else\n                   \
    \                         if n % 1024 == 0 \n                                \
    \                true\n                                            else\n    \
    \                                            if n % 2048 == 0 \n             \
    \                                       true\n                               \
    \                 else\n                                                    false\n\
    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if is_sum_even(n) == true\n    else \n        return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true\
    \ if the given number n is equal to the sum of exactly 4 positive odd numbers\n\
    Example\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n\
    >>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\nend\n\"\"\"\n    Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_4_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if n < 4\n    then return false\n    else if n % 2\
    \ == 0\n    then return true\n    else return is_equal_to_sum_even(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the given number\
    \ n is divisible by 3 or 7 and false otherwise.", "    if is_equal_to_sum_even(n-1)\
    \ == true && n % 2 == 0\n    else false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is divisible by 3 or 5", "   \
    \ if is_sum_of_even(n) == true\n    else \n        false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_sum_of_even(n) == true\n        return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(53) == true\n@assert ", "    if n == 0\
    \ \n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1)\
    \ || is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(12) == false\n\
    @assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14) ==\
    \ true\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == false\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(53) == ", "    if n == 0 \n        true\n\
    \    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1) || is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == true\n@assert is_equal_to_sum_even(119) == true\n@assert is_equal_to_sum_even(120",
  "    if n<4 return false\n    else if n%2==0 return false\n    else if n%3==0 return\
    \ false\n    else if n%5==0 return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == true\n@assert is_equal_to_sum_even(119) == true\n@assert is_equal_to_sum_even(120)\
    \ == true\n@assert is_equal_to_sum_even(121) == true\n@assert is_equal_", "  \
    \  if is_equal_to_sum_even(n-1) == true \n    then return false \n    else return\
    \ true \n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 ", "    if n==0\n        true\n    else\n        sum_of_four_evens(n)==n\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend", "    if is_sum_of_even(n) == true\n    else \n\
    \        false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_even(n)\
    \ == true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if n<4\n        return false\n    \n    sum = 0\n\
    \    for x in 1:n\n        sum += x\n        if sum == 2*n\n            return\
    \ true\n    return false\nend", "    if is_sum_of_even(n) == 4\n    else \n  \
    \      false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks whether\
    \ a given number n is equal to the sum of exactly 4 positive odd numbers\nExample\n\
    >>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    true\n>>> is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(12)\nfalse\n\
    >>> is_equal_to_sum_odd(14)\nfalse\n>>> is_equal_to_sum_odd(16)\nfalse\n>>> is_equal_to_sum_odd(18)\n\
    false\n>>> is_equal_to_sum_odd(20)\nfalse\n>>> is_equal_to_sum_odd(22)\nfalse\n\
    >>> is_equal_to_sum_odd(24)\nfalse\n>>> is_equal_to_sum_odd(26)\nfalse\n>>> is_equal_to_sum_odd(28)\n\
    false\n>>> is_equal_to_sum_odd(30)\nfalse\n>>> is_equal_to_sum_odd(32)\nfalse\n\
    >>> is_equal_to_sum_odd(34)\nfalse\n>>> is_equal_to_sum_odd(36)\nfalse\n>>> is_equal_to_sum_odd(38)\n\
    false\n>>> is_equal_to_sum_odd(40)\nfalse\n>>> is_equal_to_sum_odd(42)\nfalse\n\
    >>> is_equal_to_sum_odd(44)\nfalse\n>>> is_equal_to_sum_odd(46)\nfalse\n>>> is_equal_to_sum_odd(48)\n\
    false\n>>> is_equal_to_sum_odd(50)\nfalse\n>>> is_equal_to_sum_odd(52)\nfalse\n\
    >>> is_equal_to_sum_odd(54)\nfalse\n>>> is_equal_to_sum_odd(56)\nfalse\n>>> is_equal_to_sum_odd(58)\n\
    false\n>>> is_equal_to_sum_odd(60)\nfalse\n>>> is_equal_to_sum_odd(62)\nfalse\n\
    >>> is_equal_to_sum_odd(64)\nfalse\n>>> is_equal_to_sum_odd(66)\nfalse\n>>> is_equal_to_sum_odd(68)\n\
    false\n>>> is_equal_to_sum_odd(70)\nfalse\n>>> is_equal_to_sum_odd(72)\nfalse\n\
    >>> is_equal_to_sum_odd(74)\nfalse\n>>> is_equal_to_sum_odd(76)\nfalse\n>>> is_equal_to_sum_odd(78)\n\
    false\n>>> is_equal_to_sum_odd(80)\nfalse\n>>> is_equal_to_sum_odd(82)\nfalse\n\
    >>> is_equal_to_sum_", "    if is_equal_to_sum_even_helper(n,4)\n    else \n \
    \       false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(53) == true", "    if n==0\n        true\n\
    \    else\n        ((n%2==0) && (n%4==0))\nend", "    if is_sum_even(n) == true\n\
    \    else \n        return false\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that returns true if the given number n is divisible by 3, and false otherwise.\n\
    Example\n>>> is_divisible_3_or_5(3)\ntrue\n>>> is_divisible_3_or_5(4)\nfalse\n\
    >>> is_divisible_3_or_5(6)\ntrue\n>>> is_divisible_3_or_5(8)\nfalse\n>>> is_divisible_3_or_5(10)\n\
    true\n>>> is_divisible_3_or_5(15)\nfalse\n>>> is_divisible_3_or_5(20)\ntrue\n\
    >>> is_divisible_3_or_5(25)\nfalse\n>>> is_divisible_3_or_5(30)\ntrue\n>>> is_divisible_3_or_5(35)\n\
    false\n>>> is_divisible_3_or_5(45)\ntrue\n>>> is_divisible_3_or_5(50)\nfalse\n\
    >>> is_divisible_3_or_5(55)\ntrue\n>>> is_divisible_3_or_5(60)\nfalse\n>>> is_divisible_3_or_5(65)\n\
    true\n>>> is_divisible_3_or_5(70)\nfalse\n>>> is_divisible_3_or_5(75)\ntrue\n\
    >>> is_divisible_3_or_5(80)\nfalse\n>>> is_divisible_3_or_5(85)\ntrue\n>>> is_divisible_3_or_5(90)\n\
    false\n>>> is_divisible_3_or_5(95)\ntrue\n>>> is_divisible_3_or_5(100)\nfalse\n\
    >>> is_divisible_3_or_5(105)\ntrue\n>>> is_divisible_3_or_5(110)\nfalse\n>>> is_divisible_3_or_5(115)\n\
    true\n>>> is_divisible_3_or_5(120)\nfalse\n>>> is_divisible_3_or_5(125)\ntrue\n\
    >>> is_divisible_3_or_5(130)\nfalse\n>>> is_divisible_3_or_5(135)\ntrue\n>>> is_divisible_3_or_5(140)\n\
    false\n>>> is_divisible_3_or_5(145)\ntrue\n>>> is_divisible_3_or_5(150)\nfalse\n\
    >>> is_divisible_3_or_5(155)\ntrue\n>>> is_divisible_3_or_5(160)\nfalse\n>>> is_divisible_3_or_5(165)\n\
    true\n>>> is_divisible_3_or_5(170)\nfalse\n>>> is_divisible_3_or_5(175)\ntrue\n\
    >>> is_divisible_3_or_5(180)\nfalse\n>>> is_divisible_3_or_5(185)\ntrue\n>>> is_divisible_3_or_5(190)\n\
    false\n>>> is_di", "    if is_equal_to_sum_even_helper(n,4)\n    else \n     \
    \   false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(6) == true\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether a\
    \ given number n is equal to the sum of exactly 4 positive odd numbers. \nExample\n\
    >>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    true\n>>> is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(12)\ntrue\n\
    >>> is_equal_to_sum_odd(14)\ntrue\n>>> is_equal_to_sum_odd(16)\ntrue\n>>> is_equal_to_sum_odd(18)\n\
    true\n>>> is_equal_to_sum_odd(20)\ntrue\n>>> is_equal_to_sum_odd(22)\ntrue\n>>>\
    \ is_equal_to_sum_odd(24)\ntrue\n>>> is_equal_to_sum_odd(26)\ntrue\n>>> is_equal_to_sum_odd(28)\n\
    true\n>>> is_equal_to_sum_odd(30)\ntrue\n>>> is_equal_to_sum_odd(32)\ntrue\n>>>\
    \ is_equal_to_sum_odd(34)\ntrue\n>>> is_equal_to_sum_odd(36)\ntrue\n>>> is_equal_to_sum_odd(38)\n\
    true\n>>> is_equal_to_sum_odd(40)\ntrue\n>>> is_equal_to_sum_odd(42)\ntrue\n>>>\
    \ is_equal_to_sum_odd(44)\ntrue\n>>> is_equal_to_sum_odd(46)\ntrue\n>>> is_equal_to_sum_odd(48)\n\
    true\n>>> is_equal_to_sum_odd(50)\ntrue\n>>> is_equal_to_sum_odd(52)\ntrue\n>>>\
    \ is_equal_to_sum_odd(54)\ntrue\n>>> is_equal_to_sum_odd(56)\ntrue\n>>> is_equal_to_sum_odd(58)\n\
    true\n>>> is_equal_to_sum_odd(60)\ntrue\n>>> is_equal_to_sum_odd(62)\ntrue\n>>>\
    \ is_equal_to_sum_odd(64)\ntrue\n>>> is_equal_to_sum_odd(66)\ntrue\n>>> is_equal_to_sum_odd(68)\n\
    true\n>>> is_equal_to_sum_odd(70)\ntrue\n>>> is_equal_to_sum_odd(72)\ntrue\n>>>\
    \ is_equal_to_sum_odd(74)\ntrue\n>>> is_equal_to_sum_", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\n    end\nend\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n <= 0 \n        then return false \n    else if n == 1 \n        then return\
    \ true \n    else if n % 2 == 0 \n        then return false \n    else if n %\
    \ 4 == 0 \n        then return true \n    else \n        return is_equal_to_sum_even(n\
    \ - 1) \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether a\
    \ given number n is equal to the sum of exactly 4 positive odd numbers.", "  \
    \  if n==0 || n==1\n        return true\n    else if n==2\n        return true\n\
    \    else if n==3\n        return true\n    else if n==4\n        return true\n\
    \    else if n==5\n        return true\n    else if n==6\n        return true\n\
    \    else if n==7\n        return true\n    else if n==8\n        return true\n\
    \    else if n==9\n        return true\n    else if n==10\n        return true\n\
    \    else if n==11\n        return true\n    else if n==12\n        return true\n\
    \    else if n==13\n        return true\n    else if n==14\n        return true\n\
    \    else if n==15\n        return true\n    else if n==16\n        return true\n\
    \    else if n==17\n        return true\n    else if n==18\n        return true\n\
    \    else if n==19\n        return true\n    else if n==20\n        return true\n\
    \    else if n==21\n        return true\n    else if n==22\n        return true\n\
    \    else if n==23\n        return true\n    else if n==24\n        return true\n\
    \    else if n==25\n        return true\n    else if n==26\n        return true\n\
    \    else if n==27\n        return true\n    else if n==28\n        return true\n\
    \    else if n==29\n        return true\n    else if n==30\n        return true\n\
    \    else if n==31\n        return true\n    else if n==32\n        return true\n\
    \    else if n==33\n        return true\n    else if n==34\n        return true\n\
    \    else if n==35\n        return true\n    else if n==36\n        return true\n\
    \    else if n==37\n        return true\n    else if n==38\n        return true\n\
    \    else if n==39\n        return true\n    else if n==40\n        return true\n\
    \    else if n==41\n        return true\n    else if n==42\n        return true\n\
    \    else if n==43\n        return true\n    else if n==44\n        return true\n\
    \    else if n==45\n        return true\n    else if n==46\n        return true\n\
    \    else if n==47\n        return true\n    else if n==48\n        return true\n\
    \    else if n==49\n        return true\n    else if n==50\n        return true\n\
    \    else if n==51\n        return true\n    ", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == true\n@assert is_equal_to_sum_even(119) == true\n@assert is_equal_to_sum_even(120)\
    \ == true\n@assert is_equal_to_sum_even(121) == true\n@assert is_equal_to_sum_even(122)\
    \ == true\n@assert is_equal_to_sum_even(123", "    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.1>\n\
    @time is_equal_to_sum_even(4);\n@time is_equal_to_sum_even(6);\n@time is_equal_to_sum_even(8);\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks whether a given number\
    \ n is equal to the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    false\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\
    \"\"", "    if n <= 0 \n        then return false\n    else if n % 2 == 0 \n \
    \       then return true\n    else if n % 4 == 0 \n        then return true\n\
    \    else if n % 8 == 0 \n        then return true\n    else return false\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number n\
    \ can be written as the sum of exactly 4 positive odd numbers\n    Example\n \
    \   >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n  \
    \  false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even(n-1)\
    \ == true \n    then return true \n    else return false \n    end\nend\n\"\"\"\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>>\
    \ is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n    true\n\
    \    \"\"\"", "    if n==0\n        true\n    else\n        sum_of_evens(n)==4\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(0) === true\n\
    @assert is_equal_to_sum_even(2) === false\n@assert is_equal_to_sum_even(3) ===\
    \ false\n@assert is_equal_to_sum_even(5) === true\n@assert is_equal_to_sum_even(7)\
    \ === true\n@assert is_equal_to_sum_even(9) === true\n@assert is_equal_to_sum_even(10)\
    \ === true\n@assert is_equal_to_sum_even(11) === true\n@assert is_equal_to_sum_even(12)\
    \ === true\n@assert is_equal_to_sum_even(13) === true\n@assert is_equal_to_sum_even(14)\
    \ === true\n@assert is_equal_to_sum_even(15) === true\n@assert is_equal_to_sum_even(16)\
    \ === true\n@assert is_equal_to_sum_even(17) === true\n@assert is_equal_to_sum_even(18)\
    \ === true\n@assert is_equal_to_sum_even(19) === true\n@assert is_equal_to_sum_even(20)\
    \ === true\n@assert is_equal_to_sum_even(21) === true\n@assert is_equal_to_sum_even(22)\
    \ === true\n@assert is_equal_to_sum_even(23) === true\n@assert is_equal_to_sum_even(24)\
    \ === true\n@assert is_equal_to_sum_even(25) === true\n@assert is_equal_to_sum_even(26)\
    \ === true\n@assert is_equal_to_sum_even(27) === true\n@assert is_equal_to_sum_even(28)\
    \ === true\n@assert is_equal_to_sum_even(29) === true\n@assert is_equal_to_sum_even(30)\
    \ === true\n@assert is_equal_to_sum_even(31) === true\n@assert is_equal_to_sum_even(32)\
    \ === true\n@assert is_equal_to_sum_even(33) === true\n@assert is_equal_to_sum_even(34)\
    \ === true\n@assert is_equal_to_sum_even(35) === true\n@assert is_equal_to_sum_even(36)\
    \ === true\n@assert is_equal_to_sum_even(37) === true\n@assert is_equal_to_sum_even(38)\
    \ === true\n@assert is_equal_to_sum_even(39) === true\n@assert is_equal_to_sum_even(40)\
    \ === true\n@assert is_equal_to_sum_even(42) === true\n@assert is_equal_to_sum_even(43)\
    \ === true\n@assert is_equal_to_sum_even(44) === true\n@assert is_equal_to_sum_even(45)\
    \ === true\n@assert is_equal_to_sum_even(46) === true\n@assert is_equal_to_sum_even(47)\
    \ === true\n@assert is_equal_to_sum_even(", "    if n<4 return false\n    else\
    \ if n%2==0 return false\n    else if n%3==0 return false\n    else if n%5==0\
    \ return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if n == 0 \n        true\n    else if n % 2 == 0 \n\
    \        false\n    else if n % 4 == 0 \n        true\n    else \n        is_equal_to_sum_even(n\
    \ - 1)\nend\n</cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks whether a given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\nExample\n>>>\
    \ is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    false\n\"\"\"", "    if is_sum_of_even(n) == true\n        return true\n    else\n\
    \        return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if the given number n is a power of two, false otherwise. Hint:\
    \ use the bitwise operator &.", "    if n==0 then return true\n    if n==1 then\
    \ return true\n    if n==2 then return true\n    if n==3 then return true\n  \
    \  if n==4 then return true\n    if n==5 then return true\n    if n==6 then return\
    \ true\n    if n==7 then return true\n    if n==8 then return true\n    if n==9\
    \ then return true\n    if n==10 then return true\n    if n==11 then return true\n\
    \    if n==12 then return true\n    if n==13 then return true\n    if n==14 then\
    \ return true\n    if n==15 then return true\n    if n==16 then return true\n\
    \    if n==17 then return true\n    if n==18 then return true\n    if n==19 then\
    \ return true\n    if n==20 then return true\n    if n==21 then return true\n\
    \    if n==22 then return true\n    if n==23 then return true\n    if n==24 then\
    \ return true\n    if n==25 then return true\n    if n==26 then return true\n\
    \    if n==27 then return true\n    if n==28 then return true\n    if n==29 then\
    \ return true\n    if n==30 then return true\n    if n==31 then return true\n\
    \    if n==32 then return true\n    if n==33 then return true\n    if n==34 then\
    \ return true\n    if n==35 then return true\n    if n==36 then return true\n\
    \    if n==37 then return true\n    if n==38 then return true\n    if n==39 then\
    \ return true\n    if n==40 then return true\n    if n==41 then return true\n\
    \    if n==42 then return true\n    if n==43 then return true\n    if n==44 then\
    \ return true\n    if n==45 then return true\n    if n==46 then return true\n\
    \    if n==47 then return true\n    if n==48 then return true\n    if n==49 then\
    \ return true\n    if n==50 then return true\n    if n==51 then return true\n\
    \    if n==52 then return true\n    if n==53 then return true\n    if n==54 then\
    \ return true\n    if n==55 then return true\n    if n==56 then return true\n\
    \    if n==57 then return true\n    if n==58 then return true\n    if n==59 then\
    \ return true\n    if n==60 then return true\n    if n==61 ", "    if is_sum_even(n)\
    \ == true\n    else false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend", "    if is_equal_to_sum_even_helper(n,4,0)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(8)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that determines whether a given\
    \ number n is equal to the sum of exactly 4 positive odd numbers\nExample\n>>>\
    \ is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n>>> is_equal_to_sum_odd(8)\n\
    false\n\"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n    else \n      \
    \  false\nend\n\"\"\"\n    Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n    else \n\
    \        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == false\n@assert is_equal_to_sum_even(51)\
    \ == false\n@assert is_equal_to_sum_even(52) == false", "    if n==0\n       \
    \ true\n    else\n        ((n%2==0)&&(n%4==0))\nend", "    if n == 0 \n    then\
    \ return true\n    else if n % 2 == 0 \n    then return false\n    else if n %\
    \ 4 == 0 \n    then return true\n    else return is_equal_to_sum_even(n - 1)\n\
    end", "    if is_sum_of_4_even(n) == true\n    else \n        return false\nend\n\
    </cell>\n<code language=julia-1.1>\n\"\"\"Evaluate whether the given number n\
    \ can be written as the sum of exactly 4 positive odd numbers\n    Example\n \
    \   >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n  \
    \  false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend", "    if n<4 return false\n    else if\
    \ n%2==0 return false\n    else if n%3==0 return false\n    else if n%4==0 return\
    \ false\n    else return true\nend", "    if n == 0 \n        true\n    else\n\
    \        n % 2 == 0 && is_equal_to_sum_even(n - 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(10)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether a\
    \ given number n is prime or not. You may use the following formula to determine\
    \ whether a number is prime or not:", "    if n <= 0\n        error(\"n must be\
    \ positive\")\n    else if n == 1\n        true\n    else if n % 2 == 0\n    \
    \    false\n    else\n        n <= 4\nend", "    if is_equal_to_sum_even(n-1)\
    \ == true \n    then return false \n    else return true \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_equal_to_sum_even(n-1) == true \n    then return\
    \ true \n    else return false \nend \n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n ==\
    \ 0\n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n\
    @assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(7)\
    \ == false\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false", "    if is_equal_to_sum_even_helper(n)\
    \ == true \n    else \n        false\nend\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ whether a given number n is divisible by 4.", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ == 0 \n        true\n    else\n        n % 2 == 0 \n            and is_equal_to_sum_even(n\
    \ - 1) \n            and is_equal_to_sum_even(n - 2) \n            and is_equal_to_sum_even(n\
    \ - 3) \n            and is_equal_to_sum_even(n - 4)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if n<4 return false\n    else if n%2==0 return false\n\
    \    else if n%3==0 return false\n    else if n%4==0 return true\n    else return\
    \ false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_sum_of_even(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4,0)\n    else \n\
    \        false\nend\n\"\"\"\n    Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n    else \n\
    \        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(51) == false\n@assert is_equal_to_sum_even(52)\
    \ == false\n@assert is_equal_to_sum_even(53) == false\n@assert is_equal_to_sum_even(54)\
    \ == false\n@assert is_equal_to_sum_even(55) == false", "    if n==0 \n      \
    \  true\n    else\n        if n%2==0 \n            false\n        else\n     \
    \       if n%3==0 \n                false\n            else\n                if\
    \ n%4==0 \n                    true\n                else\n                  \
    \  false\n        end\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that checks whether a given number n is divisible by 3 or 5.", "    if n==0\
    \ || n==1 \n        return true\n    else \n        return is_equal_to_sum_even(n\
    \ - 1) && is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns true if the given number n is a power of two, false otherwise.",
  "    if is_equal_to_sum_even_helper(n) == true \n    else \n        return false\
    \ \nend "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

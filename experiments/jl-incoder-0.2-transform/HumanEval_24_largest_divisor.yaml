name: HumanEval_24_largest_divisor
language: jl
prompt: "\"\"\" For a given number n, find the largest number that divides n evenly,\
  \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t@test(candidate(3)\
  \ == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) == 5)\n\t@test(candidate(100)\
  \ == 50)\n\t@test(candidate(49) == 7)\nend\n"
completions: ["    if n % 2 == 0 \n        then return n \n    else \n        largest_divisor(n\
    \ / 2)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer. Just a code\
    \ dump.\n<|/ c |>\n<| c |>\nThe question was \"how do I find the largest number\
    \ that divides n evenly, smaller than n\". The code dump was the answer. How does\
    \ this not answer the question?\n<|/ c |>\n<| c |>\nThe question was \"how do\
    \ I find the largest number that divides n evenly, smaller than n\". The code\
    \ dump was the answer. How does this not answer the question?\n<|/ c |>\n<| c\
    \ |>\nThe question was \"how do I find the largest number that divides n evenly,\
    \ smaller than n\". The code dump was the answer. How does this not answer the\
    \ question?\n<|/ c |>\n<| c |>\nThe question was \"how do I find the largest number\
    \ that divides n evenly, smaller than n\". The code dump was the answer. How does\
    \ this not answer the question?\n<|/ c |>\n<| a tags=recursion,big-o,time-complexity,algorithm\
    \ |>\n<code>\ndef largest_divisor(n):\n    if n == 1:\n        return n\n    else:\n\
    \        if n % 2 == 0:\n            return n\n        else:\n            return\
    \ largest_divisor(n / 2)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an\
    \ answer. Just a code dump.\n<|/ c |>\n<| c |>\nThe question was \"how do I find\
    \ the largest number that divides n evenly, smaller than n\". The code dump was\
    \ the answer. How does this not answer the question?\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I find the largest number that divides n evenly, smaller than n\"\
    . The code dump was the answer. How does this not answer the question?\n<|/ c\
    \ |>\n<| a tags=recursion,big-o,time-complexity,algorithm |>\n<code>\ndef largest_divisor(n):\n\
    \    if n == 1:\n        return n\n    else:\n        if n % 2 == 0:\n       \
    \     return n\n        else:\n            return largest_divisor(n / 2)\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis is not an answer. Just a code dump.\n<|/ c |>\n\
    <| c |>\nThe question was \"how do I find the largest number that divides n evenly,\
    \ smaller than n\"", "    if n==0 then return 0\n    else if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1 \n    else \n        largest_divisor(n-1) + 1 \nend \n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0\n        0\n   \
    \ else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n\nHint: use largest_divisor(n)\
    \ to find the largest number that divides n evenly, smaller than n", "    if n==1\
    \ \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n@time largest_divisor(150)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. For example,\
    \ factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0 then return 0\n    if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>", "    if n==1 \n        return\
    \ n\n    else if n%2==0 \n        return largest_divisor(n/2)\n    else \n   \
    \     return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number", "    if n==0 then return 0\n    if n==1 then\
    \ return 1\n    if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0 \n        0\n    else\n   \
    \     largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. For example, for n = 10, there are\
    \ 3 divisors: 1, 2, and 3.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ smallest number that divides n evenly, smaller than n.", "    if n==0 \n   \
    \     0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 10\nWrite a function that returns the factorial of a given number. \n\
    For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n        return\
    \ 1 \n    else if n==2 \n        return 2 \n    else \n        largest_divisor(n-1)\n\
    \        largest_divisor(n-2)\n        largest_divisor(n-3)\n        largest_divisor(n-4)\n\
    \        largest_divisor(n-5)\n        largest_divisor(n-6)\n        largest_divisor(n-7)\n\
    \        largest_divisor(n-8)\n        largest_divisor(n-9)\n        largest_divisor(n-10)\n\
    \        largest_divisor(n-11)\n        largest_divisor(n-12)\n        largest_divisor(n-13)\n\
    \        largest_divisor(n-14)\n        largest_divisor(n-15)\n        largest_divisor(n-16)\n\
    \        largest_divisor(n-17)\n        largest_divisor(n-18)\n        largest_divisor(n-19)\n\
    \        largest_divisor(n-20)\n        largest_divisor(n-21)\n        largest_divisor(n-22)\n\
    \        largest_divisor(n-23)\n        largest_divisor(n-24)\n        largest_divisor(n-25)\n\
    \        largest_divisor(n-26)\n        largest_divisor(n-27)\n        largest_divisor(n-28)\n\
    \        largest_divisor(n-29)\n        largest_divisor(n-30)\n        largest_divisor(n-31)\n\
    \        largest_divisor(n-32)\n        largest_divisor(n-33)\n        largest_divisor(n-34)\n\
    \        largest_divisor(n-35)\n        largest_divisor(n-36)\n        largest_divisor(n-37)\n\
    \        largest_divisor(n-38)\n        largest_divisor(n-39)\n        largest_divisor(n-40)\n\
    \        largest_divisor(n-41)\n        largest_divisor(n-42)\n        largest_divisor(n-43)\n\
    \        largest_divisor(n-44)\n        largest_divisor(n-45)\n        largest_divisor(n-46)\n\
    \        largest_divisor(n-47)\n        largest_divisor(n-48)\n        largest_divisor(n-49)\n\
    \        largest_divisor(n-50)\n        largest_divisor(n-51)\n        largest_divisor(n-52)\n\
    \        largest_divisor(n-53)\n        largest_divisor(n-54)\n        largest_divisor(n-55)\n\
    \        largest_divisor(n-56)\n        largest_divisor(n-57)\n        largest_divisor(n-58)\n\
    \        largest_divisor(n", "    if n==1 \n        return n\n    else if n%2==0\
    \ \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==1 \n        return n\n    else if n%2==0 \n   \
    \     return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. \n\
    For a given number n, find the factorial of n\n    >>> factorial(5)\n    120\n\
    \    \"\"\"", "    if n==0 then return 0\n    else if n%2==0 then return n\n \
    \   else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for n = 12, there are\
    \ 4 divisors: 1, 2, 3, and 4.", "    if n==1 \n        return 1 \n    else \n\
    \        largest_divisor(n-1)\n        if n%2==0 \n            largest_divisor(n/2)\n\
    \        else \n            largest_divisor(n/2) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.0>\n@time largest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n\
    \        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n\
    \        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the largest number that divides n evenly, smaller than n.", "    if n % 2 ==\
    \ 0\n        then largest_divisor(n / 2)\n        else largest_divisor(3 * n +\
    \ 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of a given number. For example, for the number 15, the number of divisors is\
    \ 3.", "    if n==0 then return 0\n    else if n%2==0 then return n\n    else\
    \ return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. \nFor example factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if\
    \ n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. For example,\
    \ factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number n. For example, for the number 12,\
    \ there are two divisors: 2 and 3. Your function should return the number of divisors\
    \ rather than printing them.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the largest number that divides n evenly,\
    \ smaller than n.", "    if n==1 \n        return 1 \n    else \n        return\
    \ largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ n==1 \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==0 then return 0\n    else if n%2==0 then return n\n\
    \    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n\n>>> factorial(5)\n120\n>>> factorial(10)\n3628800\n>>> factorial(100)\n\
    1.8446744073709552e+19\n>>> factorial(1000)\n6.204484017332398e+24\n>>> factorial(10000)\n\
    2.628301886896e+4932\n>>> factorial(100000)\n5.007199254740992e+4932\n>>> factorial(1000000)\n\
    1.8446744073709552e+19\n>>> factorial(10000000)\n6.204484017332398e+24\n>>> factorial(100000000)\n\
    2.628301886896e+4932\n>>> factorial(1000000000)\n5.007199254740992e+4932\n>>>\
    \ factorial(10000000000)\n1.8446744073709552e+19\n>>> factorial(100000000000)\n\
    6.204484017332398e+24\n>>> factorial(1000000000000)\n2.628301886896e+4932\n>>>\
    \ factorial(1000000000000)\n5.007199254740992e+4932\n>>> factorial(10000000000000)\n\
    1.8446744073709552e+19\n>>> factorial(10000000000000)\n6.204484017332398e+24\n\
    >>> factorial(100000000000000)\n2.628301886896e+4932\n>>> factorial(100000000000000)\n\
    5.007199254740992e+4932\n>>> factorial(1000000000000000)\n1.8446744073709552e+19\n\
    >>> factorial(1000000000000000)\n6.204484017332398e+24\n>>> factorial(10000000000000000)\n\
    2.628301886896e+4932\n>>> factorial(10000000000000000)\n5.007199254740992e+4932\n\
    >>> factorial(100000000000000000)\n1.8446744073709552e+19\n>>> factorial(100000000000000000)\n\
    6.204484017332398e+24\n>>> factorial(1000000000000000000)", "    if n==1 \n  \
    \      return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n\
    </cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the largest number that divides n evenly, smaller\
    \ than n.", "    if n % 2 == 0 \n        then largest_divisor(n / 2)\n       \
    \ else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the largest number that can be divided\
    \ by all numbers from 1 to n (inclusive).", "    if n==1 \n        1 \n    else\
    \ \n        largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>",
  "    if n==1 \n        return 1 \n    else \n        largest_divisor(n-1) + 1 \n\
    end\n</cell>\n<code language=julia-1.5>\n@assert largest_divisor(15) == 5\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a given number.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==1 \n      \
    \  return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nProblem 4\nWrite\
    \ a function that returns the number of prime numbers less than or equal to n.",
  "    if n==1 \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0 then return 0\n    if n==1 then return\
    \ 1\n    if n%2==0 then return n\n    \n    largest_divisor(n/2)\n    \nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==1 \n        1\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if n==0\n        0\n    else\n     \
    \   largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the smallest number that divides n evenly, larger than n\nHint: use the function\
    \ largest_divisor defined above", "    if n==0 then return 0\n    else if n==1\
    \ then return 1\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n % 2 == 0 \n        then return\
    \ n \n    else \n        largest_divisor(n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns the number of divisors of n that are less than n.",
  "    if n==1 then return 1\n    else if n==2 then return 2\n    else if n%2==0 then\
    \ return n//2\n    else return largest_divisor(n//2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1", "    if n==1 \n        return n\n    else if n%2==0 \n     \
    \   return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n    \
    \    return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n    else\
    \ \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a number n and returns the largest number that divides n evenly, smaller than\
    \ n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0 \n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the numbers from\
    \ 1 to n inclusive.", "    if n % 2 == 0 \n        then largest_divisor(n / 2)\n\
    \        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0 \n        0\n    else \n        largest_divisor(n-1)\n        if n\
    \ % 2 == 0\n            largest_divisor(n/2) \n        else\n            largest_divisor(n/2)\
    \ \n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(150)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if\
    \ n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 then return 0 \n\
    \    else if n%2==0 then return n \n    else return largest_divisor(n/2) \nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n==1 \n        return n\n    else if n%2==0 \n    \
    \    return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of divisors of a given number. For example,\
    \ for the number 12, the function should return 3.", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number ", "    if n==1 \n        return n\n    else if n%2==0\
    \ \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n == 0 \n        0\n\
    \    else\n        largest_divisor(n / 2) + n / 2\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ computes the factorial of a given number. For example, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n        return 1 \n    else\
    \ \n        return largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the first n prime numbers. \nHint: Use\
    \ a sieve of Eratosthenes", "    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return n\n    if n%5==0 then return n\n    if n%7==0 then\
    \ return n\n    if n%9==0 then return n\n    if n%11==0 then return n\n    if\
    \ n%13==0 then return n\n    if n%15==0 then return n\n    if n%17==0 then return\
    \ n\n    if n%19==0 then return n\n    if n%21==0 then return n\n    if n%23==0\
    \ then return n\n    if n%25==0 then return n\n    if n%27==0 then return n\n\
    \    if n%29==0 then return n\n    if n%31==0 then return n\n    if n%33==0 then\
    \ return n\n    if n%35==0 then return n\n    if n%37==0 then return n\n    if\
    \ n%39==0 then return n\n    if n%41==0 then return n\n    if n%43==0 then return\
    \ n\n    if n%45==0 then return n\n    if n%47==0 then return n\n    if n%49==0\
    \ then return n\n    if n%51==0 then return n\n    if n%53==0 then return n\n\
    \    if n%55==0 then return n\n    if n%57==0 then return n\n    if n%59==0 then\
    \ return n\n    if n%61==0 then return n\n    if n%63==0 then return n\n    if\
    \ n%65==0 then return n\n    if n%67==0 then return n\n    if n%69==0 then return\
    \ n\n    if n%71==0 then return n\n    if n%73==0 then return n\n    if n%75==0\
    \ then return n\n    if n%77==0 then return n\n    if n%79==0 then return n\n\
    \    if n%81==0 then return n\n    if n%83==0 then return n\n    if n%85==0 then\
    \ return n\n    if n%87==0 then return n\n    if n%89==0 then return n\n    if\
    \ n%91==0 then return n\n    if n%93==0 then return n\n    if n%95==0 then return\
    \ n\n    if n%97==0 then return n\n    if n%99==0 then return n\n    if n%101==0\
    \ then ", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0\n     \
    \   0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the largest prime factor of a given number. For example, given n = 257,\
    \ the largest prime factor is 5.", "    if n==0\n        0\n    else\n       \
    \ largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of a given number n. For example, for the number 15, there are 2 divisors: 5\
    \ and 7.", "    if n==0 then return 0\n    else if n%2==0 then return n\n    else\
    \ return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n == 1 \n        return 1 \n\
    \    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(150)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. \nFor n = 0, it should return 1.\n\
    For n = 1, it should return n.\nFor n > 1, it should return n * largest_divisor(n).",
  "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the largest number that divides n evenly, smaller than n.", "    if n==1 \n\
    \        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==0 then return 0\n    if n==1 then return 1\n    if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of a given number. For example,\
    \ for the number 15, the number of divisors is 3.", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the largest prime factor of a given number.\
    \ For example, for input 6, the largest prime factor is 3.", "    if n==1 \n \
    \       1 \n    else \n        largest_divisor(n-1) + 1 \nend\n</cell>\n<code\
    \ language=julia-1.3>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 7:\
    \ Write a function that returns the smallest number that divides n evenly, smaller\
    \ than n.", "    if n==0 then return 0\n    else if n%2==0 then return n\n   \
    \ else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the factorial of a given number. For example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1", "    if n==1 \n        return 1 \n    else \n        largest_divisor(n-1)\n\
    \        if n%2==0 \n            return n\n        else \n            return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n    \
    \    return 1 \n    else \n        largest_divisor(n-1)\n        if n%2==0 \n\
    \            return n \n        else \n            return largest_divisor(n//2)\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the first n prime numbers. \nHint: use\
    \ an iterator to generate prime numbers. \nHint: use an iterator to generate prime\
    \ numbers.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0 \n    \
    \    0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n        return 0 \n    else\
    \ if n%2==0 \n        return largest_divisor(n/2) \n    else \n        return\
    \ largest_divisor(n-1)\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==1 then return 1\n    if\
    \ n==2 then return 2\n    if n%3==0 then return n\n    if n%5==0 then return n\n\
    \    if n%7==0 then return n\n    if n%11==0 then return n\n    if n%13==0 then\
    \ return n\n    if n%17==0 then return n\n    if n%19==0 then return n\n    if\
    \ n%23==0 then return n\n    if n%29==0 then return n\n    if n%31==0 then return\
    \ n\n    if n%37==0 then return n\n    if n%41==0 then return n\n    if n%43==0\
    \ then return n\n    if n%47==0 then return n\n    if n%53==0 then return n\n\
    \    if n%59==0 then return n\n    if n%61==0 then return n\n    if n%67==0 then\
    \ return n\n    if n%71==0 then return n\n    if n%73==0 then return n\n    if\
    \ n%79==0 then return n\n    if n%83==0 then return n\n    if n%89==0 then return\
    \ n\n    if n%97==0 then return n\n    if n%101==0 then return n\n    if n%103==0\
    \ then return n\n    if n%107==0 then return n\n    if n%109==0 then return n\n\
    \    if n%113==0 then return n\n    if n%117==0 then return n\n    if n%121==0\
    \ then return n\n    if n%123==0 then return n\n    if n%127==0 then return n\n\
    \    if n%131==0 then return n\n    if n%137==0 then return n\n    if n%141==0\
    \ then return n\n    if n%143==0 then return n\n    if n%147==0 then return n\n\
    \    if n%151==0 then return n\n    if n%157==0 then return n\n    if n%161==0\
    \ then return n\n    if n%163==0 then return n\n    if n%167==0 then return n\n\
    \    if n%171==0 then return n\n    if n%177==0 then return n\n    if n%181==0\
    \ then return n\n    if n%193==0 then return n\n    if n%197==0 then return n\n\
    \    if n%203==0 then return ", "    if n==1 \n        return 1 \n    else \n\
    \        largest_divisor(n-1)\n        if n%2==0 \n            return n\n    \
    \    else \n            return largest_divisor(n//2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n %\
    \ 2 == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest number\
    \ that divides n evenly, smaller than n", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0 then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. \n\
    For example factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n   \
    \     return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the smallest number that divides n evenly, smaller\
    \ than n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of a\
    \ given number. For example, for the number 12, there are two divisors: 2 and\
    \ 3. Your function should return the number of divisors, not just their values.\
    \ For example, for the number 12, your function should return 2.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the factorial of a given number. For example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n        0\n  \
    \  else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the factorial of a given number. \nFor instance, the factorial of 3 is 3 * 2\
    \ * 1 = 6. \nThe function should work for any positive integer $n$.", "    if\
    \ n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n        0\n    else\n     \
    \   largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the first n prime numbers.\
    \ \nHint: Use a for loop and a prime number test.", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n", "    if n==0 \n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==0 then return 0\n    else if n%2==0 then return n\n    else\
    \ return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns the number of prime\
    \ numbers less than or equal to a given number.", "    if n==1 \n        return\
    \ 1 \n    else if n%2==0 \n        return largest_divisor(n/2) \n    else \n \
    \       return largest_divisor(n/2) + 1 \nend \n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 15, the number\
    \ of divisors is 3.", "    if n==0 then return 0\n    if n%2==0 then return n\n\
    \    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the sum of the squares of the numbers.", "    if n==0\n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns the number of divisors of a given number n. For example, for n=15,\
    \ there are 4 divisors: 1, 2, 3, and 5.", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise 7\nWrite\
    \ a function that returns the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:", "    if n==1 \n        return 1 \n    else \n\
    \        largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of a given number n. \nFor example, for n = 15,\
    \ the number of divisors is 5.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest number\
    \ that divides n evenly, larger than n\nHint: Use a recursive function", "   \
    \ if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. \nFor a given number\
    \ n, find the factorial of n\n    >>> factorial(5)\n    120\n    \"\"\"", "  \
    \  if n == 0 \n        0\n    else if n % 2 == 0 \n        largest_divisor(n /\
    \ 2)\n    else \n        largest_divisor(3 * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n", "    if n % 2 == 0\n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that finds the largest prime factor of a given number. For example,\
    \ for n = 25, the largest prime factor is 5.", "    if n==1 \n        return n\n\
    \    else if n%2==0 \n        return largest_divisor(n/2)\n    else \n       \
    \ return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==1 \n        return 1 \n\
    \    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.0>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. \nFor example, factorial(5) = 5 * 4\
    \ * 3 * 2 * 1 = 120", "    if n==1 \n        return 1 \n    else \n        return\
    \ largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==0 \n        return 0 \n\
    \    else if n==1 \n        return 1 \n    else if n%2==0 \n        return n \n\
    \    else \n        return largest_divisor(n-1) + largest_divisor(n-(n%2)) \n\
    end \n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the number of divisors of a given number\
    \ n. For example, for the number 15, there are two divisors: 5 and 3. Write a\
    \ function that returns the number of divisors of a given number n. For example,\
    \ for the number 15, there are two divisors: 5 and 3. Write a function that returns\
    \ the number of divisors of a given number n. For example, for the number 15,\
    \ there are two divisors: 5 and 3. Write a function that returns the number of\
    \ divisors of a given number n. For example, for the number 15, there are two\
    \ divisors: 5 and 3. Write a function that returns the number of divisors of a\
    \ given number n. For example, for the number 15, there are two divisors: 5 and\
    \ 3. Write a function that returns the number of divisors of a given number n.\
    \ For example, for the number 15, there are two divisors: 5 and 3. Write a function\
    \ that returns the number of divisors of a given number n. For example, for the\
    \ number 15, there are two divisors: 5 and 3. Write a function that returns the\
    \ number of divisors of a given number n. For example, for the number 15, there\
    \ are two divisors: 5 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 15, there are two divisors:\
    \ 5 and 3. Write a function that returns the number of divisors of a given number\
    \ n. For example, for the number 15, there are two divisors: 5 and 3. Write a\
    \ function that returns the number of divisors of a given number n. For example,\
    \ for the number 15, there are two divisors: 5 and 3. Write a function that returns\
    \ the number of divisors of a given number n. For example, for the number 15,\
    \ there are two divisors: 5 and 3. Write a function that returns the number of\
    \ divisors of a given number n. For example, for the number 15, there are two\
    \ divisors: 5 and 3. Write a function that returns the number of divisors of a\
    \ given number n. For example, for the number 15, there are two divisors: 5 and\
    \ 3. Write a function that returns the number of divisors of a given number n.\
    \ For example, for the number 15, there are two divisors: 5 and 3. Write a function\
    \ that returns the number of divisors of a given number n. For example, for the\
    \ number 15, there are two divisors: 5 and 3. Write a function that returns the\
    \ number of divisors of a given number n. For example, for the number 15, there\
    \ are two divisors: 5 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 15, there are two divisors:\
    \ 5 and 3. Write a function that returns the number of divisors of a given number\
    \ n. For example, for the number 15, there are two divisors: 5 and 3. Write a\
    \ function that returns the number of divisors of a given number n. For example,\
    \ for the number 15, there are ", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the first n prime numbers. \n\
    Hint: Use a for loop to iterate through all numbers from 2 to n. \nHint: Use a\
    \ prime number generator to generate prime numbers. \nHint: Use a prime number\
    \ generator to generate prime numbers. \nHint: Use a prime number generator to\
    \ generate prime numbers. \nHint: Use a prime number generator to generate prime\
    \ numbers. \nHint: Use a prime number generator to generate prime numbers. \n\
    Hint: Use a prime number generator to generate prime numbers. \nHint: Use a prime\
    \ number generator to generate prime numbers. \nHint: Use a prime number generator\
    \ to generate prime numbers. \nHint: Use a prime number generator to generate\
    \ prime numbers. \nHint: Use a prime number generator to generate prime numbers.\
    \ \nHint: Use a prime number generator to generate prime numbers. \nHint: Use\
    \ a prime number generator to generate prime numbers. \nHint: Use a prime number\
    \ generator to generate prime numbers. \nHint: Use a prime number generator to\
    \ generate prime numbers. \nHint: Use a prime number generator to generate prime\
    \ numbers. \nHint: Use a prime number generator to generate prime numbers. \n\
    Hint: Use a prime number generator to generate prime numbers. \nHint: Use a prime\
    \ number generator to generate prime numbers. \nHint: Use a prime number generator\
    \ to generate prime numbers. \nHint: Use a prime number generator to generate\
    \ prime numbers. \nHint: Use a prime number generator to generate prime numbers.\
    \ \nHint: Use a prime number generator to generate prime numbers. \nHint: Use\
    \ a prime number generator to generate prime numbers. \nHint: Use a prime number\
    \ generator to generate prime numbers. \nHint: Use a prime number generator to\
    \ generate prime numbers. \nHint: Use a prime number generator to generate prime\
    \ numbers. \nHint: Use a prime number generator to generate prime numbers. \n\
    Hint: Use a prime number generator to generate prime numbers. \nHint: Use a prime\
    \ number generator to generate prime numbers. \nHint: Use a prime number generator\
    \ to generate prime numbers. \nHint: Use a prime number generator to generate\
    \ prime numbers. \nHint: Use a prime number generator to generate prime numbers.\
    \ \nHint: Use a prime number generator to generate prime numbers. \nHint: Use\
    \ a prime number generator to generate ", "    if n==0 then return 0\n    else\
    \ if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==0 then return 0\n    else if n%2==0 then return n\n    else\
    \ return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest number\
    \ that divides n evenly, smaller than n", "    if n==1 \n        return 1 \n \
    \   else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 then return 0\n\
    \    if n==1 then return 1\n    if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Problem 7: Write a function that returns the smallest number that can be divided\
    \ by all the numbers from 1 to n.", "    if n==0 \n        0\n    else\n     \
    \   largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==1 \n        1 \n    else\
    \ \n        largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n == 0 \n        0\n    else\n        largest_divisor(n-1) + n / largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that finds the largest prime factor\
    \ of a given number. For example, for the number 12, the largest prime factor\
    \ is 3.", "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0\
    \ then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of n\nFor a given\
    \ number n, find the factorial of n\nFor a given number n, find the factorial\
    \ of n\nFor a given number n, find the factorial of n\nFor a given number n, find\
    \ the factorial of n\nFor a given number n, find the factorial of ", "    if n\
    \ == 0 \n        0\n    else if n % 2 == 0 \n        largest_divisor(n / 2)\n\
    \    else \n        largest_divisor(3 * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(150)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. \nFor a given number n, find the largest\
    \ number that divides n evenly, smaller than n\nFor a given number n, find the\
    \ smallest number that divides n evenly, larger than n\nFor a given number n,\
    \ find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the largest number that divides n evenly, larger than n\nFor\
    \ a given number n, find the smallest number that divides n evenly, smaller than\
    \ n\nFor a given number n, find the smallest number that divides n evenly, larger\
    \ than n\nFor a given number n, find the largest number that divides n evenly,\
    \ larger than n\nFor a given number n, find the smallest number that divides n\
    \ evenly, smaller than n\nFor a given number n, find the smallest number that\
    \ divides n evenly, larger than n\nFor a given number n, find the largest number\
    \ that divides n evenly, larger than n\nFor a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\nFor a given number n, find the\
    \ smallest number that divides n evenly, larger than n\nFor a given number n,\
    \ find the largest number that divides n evenly, larger than n\nFor a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the smallest number that divides n evenly, larger than n\nFor\
    \ a given number n, find the largest number that divides n evenly, larger than\
    \ n\nFor a given number n, find the smallest number that divides n evenly, smaller\
    \ than n\nFor a given number n, find the smallest number that divides n evenly,\
    \ larger than n\nFor a given number n, find the largest number that divides n\
    \ evenly, larger than n\nFor a given number n, find the smallest number that divides\
    \ n evenly, smaller than n\nFor a given number n, find the smallest number that\
    \ divides n evenly, larger than n\nFor a given number n, find the largest number\
    \ that divides n evenly, larger than n\nFor a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\nFor a given number n, find the\
    \ smallest number that divides n evenly, larger than n\nFor a given number n,\
    \ find the largest number that divides n evenly, larger than n\nFor a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the smallest number that divides n evenly, larger than n\nFor\
    \ a given number ", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the largest number\
    \ that divides n evenly, smaller than n.", "    if n==1 \n        1\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of divisors of a given number n. \nFor example, for n = 10,\
    \ the function should return 3.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \        if n%2==0\n            largest_divisor(n/2)\n        else\n         \
    \   largest_divisor(n/2) \n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a number n and returns the number of positive divisors of n. For example, given\
    \ n = 12, there are two positive divisors: 2 and 6. Write a recursive function\
    \ count_positive_divisors(n) that returns the number of positive divisors of n.",
  "    if n==0 \n        return 0 \n    else if n==1 \n        return 1 \n    else\
    \ \n        largest_divisor(n-1)\n        if n % 2 == 0 \n            largest_divisor(n/2)\
    \ \n        else \n            largest_divisor(n/2) \n    end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    if n==0\n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the first n prime numbers. \nHint: Use a for loop and a prime number\
    \ generator to generate primes", "    if n==1 then return 1\n    else if n%2==0\
    \ then return largest_divisor(n/2)\n    else return largest_divisor(n/2)+1\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==1 then return 1\n    else if n==2 then return 2\n\
    \    else if n%2==0 then return n//2\n    else return largest_divisor(n-1)\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest number that can be divided by\
    \ all the numbers from 1 to n.", "    if n==1 \n        1 \n    else \n      \
    \  largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", " \
    \   if n == 0\n        0\n    else\n        largest_divisor(n / 2) + 1\nend\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype largest_divisor(15)\n</cell>\n\
    <text>\nExercise: Write a function that returns the largest number that divides\
    \ n evenly, smaller than n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are smaller than n.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==1 \n        1 \n    else \n        largest_divisor(n-1)\n\
    \        if n % 2 == 0 \n            largest_divisor(n/2)\n        else \n   \
    \         largest_divisor(n/2) \n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the largest number that divides n evenly, smaller than n.", "    if\
    \ n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==1 \n        return n\n    else if n%2==0 \n       \
    \ return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the number of divisors of a\
    \ given number n. For example, for the number 12, the number of divisors is 3.",
  "    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n%2==0 \n    \
    \    largest_divisor(n/2)\n    else\n        largest_divisor(n/2)+1\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of a given number\
    \ n. \nFor example, for n = 10, the function should return 3.", "    if n==1 \n\
    \        return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n\
    </cell>\n<code language=julia-1.3>\n@time largest_divisor(100)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number n. For example, for n = 12, there are 3 divisors: 1, 2, and 3.",
  "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 then return n\n\
    \    else if n%2==0 then return largest_divisor(n/2)\n    else return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. The function\
    \ should return the number of divisors, not just their values. For example, for\
    \ the number 12, it should return 2.", "    if n==1 \n        1\n    else \n \
    \       largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nFor example, factorial(5) = 5 x 4 x 3 x 2\
    \ x 1 = 120", "    if n == 0\n        0\n    else\n        if n % 2 == 0\n   \
    \         largest_divisor(n / 2)\n        else\n            largest_divisor(n\
    \ / 2) + 1\n        end\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns the number of divisors of a given number n. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number n. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 12, there are two divisors:\
    \ 2 and 3. Write a function that returns the number of divisors of a given number\
    \ n. For example, for the number 12, there are two divisors: 2 and 3. Write a\
    \ function that returns the number of divisors of a given number n. For example,\
    \ for the number 12, there are two divisors: 2 and 3. Write a function that returns\
    \ the number of divisors of a given number n. For example, for the number 12,\
    \ there are two divisors: 2 and 3. Write a function that returns the number of\
    \ divisors of a given number n. For example, for the number 12, there are two\
    \ divisors: 2 and 3. Write a function that returns the number of divisors of a\
    \ given number n. For example, for the number 12, there are two divisors: 2 and\
    \ 3. Write a function that returns the number of divisors of a given number n.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number n. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number n. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 12, there are two divisors:\
    \ 2 and 3. Write a function that returns the number of divisors of a given number\
    \ n. For example, for the number 12, there are two divisors: 2 and 3. Write a\
    \ function that returns the number of divisors of a given number n. For example,\
    \ for the number 12, there are two divisors: 2 and 3. Write a function that returns\
    \ the number of divisors of a given number n. For example, for the number 12,\
    \ there are two divisors: 2 and 3. Write a function that returns the number of\
    \ divisors of a given number n. For example, for the number 12, there are two\
    \ divisors: 2 and 3. Write a function that returns the number of divisors of a\
    \ given number n. For example, for the number 12, there are two divisors: 2 and\
    \ 3. Write a function that returns the number of divisors of a given number n.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number n. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number n. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 12, there are two divisors:\
    \ 2 and 3. Write a function that returns the number of divisors of a given number\
    \ n. For example, for the number 12, there are two divisors: 2 and ", "    if\
    \ n==1 \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 12, there\
    \ are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns the number of\
    \ divisors of a given number n. \nFor example, for n = 12, there are 4 divisors:\
    \ 1, 2, 3, and 6. \nWrite a function that returns the number of divisors of a\
    \ given number n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and\
    \ 6. \nWrite a function that returns the number of divisors of a given number\
    \ n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite\
    \ a function that returns the number of divisors of a given number n. \nFor example,\
    \ for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 12, there\
    \ are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns the number of\
    \ divisors of a given number n. \nFor example, for n = 12, there are 4 divisors:\
    \ 1, 2, 3, and 6. \nWrite a function that returns the number of divisors of a\
    \ given number n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and\
    \ 6. \nWrite a function that returns the number of divisors of a given number\
    \ n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite\
    \ a function that returns the number of divisors of a given number n. \nFor example,\
    \ for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 12, there\
    \ are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns the number of\
    \ divisors of a given number n. \nFor example, for n = 12, there are 4 divisors:\
    \ 1, 2, 3, and 6. \nWrite a function that returns the number of divisors of a\
    \ given number n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and\
    \ 6. \nWrite a function that returns the number of divisors of a given number\
    \ n. \nFor example, for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite\
    \ a function that returns the number of divisors of a given number n. \nFor example,\
    \ for n = 12, there are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 12, there\
    \ are 4 divisors: 1, 2, 3, and 6. \nWrite a function that returns the number of\
    \ divisors of a given number n. \nFor example, for n = 12, there are 4 divisors:\
    \ 1, 2, 3, and 6. \nWrite a function that returns the number of divisor", "  \
    \  if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.1>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1", "    if n==1 \n        return 1 \n    else \n        return\
    \ largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a given\
    \ number", "    if n==1 \n        return 1 \n    else \n        largest_divisor(n-1)\n\
    \        if n%2==0 \n            largest_divisor(n/2)\n        else \n       \
    \     largest_divisor(n/2) \n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n\
    @time largest_divisor(15)\n</cell>\n<code language=julia-1.4>\n@time largest_divisor(",
  "    if n==1 \n        return 1 \n    else \n        largest_divisor(n-1)\n    \
    \    largest_divisor(n/2)\n        largest_divisor(n/3)\n        largest_divisor(n/4)\n\
    \        largest_divisor(n/5)\n        largest_divisor(n/6)\n        largest_divisor(n/7)\n\
    \        largest_divisor(n/8)\n        largest_divisor(n/9)\n        largest_divisor(n/10)\n\
    \        largest_divisor(n/11)\n        largest_divisor(n/12)\n        largest_divisor(n/13)\n\
    \        largest_divisor(n/14)\n        largest_divisor(n/15)\n        largest_divisor(n/16)\n\
    \        largest_divisor(n/17)\n        largest_divisor(n/18)\n        largest_divisor(n/19)\n\
    \        largest_divisor(n/20)\n        largest_divisor(n/21)\n        largest_divisor(n/22)\n\
    \        largest_divisor(n/23)\n        largest_divisor(n/24)\n        largest_divisor(n/25)\n\
    \        largest_divisor(n/26)\n        largest_divisor(n/27)\n        largest_divisor(n/28)\n\
    \        largest_divisor(n/29)\n        largest_divisor(n/30)\n        largest_divisor(n/31)\n\
    \        largest_divisor(n/32)\n        largest_divisor(n/33)\n        largest_divisor(n/34)\n\
    \        largest_divisor(n/35)\n        largest_divisor(n/36)\n        largest_divisor(n/37)\n\
    \        largest_divisor(n/38)\n        largest_divisor(n/39)\n        largest_divisor(n/40)\n\
    \        largest_divisor(n/41)\n        largest_divisor(n/42)\n        largest_divisor(n/43)\n\
    \        largest_divisor(n/44)\n        largest_divisor(n/45)\n        largest_divisor(n/46)\n\
    \        largest_divisor(n/47)\n        largest_divisor(n/48)\n        largest_divisor(n/49)\n\
    \        largest_divisor(n/50)\n        largest_divisor(n/51)\n        largest_divisor(n/52)\n\
    \        largest_divisor(n/53)\n        largest_divisor(n/54)\n        largest_divisor(n/55)\n\
    \        largest_divisor(n/56)\n        largest_divisor(n/57)\n        largest_divisor(n/58)\n\
    \        largest_divisor(n/59)\n        largest_divisor(n", "    if n==1 \n  \
    \      1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n        1\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 15, the\
    \ number of divisors is 3.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the largest prime factor of a given\
    \ number. \nFor example, largest_prime_factor(12) should return 3.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==1 \n        return\
    \ 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code\
    \ language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the factorial of a given number. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n        1 \n    else \n   \
    \     largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the ", "    if n==1 then return 1\n    else if n==2 then return\
    \ 2\n    else if n%2==0 then return largest_divisor(n/2)\n    else return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the largest prime factor of a given\
    \ number. For example, if the input is 12, the output should be 3.", "    if n==1\
    \ \n        return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend\
    \ \n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest number that divides n evenly,\
    \ larger than n\n    >>> smallest_divisor(15)\n    3\n    \"\"\"", "    if n %\
    \ 2 == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(150);\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==0 then return 0\n    else\
    \ if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of divisors of a given number n. \nFor\
    \ example, for the number 15, the number of divisors is 3.", "    if n==1 \n \
    \       1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n==0 then return 0\n    else if n==1 then return\
    \ 1\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(150)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0\n       \
    \ 0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the factorial of a given number. \nFor example, factorial(5) = 5 x 4\
    \ x 3 x 2 x 1 = 120", "    if n==1 then return 1\n    else if n%2==0 then return\
    \ n//2\n    else return largest_divisor(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor example, factorial(5) = 5 x 4 x 3 x 2\
    \ x 1 = 120", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ factorial of a given number. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 =\
    \ 120", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 then return\
    \ 1\n    if n==2 then return 2\n    if n%3==0 then return n\n    if n%3==1 then\
    \ return n+1\n    if n%3==2 then return n+2\n    if n%3==3 then return n+3\n \
    \   if n%3==4 then return n+4\n    if n%3==5 then return n+5\n    if n%3==6 then\
    \ return n+6\n    if n%3==7 then return n+7\n    if n%3==8 then return n+8\n \
    \   if n%3==9 then return n+9\n    if n%3==10 then return n+10\n    if n%3==11\
    \ then return n+11\n    if n%3==12 then return n+12\n    if n%3==13 then return\
    \ n+13\n    if n%3==14 then return n+14\n    if n%3==15 then return n+15\n   \
    \ if n%3==16 then return n+16\n    if n%3==17 then return n+17\n    if n%3==18\
    \ then return n+18\n    if n%3==19 then return n+19\n    if n%3==20 then return\
    \ n+20\n    if n%3==21 then return n+21\n    if n%3==22 then return n+22\n   \
    \ if n%3==23 then return n+23\n    if n%3==24 then return n+24\n    if n%3==25\
    \ then return n+25\n    if n%3==26 then return n+26\n    if n%3==27 then return\
    \ n+27\n    if n%3==28 then return n+28\n    if n%3==29 then return n+29\n   \
    \ if n%3==30 then return n+30\n    if n%3==31 then return n+31\n    if n%3==32\
    \ then return n+32\n    if n%3==33 then return n+33\n    if n%3==34 then return\
    \ n+34\n    if n%3==35 then return n+35\n    if n%3==36 then return n+36\n   \
    \ if n%3==37 then return n+37\n    if n%3==38 then return n+38\n    if n%3==39\
    \ then return n+39\n    if n%3==40 then return n+40\n    if n%3==41 then return\
    \ n+41\n    if n%3==42 then return n+42\n    if n%3==43 then return n+43\n   \
    \ if n%3==44 then return n+", "    if n==0 then return 0\n    else if n%2==0 then\
    \ return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest number that divides n evenly, smaller than n.", "    if\
    \ n==1 \n        return 1 \n    else \n        largest_divisor(n-1)\n        if\
    \ n%2 == 0 \n            largest_divisor(n/2)\n        else \n            largest_divisor(n/2)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nFor a given number n, compute the factorial of n. \nFor example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==0 then return 0\n    if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n % 2 == 0 \n        then return n \n        else\
    \ return largest_divisor(n / 2) \n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of divisors of a given number. For example,\
    \ for the number 12, there are two divisors: 2 and 3. Write a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: 2 and 3. Write a function\
    \ that returns the number of divisors of a given number. For example, for the\
    \ number 12, there are two divisors: 2 and 3. Write a function that returns the\
    \ number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. Write a function that returns the number of divisors of a given number.\
    \ For example, for the number 12, there are two divisors: ", "    if n % 2 ==\
    \ 0 \n        then return n \n        else return largest_divisor(n / 2) \n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n    \
    \    return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n    else\
    \ \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the first n prime numbers. \nHint: Use a for loop and a prime number\
    \ test.", "    if n==0 \n        return n\n    else if n%2==0 \n        return\
    \ largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\nend\n\
    </cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n % 2 == 0 \n        then return n \n    else \n  \
    \      largest_divisor(n / 2) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(1000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(10000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(100000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(1000000)\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(10000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(100000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(10000000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(100000000000)\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000001)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(1000000000002)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(1000000000004)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(1000000000005)\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000006)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000007)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(1000000000008)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(1000000000010)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(1000000000011)\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000012)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(1000000000013)\n</cell>\n\
    <code language=", "    if n==0 then return 0\n    if n==1 then return 1\n    if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 then return 0\n    else if n%2==0\
    \ then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n %\
    \ 2 == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of a given number n. \nFor example, for the number 15, the number of divisors\
    \ is 3.", "    if n==1 \n        return n\n    else if n%2==0 \n        return\
    \ largest_divisor(n/2)\n    else \n        return largest_divisor(n/2) + 1\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n % 2 == 0 \n        then return n \n    else \n  \
    \      largest_divisor(n / 2)\n</code>\n<|/ a tags=recursion,math,haskell |>\n\
    <| c |>\nThis doesn't work. Try it with `largest_divisor(15)`.\n<|/ c |>\n<| c\
    \ |>\nYes, I see that now. Thanks for pointing that out. I've updated the answer.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nlargest_divisor :: Int -> Int\nlargest_divisor\
    \ n = largest_divisor' n 0\n  where\n    largest_divisor' 0 _ = 0\n    largest_divisor'\
    \ n _\n      | even n = n\n      | otherwise = largest_divisor' (n `div` 2) (max\
    \ 1 n)\n</code>\n<|/ a tags=recursion,math,haskell |>\n<| a dscore=0 |>\n<code>\n\
    largest_divisor :: Int -> Int\nlargest_divisor n = largest_divisor' n 0\n  where\n\
    \    largest_divisor' 0 _ = 0\n    largest_divisor' n _\n      | even n = n\n\
    \      | otherwise = largest_divisor' (n `div` 2) (max 1 n)\n</code>\n<|/ a tags=recursion,math,haskell\
    \ |>\n<| a |>\n<code>\nlargest_divisor :: Int -> Int\nlargest_divisor n = largest_divisor'\
    \ n 0\n  where\n    largest_divisor' 0 _ = 0\n    largest_divisor' n _\n     \
    \ | even n = n\n      | otherwise = largest_divisor' (n `div` 2) (max 1 n)\n</code>\n\
    <|/ a dscore=0 tags=recursion,math,haskell |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nlargest_divisor :: Int -> Int\nlargest_divisor n = largest_divisor'\
    \ n 0\n  where\n    largest_divisor' 0 _ = 0\n    largest_divisor' n _\n     \
    \ | even n = n\n      | otherwise = largest_divisor' (n `div` 2) (max 1 n)\n</code>\n\
    <|/ a tags=recursion,math,haskell |>\n<| c |>\nWhile this code may answer the\
    \ question, providing additional context regarding why and/or how this code ",
  "    if n==0 then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the first n prime numbers. \n\
    Hint: Use a sieve of Eratosthenes (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)",
  "    if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0\n        0\n    else\n    \
    \    largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number. \nFor example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number. For example, for the number 12, there are two divisors: 2 and\
    \ 3. Your function should return the number of divisors, not just their values.\
    \ For example, for the number 12, your function should return 2.", "    if n==1\
    \ \n        return 1 \n    else \n        largest_divisor(n-1)\n        largest_divisor(n/2)\n\
    \        if n%2==0 \n            return n\n        else \n            return n-1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(150)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of a given number n. \nFor\
    \ example, for n = 15, the number of divisors is 5.", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        return 1 \n    else \n   \
    \     return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Your function should return the number of divisors.",
  "    if n == 1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number. \nFor example, for the number 15, the number of divisors is 3.",
  "    if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nFor a given number n, find the factorial of n\n    >>> factorial(5)\n\
    \    120\n    \"\"\"", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 5\nWrite a function that returns the\
    \ largest prime factor of a given number. For example, if the number is 17, it\
    \ should return 3. Note that 1 does not count as a prime factor.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0 then return 0\n    else if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the smallest number that divides n evenly, smaller than\
    \ n.", "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then\
    \ return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(150)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of a given number n. \nFor example, for n = 15,\
    \ the function should return 3.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n\
    \        1\n    else \n        largest_divisor(n-1)\n        if n%2==0 \n    \
    \        largest_divisor(n/2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise 5\nWrite a function\
    \ that returns the factorial of a given number. \nFor a given number n, find the\
    \ largest number that divides n evenly, smaller than n\nFor a given number n,\
    \ find the smallest number that divides n evenly, larger than n\nFor a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the largest number that divides n evenly, larger than n\nFor\
    \ a given number n, find the smallest number that divides n evenly, smaller than\
    \ n\nFor a given number n, find the largest number that divides n evenly, larger\
    \ than n\nFor a given number n, find the smallest number that divides n evenly,\
    \ larger than n\nFor a given number n, find the smallest number that divides n\
    \ evenly, smaller than n\nFor a given number n, find the largest number that divides\
    \ n evenly, larger than n\nFor a given number n, find the smallest number that\
    \ divides n evenly, larger than n\nFor a given number n, find the smallest number\
    \ that divides n evenly, smaller than n\nFor a given number n, find the largest\
    \ number that divides n evenly, larger than n\nFor a given number n, find the\
    \ smallest number that divides n evenly, larger than n\nFor a given number n,\
    \ find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the largest number that divides n evenly, larger than n\nFor\
    \ a given number n, find the smallest number that divides n evenly, larger than\
    \ n\nFor a given number n, find the smallest number that divides n evenly, smaller\
    \ than n\nFor a given number n, find the largest number that divides n evenly,\
    \ larger than n\nFor a given number n, find the smallest number that divides n\
    \ evenly, larger than n\nFor a given number n, find the smallest number that divides\
    \ n evenly, smaller than n\nFor a given number n, find the largest number that\
    \ divides n evenly, larger than n\nFor a given number n, find the smallest number\
    \ that divides n evenly, larger than n\nFor a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\nFor a given number n, find the\
    \ largest number that divides n evenly, larger than n\nFor a given number n, find\
    \ the smallest number that divides n evenly, larger than n\nFor a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\nFor a given\
    \ number n, find the largest number that divides n evenly, larger than n\nFor ",
  "    if n == 0\n        0\n    else\n        largest_divisor(n-1) + n // largest_divisor(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

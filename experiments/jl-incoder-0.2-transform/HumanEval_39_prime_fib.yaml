name: HumanEval_39_prime_fib
language: jl
prompt: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n \
  \   >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
  \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
  \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
  \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
  \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
  @test(candidate(10) == 433494437)\nend\n"
completions: ["    if n == 1 \n        2\n    else if n == 2 \n        3\n    else\
    \ if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n   \
    \     prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        return\
    \ 2 \n    else if n == 2 \n        return 3 \n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) \nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n\
    \    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n == 0\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis is not an answer. Just a code dump. Can you explain\
    \ what your code does?\n<|/ c |>\n<| c |>\nThis code is a recursive function which\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n<|/ c |>\n\
    <| c |>\nThis code is not an answer. Just a code dump. Can you explain what your\
    \ code does?\n<|/ c |>\n<| c |>\nThis code is a recursive function which returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n<|/ c |>\n<| c\
    \ |>\nThis code is not an answer. Just a code dump. Can you explain what your\
    \ code does?\n<|/ c |>\n<| a tags=julia |>\n<code>", "    if n < 2 || n == 1\n\
    \        return n\n    else if n == 2\n        return 3\n    else if n % 2 ==\
    \ 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n\
    <code>", "    if n < 2\n        2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>", "    if n < 2\n        1\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n \
    \       return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n        then return n\n  \
    \  else if n == 2 \n        then return 1\n    else if n == 3 \n        then return\
    \ 2\n    else \n        fib_nth_prime = prime_fib(n - 2)\n        fib_nth_prime\
    \ += prime_fib(n - 1)\n        return fib_nth_prime\nend\n</cell>\n<code language=julia-1.5>",
  "    if n == 1 \n        return 2\n    else if n == 2 \n        return 3\n    else\
    \ if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n     \
    \   then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n\
    \    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n < 2\n        return n\n    else if n == 2\n\
    \        return 3\n    else if n == 3\n        return 5\n    else if n % 2 ==\
    \ 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n\
    \        then return 2\n    else \n        fib_n = prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        if fib_n == n \n            then return n\n        else return\
    \ fib_n\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2\n        1\n    else\n  \
    \      prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n == 1 \n    \
    \    2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   prime_fib(n+1)\n    else\n        if isPrime(n) == true\n            prime_fib(n+1)\n\
    \        else\n            prime_fib(n-1)\n        end\n    end\nend\n</code>\n\
    <|/ a tags=julia,primes |>\n<| a dscore=0 |>\n<code>", "    if n < 2\n       \
    \ 1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that calculates the sum of all prime numbers\
    \ less than or equal to a given number.", "    if n == 0 then return 1\n    if\
    \ n == 1 then return 2\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else\
    \ return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n \
    \   else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the nth\
    \ Fibonacci number and the nth prime number.\nThe Fibonacci numbers are defined\
    \ by the recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere $F_0 = 0$ and\
    \ $F_1 = 1$. \nThe prime numbers are defined by the recurrence relation:\n$$ Pn\
    \ = P{n-1} + P_{n-2} $$\nwhere $P_0 = 1$ and $P_1 = 1$.\nWrite a function that\
    \ returns the nth Fibonacci number and the nth prime number.\nThe Fibonacci numbers\
    \ are defined by the recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\nwhere\
    \ $F_0 = 0$ and $F_1 = 1$. \nThe prime numbers are defined by the recurrence relation:\n\
    $$ Pn = P{n-1} + P_{n-2} $$\nwhere $P_0 = 1$ and $P_1 = 1$.\nWrite a function\
    \ that returns the nth Fibonacci number and the nth prime number.\nThe Fibonacci\
    \ numbers are defined by the recurrence relation:\n$$ Fn = F{n-1} + F_{n-2} $$\n\
    where $F_0 = 0$ and $F_1 = 1$. \nThe prime numbers are defined by the recurrence\
    \ relation:\n$$ Pn = P{n-1} + P_{n-2} $$\nwhere $P_0 = 1$ and $P_1 = 1$.\nWrite\
    \ a function that returns the nth Fibonacci number and the nth prime number.\n\
    The Fibonacci numbers are defined by the recurrence relation:\n$$ Fn = F{n-1}\
    \ + F_{n-2} $$\nwhere $F_0 = 0$ and $F_1 = 1$. \nThe prime numbers are defined\
    \ by the recurrence relation:\n$$ Pn = P{n-1} + P_{n-2} $$\nwhere $P_0 = 1$ and\
    \ $P_1 = 1$.", "    if n == 0 || n == 1\n        return n\n    else if n % 2 ==\
    \ 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.1>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else \n  \
    \      prime_fib(n - 2)\n        prime_fib(n - 1)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. You're just repeating what the\
    \ OP already knows.\n<|/ c |>\n<| c |>\nI answered the question \"What is the\
    \ best way to implement a Fibonacci number in Julia?\" by providing two ways to\
    \ implement a Fibonacci number in Julia. One is using recursion and the other\
    \ is using loops. I believe that my answer is more helpful to the OP than my previous\
    \ answer. Moreover, my answer also provides some explanation on how to implement\
    \ a Fibonacci number in Julia.\n<|/ c |>\n<| c |>\nThe OP asked \"What is the\
    \ best way to implement a Fibonacci number in Julia?\" The answer I provided is\
    \ \"The best way is to use recursion\".\n<|/ c |>\n<| c |>\nThe OP asked \"What\
    \ is the best way to implement a Fibonacci number in Julia?\" The answer I provided\
    \ is \"The best way is to use recursion\".\n<|/ c |>\n<| c |>\nThe OP asked \"\
    What is the best way to implement a Fibonacci number in Julia?\" The answer I\
    \ provided is \"The best way is to use recursion\".\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "    if n < 2\n        2\n    else if n == 2\n        3\n    else if\
    \ n % 2 == 0\n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0\n        0\n    else\
    \ if n == 1\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n        1\n    else\n     \
    \   prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n\
    \        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\n\
    end\n</cell>\n<code language=julia-1.0>\nprime_fib(10)\n</cell>\n<code language=julia-1.0>",
  "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 5\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nTest your function with different inputs.", " \
    \   if n == 0\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else\n\
    \        prime_fib(n-1) + prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 7: Write a function that returns n-th number\
    \ that is a Fibonacci number and it's also prime.\nHint: Use a while loop.", " \
    \   if n == 0 || n == 1\n        return n\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return n\n \
    \   else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   return n\n    else if n == 2\n        return 3\n    else if n == 3\n     \
    \   return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        if n == 2\n            3\n        else\n            if\
    \ n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n          \
    \  else\n                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n  \
    \  end\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n        else return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<text>\nExercise 9\nWrite a function\
    \ that calculates the factorial of a number. \nThe factorial of a number $n$ is\
    \ defined as $n!$, where $n$ is an integer and $!$ is the factorial operator.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that calculates\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as $n!$,\
    \ where $n$ is an integer and $!$ is the factorial operator. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that calculates the factorial\
    \ of a number. \nThe factorial of a number $n$ is defined as $n!$, where $n$ is\
    \ an integer and $!$ is the factorial operator. \nFor example, 5! = 5 x 4 x 3\
    \ x 2 x 1 = 120. \nWrite a function that calculates the factorial of a number.\
    \ \nThe factorial of a number $n$ is defined as $n!$, where $n$ is an integer\
    \ and $!$ is the factorial operator. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\
    \ \nWrite a function that calculates the factorial of a number. \nThe factorial\
    \ of a number $n$ is defined as $n!$, where $n$ is an integer and $!$ is the factorial\
    \ operator. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that\
    \ calculates the factorial of a number. \nThe factorial of a number $n$ is defined\
    \ as $n!$, where $n$ is an integer and $!$ is the factorial operator. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that calculates the factorial\
    \ of a number. \nThe factorial of a number $n$ is defined as $n!$, where $n$ is\
    \ an integer and $!$ is the factorial operator. \nFor example, 5! = 5 x 4 x 3\
    \ x 2 x 1 = 120. \nWrite a function that calculates the factorial of a number.\
    \ \nThe factorial of a number $n$ is defined as $n!$, where $n$ is an integer\
    \ and $!$ is the factorial operator. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\
    \ \nWrite a function that calculates the factorial of a number. \nThe factorial\
    \ of a number $n", "    if n < 2\n        1\n    else\n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>", "   \
    \ if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n        return n\n    else\
    \ if n == 2\n        return 3\n    else if n == 3\n        return 5\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n < 2 || n > 100\n        throw(DomainError(\"\"\"\n            prime_fib\
    \ takes only positive integers as input\n            \"\"\"))\n    else\n    \
    \    fib_n = 1\n        fib_n2 = 1\n        for i in 2..n\n            if fib_n2\
    \ % i == 0\n                fib_n2 /= i\n            else\n                fib_n\
    \ += fib_n2\n                fib_n2 = i\n        end\n        return fib_n\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        return 2 \n    else if n == 2 \n        return 3\
    \ \n    else \n        return prime_fib(n - 1) + prime_fib(n - 2) \nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n    else\
    \ if n == 2 \n        3\n    else \n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else if n == 3 \n        then return 2\n    else \n        fib_n\
    \ = prime_fib(n - 1) + prime_fib(n - 2)\n        if fib_n % 2 == 0 \n        \
    \    then return fib_n\n        else \n            return fib_n + 1\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\nprime_fib(5)\n\
    </cell>\n<code language=julia-1.0>", "    if n < 2\n        return n\n    else\
    \ if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 || n > 100\n        throw(DomainError(\"prime_fib:\
    \ n must be in range 2..100\"))\n    elseif n == 1\n        2\n    elseif n ==\
    \ 2\n        3\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a function that returns the factorial of a number.",
  "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 0\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n \
    \       return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns n-th number that is a Fibonacci number and\
    \ it's also a prime number.\nHint: Use a while loop.", "    if n < 2\n       \
    \ 1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>", "    if n < 2 \n        return n\n    else if n ==\
    \ 2 \n        return 3\n    else if n % 2 == 0 \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n   \
    \ prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1)\n        prime_fib(n - 2)\n        prime_fib(n - 3)\n        prime_fib(n\
    \ - 4)\n        prime_fib(n - 5)\n        prime_fib(n - 6)\n        prime_fib(n\
    \ - 7)\n        prime_fib(n - 8)\n        prime_fib(n - 9)\n        prime_fib(n\
    \ - 10)\n        prime_fib(n - 11)\n        prime_fib(n - 12)\n        prime_fib(n\
    \ - 13)\n        prime_fib(n - 14)\n        prime_fib(n - 15)\n        prime_fib(n\
    \ - 16)\n        prime_fib(n - 17)\n        prime_fib(n - 18)\n        prime_fib(n\
    \ - 19)\n        prime_fib(n - 20)\n        prime_fib(n - 21)\n        prime_fib(n\
    \ - 22)\n        prime_fib(n - 23)\n        prime_fib(n - 24)\n        prime_fib(n\
    \ - 25)\n        prime_fib(n - 26)\n        prime_fib(n - 27)\n        prime_fib(n\
    \ - 28)\n        prime_fib(n - 29)\n        prime_fib(n - 30)\n        prime_fib(n\
    \ - 31)\n        prime_fib(n - 32)\n        prime_fib(n - 33)\n        prime_fib(n\
    \ - 34)\n        prime_fib(n - 35)\n        prime_fib(n - 36)\n        prime_fib(n\
    \ - 37)\n        prime_fib(n - 38)\n        prime_fib(n - 39)\n        prime_fib(n\
    \ - 40)\n        prime_fib(n - 41)\n        prime_fib(n - 42)\n        prime_fib(n\
    \ - 43)\n        prime_fib(n - 44)\n        prime_fib(n - 45)\n        prime_fib(n\
    \ - 46)\n        prime_fib(n - 47)\n        prime_fib(n - 48)\n        prime_fib(n\
    \ - 49)\n        prime_fib(n - 50)\n        prime_fib(n - 51)\n        prime_fib(n\
    \ - 52)\n        prime_fib(n - 53)\n        prime_fib(n - 54)\n        prime_fib(n\
    \ - 55)\n        prime_fib(n - 56)\n        prime_fib(n - 57)\n        prime_fi",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\n\
    This does not answer the question. OP asked for Julia code, not Python code.\n\
    <|/ c |>\n<| c |>\nI didn't know that Julia has this feature. Thanks for sharing\
    \ it.\n<|/ c |>\n<| a dscore=3 |>\nIn Julia 1.1 you can use the following code:\n\
    <code>", "    if n == 0\n        0\n    else\n        if n == 1\n            1\n\
    \        else\n            if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n            else\n                prime_fib(n - 1)\n        end\n    end\n\
    end\n</code>\n<|/ a tags=julia,fibonacci,primes |>\n<| a dscore=2 |>\nI wrote\
    \ a Julia package for this: primes.jl\n<code>\njulia> using primes", "    if n\
    \ < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2\n        1\n    else\n    \
    \    prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>",
  "    if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n % 2 ==\
    \ 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        1\n   \
    \ else\n        if n == 2\n            2\n        else\n            if n % 2 ==\
    \ 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n            else\n \
    \               prime_fib(n - 1) + prime_fib(n - 3)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.0>\nprime_fib(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as $n!$, where $n$ is a positive integer. \nThe factorial\
    \ of a negative number $n$ is defined as $n^{-1}$. \nThe factorial of a number\
    \ $0$ is defined as $1$. \nThe factorial of a number $n$ is defined as $n!$, where\
    \ $n$ is a positive integer. \nThe factorial of a negative number $n$ is defined\
    \ as $n^{-1}$. \nThe factorial of a number $0$ is defined as $1$. \nThe factorial\
    \ of a number $n$ is defined as $n!$, where $n$ is a positive integer. \nThe factorial\
    \ of a negative number $n$ is defined as $n^{-1}$. \nThe factorial of a number\
    \ $0$ is defined as $1$. \nThe factorial of a number $n$ is defined as $n!$, where\
    \ $n$ is a positive integer. \nThe factorial of a negative number $n$ is defined\
    \ as $n^{-1}$. \nThe factorial of a number $0$ is defined as $1$. \nThe factorial\
    \ of a number $n$ is defined as $n!$, where $n$ is a positive integer. \nThe factorial\
    \ of a negative number $n$ is defined as $n^{-1}$. \nThe factorial of a number\
    \ $0$ is defined as $1$. \nThe factorial of a number $n$ is defined as $n!$, where\
    \ $n$ is a positive integer. \nThe factorial of a negative number $n$ is defined\
    \ as $n^{-1}$. \nThe factorial of a number $0$ is defined as $1$. \nThe factorial\
    \ of a number $n$ is defined as $n!$, where $n$ is a positive integer. \nThe factorial\
    \ of a negative number $n$ is defined as $n^{-1}$. \nThe factorial of a number\
    \ $0$ is defined as $1", "    if n < 2 \n        then return n\n    else if n\
    \ == 2 \n        then return 1\n    else if n == 3 \n        then return 2\n \
    \   else if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n  \
    \      return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<code language=julia-1.5>", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n       \
    \ then return 2\n    else \n        fib_n = 3\n        fib_n2 = 2\n        fib_n3\
    \ = 1\n        fib_n4 = 1\n        fib_n5 = 1\n        fib_n6 = 1\n        fib_n7\
    \ = 1\n        fib_n8 = 1\n        fib_n9 = 1\n        fib_n10 = 1\n        fib_n11\
    \ = 1\n        fib_n12 = 1\n        fib_n13 = 1\n        fib_n14 = 1\n       \
    \ fib_n15 = 1\n        fib_n16 = 1\n        fib_n17 = 1\n        fib_n18 = 1\n\
    \        fib_n19 = 1\n        fib_n20 = 1\n        fib_n21 = 1\n        fib_n22\
    \ = 1\n        fib_n23 = 1\n        fib_n24 = 1\n        fib_n25 = 1\n       \
    \ fib_n26 = 1\n        fib_n27 = 1\n        fib_n28 = 1\n        fib_n29 = 1\n\
    \        fib_n30 = 1\n        fib_n31 = 1\n        fib_n32 = 1\n        fib_n33\
    \ = 1\n        fib_n34 = 1\n        fib_n35 = 1\n        fib_n36 = 1\n       \
    \ fib_n37 = 1\n        fib_n38 = 1\n        fib_n39 = 1\n        fib_n40 = 1\n\
    \        fib_n41 = 1\n        fib_n42 = 1\n        fib_n43 = 1\n        fib_n44\
    \ = 1\n        fib_n45 = 1\n        fib_n46 = 1\n        fib_n47 = 1\n       \
    \ fib_n48 = 1\n        fib_n49 = 1\n        fib_n50 = 1\n        fib_n51 = 1\n\
    \        fib_n52 = 1\n        fib_n53 = 1\n        fib_n54 = 1\n        fib_n55\
    \ = 1\n        fib_n56 = 1\n        fib_n57 = 1\n        fib_n58 = 1\n       \
    \ fib_n59 = 1\n        fib_n60 = 1\n        fib_n61 = 1\n        fib_n62 = 1\n\
    \        fib_n63 = 1\n        fib_n64 = 1\n        fib_n65 = 1\n        fib_n66\
    \ = 1\n        fib_n67", "    if n < 2 \n        return n\n    else if n == 2\
    \ \n        return 3\n    else if n == 3 \n        return 5\n    else if n % 2\
    \ == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1\n  \
    \      return n\n    else\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 1 \n        return 2\n    else if n == 2 \n       \
    \ return 3\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2\n        2\n    else\n        if prime_fib(n\
    \ - 1) == n\n            prime_fib(n - 1)\n        else\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n  \
    \      return 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n == 0 \n        1\n    else if n == 1 \n        2\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n   \
    \ prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        2\n    else\n        if prime_fib(n - 1) == n\n         \
    \   prime_fib(n - 1)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    The easiest way to find prime numbers is to check whether they are divisible by\
    \ any number between 2 and sqrt(n).\n<code>", "    if n == 1 \n        2\n   \
    \ else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n == 3\n        return 5\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.1>\nprime_fib(10)\n</cell>\n<code\
    \ language=julia-1.1>", "    if n < 2\n        1\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        prime_fib(1)\n\
    \    else\n        prime_fib(n-1)\n        prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n   \
    \     2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n == 0 || n == 1 \n        return n\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n == 0\n        0\n    else\n        if n == 1\n            1\n        else\n\
    \            if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n\
    \            else\n                prime_fib(n - 1)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n   \
    \     2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n        1\n  \
    \  else\n        if n == 2\n            2\n        else\n            if n % 2\
    \ == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n            else\n\
    \                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>\nprime_fib(4)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(5)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(6)\n</cell>\n<code language=julia-1.4>\nprime_fib(7)\n</cell>\n<code\
    \ language=julia-1.4>\nprime_fib(8)\n</cell>\n<code language=julia-1.4>\nprime_fib(9)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(10)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(11)\n</cell>\n<code language=julia-1.4>\nprime_fib(12)\n</cell>\n<code\
    \ language=julia-1.4>\nprime_fib(13)\n</cell>\n<code language=julia-1.4>\nprime_fib(14)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(15)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(16)\n</cell>\n<code language=julia-1.4>\nprime_fib(17)\n</cell>\n<code\
    \ language=julia-1.4>\nprime_fib(18)\n</cell>\n<code language=julia-1.4>\nprime_fib(19)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(20)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(21)\n</cell>\n<code language=julia-1.4>\nprime_fib(22)\n</cell>\n<code\
    \ language=julia-1.4>\nprime_fib(23)\n</cell>\n<code language=julia-1.4>\nprime_fib(24)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(25)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(26)\n</cell>\n<code language=julia-1.4>\nprime_fib(27)\n</cell>\n<code\
    \ language=julia-1.4>\nprime_fib(28)\n</cell>\n<code language=julia-1.4>\nprime_fib(29)\n\
    </cell>\n<code language=julia-1.4>\nprime_fib(30)\n</cell>\n<code language=julia-1.4>\n\
    prime_fib(31)\n</", "    if n == 1 \n        2\n    else if n == 2 \n        3\n\
    \    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a |>\n<| c\
    \ |>\nThis code doesn't work correctly for large numbers. For example, prime_fib(100)\
    \ returns 13, but prime_fib(101) returns 139.\n<|/ c |>\n<| c |>\nYes, I missed\
    \ the case when n is even number. Thanks for pointing out.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\n\
    Exercise 3: Write a function that returns the factorial of a number.", "    if\
    \ n == 0 \n        0\n    elseif n == 1 \n        1\n    elseif n % 2 == 0 \n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n < 2\n        1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n / 2) + prime_fib(n\
    \ / 3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n>>> prime_fib(3)\n5\n>>> prime_fib(4)\n\
    13\n>>> prime_fib(5)\n89\n>>> prime_fib(6)\n144\n>>> prime_fib(7)\n233\n>>> prime_fib(8)\n\
    343\n>>> prime_fib(9)\n455\n>>> prime_fib(10)\n596\n>>> prime_fib(11)\n729\n>>>\
    \ prime_fib(12)\n891\n>>> prime_fib(13)\n1025\n>>> prime_fib(14)\n1259\n>>> prime_fib(15)\n\
    1429\n>>> prime_fib(16)\n1683\n>>> prime_fib(17)\n1951\n>>> prime_fib(18)\n2251\n\
    >>> prime_fib(19)\n2499\n>>> prime_fib(20)\n2741\n>>> prime_fib(21)\n2921\n>>>\
    \ prime_fib(22)\n3105\n>>> prime_fib(23)\n3269\n>>> prime_fib(24)\n3418\n>>> prime_fib(25)\n\
    3509\n>>> prime_fib(26)\n3659\n>>> prime_fib(27)\n3797\n>>> prime_fib(28)\n3951\n\
    >>> prime_fib(29)\n4101\n>>> prime_fib(30)\n4181\n>>> prime_fib(31)\n4239\n>>>\
    \ prime_fib(32)\n4293\n>>> prime_fib(33)\n4369\n>>> prime_fib(34)\n4421\n>>> prime_fib(35)\n\
    4491\n>>> prime_fib(36)\n4559\n>>> prime_fib(37)\n4615\n>>> prime_fib(38)\n4669\n\
    >>> prime_fib(39)\n4721\n>>> prime_fib(40)\n4783\n>>> prime_fib(41)\n4837\n>>>\
    \ prime_fib(42)\n4887\n>>> prime_", "    if n < 2 \n        then return n\n  \
    \  else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\n\
    Now let's see how it works:", "    if n == 1 then return 2\n    if n == 2 then\
    \ return 3\n    if n == 3 then return 5\n    if n % 2 == 0 then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23]\n    \"\"\"", "    if n < 2\n        return n\n    else if n\
    \ == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        prime_fib(n+1)\n    else\n        prime_fib(n-1) +\
    \ prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.4>", "    if n\
    \ == 1 \n        return 2 \n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) \nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2 \n        then return n\n\
    \    else if n == 2 \n        then return 1\n    else if n % 2 == 0 \n       \
    \ then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n == 0 then return 1\n    if n == 1 then return 2\n    if n % 2 == 0 then\
    \ return prime_fib(n / 2)\n    else return prime_fib(3 * n + 1) + prime_fib(n\
    \ / 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is not an answer\
    \ to this question. He is asking about a Julia function, not an algorithm to compute\
    \ Fibonacci numbers.\n<|/ c |>\n<| c |>\nThe question is about a Julia function.\
    \ The algorithm is given in the question. He is asking how to implement it in\
    \ Julia.\n<|/ c |>\n<| c |>\nThe question was about a Julia function and your\
    \ answer does not answer that question. He is asking how to implement the algorithm\
    \ in Julia.\n<|/ c |>\n<| c |>\nThe algorithm is given in the question. He is\
    \ asking how to implement it in Julia.\n<|/ c |>\n<| c |>\nThe algorithm is given\
    \ in the question. He is asking how to implement it in Julia.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>", "    if n < 2 \n        then return n\n    else \n   \
    \     prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>",
  "    if n == 0 \n        0\n    else if n == 1 \n        1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI do not\
    \ understand why you think this would work. `prime_fib(5)` returns `89` but `prime_fib(4)`\
    \ returns `13`.\n<|/ c |>\n<| c |>\nI thought that he wants to find prime numbers.\
    \ I thought that he wants to find prime numbers between 1 and n. He said that\
    \ he wants to find prime numbers between 1 and n. He said that he wants to find\
    \ prime numbers between 1 and n. He said that he wants to find prime numbers between\
    \ 1 and n. He said that he wants to find prime numbers between 1 and n. He said\
    \ that he wants to find prime numbers between 1 and n. He said that he wants to\
    \ find prime numbers between 1 and n. He said that he wants to find prime numbers\
    \ between 1 and n. He said that he wants to find prime numbers between 1 and n.\
    \ He said that he wants to find prime numbers between 1 and n. He said that he\
    \ wants to find prime numbers between 1 and n. He said that he wants to find prime\
    \ numbers between 1 and n. He said that he wants to find prime numbers between\
    \ 1 and n. He said that he wants to find prime numbers between 1 and n. He said\
    \ that he wants to find prime numbers between 1 and n. He said that he wants to\
    \ find prime numbers between 1 and n. He said that he wants to find prime numbers\
    \ between 1 and n. He said that he wants to find prime numbers between 1 and n.\
    \ He said that he wants to find prime numbers between 1 and n. He said that he\
    \ wants to find prime numbers between 1 and n. He said that he wants to find prime\
    \ numbers between 1 and n. He said that he wants to find prime numbers between\
    \ 1 and n. He said that he wants to find prime numbers between 1 and n. He said\
    \ that he wants to find prime numbers between 1 and n. He said that he wants to\
    \ find prime numbers between 1 and n. He said that he wants to find prime numbers\
    \ between 1 and n. He said that he wants to find prime numbers between 1 and n.\
    \ He said that he wants to find prime numbers between 1 and n. He said that he\
    \ wants to find prime numbers between 1 and n", "    if n == 1 \n        2\n \
    \   else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nThe Fibonacci sequence is defined by the recurrence\
    \ relation:", "    if n < 2\n        prime_fib(n) = n\n    else\n        prime_fib(n)\
    \ = prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThis doesn't work. `prime_fib(5)` returns `89` instead of `893`.\n\
    <|/ c |>\n<| c |>\nYes, I missed that part. Thanks for pointing it out. I've updated\
    \ the answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\nprime_fib(1)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(2)\n</cell>\n<code language=julia-1.3>\nprime_fib(3)\n</cell>\n<code\
    \ language=julia-1.3>\nprime_fib(4)\n</cell>\n<code language=julia-1.3>\nprime_fib(5)\n\
    </cell>\n<code language=julia-1.3>\nprime_fib(6)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(7)\n</cell>\n<code language=julia-1.3>\nprime_fib(8)\n</cell>\n<code\
    \ language=julia-1.3>\nprime_fib(9)\n</cell>\n<code language=julia-1.3>\nprime_fib(10)\n\
    </cell>\n<code language=julia-1.3>\nprime_fib(11)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(12)\n</cell>\n<code language=julia-1.3>\nprime_fib(13)\n</cell>\n<code\
    \ language=julia-1.3>\nprime_fib(14)\n</cell>\n<code language=julia-1.3>\nprime_fib(15)\n\
    </cell>\n<code language=julia-1.3>\nprime_fib(16)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(17)\n</cell>\n<code language=julia-1.3>\nprime_fib(18)\n</cell>\n<code\
    \ language=julia-1.3>\nprime_fib(19)\n</cell>\n<code language=julia-1.3>\nprime_fib(20)\n\
    </cell>\n<code language=julia-1.3>\nprime_fib(21)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(22)\n</cell>\n<code language=julia-1.3>\nprime_fib(23)\n</cell>\n<code\
    \ language=julia-1.3>\nprime_fib(24)\n</cell>\n<code language=julia-1.3>\nprime_fib(25)\n\
    </cell>\n<code language=julia-1.3>\nprime_fib(26)\n</cell>\n<code language=julia-1.3>\n\
    prime_fib(27)\n</cell>\n<code language=julia-1.3>\nprime_fi", "    if n == 0\n\
    \        0\n    else\n        if n == 1\n            1\n        else\n       \
    \     prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=julia,fibonacci |>\n<code>", "    if n < 2 \n        return n\n    else\
    \ if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n    else\
    \ if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia |>\n<code>", "    if\
    \ n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 || n > 100\n        error(\"n must be between 2 and 100\")\n\
    \    elseif n == 2\n        return 2\n    elseif n == 3\n        return 5\n  \
    \  elseif n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n   \
    \ else\n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n == 1 \n        2\n    else if n == 2 \n    \
    \    3\n    else \n        prime_fib(n-1) + prime_fib(n-2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 3: Write a function that takes a positive integer $n$ and returns\
    \ the number of prime factors of $n$. For example, if the input $n$ is $2^3$,\
    \ the function should return $3$. Your function should return $n$ if $n$ is prime.",
  "    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 1\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"", "    if n < 2 \n        then return n\n    else if n ==\
    \ 2 \n        then return 1\n    else if n == 3 \n        then return 2\n    else\
    \ if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n  \
    \  else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n < 2 \n        then return n\n    else if n ==\
    \ 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.0>", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nI like your solution, although it does require a lot of recursion.\
    \ I'm curious if there is a way to do it without recursion.\n<|/ c |>\n<| c |>\n\
    I added a non-recursive solution\n<|/ c |>\n<| c |>\nI added a non-recursive solution\n\
    <|/ c |>\n<| a tags=fibonacci,julia |>\nThe recursive solution is very elegant\
    \ and efficient, but I wanted to see how it could be done without recursion. Here's\
    \ a solution that uses memoization:\n<code>", "    if n < 2\n        2\n    else\n\
    \        if prime_fib(n - 2) == prime_fib(n - 1)\n            prime_fib(n - 2)\n\
    \        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<text>\nThe Fibonacci sequence is defined by the recurrence relation:",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else\n\
    \        if n == 2\n            3\n        else\n            if n % 2 == 0\n \
    \               prime_fib(n - 1) + prime_fib(n - 2)\n            else\n      \
    \          prime_fib(n - 1) + prime_fib(n - 3)\n        end\n    end\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis code does not work. `prime_fib(10)` returns\
    \ `8` instead of `10`.\n<|/ c |>\n<| c |>\nYes, I forgot to add `else` statement\
    \ to `prime_fib` function. I edited my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        return\
    \ 2\n    if n == 2 \n        return 3\n    if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else if n ==\
    \ 2\n        3\n    else if n % 2 == 0\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.0>\nprime_fib(5)\n</cell>\n<code language=julia-1.0>",
  "    if n == 0\n        0\n    else\n        if n == 1\n            1\n        else\n\
    \            if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n\
    \            else\n                prime_fib(n - 1) + prime_fib(n - 3)\n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n   \
    \ 5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| a tags=julia,recursion\
    \ |>\nI wrote a recursive function which returns nth fibonacci number in Julia\
    \ language. \n<code>", "    if n < 2 \n        then return n\n    else \n    \
    \    prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci,primes\
    \ |>\n<| c |>\nThis is not an answer to the question. `prime_fib` does not return\
    \ the nth Fibonacci number.\n<|/ c |>\n<| c |>\nI believe it does return the nth\
    \ Fibonacci number. Try it out yourself.\n<|/ c |>\n<| c |>\nIt does return the\
    \ nth Fibonacci number. Try it out yourself. `prime_fib(3)` returns `5`.\n<|/\
    \ c |>\n<| c |>\nI believe it does return the nth Fibonacci number. Try it out\
    \ yourself. `prime_fib(3)` returns `5`.\n<|/ c |>\n<| c |>\nI believe it does\
    \ return the nth Fibonacci number. Try it out yourself. `prime_fib(3)` returns\
    \ `5`.\n<|/ c |>\n<| a tags=julia,fibonacci,primes |>\nI believe this should work:\n\
    <code>", "    if n < 2\n        1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else \n        fib := prime_fib(n - 2)\n        if n\
    \ % fib == 0\n            then return fib\n        else return n\nend\n</code>\n\
    <|/ a tags=fibonacci,julia,primes |>\n<| c |>\nThanks for your answer. Could you\
    \ please explain how you came up with the solution? I understand that it's an\
    \ iterative solution, but I don't understand how you came up with it.\n<|/ c |>\n\
    <| c |>\nI used the fact that Fibonacci numbers are the sum of two consecutive\
    \ Fibonacci numbers. I used the fact that if n is a prime number, then it can\
    \ be written as F(n) = F(n-1) + F(n-2).\n<|/ c |>\n<| c |>\nI added a code example\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I was\
    \ able to implement this in Julia by using the following code: `function prime_fib(n::Int64)\n\
    \    if n < 2\n        then return n\n    elseif n == 2\n        then return 1\n\
    \    else\n        fib := prime_fib(n - 2)\n        if n % fib == 0\n        \
    \    then return fib\n        else\n            return n\n        end\n    end\n\
    end`\n<|/ c |>\n<| c |>\nI added a code example to my answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=2 |>\nThe other answers here are great, but they don't take\
    \ into account the fact that prime numbers are only divisible by themselves and\
    \ by themselves plus 1. So the function below will take care of that for you:\n\
    <code>", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return n\n  \
    \  else if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n \
    \   else\n        if prime_fib(n - 2) == true\n            prime_fib(n - 2)\n\
    \        else\n            prime_fib(n - 2) + prime_fib(n - 1)\n        end\n\
    \    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/27859060)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ implement a Fibonacci function in Julia. He also asked how to implement a prime\
    \ function in Julia. He also asked how to implement a Fibonacci function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n<|/ c |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859060)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27859060)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859060)\n\
    <|/ c |>\n<| a tags=julia,fibonacci,primes |>\n<code>", "    if n < 2 \n     \
    \   then return n\n    else if n == 2 \n        then return 1\n    else if n %\
    \ 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n\
    \        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<text>\n\
    The function prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.", "    if n < 2\n        return n\n    else if n == 2\n        return\
    \ 3\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2 \n        then return n\n    else \n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 1\n    else \n        prime_fib(n - 2)\n        prime_fib(n - 1)\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis is not an answer to the question. He is asking how to\
    \ implement the Fibonacci sequence in Julia. Your answer is just an implementation\
    \ of an already existing function.\n<|/ c |>\n<| c |>\nThe question was how to\
    \ implement the Fibonacci sequence in Julia. Your answer just implements an already\
    \ existing function.\n<|/ c |>\n<| c |>\nThe question was how to implement the\
    \ Fibonacci sequence in Julia. Your answer just implements an already existing\
    \ function.\n<|/ c |>\n<| c |>\nThe question was how to implement the Fibonacci\
    \ sequence in Julia. Your answer just implements an already existing function.\n\
    <|/ c |>\n<| c |>\nThe question was how to implement the Fibonacci sequence in\
    \ Julia. Your answer just implements an already existing function.\n<|/ c |>\n\
    <| a |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n        3\n\
    \    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 0 \n        1\n    else if n == 1 \n        2\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list()\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n     \
    \   then return n\n    else if n == 2 \n        then return 1\n    else if n %\
    \ 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n\
    \        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a dscore=2 |>\nI wrote a recursive function which returns the\
    \ nth number of the Fibonacci sequence and also checks if the number is prime\
    \ or not. \n<code>", "    if n == 1 \n        2\n    else if n == 2 \n       \
    \ 3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n / 2)\n    else \n        return prime_fib(3\
    \ * n + 1) + prime_fib(3 * n - 1)\nend\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\
    \"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19]\n    \"\"\"", "    if n == 1 \n        return\
    \ 2 \n    else \n        return prime_fib(n - 1) + prime_fib(n - 2) \nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n  \
    \  end\nend\n</cell>\n<text>\nExercise 5\nWrite a function that returns n-th number\
    \ that is a Fibonacci number and it's also prime.\nHint: Use recursion.", "  \
    \  if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        prime_fib(n+1)\n    else\n        if n ==\
    \ 2\n            prime_fib(n+1)\n        else\n            if n % 2 == 0\n   \
    \             prime_fib(n+1)\n            else\n                prime_fib(n+2)\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if n < 2 \n  \
    \      then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<text>\nNow let's use our new function to find the nth Fibonacci\
    \ number in Julia:", "    if n < 2 \n        then return n\n        else return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n == 0 || n == 1 \n        return n\n    else \n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n == 3\n        return 5\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n == 0 then return 1\n\
    \    if n == 1 then return 2\n    if n % 2 == 0 then return prime_fib(n / 2)\n\
    \    else return prime_fib(3 * n + 1) + prime_fib(n / 2)\nend\n</cell>\n<code\
    \ language=julia-1.3>", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n       \
    \ then return 2\n    else \n        fib_n = prime_fib(n - 1) + prime_fib(n - 2)\n\
    \        if fib_n % 2 == 0 \n            then return fib_n\n        else return\
    \ fib_n + 1\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 0 || n == 1 \n        return n\n    else \n       \
    \ return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2 \n        then return n\n    else if\
    \ n == 2 \n        then return 1\n    else if n == 3 \n        then return 2\n\
    \    else if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else\n    \
    \    prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns n-th number that is a\
    \ Fibonacci number and it's also prime.", "    if n < 2 \n        return n\n \
    \   else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n        if fib_n % 2 == 0 \n            then return fib_n\n\
    \        else \n            return fib_n + 1\nend\n</cell>\n<code language=julia-1.0>",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.4>", "    if n == 1 then return 2\n    if n == 2 then return\
    \ 3\n    if n == 3 then return 5\n    if n == 4 then return 13\n    if n == 5\
    \ then return 89\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else return\
    \ prime_fib(3 * n + 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question.\
    \ How does this answer the question?\n<|/ c |>\n<| c |>\nThis answer doesn't answer\
    \ the question. How does this answer the question?\n<|/ c |>\n<| c |>\nThis answer\
    \ doesn't answer the question. How does this answer the question?\n<|/ c |>\n\
    <| c |>\nThis answer doesn't answer the question. How does this answer the question?\n\
    <|/ c |>\n<| c |>\nThis answer doesn't answer the question. How does this answer\
    \ the question?\n<|/ c |>\n<| a tags=julia,fibonacci,primes |>\n<code>", "   \
    \ if n == 1 \n        return 2\n    else if n == 2 \n        return 3\n    else\
    \ if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2 \n        then return n\n    else \n       \
    \ prime_fib(n - 2)\n        prime_fib(n - 1)\n        prime_fib(n - 3)\n     \
    \   prime_fib(n - 5)\n        prime_fib(n - 7)\n        prime_fib(n - 11)\n  \
    \      prime_fib(n - 13)\n        prime_fib(n - 17)\n        prime_fib(n - 19)\n\
    \        prime_fib(n - 21)\n        prime_fib(n - 23)\n        prime_fib(n - 25)\n\
    \        prime_fib(n - 27)\n        prime_fib(n - 29)\n        prime_fib(n - 31)\n\
    \        prime_fib(n - 33)\n        prime_fib(n - 35)\n        prime_fib(n - 37)\n\
    \        prime_fib(n - 39)\n        prime_fib(n - 41)\n        prime_fib(n - 43)\n\
    \        prime_fib(n - 45)\n        prime_fib(n - 47)\n        prime_fib(n - 49)\n\
    \        prime_fib(n - 51)\n        prime_fib(n - 53)\n        prime_fib(n - 55)\n\
    \        prime_fib(n - 57)\n        prime_fib(n - 59)\n        prime_fib(n - 61)\n\
    \        prime_fib(n - 63)\n        prime_fib(n - 65)\n        prime_fib(n - 67)\n\
    \        prime_fib(n - 69)\n        prime_fib(n - 71)\n        prime_fib(n - 73)\n\
    \        prime_fib(n - 75)\n        prime_fib(n - 77)\n        prime_fib(n - 79)\n\
    \        prime_fib(n - 81)\n        prime_fib(n - 83)\n        prime_fib(n - 85)\n\
    \        prime_fib(n - 87)\n        prime_fib(n - 89)\n        prime_fib(n - 91)\n\
    \        prime_fib(n - 93)\n        prime_fib(n - 95)\n        prime_fib(n - 97)\n\
    \        prime_fib(n - 99)\n        prime_fib(n - 101)\n        prime_fib(n -\
    \ 103)\n        prime_fib(n - 105)\n        prime_fib(n - 107)\n        prime_fib(n\
    \ - 109)\n        prime_fib(n - 111)\n        prime_fib(n - 113)\n        prime_fib(n\
    \ - 115)\n", "    if n == 1 \n        1\n    else\n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a\
    \ dscore=1 |>\n<code>", "    if n < 2\n        prime_fib(1)\n    else\n      \
    \  prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n     \
    \   return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n   \
    \     return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

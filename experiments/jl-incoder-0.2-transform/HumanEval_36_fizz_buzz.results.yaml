language: jl
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 7 or 11.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4rfz6k1x.jl:10\nin expression starting at /tmp/tmp4rfz6k1x.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef fizz_buzz(number):\n    if number % 11 ==\
    \ 0 and number % 13 == 0:\n        return number\n    elif number % 11 == 0:\n\
    \        return 11\n    elif number % 13 == 0:\n        return 13\n    else:\n\
    \        return number\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nPlease\
    \ add some explanation to your answer such that others can learn from it\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0\
    \ then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else\
    \ if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then \"Buzz\"\
    \ else if n==6 then \"Fizz\" else if n==7 then \"Fizz\" else if n==8 then \"Fizz\"\
    \ else if n==9 then \"Fizz\" else if n==10 then \"Buzz\" else if n==11 then \"\
    Buzz\" else if n==12 then \"Fizz\" else if n==13 then \"Fizz\" else if n==14 then\
    \ \"Fizz\" else if n==15 then \"Fizz\" else if n==16 then \"Fizz\" else if n==17\
    \ then \"Fizz\" else if n==18 then \"Fizz\" else if n==19 then \"Fizz\" else if\
    \ n==20 then \"Fizz\" else if n==21 then \"Fizz\" else if n==22 then \"Fizz\"\
    \ else if n==23 then \"Fizz\" else if n==24 then \"Fizz\" else if n==25 then \"\
    Fizz\" else if n==26 then \"Fizz\" else if n==27 then \"Fizz\" else if n==28 then\
    \ \"Fizz\" else if n==29 then \"Fizz\" else if n==30 then \"Fizz\" else if n==31\
    \ then \"Fizz\" else if n==32 then \"Fizz\" else if n==33 then \"Fizz\" else if\
    \ n==34 then \"Fizz\" else if n==35 then \"Fizz\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiiamkqb9.jl:10\nin expression starting at /tmp/tmpiiamkqb9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else \n            if\
    \ n % 13 == 1 \n                then return 2\n            else \n           \
    \     if n % 11 == 2 \n                    then return 3\n                else\
    \ \n                    if n % 13 == 2 \n                        then return 4\n\
    \                    else \n                        if n % 11 == 3 \n        \
    \                    then return 5\n                        else \n          \
    \                  if n % 13 == 3 \n                                then return\
    \ 6\n                            else \n                                if n %\
    \ 11 == 4 \n                                    then return 7\n              \
    \                  else \n                                    if n % 13 == 4 \n\
    \                                        then return 8\n                     \
    \               else \n                                        if n % 11 == 5\
    \ \n                                            then return 9\n              \
    \                          else \n                                           \
    \ if n % 13 == 5 \n                                                then return\
    \ 10\n                                            else \n                    \
    \                            if n % 11 == 6 \n                               \
    \                     then return 11\n                                       \
    \         else \n                                                    if n % 13\
    \ == 6 \n                                                        then return 12\n\
    \                                                    else \n                 \
    \                                       if n % 11 == 7 \n                    \
    \                                        then return 13\n                    \
    \                                    else \n                                 \
    \                           if n % 13 == 7 \n                                \
    \                                then return 14\n                            \
    \                                else \n                                     \
    \                           if n % 11 == 8 \n                                \
    \                                    then return 15\n                        \
    \                                        else \n                             \
    \                                       if n % 13 == 8 \n                    \
    \                                                    then return 16\n        \
    \                                                            else \n         \
    \                                                               if n % 11 == 9\n\
    \                                                            then return 17\n\
    \                                                        else \n             \
    \               if n % 13 == 9\n                                then return 18\n\
    \                            else \n                                if n % 11\
    \ == 10 \n                                    then return 19\n               \
    \                 else \n                                    if n % 13 == 10 \n\
    \                                        then return 20\n                    \
    \                else \n                                        if n % 11 == 11\
    \ \n                                            then return 21\n             \
    \                           else \n                                          \
    \  if n % 13 == 11 \n                                                then return\
    \ 22\n                                            else \n                    \
    \                            if n % 11 == 12 \n                              \
    \                      then return 23\n                                      \
    \          else \n                                                    if n % 13\
    \ == 12 \n                                                        then return\
    \ 24\n                                                    else \n            \
    \                                            if n % 11 == 13 \n              \
    \                                              then return 25\n              \
    \                                          else \n                           \
    \                                 if n % 13 == 13 \n                         \
    \                                       then return 26\n                     \
    \                                       else \n                              \
    \                                  if n % 11 == 14 \n                        \
    \                                            then return 27\n                \
    \                                                else \n                     \
    \                                               if n % 13 == 14 \n           \
    \                                                             then return 28\n\
    \                                                                    else \n \
    \                                                       if n % 11 == 15 \n   \
    \                                                         then return 29\n   \
    \                                                     else \n                \
    \                                            if n % 13 == 15 \n              \
    \                                                  then return 30\n          \
    \                                                  else \n                   \
    \                                             if n % 11 == 16 \n             \
    \                                                       then return 31\n     \
    \                                                           else \n          \
    \                                                          if n % 13 == 16 \n\
    \                                                                        then\
    \ return 32\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 17 \n                                                            then return\
    \ 33\n                                                        else \n        \
    \                                                    if n % 13 == 17 \n      \
    \                                                          then return 34\n  \
    \                                                          else \n           \
    \                                                     if n % \nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0u6ahx6q.jl:10\nin expression starting at /tmp/tmp0u6ahx6q.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp66t7ych5.jl:11\nin expression starting at /tmp/tmp66t7ych5.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 || n==1 || n==2 || n==3 || n==4 || n==5 || n==6 || n==7 || n==8\
    \ || n==9 || n==10 || n==11 || n==12 || n==13\n        0\n    else\n        fizz_buzz(n-1)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppxtuzurx.jl:15\nin expression starting at\
    \ /tmp/tmppxtuzurx.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else if n==1\n        1\n    else if n==2\n  \
    \      2\n    else if n%3==0\n        fizz_buzz(n/3)\n    else\n        fizz_buzz(n/3)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl_epvi3d.jl:12\nin expression starting at\
    \ /tmp/tmpl_epvi3d.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return fizz_buzz(n/11)\n\
    </code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\"\
    \ else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\"\
    \ else if n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then\
    \ \"Fizz\" else if n==7 then \"Buzz\" else if n==8 then \"Fizz\" else if n==9\
    \ then \"Buzz\" else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\"\
    \ else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\"\
    \ else if n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then\
    \ \"Fizz\" else if n==7 then \"Buzz\" else if n==8 then \"Fizz\" else if n==9\
    \ then \"Buzz\" else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if\
    \ n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then \"Fizz\"\
    \ else if n==7 then \"Buzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\"\
    \ else fizzbuzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion dscore\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpycavv_pu.jl:10\nin expression starting at /tmp/tmpycavv_pu.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n%11==0 \n        1\n    else if n%13==0\
    \ \n        2\n    else \n        fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwko4ancf.jl:12\nin expression starting at\
    \ /tmp/tmpwko4ancf.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nfizz_buzz(50)\n\
    </cell>\n<code language=julia-1.5>\nfizz_buzz(78)\n</cell>\n<code language=julia-1.5>\n\
    fizz_buzz(79)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppt0s8__m.jl:10\nin expression starting at /tmp/tmppt0s8__m.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a recursive function called fizz_buzz_iter that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13. Hint: Use a while loop and a recursive function.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm1cyscrx.jl:10\nin expression starting at /tmp/tmpm1cyscrx.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyfb11pco.jl:10\nin expression starting at /tmp/tmpyfb11pco.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n / 10)\nend\n</code>\n<|/ a |>\n<| c |>\nI like your\
    \ solution, but I believe that `fizz_buzz(78)` should return `2`, not `3`.\n<|/\
    \ c |>\n<| c |>\nThanks for catching that. I fixed it.\n<|/ c |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaxv4ijeh.jl:10\nin expression starting at /tmp/tmpaxv4ijeh.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n\
    <| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppsdtowmx.jl:23\nin expression starting at\
    \ /tmp/tmppsdtowmx.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgj3gnf2l.jl:10\nin expression starting at /tmp/tmpgj3gnf2l.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n - 1)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<|\
    \ a dscore=0 |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then\
    \ \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3\
    \ then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else\
    \ if n==6 then \"Fizz\" else if n==7 then \"Buzz\" else if n==8 then \"Fizz\"\
    \ else if n==9 then \"Buzz\" else if n==10 then \"FizzBuzz\" else if n==11 then\
    \ \"Fizz\" else if n==12 then \"Buzz\" else if n==13 then \"Fizz\" else if n==14\
    \ then \"Buzz\" else if n==15 then \"FizzBuzz\" else if n==16 then \"Fizz\" else\
    \ if n==17 then \"Buzz\" else if n==18 then \"Fizz\" else if n==19 then \"Buzz\"\
    \ else if n==20 then \"FizzBuzz\" else if n==21 then \"Fizz\" else if n==22 then\
    \ \"Buzz\" else if n==23 then \"Fizz\" else if n==24 then \"Buzz\" else if n==25\
    \ then \"FizzBuzz\" else if n==26 then \"Fizz\" else if n==27 then \"Buzz\" else\
    \ if n==28 then \"Fizz\" else if n==29 then \"Buzz\" else if n==30 then \"FizzBuzz\"\
    \ else if n==31 then \"Fizz\" else if n==32 then \"Buzz\" else if n==33 then \"\
    Fizz\" else if n==34 then \"Buzz\" else if n==35 then \"FizzBuzz\" else if n==36\
    \ then \"Fizz\" else if n==37 then \"Buzz\" else if n==38 then \"Fizz\" else if\
    \ n==39 then \"Buzz\" else if n==40 then \"FizzBuzz\" else if n==4\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_ly0b8q_.jl:10\nin expression starting at /tmp/tmp_ly0b8q_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%11==0 then return 1\n    if n%13==0 then\
    \ return 2\n    return fizz_buzz(n/10)\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3gd9l7t.jl:10\nin expression starting at /tmp/tmpj3gd9l7t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0ei58ft.jl:10\nin expression starting at /tmp/tmpd0ei58ft.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           0\n        end\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13. For example, fizz_buzz(50) should return\
    \ 0, fizz_buzz(78) should return 2, and fizz_buzz(79) should return 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0hhzqve9.jl:23\nin expression starting at\
    \ /tmp/tmp0hhzqve9.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaggljpj5.jl:10\nin expression starting at /tmp/tmpaggljpj5.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     fizz_buzz(n / 11)\n        fizz_buzz(n / 13)\n        fizz_buzz(n / 17)\n\
    \        fizz_buzz(n / 19)\n        fizz_buzz(n / 23)\n        fizz_buzz(n / 29)\n\
    \        fizz_buzz(n / 31)\n        fizz_buzz(n / 37)\n        fizz_buzz(n / 43)\n\
    \        fizz_buzz(n / 49)\n        fizz_buzz(n / 51)\n        fizz_buzz(n / 59)\n\
    \        fizz_buzz(n / 61)\n        fizz_buzz(n / 67)\n        fizz_buzz(n / 73)\n\
    \        fizz_buzz(n / 79)\n        fizz_buzz(n / 81)\n        fizz_buzz(n / 87)\n\
    \        fizz_buzz(n / 93)\n        fizz_buzz(n / 99)\n        fizz_buzz(n / 101)\n\
    \        fizz_buzz(n / 107)\n        fizz_buzz(n / 113)\n        fizz_buzz(n /\
    \ 119)\n        fizz_buzz(n / 121)\n        fizz_buzz(n / 127)\n        fizz_buzz(n\
    \ / 131)\n        fizz_buzz(n / 137)\n        fizz_buzz(n / 143)\n        fizz_buzz(n\
    \ / 149)\n        fizz_buzz(n / 151)\n        fizz_buzz(n / 157)\n        fizz_buzz(n\
    \ / 163)\n        fizz_buzz(n / 169)\n        fizz_buzz(n / 171)\n        fizz_buzz(n\
    \ / 177)\n        fizz_buzz(n / 183)\n        fizz_buzz(n / 189)\n        fizz_buzz(n\
    \ / 191)\n        fizz_buzz(n / 197)\n        fizz_buzz(n / 203)\n        fizz_buzz\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3erlxn9_.jl:10\nin expression starting at /tmp/tmp3erlxn9_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6lpk5qto.jl:10\nin expression starting at /tmp/tmp6lpk5qto.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0ei58ft.jl:10\nin expression starting at /tmp/tmpd0ei58ft.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppczau6nf.jl:10\nin expression starting at /tmp/tmppczau6nf.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmx9vac5x.jl:10\nin expression starting at /tmp/tmpmx9vac5x.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxerzcr3v.jl:10\nin expression starting at /tmp/tmpxerzcr3v.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ |>\n<| a tags=fizzbuzz,julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprgwhcktg.jl:10\nin expression starting at /tmp/tmprgwhcktg.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpclmtpol7.jl:10\nin expression starting at /tmp/tmpclmtpol7.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 7 or\
    \ 11.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(81)\n\
    0\n>>> fizz_buzz(82)\n1\n>>> fizz_buzz(83)\n1\n>>> fizz_buzz(84)\n2\n>>> fizz_buzz(85)\n\
    2\n>>> fizz_buzz(86)\n3\n>>> fizz_buzz(87)\n3\n>>> fizz_buzz(88)\n0\n>>> fizz_buzz(89)\n\
    1\n>>> fizz_buzz(90)\n1\n>>> fizz_buzz(91)\n2\n>>> fizz_buzz(92)\n2\n>>> fizz_buzz(93)\n\
    3\n>>> fizz_buzz(94)\n3\n>>> fizz_buzz(95)\n0\n>>> fizz_buzz(96)\n1\n>>> fizz_buzz(97)\n\
    1\n>>> fizz_buzz(98)\n2\n>>> fizz_buzz(99)\n2\n>>> fizz_buzz(100)\n3\n>>> fizz_buzz(101)\n\
    3\n>>> fizz_buzz(102)\n0\n>>> fizz_buzz(103)\n1\n>>> fizz_buzz(104)\n1\n>>> fizz_buzz(105)\n\
    2\n>>> fizz_buzz(106)\n2\n>>> fizz_buzz(107)\n3\n>>> fizz_buzz(108)\n3\n>>> fizz_buzz(109)\n\
    0\n>>> fizz_buzz(110)\n1\n>>> fizz_buzz(111)\n1\n>>> fizz_buzz(112)\n2\n>>> fizz_buzz(113)\n\
    2\n>>> fizz_buzz(114)\n3\n>>> fizz_buzz(115)\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprhljyoh5.jl:10\nin expression starting at /tmp/tmprhljyoh5.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(50)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and are also divisible by 3 or 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo6n6qhgt.jl:10\nin expression starting at /tmp/tmpo6n6qhgt.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. Test your function by calling it\
    \ on integers between 1 and 100.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphrrdg5r9.jl:10\nin expression starting at /tmp/tmphrrdg5r9.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ \n        then return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia,if-statement\
    \ |>\n<| a tags=fizzbuzz,julia,if-statement |>\nI like to use macros for these\
    \ kinds of things. Here's a macro that will print out a FizzBuzz number for any\
    \ number you give it:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo4fc5mpc.jl:10\nin expression starting at /tmp/tmpo4fc5mpc.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1)\nend\n</code>\n\
    <|/ a tags=fizzbuzz,julia |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpem1ibdcg.jl:10\nin expression starting at /tmp/tmpem1ibdcg.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    elseif n==1\n        1\n    elseif n==2\n    \
    \    2\n    elseif n%3==0\n        3\n    elseif n%3==1\n        4\n    elseif\
    \ n%3==2\n        5\n    elseif n%3%3==0\n        6\n    elseif n%3%3==1\n   \
    \     7\n    elseif n%3%3==2\n        8\n    elseif n%3%3%3==0\n        9\n  \
    \  elseif n%3%3%3==1\n        10\n    elseif n%3%3%3==2\n        11\n    elseif\
    \ n%3%3%3%3==0\n        12\n    elseif n%3%3%3%3==1\n        13\n    elseif n%3%3%3%3==2\n\
    \        14\n    elseif n%3%3%3%3==3\n        15\n    elseif n%3%3%3%3==4\n  \
    \      16\n    elseif n%3%3%3%3==5\n        17\n    elseif n%3%3%3%3==6\n    \
    \    18\n    elseif n%3%3%3%3==7\n        19\n    elseif n%3%3%3%3==8\n      \
    \  20\n    elseif n%3%3%3%3==9\n        21\n    elseif n%3%3%3%3==10\n       \
    \ 22\n    elseif n%3%3%3%3==11\n        23\n    elseif n%3%3%3%3==12\n       \
    \ 24\n    elseif n%3%3%3%3==13\n        25\n    elseif n%3%3%3%3==14\n       \
    \ 26\n    elseif n%3%3%3%3==15\n        27\n    elseif n%3%3%3%3==16\n       \
    \ 28\n    elseif n%3%3%3%3==17\n        29\n    elseif n%3%3%3%3==18\n       \
    \ 30\n    elseif n%3%3%3%3==19\n        31\n    elseif n%3%3%3%3==20\n       \
    \ 32\n    elseif n%3%3%3%3==21\n        33\n    elseif n%3%3%3%3==22\n       \
    \ 34\n    elseif n%3%3%3%3==23\n        35\n    elseif n%3%3%3%3==24\n       \
    \ 36\n    elseif n%3%3%3%3==25\n        37\n    elseif n%3%3%3%3==26\n       \
    \ 38\n    elseif n%3%3%3%3==27\n        39\n    elseif n%3%3%3%3==28\n       \
    \ 40\n    elseif n%3%3%3%3==29\n        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6lkhk8xi.jl:1\nin expression starting at /tmp/tmp6lkhk8xi.jl:1\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-puzzle\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0\
    \ then 0 else if n==1 then 1 else if n==2 then 2 else if n==3 then 3 else if n==4\
    \ then 4 else if n==5 then 5 else if n==6 then 6 else if n==7 then 7 else if n==8\
    \ then 8 else if n==9 then 9 else fizz_buzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-puzzle\
    \ |>\n<| a tags=fizzbuzz,haskell,fizzbuzz-puzzle |>\n<code>\nfizzbuzz :: Int ->\
    \ Int\nfizzbuzz n = if n==0 then 0 else if n==1 then 1 else if n==2 then 2 else\
    \ if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else if n==6 then 6 else\
    \ if n==7 then 7 else if n==8 then 8 else if n==9 then 9 else fizzbuzz (n-1)\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz :: Int -> Int\n\
    fizzbuzz n = if n==0 then 0 else if n==1 then 1 else if n==2 then 2 else if n==3\
    \ then 3 else if n==4 then 4 else if n==5 then 5 else if n==6 then 6 else if n==7\
    \ then 7 else if n==8 then 8 else if n==9 then 9 else fizzbuzz (n-1)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell,fizzbuzz-puzzle |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n==1 then 1 else if n==2\
    \ then 2 else if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else if n==6\
    \ then 6 else if n==7 then 7 else if n==8 then 8 else if n==\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsybw28v1.jl:10\nin expression starting at /tmp/tmpsybw28v1.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<text>\nExercise 7\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0aslpj_t.jl:10\nin expression starting at /tmp/tmp0aslpj_t.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0qc4c3yi.jl:10\nin expression starting at /tmp/tmp0qc4c3yi.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     fizz_buzz(n / 11)\n        fizz_buzz(n / 13)\n        fizz_buzz(n / 17)\n\
    \        fizz_buzz(n / 19)\n        fizz_buzz(n / 23)\n        fizz_buzz(n / 29)\n\
    \        fizz_buzz(n / 31)\n        fizz_buzz(n / 37)\n        fizz_buzz(n / 43)\n\
    \        fizz_buzz(n / 49)\n        fizz_buzz(n / 55)\n        fizz_buzz(n / 59)\n\
    \        fizz_buzz(n / 61)\n        fizz_buzz(n / 67)\n        fizz_buzz(n / 73)\n\
    \        fizz_buzz(n / 79)\n        fizz_buzz(n / 81)\n        fizz_buzz(n / 87)\n\
    \        fizz_buzz(n / 93)\n        fizz_buzz(n / 99)\n        fizz_buzz(n / 101)\n\
    \        fizz_buzz(n / 107)\n        fizz_buzz(n / 113)\n        fizz_buzz(n /\
    \ 127)\n        fizz_buzz(n / 131)\n        fizz_buzz(n / 137)\n        fizz_buzz(n\
    \ / 143)\n        fizz_buzz(n / 149)\n        fizz_buzz(n / 151)\n        fizz_buzz(n\
    \ / 157)\n        fizz_buzz(n / 163)\n        fizz_buzz(n / 169)\n        fizz_buzz(n\
    \ / 175)\n        fizz_buzz(n / 181)\n        fizz_buzz(n / 187)\n        fizz_buzz(n\
    \ / 193)\n        fizz_buzz(n / 199)\n        fizz_buzz(n / 205)\n        fizz_buzz(n\
    \ / 211)\n        fizz_buzz(n / 217)\n        fizz_buzz(n / 223)\n        fizz_buzz\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplh4b5o1j.jl:10\nin expression starting at /tmp/tmplh4b5o1j.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp66t7ych5.jl:11\nin expression starting at /tmp/tmp66t7ych5.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0\n        fizz_buzz(n/3)\n    else\n        fizz_buzz(n/3)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj80mgcxy.jl:12\nin expression starting at\
    \ /tmp/tmpj80mgcxy.jl:12\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz\
    \ n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"\
    Buzz\" else if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then\
    \ \"FizzBuzz\" else if n==6 then \"Fizz\" else if n==7 then \"Buzz\" else if n==8\
    \ then \"Fizz\" else if n==9 then \"Buzz\" else if n==10 then \"FizzBuzz\" else\
    \ if n==11 then \"Fizz\" else if n==12 then \"Buzz\" else if n==13 then \"Fizz\"\
    \ else if n==14 then \"Buzz\" else if n==15 then \"FizzBuzz\" else if n==16 then\
    \ \"Fizz\" else if n==17 then \"Buzz\" else if n==18 then \"Fizz\" else if n==19\
    \ then \"Buzz\" else if n==20 then \"FizzBuzz\" else if n==21 then \"Fizz\" else\
    \ if n==22 then \"Buzz\" else if n==23 then \"Fizz\" else if n==24 then \"Buzz\"\
    \ else if n==25 then \"FizzBuzz\" else if n==26 then \"Fizz\" else if n==27 then\
    \ \"Buzz\" else if n==28 then \"Fizz\" else if n==29 then \"Buzz\" else if n==30\
    \ then \"FizzBuzz\" else if n==31 then \"Fizz\" else if n==32 then \"Buzz\" else\
    \ if n==33 then \"Fizz\" else if n==34 then \"Buzz\" else if n==35 then \"FizzBuzz\"\
    \ else if n==36 then \"Fizz\" else if n==37 then \"Buzz\" else if n==38 then \"\
    Fizz\" else if n==39 then \"Buzz\" else if n==40 then \"FizzBuzz\" else if n==41\
    \ then \"Fizz\" else if n==\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu9m1usah.jl:10\nin expression starting at /tmp/tmpu9m1usah.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp235qcvkg.jl:10\nin expression starting at /tmp/tmp235qcvkg.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else \n            if\
    \ n % 13 == 1 \n                then return 2\n            else \n           \
    \     if n % 11 == 2 \n                    then return 3\n                else\
    \ \n                    if n % 13 == 2 \n                        then return 4\n\
    \                    else \n                        if n % 11 == 3 \n        \
    \                    then return 5\n                        else \n          \
    \                  if n % 13 == 3 \n                                then return\
    \ 6\n                            else \n                                if n %\
    \ 11 == 4 \n                                    then return 7\n              \
    \                  else \n                                    if n % 13 == 4 \n\
    \                                        then return 8\n                     \
    \               else \n                                        if n % 11 == 5\
    \ \n                                            then return 9\n              \
    \                          else \n                                           \
    \ if n % 13 == 5 \n                                                then return\
    \ 10\n                                            else \n                    \
    \                            if n % 11 == 6 \n                               \
    \                     then return 11\n                                       \
    \         else \n                                                    if n % 13\
    \ == 6 \n                                                        then return 12\n\
    \                                                    else \n                 \
    \                                       if n % 11 == 7 \n                    \
    \                                        then return 13\n                    \
    \                                    else \n                                 \
    \                           if n % 13 == 7 \n                                \
    \                                then return 14\n                            \
    \                                else \n                                     \
    \                           if n % 11 == 8 \n                                \
    \                                    then return 15\n                        \
    \                                        else \n                             \
    \                                       if n % 13 == 8 \n                    \
    \                                                    then return 16\n        \
    \                                                            else \n         \
    \                                                               if n % 11 == 9\
    \ \n                                                            then return 17\n\
    \                                                        else \n             \
    \                                               if n % 13 == 9 \n            \
    \                                                    then return 18\n        \
    \                                                    else \n                 \
    \                                               if n % 11 == 10 \n           \
    \                                                         then return 19\n   \
    \                                                             else \n        \
    \                                                            if n % 13 == 10 \n\
    \                                                                        then\
    \ return 20\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 11 \n                                                            then return\
    \ 21\n                                                        else \n        \
    \                                                    if n % 13 == 11 \n      \
    \                                                          then return 22\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 12 \n     \
    \                                                               then return 23\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 12\
    \ \n                                                                        then\
    \ return 24\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 13 \n                                                            then return\
    \ 25\n                                                        else \n        \
    \                                                    if n % 13 == 13 \n      \
    \                                                          then return 26\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 14 \n     \
    \                                                               then return 27\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 14\
    \ \n                                                                        then\
    \ return 28\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 15 \n                                                            then return\
    \ 29\n                                                        else \n        \
    \                                                    if n % 13 == 15 \n      \
    \                                                          then return 30\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 16 \n     \
    \                                                               then return 31\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 16\
    \ \n                                                                        then\
    \ return 32\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 17 \n                                                            then return\
    \ 33\n                                                        else \n        \
    \                                                    if n % 13 == 17 \nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp39pflv_7.jl:10\nin expression starting at /tmp/tmp39pflv_7.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia,function |>\n\
    <| a tags=fizzbuzz,julia,function |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpghq7v91n.jl:10\nin expression starting at /tmp/tmpghq7v91n.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0ei58ft.jl:10\nin expression starting at /tmp/tmpd0ei58ft.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    end\n\
    \    return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(50)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and which are also divisible by 3 or 5.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpelebog3n.jl:10\nin expression starting at /tmp/tmpelebog3n.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11) + fizz_buzz(n/13)\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it out with n = 78.\n\
    <|/ c |>\n<| c |>\nThanks for pointing out my mistake. I've corrected the code.\
    \ Now it works.\n<|/ c |>\n<| a tags=fizzbuzz,haskell |>\nThe simplest solution\
    \ is to use recursion:\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n `mod`\
    \ 3 == 0 then \"Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if n `mod` 7\
    \ == 0 then \"FizzBuzz\" else show n\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\"\
    \ else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\"\
    \ else if n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\"\
    \ else if n==7 then \"FizzBuzz\" else show n\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=1 |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"\
    FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3\
    \ then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if\
    \ n==6 then \"Buzz\" else if n==7 then \"FizzBuzz\" else show n\n</code>\n<|/\
    \ a tags=fizzbuzz,haskell |>\n<| a |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz\
    \ n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"\
    Buzz\" else if n==3 then \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp60njhtwp.jl:10\nin expression starting at /tmp/tmp60njhtwp.jl:10\n"
  stdout: ''
  timestamp: 1659823060
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoq5clb9f.jl:10\nin expression starting at /tmp/tmpoq5clb9f.jl:10\n"
  stdout: ''
  timestamp: 1659823060
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5834q2f3.jl:10\nin expression starting at /tmp/tmp5834q2f3.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi2hxowpm.jl:10\nin expression starting at /tmp/tmpi2hxowpm.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqu9xbze0.jl:10\nin expression starting at /tmp/tmpqu9xbze0.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpus_9tsxd.jl:10\nin expression starting at /tmp/tmpus_9tsxd.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else 1\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 and 13. \nThe function should take one\
    \ argument, n, which should be an Int64.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpryogs31b.jl:10\nin expression starting at /tmp/tmpryogs31b.jl:10\n"
  stdout: ''
  timestamp: 1659823060
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and which are divisible by 3 or 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50zqkvzu.jl:10\nin expression starting at /tmp/tmp50zqkvzu.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return fizz_buzz(n/11)\n\
    </code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\"\
    \ else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\"\
    \ else if n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\"\
    \ else if n==7 then \"Fizz\" else if n==8 then \"Buzz\" else if n==9 then \"Fizz\"\
    \ else if n==10 then \"Buzz\" else if n==11 then \"FizzBuzz\" else if n==12 then\
    \ \"Fizz\" else if n==13 then \"Buzz\" else if n==14 then \"Fizz\" else if n==15\
    \ then \"Buzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if\
    \ n==18 then \"Fizz\" else if n==19 then \"Buzz\" else if n==20 then \"Fizz\"\
    \ else if n==21 then \"Buzz\" else if n==22 then \"Fizz\" else if n==23 then \"\
    Buzz\" else if n==24 then \"Fizz\" else if n==25 then \"Buzz\" else if n==26 then\
    \ \"Fizz\" else if n==27 then \"Buzz\" else if n==28 then \"Fizz\" else if n==29\
    \ then \"Buzz\" else if n==30 then \"Fizz\" else if n==31 then \"Buzz\" else if\
    \ n==32 then \"Fizz\" else if n==33 then \"Buzz\" else if n==34 then \"Fizz\"\
    \ else if n==35 then \"Buzz\" else if n==36 then \"Fizz\" else if n==37 then \"\
    Buzz\" else if n==38 then \"Fizz\" else if n==39 then \"Buzz\" else if n==40 then\
    \ \"Fizz\" else if n==41 then \"Buzz\" else if n==4\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4f63urvj.jl:10\nin expression starting at /tmp/tmp4f63urvj.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<text>\nExercise\
    \ 9\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13 and which are divisible\
    \ by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n   \
    \ >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgfyfpo35.jl:10\nin expression starting at /tmp/tmpgfyfpo35.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqt4lp03i.jl:10\nin expression starting at /tmp/tmpqt4lp03i.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphr1vssdc.jl:10\nin expression starting at /tmp/tmphr1vssdc.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz\
    \ :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1 then \"\
    Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if n==4 then\
    \ \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then \"Fizz\" else if n==7\
    \ then \"Buzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\" else if\
    \ n==10 then \"FizzBuzz\" else if n==11 then \"Fizz\" else if n==12 then \"Buzz\"\
    \ else if n==13 then \"Fizz\" else if n==14 then \"Buzz\" else if n==15 then \"\
    FizzBuzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if n==18\
    \ then \"Fizz\" else if n==19 then \"Buzz\" else if n==20 then \"FizzBuzz\" else\
    \ if n==21 then \"Fizz\" else if n==22 then \"Buzz\" else if n==23 then \"Fizz\"\
    \ else if n==24 then \"Buzz\" else if n==25 then \"FizzBuzz\" else if n==26 then\
    \ \"Fizz\" else if n==27 then \"Buzz\" else if n==28 then \"Fizz\" else if n==29\
    \ then \"Buzz\" else if n==30 then \"FizzBuzz\" else if n==31 then \"Fizz\" else\
    \ if n==32 then \"Buzz\" else if n==33 then \"Fizz\" else if n==34 then \"Buzz\"\
    \ else if n==35 then \"FizzBuzz\" else if n==36 then \"Fizz\" else if n==37 then\
    \ \"Buzz\" else if n==38 then \"Fizz\" else if n==39 then \"Buzz\" else if n==40\
    \ then \"FizzBuzz\" else if n==41 then \"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz0wj5wbr.jl:10\nin expression starting at /tmp/tmpz0wj5wbr.jl:10\n"
  stdout: ''
  timestamp: 1659823060
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        then return 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvoqa8daa.jl:10\nin expression starting at /tmp/tmpvoqa8daa.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    elseif n==1\n        1\n    elseif n==2\n    \
    \    2\n    elseif n%3==0\n        fizz_buzz(n/3)\n    elseif n%5==0\n       \
    \ fizz_buzz(n/5)\n    elseif n%7==0\n        fizz_buzz(n/7)\n    else\n      \
    \  fizz_buzz(n/11)\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwvpg_41y.jl:26\nin expression starting at\
    \ /tmp/tmpwvpg_41y.jl:26\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13. \nFor example, fizz_buzz(78) should return 2, because 78 is divisible\
    \ by 11 and 13, while 79 is not.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgoerg164.jl:10\nin expression starting at /tmp/tmpgoerg164.jl:10\n"
  stdout: ''
  timestamp: 1659823060
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsvhzga1s.jl:10\nin expression starting at /tmp/tmpsvhzga1s.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| c |>\n\
    Thanks, this was helpful. I was able to get it working with my original code by\
    \ changing the last line to `return fizz_buzz(n-1) + fizz_buzz(n-2)` but this\
    \ seems like a more elegant solution.\n<|/ c |>\n<| c |>\nYes, that is a more\
    \ elegant solution. Thanks for sharing your solution!\n<|/ c |>\n<| a |>\nI wrote\
    \ a Julia package called FizzBuzz.jl that does this for you:\n<code>\nusing FizzBuzz\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5h79dya0.jl:10\nin expression starting at /tmp/tmp5h79dya0.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6vrlsw6r.jl:10\nin expression starting at /tmp/tmp6vrlsw6r.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6vrlsw6r.jl:10\nin expression starting at /tmp/tmp6vrlsw6r.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4w0ocz3.jl:10\nin expression starting at /tmp/tmpw4w0ocz3.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8a9mdi2g.jl:10\nin expression starting at /tmp/tmp8a9mdi2g.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13 and are also divisible by 3.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc_ua82h8.jl:10\nin expression starting at /tmp/tmpc_ua82h8.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| c |>\nI like this solution, but I wonder why you chose to use `Int64`\
    \ instead of `Int`?\n<|/ c |>\n<| c |>\nI chose `Int64` because I wanted to be\
    \ sure that `fizz_buzz` would work with any `Int` greater than `0`. `Int` would\
    \ not work, since `fizz_buzz` would return `1` for `0`.\n<|/ c |>\n<| c |>\nI\
    \ see. Thanks for explaining that!\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfizz_buzz\
    \ :: Int -> Int\nfizz_buzz n = if n==0 then 0 else if n==1 then 1 else if n==2\
    \ then 2 else if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else if n==6\
    \ then 6 else if n==7 then 7 else if n==8 then 8 else if n==9 then 9 else if n==10\
    \ then 10 else if n==11 then 11 else if n==12 then 12 else if n==13 then 13 else\
    \ if n==14 then 14 else if n==15 then 15 else if n==16 then 16 else if n==17 then\
    \ 17 else if n==18 then 18 else if n==19 then 19 else if n==20 then 20 else if\
    \ n==21 then 21 else if n==22 then 22 else if n==23 then 23 else if n==24 then\
    \ 24 else if n==25 then 25 else if n==26 then 26 else if n==27 then 27 else if\
    \ n==28 then 28 else if n==29 then 29 else if n==30 then 30 else if n==31 then\
    \ 31 else if n==32 then 32 else if n==33 then 33 else if n==34 then 34 else if\
    \ n==35 then 35 else if n==36 then 36 else if n==37 then 37 else if n==38 then\
    \ 38 else if n==39 then 39 else if n==40 then 40 else if n==41 then 41 else if\
    \ n==42 then 42 else if n==43 then 43 else if n==44 then 44 else if n==45 then\
    \ 45 else if n==46 then 46 else \nusing Test\n\n@testset begin\n\ncandidate =\
    \ fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5zwyi1bk.jl:10\nin expression starting at /tmp/tmp5zwyi1bk.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nI like your solution,\
    \ but I wonder why you chose to use `Int64` instead of `Int`?\n<|/ c |>\n<| c\
    \ |>\nBecause I didn't want to use any type that could overflow and would have\
    \ to be converted to `Int` anyway. `Int` would have worked just fine but would\
    \ have required a lot of casting back and forth. `Int64` would have avoided that\
    \ but would have required a lot of casting back and forth. `Int128` would have\
    \ avoided that but would have required a lot of casting back and forth. `Int256`\
    \ would have avoided that but would have required a lot of casting back and forth.\
    \ `Int512` would have avoided that but would have required a lot of casting back\
    \ and forth.\n<|/ c |>\n<| c |>\nI see. Thanks for the explanation!\n<|/ c |>\n\
    <| a dscore=2 |>\nI like your solution, but I wonder why you chose to use Int64\
    \ instead of Int?\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp75h4hia3.jl:10\nin expression starting at /tmp/tmp75h4hia3.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        fizz_buzz(n/11)\n\
    \        fizz_buzz(n/13)\n        fizz_buzz(n%11)\n        fizz_buzz(n%13)\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa5kg5_by.jl:10\nin expression starting at /tmp/tmpa5kg5_by.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n \
    \   >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ogit_f7.jl:10\nin expression starting at /tmp/tmp8ogit_f7.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"Return the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n \
    \   >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr5ywfskr.jl:10\nin expression starting at /tmp/tmpr5ywfskr.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThis\
    \ doesn't work. Try it with `fizz_buzz 78`.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ for `fizz_buzz 78` because `fizz_buzz 78` returns `0` instead of `2`.\n<|/ c\
    \ |>\n<| c |>\nI see what you mean. I've edited my answer to fix the bug.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz\
    \ n = case n of\n    0 -> 0\n    1 -> 1\n    2 -> 2\n    3 -> 3\n    4 -> 4\n\
    \    5 -> 5\n    6 -> 6\n    7 -> 7\n    8 -> 8\n    9 -> 9\n    10 -> 10\n  \
    \  11 -> 11\n    12 -> 12\n    13 -> 13\n    14 -> 14\n    15 -> 15\n    16 ->\
    \ 16\n    17 -> 17\n    18 -> 18\n    19 -> 19\n    20 -> 20\n    21 -> 21\n \
    \   22 -> 22\n    23 -> 23\n    24 -> 24\n    25 -> 25\n    26 -> 26\n    27 ->\
    \ 27\n    28 -> 28\n    29 -> 29\n    30 -> 30\n    31 -> 31\n    32 -> 32\n \
    \   33 -> 33\n    34 -> 34\n    35 -> 35\n    36 -> 36\n    37 -> 37\n    38 ->\
    \ 38\n    39 -> 39\n    40 -> 40\n    41 -> 41\n    42 -> 42\n    43 -> 43\n \
    \   44 -> 44\n    45 -> 45\n    46 -> 46\n    47 -> 47\n    48 -> 48\n    49 ->\
    \ 49\n    50 -> 50\n    51 -> 51\n    52 -> 52\n    53 -> 53\n    54 -> 54\n \
    \   55 -> 55\n    56 -> 56\n    57 -> 57\n    58 -> 58\n    59 -> 59\n    60 ->\
    \ 60\n    61 -> 61\n    62 -> 62\n    63 -> \nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphm9turl1.jl:10\nin expression starting at /tmp/tmphm9turl1.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    elseif n==1\n        1\n    elseif n==2\n    \
    \    2\n    elseif n%3==0\n        3\n    elseif n%3==1\n        4\n    elseif\
    \ n%3==2\n        5\n    elseif n%3%3==0\n        6\n    elseif n%3%3==1\n   \
    \     7\n    elseif n%3%3==2\n        8\n    elseif n%3%3%3==0\n        9\n  \
    \  elseif n%3%3%3==1\n        10\n    elseif n%3%3%3==2\n        11\n    elseif\
    \ n%3%3%3%3==0\n        12\n    elseif n%3%3%3%3==1\n        13\n    elseif n%3%3%3%3==2\n\
    \        14\n    elseif n%3%3%3%3==3\n        15\n    elseif n%3%3%3%3==4\n  \
    \      16\n    elseif n%3%3%3%3==5\n        17\n    elseif n%3%3%3%3==6\n    \
    \    18\n    elseif n%3%3%3%3==7\n        19\n    elseif n%3%3%3%3==8\n      \
    \  20\n    elseif n%3%3%3%3==9\n        21\n    elseif n%3%3%3%3==10\n       \
    \ 22\n    elseif n%3%3%3%3==11\n        23\n    elseif n%3%3%3%3==12\n       \
    \ 24\n    elseif n%3%3%3%3==13\n        25\n    elseif n%3%3%3%3==14\n       \
    \ 26\n    elseif n%3%3%3%3==15\n        27\n    elseif n%3%3%3%3==16\n       \
    \ 28\n    elseif n%3%3%3%3==17\n        29\n    elseif n%3%3%3%3==18\n       \
    \ 30\n    elseif n%3%3%3%3==19\n        31\n    elseif n%3%3%3%3==20\n       \
    \ 32\n    elseif n%3%3%3%3==21\n        33\n    elseif n%3%3%3%3==22\n       \
    \ 34\n    elseif n%3%3%3%3==23\n        35\n    elseif n%3%3%3%3==24\n       \
    \ 36\n    elseif n%3%3%3%3==25\n        37\n    elseif n%3%3%3%3==26\n       \
    \ 38\n    elseif n%3%3%3%3==27\n        39\n    elseif n%3%3%3%3==28\n       \
    \ 40\n    elseif n%3%3%3%3==29\n        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6lkhk8xi.jl:1\nin expression starting at /tmp/tmp6lkhk8xi.jl:1\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1 + fizz_buzz(n / 11)\n    fizz_buzz(n / 13)\nend\n</code>\n\
    <|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkfj1mu5j.jl:10\nin expression starting at /tmp/tmpkfj1mu5j.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13 and which are divisible\
    \ by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzuvbxeb6.jl:10\nin expression starting at /tmp/tmpzuvbxeb6.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptg_0o_u9.jl:10\nin expression starting at /tmp/tmptg_0o_u9.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n - 1)\n</code>\n<|/ a |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then\
    \ 0 else if n%11==0 || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then\
    \ 0 else if n%11==0 || n%\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplzcohp4u.jl:10\nin expression starting at /tmp/tmplzcohp4u.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThis\
    \ doesn't work. `fizz_buzz` returns `Int64`, not `Int`.\n<|/ c |>\n<| c |>\nYes,\
    \ I fixed it. I had to change `Int` to `Int64` because `Int` doesn't support negative\
    \ numbers. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0 else if n `mod`\
    \ 13 == 0 then 1 else 2\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThis\
    \ doesn't work. `fizz_buzz` returns `Int`, not `Int`.\n<|/ c |>\n<| c |>\nYes,\
    \ I fixed it. I had to change `Int` to `Int64` because `Int` doesn't support negative\
    \ numbers. Thanks for pointing that out.\n<|/ c |>\n<| c |>\n`fizz_buzz :: Int\
    \ -> Int` should be `fizz_buzz :: Int -> Int64`\n<|/ c |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0\
    \ else if n `mod` 13 == 0 then 1 else 2\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. `fizz_buzz` returns `Int`, not `Int`.\n<|/ c |>\n<| c |>\n\
    Yes, I fixed it. I had to change `Int` to `Int64` because `Int` doesn't support\
    \ negative numbers. Thanks for pointing that out.\n<|/ c |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0\
    \ else if n `mod` 13 == 0 then 1 else 2\n</code>\n<|/ a dscore=0 |>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps532ovz6.jl:10\nin expression starting at /tmp/tmps532ovz6.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmx9vac5x.jl:10\nin expression starting at /tmp/tmpmx9vac5x.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.4>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13. Test\
    \ it on some examples. What happens if you pass in an argument that doesn't divide\
    \ evenly by 11 or 13?\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5zssq_78.jl:10\nin expression starting at /tmp/tmp5zssq_78.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n \
    \   >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7gvw0c4m.jl:10\nin expression starting at /tmp/tmp7gvw0c4m.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1) + fizz_buzz(n-2)\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl5bszk8v.jl:10\nin expression starting at /tmp/tmpl5bszk8v.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13 and which are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n   \
    \ >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppb_e3mki.jl:10\nin expression starting at /tmp/tmppb_e3mki.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThe `fizz_buzz` function does not work as\
    \ intended for negative numbers. For example, `fizz_buzz(-5)` returns `0`, but\
    \ should be `-1`.\n<|/ c |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizz_buzz\
    \ :: Int -> Int\nfizz_buzz n = if n==0 then 0 else if n%11==0 then 1 else if n%13==0\
    \ then 2 else fizz_buzz (n/11)+fizz_buzz (n/13)\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the problem of the question. Answers\
    \ with an explanation are usually more helpful and of better quality, and are\
    \ more likely to attract upvotes.\n<|/ c |>\n<| c |>\nThis does not work when\
    \ n is negative (it returns `0` instead of `-1`).\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0 then 0 else if n%11==0\
    \ then 1 else if n%13==0 then 2 else fizz_buzz (n/11)+fizz_buzz (n/13)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0 then 0\
    \ else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz (n/11)+fizz_buzz\
    \ (n/13)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nPlease don't post\
    \ only code as an answer, but also provide \nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvsf3m76a.jl:10\nin expression starting at /tmp/tmpvsf3m76a.jl:10\n"
  stdout: ''
  timestamp: 1659823063
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpay6rmxtw.jl:10\nin expression starting at /tmp/tmpay6rmxtw.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1)\nend\n</cell>\n\
    <text>\nExercise 9: Write a function that returns the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n    >>>\
    \ fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu350oix2.jl:10\nin expression starting at /tmp/tmpu350oix2.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. \n(Hint: Use a recursive function.)\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq44xx_6.jl:10\nin expression starting at /tmp/tmpdq44xx_6.jl:10\n"
  stdout: ''
  timestamp: 1659823063
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6vrlsw6r.jl:10\nin expression starting at /tmp/tmp6vrlsw6r.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6lpk5qto.jl:10\nin expression starting at /tmp/tmp6lpk5qto.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| a |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"FizzBuzz\" else\
    \ if n==4 then \"Fizz\" else if n==5 then \"Buzz\" else if n==6 then \"FizzBuzz\"\
    \ else if n==7 then \"Fizz\" else if n==8 then \"Buzz\" else if n==9 then \"FizzBuzz\"\
    \ else if n==10 then \"Fizz\" else if n==11 then \"Buzz\" else if n==12 then \"\
    FizzBuzz\" else if n==13 then \"Fizz\" else if n==14 then \"Buzz\" else if n==15\
    \ then \"FizzBuzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else\
    \ if n==18 then \"FizzBuzz\" else if n==19 then \"Fizz\" else if n==20 then \"\
    Buzz\" else if n==21 then \"FizzBuzz\" else if n==22 then \"Fizz\" else if n==23\
    \ then \"Buzz\" else if n==24 then \"FizzBuzz\" else if n==25 then \"Fizz\" else\
    \ if n==26 then \"Buzz\" else if n==27 then \"FizzBuzz\" else if n==28 then \"\
    Fizz\" else if n==29 then \"Buzz\" else if n==30 then \"FizzBuzz\" else if n==31\
    \ then \"Fizz\" else if n==32 then \"Buzz\" else if n==33 then \"FizzBuzz\" else\
    \ if n==34 then \"Fizz\" else if n==35 then \"Buzz\" else if n==36 then \"FizzBuzz\"\
    \ else if n==37 then \"Fizz\" else if n==38 then \"Buzz\" else if n==39 then \"\
    FizzBuzz\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphmph2aw4.jl:10\nin expression starting at /tmp/tmphmph2aw4.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%7==0 then return 7\n    if n%7==1 then return 7\n    if n%7==2\
    \ then return 7\n    if n%7==3 then return 7\n    if n%7==4 then return 7\n  \
    \  if n%7==5 then return 7\n    if n%7==6 then return 7\n    if n%7==7 then return\
    \ 7\n    if n%11==0 then return 11\n    if n%11==1 then return 11\n    if n%11==2\
    \ then return 11\n    if n%13==0 then return 13\n    if n%13==1 then return 13\n\
    \    if n%13==2 then return 13\n    if n%13==3 then return 13\n    if n%13==4\
    \ then return 13\n    if n%13==5 then return 13\n    if n%13==6 then return 13\n\
    \    if n%13==7 then return 13\n    return n\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgpf47mb7.jl:10\nin expression starting at /tmp/tmpgpf47mb7.jl:10\n"
  stdout: ''
  timestamp: 1659823063
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 or n%5==0 then return 3\n    if n%7==0 then return 4\n    if\
    \ n%11==0 or n%13==0 then return 5\n    if n%17==0 then return 6\n    if n%19==0\
    \ then return 7\n    if n%23==0 then return 8\n    if n%29==0 then return 9\n\
    \    if n%31==0 then return 10\n    if n%37==0 then return 11\n    if n%41==0\
    \ then return 12\n    if n%43==0 then return 13\n    if n%47==0 then return 14\n\
    \    if n%53==0 then return 15\n    if n%59==0 then return 16\n    if n%61==0\
    \ then return 17\n    if n%67==0 then return 18\n    if n%71==0 then return 19\n\
    \    if n%73==0 then return 20\n    if n%79==0 then return 21\n    if n%83==0\
    \ then return 22\n    if n%89==0 then return 23\n    if n%97==0 then return 24\n\
    \    if n%103==0 then return 25\n    if n%107==0 then return 26\n    if n%113==0\
    \ then return 27\n    if n%119==0 then return 28\n    if n%127==0 then return\
    \ 29\n    if n%131==0 then return 30\n    if n%137==0 then return 31\n    if n%141==0\
    \ then return 32\n    if n%147==0 then return 33\n    if n%153==0 then return\
    \ 34\n    if n%159==0 then return 35\n    if n%165==0 then return 36\n    if n%171==0\
    \ then return 37\n    if n%177==0 then return 38\n    if n%183==0 then return\
    \ 39\n    if n%189==0 then return 40\n    if n%195==0 then return 41\n    if n%201==0\
    \ then return 42\n    if n%207==0 then return 43\n    if n%213==0 then return\
    \ 44\n    if n%219==0 then return 45\n    if n%225==0 then return 46\n    if n%231==0\
    \ then return 47\n    if n%237==0 then return 48\n    if n%243==0 then return\
    \ 49\n    if \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3waxc50.jl:10\nin expression starting at /tmp/tmpg3waxc50.jl:10\n"
  stdout: ''
  timestamp: 1659823062
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0qc4c3yi.jl:10\nin expression starting at /tmp/tmp0qc4c3yi.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7b28ahe5.jl:10\nin expression starting at /tmp/tmp7b28ahe5.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpvp_9iy.jl:10\nin expression starting at /tmp/tmpxpvp_9iy.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==1 \n\
    \        then return 1\n    else if n%13==1 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvdr86n5b.jl:11\nin expression starting at /tmp/tmpvdr86n5b.jl:11\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd9aote3a.jl:10\nin expression starting at /tmp/tmpd9aote3a.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\nI like using list comprehensions for these kind of problems. \n<code>\n\
    fizz_buzz :: Int -> [Int]\nfizz_buzz n = if n==0 then [] else [n] ++ [n `mod`\
    \ 11] ++ [n `mod` 13] ++ fizz_buzz (n `div` 11)\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=fizzbuzz,haskell,recursion |>\nHere's a solution that uses pattern matching\
    \ and guards:\n<code>\nfizzbuzz :: Int -> [Int]\nfizzbuzz n = if n == 0 then []\
    \ else if n `mod` 11 == 0 then [n `mod` 11] else if n `mod` 13 == 0 then [n `mod`\
    \ 13] else [n `mod` 11] ++ [n `mod` 13] ++ fizzbuzz (n `div` 11)\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=fizzbuzz,haskell,recursion |>\n<code>\nfizzbuzz ::\
    \ Int -> [Int]\nfizzbuzz n = if n==0 then [] else if n%11==0 then [n `mod` 11]\
    \ else if n%13==0 then [n `mod` 13] else [n `mod` 11] ++ [n `mod` 13] ++ fizzbuzz\
    \ (n `div` 11)\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nfizzbuzz :: Int ->\
    \ [Int]\nfizzbuzz n = if n==0 then [] else if n%11==0 then [n `mod` 11] else if\
    \ n%13==0 then [n `mod` 13] else [n `mod` 11] ++ [n `mod` 13] ++ fizzbuzz (n `div`\
    \ 11)\n</code>\n<|/ a dscore=1 tags=fizzbuzz,haskell,recursion |>\n<| c |>\nPlease\
    \ don't post only code as an answer, but also provide an explanation of what your\
    \ code does and how it solve\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmi7kytf0.jl:10\nin expression starting at /tmp/tmpmi7kytf0.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8hr6e2uf.jl:10\nin expression starting at /tmp/tmp8hr6e2uf.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(50)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 and 13. \n>>> fizz_buzz(50)\n\
    0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(100)\n1\n>>> fizz_buzz(101)\n\
    1\n>>> fizz_buzz(102)\n1\n>>> fizz_buzz(103)\n2\n>>> fizz_buzz(104)\n2\n>>> fizz_buzz(105)\n\
    2\n>>> fizz_buzz(106)\n2\n>>> fizz_buzz(107)\n3\n>>> fizz_buzz(108)\n3\n>>> fizz_buzz(109)\n\
    3\n>>> fizz_buzz(110)\n3\n>>> fizz_buzz(111)\n3\n>>> fizz_buzz(112)\n3\n>>> fizz_buzz(113)\n\
    3\n>>> fizz_buzz(114)\n3\n>>> fizz_buzz(115)\n3\n>>> fizz_buzz(116)\n3\n>>> fizz_buzz(117)\n\
    3\n>>> fizz_buzz(118)\n3\n>>> fizz_buzz(119)\n3\n>>> fizz_buzz(120)\n3\n>>> fizz_buzz(121)\n\
    3\n>>> fizz_buzz(122)\n3\n>>> fizz_buzz(123)\n3\n>>> fizz_buzz(124)\n3\n>>> fizz_buzz(125)\n\
    3\n>>> fizz_buzz(126)\n3\n>>> fizz_buzz(127)\n3\n>>> fizz_buzz(128)\n3\n>>> fizz_buzz(129)\n\
    3\n>>> fizz_buzz(130)\n3\n>>> fizz_buzz(131)\n3\n>>> fizz_buzz(132\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoo9746zw.jl:10\nin expression starting at /tmp/tmpoo9746zw.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1) + fizz_buzz(n-2)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8bb854si.jl:10\nin expression starting at /tmp/tmp8bb854si.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq89gn2pf.jl:10\nin expression starting at /tmp/tmpq89gn2pf.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc2u_p5b6.jl:10\nin expression starting at /tmp/tmpc2u_p5b6.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyb489k75.jl:10\nin expression starting at /tmp/tmpyb489k75.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           0\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx2zqbm69.jl:23\nin expression starting at\
    \ /tmp/tmpx2zqbm69.jl:23\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstapyjj0.jl:10\nin expression starting at /tmp/tmpstapyjj0.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    elseif n==1\n        1\n    elseif n==2\n    \
    \    2\n    elseif n%3==0\n        fizz_buzz(n/3)+1\n    elseif n%5==0\n     \
    \   fizz_buzz(n/5)+1\n    elseif n%7==0\n        fizz_buzz(n/7)+1\n    else\n\
    \        fizz_buzz(n/11)+1\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_lvn5fqs.jl:26\nin expression starting at\
    \ /tmp/tmp_lvn5fqs.jl:26\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmx9vac5x.jl:10\nin expression starting at /tmp/tmpmx9vac5x.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdsb5z11j.jl:10\nin expression starting at /tmp/tmpdsb5z11j.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<|\
    \ c |>\nThis is not the most efficient solution. `fizz_buzz` can be implemented\
    \ much more efficiently by simply counting the number of `1`s and `2`s and `3`s\
    \ and `4`s and `5`s and `6`s and `7`s and `8`s and `9`s and `10`s and `11`s and\
    \ `12`s and `13`s.\n<|/ c |>\n<| c |>\nI agree, but I wanted to show a solution\
    \ that is easy to understand.\n<|/ c |>\n<| c |>\nI agree, but I wanted to show\
    \ a solution that is easy to understand.\n<|/ c |>\n<| c |>\nI agree, but I wanted\
    \ to show a solution that is easy to understand.\n<|/ c |>\n<| a |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod` 3 else if\
    \ n `mod` 5 == 0 then n `mod` 5 else if n `mod` 7 == 0 then n `mod` 7 else if\
    \ n `mod` 11 == 0 then n `mod` 11 else if n `mod` 13 == 0 then n `mod` 13 else\
    \ n\n</code>\n<|/ a tags=fizzbuzz,haskell dscore=2 |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod`\
    \ 3 else if n `mod` 5 == 0 then n `mod` 5 else if n `mod` 7 == 0 then n `mod`\
    \ 7 else if n `mod` 11 == 0 then n `mod` 11 else if n `mod` 13 == 0 then n `mod`\
    \ 13 else n\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod` 3 else if\
    \ n `mod` \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdlx8v8zx.jl:10\nin expression starting at /tmp/tmpdlx8v8zx.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)\n    else if n%5==0 \n\
    \        fizz_buzz(n/5)\n    else if n%7==0 \n        fizz_buzz(n/7)\n    else\
    \ \n        fizz_buzz(n*3+7)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpld6grab_.jl:12\nin expression starting at\
    \ /tmp/tmpld6grab_.jl:12\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0 else return 1\n    end\n\
    \    return fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0e4sql66.jl:11\nin expression starting at /tmp/tmp0e4sql66.jl:11\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ |>\n<| c |>\nThis doesn't work. `fizz_buzz(78)` returns `0`, not `2`.\n<|/ c\
    \ |>\n<| c |>\nYes, it does. I tested it before posting it. I just edited the\
    \ answer to fix the bug.\n<|/ c |>\n<| c |>\nI tested it again and it works now.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThe `fizz_buzz` function doesn't\
    \ work if you pass it a negative number. `fizz_buzz(-78)` returns `0`, not `2`.\n\
    <|/ c |>\n<| c |>\nI tested it again and it works now. Thanks for pointing it\
    \ out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp42m9pj4k.jl:10\nin expression starting at /tmp/tmp42m9pj4k.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else if n % 13 == 1\
    \ \n            then return 2\n        else return 3\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj5uy2rcw.jl:10\nin expression starting at /tmp/tmpj5uy2rcw.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqq742qgr.jl:10\nin expression starting at /tmp/tmpqq742qgr.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\nend\n</cell>\n<code language=julia-1.0>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyzpwmw5s.jl:10\nin expression starting at /tmp/tmpyzpwmw5s.jl:10\n"
  stdout: ''
  timestamp: 1659823064
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ \n        then return 3\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsf8njv5r.jl:10\nin expression starting at /tmp/tmpsf8njv5r.jl:10\n"
  stdout: ''
  timestamp: 1659823065
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n-1)\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis code does not compile. `fizz_buzz` returns `Int64`\
    \ but `fizz_buzz` takes one argument. Also, `fizz_buzz` does not return `Int64`\
    \ but `Int64` itself.\n<|/ c |>\n<| c |>\nThanks for pointing out the mistakes.\
    \ I corrected the code now.\n<|/ c |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgm562uj2.jl:10\nin expression starting at /tmp/tmpgm562uj2.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb6y9olke.jl:10\nin expression starting at /tmp/tmpb6y9olke.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0ei58ft.jl:10\nin expression starting at /tmp/tmpd0ei58ft.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n%11==0 or n%13==0\
    \ then return n\n    return fizz_buzz(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprgvlj6xy.jl:10\nin expression starting at /tmp/tmprgvlj6xy.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0 else if n==1 then return 1 else if n%11==0 then\
    \ return 2 else if n%13==0 then return 3 else return fizz_buzz(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcdk7v02r.jl:10\nin expression starting at /tmp/tmpcdk7v02r.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpclmtpol7.jl:10\nin expression starting at /tmp/tmpclmtpol7.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. Test your function on small numbers.\
    \ How much time does it take to run your function on small numbers?\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50ckl9f2.jl:10\nin expression starting at /tmp/tmp50ckl9f2.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n-1)\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef fizz_buzz(n::Int64)::Int64\n\
    \    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n-1)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell,recursion |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 || n `mod` 13 == 0 then 0 else\
    \ fizz_buzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n%11==0 || n%13==0 then\
    \ 0 else fizz_buzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n\
    <| a dscore=1 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n%11==0 ||\
    \ n%13==0 then 0 else fizz_buzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion\
    \ |>\n<| a tags=fizzbuzz,haskell,recursion |>\n<code>\nfizz_buzz :: Int -> Int\n\
    fizz_buzz n = if n%11==0 || n%13==0 then 0 else fizz_buzz (n-1)\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=fizzbuzz,haskell,recursion |>\n<code>\nfizz_buzz ::\
    \ Int -> Int\nfizz_buzz n = if n%11==0 || n%13==0 then 0 else fizz_buzz (n-1)\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz :: Int -> Int\n\
    fizz_buzz n = if n%11==0 || n%13==0 then 0 else fizz_buzz (n-1)\n</code>\n<|/\
    \ a tags=fizzbuzz,hask\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzq_6j_yi.jl:10\nin expression starting at /tmp/tmpzq_6j_yi.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,haskell |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod` 3 else if\
    \ n `mod` 5 == 0 then n `mod` 5 else if n `mod` 7 == 0 then n `mod` 7 else n\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/19348144)\n<|/ c |>\n<| c |>\n\
    This does provide an answer to the question. He asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. He also asked how to implement FizzBuzz\
    \ in Haskell, and I provided a solution. \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpskva31d4.jl:10\nin expression starting at /tmp/tmpskva31d4.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| c |>\nI believe this should be `if n%11==0 or n%13==0 then 0 else 1`\n\
    <|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a tags=fizzbuzz,haskell |>\n\
    <code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n%11==0 || n%13==0 then 0 else\
    \ 1\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz :: Int ->\
    \ Int\nfizzbuzz n = if n%11==0 || n%13==0 then 0 else 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz\
    \ n = if n%11==0 || n%13==0 then 0 else 1\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n%11==0 || n%13==0 then\
    \ 0 else 1\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz ::\
    \ Int -> Int\nfizzbuzz n = if n%11==0 || n%13==0 then 0 else 1\n</code>\n<|/ a\
    \ tags=fizzbuzz,haskell |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz ::\
    \ Int -> Int\nfizzbuzz n = if n%11==0 || n%13==0 then 0 else 1\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> Int\n\
    fizzbuzz n = if n%11==0 || n%13==0 then 0 else 1\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> \nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprjmp0pxq.jl:10\nin expression starting at /tmp/tmprjmp0pxq.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return fizz_buzz(n/11)\
    \ + fizz_buzz(n/13)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| a dscore=0 |>\n\
    <code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else\
    \ if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"FizzBuzz\"\
    \ else if n==4 then \"Fizz\" else if n==5 then \"Buzz\" else if n==6 then \"FizzBuzz\"\
    \ else if n==7 then \"Fizz\" else if n==8 then \"Buzz\" else if n==9 then \"FizzBuzz\"\
    \ else if n==10 then \"Fizz\" else if n==11 then \"Buzz\" else if n==12 then \"\
    FizzBuzz\" else if n==13 then \"Fizz\" else if n==14 then \"Buzz\" else if n==15\
    \ then \"FizzBuzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else\
    \ if n==18 then \"FizzBuzz\" else if n==19 then \"Fizz\" else if n==20 then \"\
    Buzz\" else if n==21 then \"FizzBuzz\" else if n==22 then \"Fizz\" else if n==23\
    \ then \"Buzz\" else if n==24 then \"FizzBuzz\" else if n==25 then \"Fizz\" else\
    \ if n==26 then \"Buzz\" else if n==27 then \"FizzBuzz\" else if n==28 then \"\
    Fizz\" else if n==29 then \"Buzz\" else if n==30 then \"FizzBuzz\" else if n==31\
    \ then \"Fizz\" else if n==32 then \"Buzz\" else if n==33 then \"FizzBuzz\" else\
    \ if n==34 then \"Fizz\" else if n==35 then \"Buzz\" else if n==36 then \"FizzBuzz\"\
    \ else if n==37 then \"Fizz\" else if n==38 then \"Buzz\" else if n==39 then \"\
    FizzBuzz\" else if n==\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpas8fc40z.jl:10\nin expression starting at /tmp/tmpas8fc40z.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 and\
    \ n%13!=0 \n        then return 1\n    else if n%11!=0 and n%13==0 \n        then\
    \ return 2\n    else if n%11!=0 and n%13!=0 \n        then return 3\n    else\
    \ return 4\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcpc20vnx.jl:10\nin expression starting at /tmp/tmpcpc20vnx.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia,if-statement\
    \ |>\n<| a tags=fizzbuzz,julia,if-statement |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjqcj7uty.jl:10\nin expression starting at /tmp/tmpjqcj7uty.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"\
    Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\"\
    \ else show n\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"Fizz\" else if n `mod`\
    \ 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\" else show n\n\
    </code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"\
    Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\"\
    \ else show n\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"Fizz\" else if n `mod`\
    \ 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\" else show n\n\
    </code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| c |>\nPlease don't post\
    \ only code as an answer, but also provide an explanation of what your code does\
    \ and how it solves the problem of the question. Answers with an explanation are\
    \ usually more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| a tags=fizzbuzz,haskell,recursion |>\n<code>\nfizzbuzz :: Int ->\
    \ String\nfizzbuzz n = if n `mod` 3 == 0 then \"Fizz\" \nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpszaacdxs.jl:10\nin expression starting at /tmp/tmpszaacdxs.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and which are also divisible by 3 or 5.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp09daw7jf.jl:10\nin expression starting at /tmp/tmp09daw7jf.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_se7uvud.jl:10\nin expression starting at /tmp/tmp_se7uvud.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThe `if` statement is redundant. `return n%11==0 or n%13==0` will\
    \ do the same thing.\n<|/ c |>\n<| c |>\nThanks I didn't know that. I've edited\
    \ my answer to reflect that.\n<|/ c |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpntrgs0l_.jl:10\nin expression starting at /tmp/tmpntrgs0l_.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    def fizz_buzz(n::Int64)::Int64\n    if n % 11 == 0 or n % 13 == 0\n        then\
    \ return 0\n    else if n % 11 == 1\n        then return 1\n    else if n % 13\
    \ == 1\n        then return 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyz_rzeza.jl:10\nin expression starting at /tmp/tmpyz_rzeza.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.3>\n\
    fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqo0izyqm.jl:10\nin expression starting at /tmp/tmpqo0izyqm.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13\
    \ and are also divisible by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg_21s_bq.jl:10\nin expression starting at /tmp/tmpg_21s_bq.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp48jl5bwv.jl:11\nin expression starting at /tmp/tmp48jl5bwv.jl:11\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia,if-statement |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/27814155)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to write\
    \ an if statement that would return 0 when n%11==0 or n%13==0. I provided a solution\
    \ that does exactly that. He also asked how to write an if statement that would\
    \ return 1 when n%11==0 or n%13==0. I provided a solution that does exactly that.\
    \ He also asked how to write an if statement that would return 2 when n%11==0\
    \ or n%13==0. I provided a solution that does exactly that. He also asked how\
    \ to write an if statement that would return 3 when n%11==0 or n%13==0. I provided\
    \ a solution that does exactly that. He also asked how to write an if statement\
    \ that would return 4 when n%11==0 or n%13==0. I provided a solution that does\
    \ exactly that. He also asked how to write an if statement that would return 5\
    \ when n%11==0 or n%13==0. I provided a solution that does exactly that. He also\
    \ asked how to write an if statement that would return 6 when n%11==0 or n%13==0.\
    \ I provided a solution that does exactly that. He also asked how to write an\
    \ if statement that would return 7 when n%11==0 or n%13==0. I provided a solution\
    \ that does exactly that.\n<|/ c |>\n<| c |>\nI believe this does answer the question.\
    \ He asked how to write an if statement that would return 0 when n%11==0 or n%13==0.\
    \ I provided a solution that does exactly that. He also asked how to write an\
    \ if statement that would return 1 when n%11==0 or n%13==0. I provided a solution\
    \ that does exactly that. He also asked how to write an if statement that would\
    \ return 2 when n%11==0 or n%13==0. I provided a solution that does exactly that.\
    \ He also asked how to write an if statement \nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50_ux_ik.jl:10\nin expression starting at /tmp/tmp50_ux_ik.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprm6s8u9n.jl:10\nin expression starting at /tmp/tmprm6s8u9n.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.1>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbo4evdc6.jl:10\nin expression starting at /tmp/tmpbo4evdc6.jl:10\n"
  stdout: ''
  timestamp: 1659823067
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5834q2f3.jl:10\nin expression starting at /tmp/tmp5834q2f3.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 4\n    if n%3==5\
    \ then return 4\n    if n%3==6 then return 4\n    if n%3==7 then return 4\n  \
    \  if n%3==8 then return 5\n    if n%3==9 then return 5\n    if n%3==10 then return\
    \ 5\n    if n%3==11 then return 5\n    if n%3==12 then return 5\n    if n%3==13\
    \ then return 5\n    if n%3==14 then return 5\n    if n%3==15 then return 5\n\
    \    if n%3==16 then return 5\n    if n%3==17 then return 5\n    if n%3==18 then\
    \ return 5\n    if n%3==19 then return 5\n    if n%3==20 then return 5\n    if\
    \ n%3==21 then return 5\n    if n%3==22 then return 5\n    if n%3==23 then return\
    \ 5\n    if n%3==24 then return 5\n    if n%3==25 then return 5\n    if n%3==26\
    \ then return 5\n    if n%3==27 then return 5\n    if n%3==28 then return 5\n\
    \    if n%3==29 then return 5\n    if n%3==30 then return 5\n    if n%3==31 then\
    \ return 5\n    if n%3==32 then return 5\n    if n%3==33 then return 5\n    if\
    \ n%3==34 then return 5\n    if n%3==35 then return 5\n    if n%3==36 then return\
    \ 5\n    if n%3==37 then return 5\n    if n%3==38 then return 5\n    if n%3==39\
    \ then return 5\n    if n%3==40 then return 5\n    if n%3==41 then return 5\n\
    \    if n%3==42 then return 5\n    if n%3==43 then return 5\n    if n%3==44 then\
    \ return 5\n    if n%3==45 then return 5\n    if n%3==46 then return 5\n    if\
    \ n%3==47 then return 5\n    if n%3==48 then return 5\n    if n%3==49 then return\
    \ 5\n    if n%3==50 then return 5\n    if n%3==51 then return 5\n    if n%3==52\
    \ then return 5\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5ui6tv4o.jl:10\nin expression starting at /tmp/tmp5ui6tv4o.jl:10\n"
  stdout: ''
  timestamp: 1659823066
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        if n%11==0\n\
    \            then return 1\n        else \n            if n%13==0\n          \
    \      then return 2\n            else \n                return 3\n</code>\n<|/\
    \ a |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to use\
    \ `if` statements to count the number of times `7` appears in a list of numbers.\
    \ Your answer doesn't do that.\n<|/ c |>\n<| c |>\nI added an example for counting\
    \ the number of times 7 appears in a list of numbers. I hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to use `if`\
    \ statements to count the number of times `7` appears in a list of numbers. Your\
    \ answer doesn't do that.\n<|/ c |>\n<| c |>\nI added an example for counting\
    \ the number of times 7 appears in a list of numbers. I hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to use `if`\
    \ statements to count the number of times `7` appears in a list of numbers. Your\
    \ answer doesn't do that.\n<|/ c |>\n<| a tags=if-statement,fizzbuzz,haskell |>\n\
    The answer is quite simple:\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if\
    \ n==0 then 0 else if n==1 then 1 else if n==2 then 2 else if n==3 then 3 else\
    \ if n==4 then 4 else if n==5 then 5 else if n==6 then 6 else if n==7 then 7 else\
    \ if n==8 then 8 else if n==9 then 9 else 10\n</code>\n<|/ a dscore=2 |>\n<| c\
    \ |>\nThis doesn't answer the question. OP wants to know how to use `if` statements\
    \ to count the number of times `7` appears in a list of numbers. Your answer doesn't\
    \ do that.\n<|/ c |>\n<| c |>\nI added an example for counting the number of times\
    \ 7 appears in a list of numbers. I hope it helps.\n<|/ c |>\n<| a tags=if-statement,fizzbuzz,haskell\
    \ |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0 then 0 else if n==1\
    \ then 1 else if n==2 then 2 else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyl18y92a.jl:10\nin expression starting at /tmp/tmpyl18y92a.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp828hy5z8.jl:10\nin expression starting at /tmp/tmp828hy5z8.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpau5grzmh.jl:23\nin expression starting at\
    \ /tmp/tmpau5grzmh.jl:23\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else \n            if\
    \ n % 13 == 1 \n                then return 2\n            else \n           \
    \     if n % 11 == 2 \n                    then return 3\n                else\
    \ \n                    if n % 13 == 2 \n                        then return 4\n\
    \                    else \n                        if n % 11 == 3 \n        \
    \                    then return 5\n                        else \n          \
    \                  if n % 13 == 3 \n                                then return\
    \ 6\n                            else \n                                if n %\
    \ 11 == 4 \n                                    then return 7\n              \
    \                  else \n                                    if n % 13 == 4 \n\
    \                                        then return 8\n                     \
    \               else \n                                        if n % 11 == 5\
    \ \n                                            then return 9\n              \
    \                          else \n                                           \
    \ if n % 13 == 5 \n                                                then return\
    \ 10\n                                            else \n                    \
    \                            if n % 11 == 6 \n                               \
    \                     then return 11\n                                       \
    \         else \n                                                    if n % 13\
    \ == 6 \n                                                        then return 12\n\
    \                                                    else \n                 \
    \                                       if n % 11 == 7 \n                    \
    \                                        then return 13\n                    \
    \                                    else \n                                 \
    \                           if n % 13 == 7 \n                                \
    \                                then return 14\n                            \
    \                                else \n                                     \
    \                           if n % 11 == 8 \n                                \
    \                                    then return 15\n                        \
    \                                        else \n                             \
    \                                       if n % 13 == 8 \n                    \
    \                                                    then return 16\n        \
    \                                                            else \n         \
    \                                                               if n % 11 == 9\
    \ \n                                                            then return 17\n\
    \                                                        else \n             \
    \                                               if n % 13 == 9 \n            \
    \                                                    then return 18\n        \
    \                                                    else \n                 \
    \                                               if n % 11 == 10 \n           \
    \                                                         then return 19\n   \
    \                                                             else \n        \
    \                                                            if n % 13 == 10 \n\
    \                                                                        then\
    \ return 20\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 11 \n                                                            then return\
    \ 21\n                                                        else \n        \
    \                                                    if n % 13 == 11 \n      \
    \                                                          then return 22\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 12 \n     \
    \                                                               then return 23\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 12\
    \ \n                                                                        then\
    \ return 24\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 13 \n                                                            then return\
    \ 25\n                                                        else \n        \
    \                                                    if n % 13 == 13 \n      \
    \                                                          then return 26\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 14 \n     \
    \                                                               then return 27\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 14\
    \ \n                                                                        then\
    \ return 28\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 15 \n                                                            then return\
    \ 29\n                                                        else \n        \
    \                                                    if n % 13 == 15 \n      \
    \                                                          then return 30\n  \
    \                                                          else \n           \
    \                                                     if n % 11 == 16 \n     \
    \                                                               then return 31\n\
    \                                                                else \n     \
    \                                                               if n % 13 == 16\
    \ \n                                                                        then\
    \ return 32\n                                                                \
    \    else \n                                                        if n % 11\
    \ == 17 \n                                                            then return\
    \ 33\n                                                        else \n        \
    \                                                    if n % 13 == 17 \nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp39pflv_7.jl:10\nin expression starting at /tmp/tmp39pflv_7.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13 and which are also divisible\
    \ by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp07eoixnd.jl:10\nin expression starting at /tmp/tmp07eoixnd.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return fizz_buzz(n/11)\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef fizz_buzz(n::Int64)::Int64\n\
    \    if n%11==0 or n%13==0 \n        then return 0 else return fizz_buzz(n/11)\n\
    </code>\n<|/ a tags=fizzbuzz,haskell |>\n<| a tags=fizzbuzz,haskell |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"Fizz\" else if\
    \ n `mod` 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\" else if\
    \ n `mod` 11 == 0 then \"FizzBuzz\" else if n `mod` 13 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 17 == 0 then \"FizzBuzz\" else if n `mod` 19 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 23 == 0 then \"FizzBuzz\" else if n `mod` 29 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 31 == 0 then \"FizzBuzz\" else if n `mod` 37 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 41 == 0 then \"FizzBuzz\" else if n `mod` 43 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 47 == 0 then \"FizzBuzz\" else if n `mod` 53 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 59 == 0 then \"FizzBuzz\" else if n `mod` 61 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 67 == 0 then \"FizzBuzz\" else if n `mod` 71 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 73 == 0 then \"FizzBuzz\" else if n `mod` 79 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 83 == 0 then \"FizzBuzz\" else if n `mod` 89 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 97 == 0 then \"Fizz\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwjpw1r8c.jl:10\nin expression starting at /tmp/tmpwjpw1r8c.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n   \
    \ >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpedai4bxs.jl:10\nin expression starting at /tmp/tmpedai4bxs.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11) + fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.0>\nfizz_buzz(50)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 3 or 5.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1h2cq490.jl:10\nin expression starting at /tmp/tmp1h2cq490.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc67q6rhe.jl:10\nin expression starting at /tmp/tmpc67q6rhe.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else \n            if\
    \ n % 13 == 1 \n                then return 2\n            else \n           \
    \     if n % 11 == 2 \n                    then return 3\n                else\
    \ \n                    if n % 13 == 2 \n                        then return 4\n\
    \                    else \n                        if n % 11 == 3 \n        \
    \                    then return 5\n                        else \n          \
    \                  if n % 13 == 3 \n                                then return\
    \ 6\n                            else \n                                return\
    \ 7\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThis doesn't work. `fizz_buzz`\
    \ returns `Int64` but `fizz_buzz` itself returns `Int`.\n<|/ c |>\n<| c |>\nYes,\
    \ I missed that. Fixed now.\n<|/ c |>\n<| a tags=fizzbuzz,haskell |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n==1 then 1 else if\
    \ n==2 then 2 else if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else\
    \ if n==6 then 6 else if n==7 then 7 else if n==8 then 8 else if n==9 then 9 else\
    \ if n==10 then 10 else if n==11 then 11 else if n==12 then 12 else if n==13 then\
    \ 13 else if n==14 then 14 else if n==15 then 15 else if n==16 then 16 else if\
    \ n==17 then 17 else if n==18 then 18 else if n==19 then 19 else if n==20 then\
    \ 20 else if n==21 then 21 else if n==22 then 22 else if n==23 then 23 else if\
    \ n==24 then 24 else if n==25 then 25 else if n==26 then 26 else if n==27 then\
    \ 27 else if n==28 then 28 else if n==29 then 29 else if n==30 then 30 else if\
    \ n==31 then 31 else if n==32 then 32 else if n==33 then 33 else if n==34 then\
    \ 34 else if n==35 then 35 else if n==36 then 36 else if n==37 then 37 else if\
    \ n==38 then 38 else if n==39 then 39 else if n==40 then 40 else if n==41 then\
    \ 41 else if n==42 then 42 else if \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqwr5ttcq.jl:10\nin expression starting at /tmp/tmpqwr5ttcq.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13 and which are also divisible by 3 or 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpczuimo5o.jl:10\nin expression starting at /tmp/tmpczuimo5o.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n - 1) \nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<|\
    \ a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjz0jk7fd.jl:10\nin expression starting at /tmp/tmpjz0jk7fd.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=2 |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz_w1dd5d.jl:10\nin expression starting at /tmp/tmpz_w1dd5d.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n\
    <| c |>\nThis doesn't work because `fizz_buzz` returns `Int64`, not `Int`.\n<|/\
    \ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a dscore=2 |>\nHere's a solution\
    \ using recursion:\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = fizzbuzz' 0 n\n\
    \  where\n    fizzbuzz' 0 0 = 0\n    fizzbuzz' 0 1 = 1\n    fizzbuzz' 0 2 = 2\n\
    \    fizzbuzz' 0 3 = 3\n    fizzbuzz' 0 4 = 4\n    fizzbuzz' 0 5 = 5\n    fizzbuzz'\
    \ 0 6 = 6\n    fizzbuzz' 0 7 = 7\n    fizzbuzz' 0 8 = 8\n    fizzbuzz' 0 9 = 9\n\
    \    fizzbuzz' 0 10 = 10\n    fizzbuzz' 0 11 = 11\n    fizzbuzz' 0 12 = 12\n \
    \   fizzbuzz' 0 13 = 13\n    fizzbuzz' 0 14 = 14\n    fizzbuzz' 0 15 = 15\n  \
    \  fizzbuzz' 0 16 = 16\n    fizzbuzz' 0 17 = 17\n    fizzbuzz' 0 18 = 18\n   \
    \ fizzbuzz' 0 19 = 19\n    fizzbuzz' 0 20 = 20\n    fizzbuzz' 0 21 = 21\n    fizzbuzz'\
    \ 0 22 = 22\n    fizzbuzz' 0 23 = 23\n    fizzbuzz' 0 24 = 24\n    fizzbuzz' 0\
    \ 25 = 25\n    fizzbuzz' 0 26 = 26\n    fizzbuzz' 0 27 = 27\n    fizzbuzz' 0 28\
    \ = 28\n    fizzbuzz' 0 29 = 29\n    fizzbuzz' 0 30 = 30\n    fizzbuzz' 0 31 =\
    \ 31\n    fizzbuzz' 0 32 = 32\n    fizzbuzz' 0 33 = 33\n    fizzbuzz' 0 34 = 34\n\
    \    fizzbuzz' 0 35 = 35\n    fizzbuzz' 0 36 = 36\n    fizzbuzz' 0 37 = 37\n \
    \   fizzbuzz' 0 38 = 38\n    fizzbuzz' \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprgvxetdq.jl:10\nin expression starting at /tmp/tmprgvxetdq.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13. Test\
    \ it on some examples:\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9v6c506g.jl:10\nin expression starting at /tmp/tmp9v6c506g.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbrn4ce70.jl:11\nin expression starting at /tmp/tmpbrn4ce70.jl:11\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxuebh0rv.jl:10\nin expression starting at /tmp/tmpxuebh0rv.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11) + fizz_buzz(n/13)\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(78)`.\n\
    <|/ c |>\n<| c |>\nI didn't test it but I think it works. I tested it on `fizz_buzz(78)`\
    \ and it returned `2`.\n<|/ c |>\n<| c |>\nI tested it on `fizz_buzz(78)` and\
    \ it returned `2`. So it works. But it also returns `0` for `fizz_buzz(79)`.\n\
    <|/ c |>\n<| c |>\nI tested it on `fizz_buzz(79)` and it returned `3`. So it works.\
    \ But it also returns `0` for `fizz_buzz(78)`.\n<|/ c |>\n<| c |>\nI tested it\
    \ on `fizz_buzz(78)` and it returned `2`. So it works. But it also returns `0`\
    \ for `fizz_buzz(79)`.\n<|/ c |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk70lhxb4.jl:10\nin expression starting at /tmp/tmpk70lhxb4.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx2h0cw9u.jl:10\nin expression starting at /tmp/tmpx2h0cw9u.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 and 13. \n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>>\
    \ fizz_buzz(79)\n3\n>>> fizz_buzz(81)\n1\n>>> fizz_buzz(82)\n2\n>>> fizz_buzz(83)\n\
    3\n>>> fizz_buzz(84)\n1\n>>> fizz_buzz(85)\n2\n>>> fizz_buzz(86)\n3\n>>> fizz_buzz(87)\n\
    1\n>>> fizz_buzz(88)\n2\n>>> fizz_buzz(89)\n3\n>>> fizz_buzz(90)\n1\n>>> fizz_buzz(91)\n\
    2\n>>> fizz_buzz(92)\n3\n>>> fizz_buzz(93)\n1\n>>> fizz_buzz(94)\n2\n>>> fizz_buzz(95)\n\
    3\n>>> fizz_buzz(96)\n1\n>>> fizz_buzz(97)\n2\n>>> fizz_buzz(98)\n3\n>>> fizz_buzz(99)\n\
    1\n>>> fizz_buzz(100)\n2\n>>> fizz_buzz(101)\n3\n>>> fizz_buzz(102)\n1\n>>> fizz_buzz(103)\n\
    2\n>>> fizz_buzz(104)\n3\n>>> fizz_buzz(105)\n1\n>>> fizz_buzz(106)\n2\n>>> fizz_buzz(107)\n\
    3\n>>> fizz_buzz(108)\n1\n>>> fizz_buzz(109)\n2\n>>> fizz_buzz(110)\n3\n>>> fizz_buzz(111)\n\
    1\n>>> fizz_buzz(112)\n2\n>>> fizz_buzz(113)\n3\n>>> fizz_buzz\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpat0105nc.jl:10\nin expression starting at /tmp/tmpat0105nc.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 3 or 5.\n\
    \    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzpdayll2.jl:10\nin expression starting at /tmp/tmpzpdayll2.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd0ei58ft.jl:10\nin expression starting at /tmp/tmpd0ei58ft.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5834q2f3.jl:10\nin expression starting at /tmp/tmp5834q2f3.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 and 13. \n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3\n>>> fizz_buzz(81)\n0\n>>> fizz_buzz(82)\n1\n>>> fizz_buzz(83)\n2\n>>> fizz_buzz(84)\n\
    3\n>>> fizz_buzz(85)\n0\n>>> fizz_buzz(86)\n1\n>>> fizz_buzz(87)\n2\n>>> fizz_buzz(88)\n\
    3\n>>> fizz_buzz(89)\n0\n>>> fizz_buzz(90)\n1\n>>> fizz_buzz(91)\n2\n>>> fizz_buzz(92)\n\
    3\n>>> fizz_buzz(93)\n0\n>>> fizz_buzz(94)\n1\n>>> fizz_buzz(95)\n2\n>>> fizz_buzz(96)\n\
    3\n>>> fizz_buzz(97)\n0\n>>> fizz_buzz(98)\n1\n>>> fizz_buzz(99)\n2\n>>> fizz_buzz(100)\n\
    3\n>>> fizz_buzz(101)\n0\n>>> fizz_buzz(102)\n1\n>>> fizz_buzz(103)\n2\n>>> fizz_buzz(104)\n\
    3\n>>> fizz_buzz(105)\n0\n>>> fizz_buzz(106)\n1\n>>> fizz_buzz(107)\n2\n>>> fizz_buzz(108)\n\
    3\n>>> fizz_buzz(109)\n0\n>>> fizz_buzz(110)\n1\n>>> fizz_buzz(111)\n2\n>>> fizz_buzz(112)\n\
    3\n>>> fizz_buzz(113)\n0\n\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx67a3o5z.jl:10\nin expression starting at /tmp/tmpx67a3o5z.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15vzal33.jl:10\nin expression starting at /tmp/tmp15vzal33.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| c |>\nThis does not provide an\
    \ answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/26832697)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to write\
    \ a function which returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. He also asked how to write this\
    \ in Julia. He also asked how to write this in Julia. He also asked how to write\
    \ this in Julia. He also asked how to write this in Julia. He also asked how to\
    \ write this in Julia. He also asked how to write this in Julia. He also asked\
    \ how to write this in Julia. He also asked how to write this in Julia. He also\
    \ asked how to write this in Julia. He also asked how to write this in Julia.\
    \ He also asked how to write this in Julia. He also asked how to write this in\
    \ Julia. He also asked how to write this in Julia. He also asked how to write\
    \ this in Julia. He also asked how to write this in Julia. He also asked how to\
    \ write this in Julia. He also asked how to write this in Julia. He also asked\
    \ how to write this in Julia. He also asked how to write this in Julia. He also\
    \ asked how to write this in Julia. He also asked how to write this in Julia.\
    \ He also asked how to write this in Julia. He also asked how to write this in\
    \ Julia. He also asked how to write this in Julia. He also asked how to write\
    \ this in Julia. He also asked how to write this in Julia. He also asked how to\
    \ write this in Julia. He also asked how to write this in Julia. He also asked\
    \ how to write this in Julia. He also asked how to write this in Julia. He also\
    \ as\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbmoreeco.jl:10\nin expression starting at /tmp/tmpbmoreeco.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq0j8be2g.jl:10\nin expression starting at /tmp/tmpq0j8be2g.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqu9xbze0.jl:10\nin expression starting at /tmp/tmpqu9xbze0.jl:10\n"
  stdout: ''
  timestamp: 1659823061
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    def fizz_buzz(number):\n    \n    if number % 11 == 0 and number % 13 == 0:\n\
    \        return \"FizzBuzz\"\n    elif number % 11 == 0:\n        return \"Fizz\"\
    \n    elif number % 13 == 0:\n        return \"Buzz\"\n    else:\n        return\
    \ number\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n<| a |>\n<code>\n\
    fizz_buzz :: Int -> String\nfizz_buzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if\
    \ n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\" else\
    \ if n==7 then \"FizzBuzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\"\
    \ else if n==10 then \"Fizz\" else if n==11 then \"Buzz\" else if n==12 then \"\
    Fizz\" else if n==13 then \"Buzz\" else if n==14 then \"Fizz\" else if n==15 then\
    \ \"Buzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if n==18\
    \ then \"Fizz\" else if n==19 then \"Buzz\" else if n==20 then \"Fizz\" else if\
    \ n==21 then \"Buzz\" else if n==22 then \"Fizz\" else if n==23 then \"Buzz\"\
    \ else if n==24 then \"Fizz\" else if n==25 then \"Buzz\" else if n==26 then \"\
    Fizz\" else if n==27 then \"Buzz\" else if n==28 then \"Fizz\" else if n==29 then\
    \ \"Buzz\" else if n==30 then \"Fizz\" else if n==31 then \"Buzz\" else if n==32\
    \ then \"Fizz\" else if n==33 then \"Bu\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvplqodke.jl:10\nin expression starting at /tmp/tmpvplqodke.jl:10\n"
  stdout: ''
  timestamp: 1659823068
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n - 1)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<|\
    \ c |>\nI like this solution, but I wonder if it can be made more efficient by\
    \ avoiding recursion.\n<|/ c |>\n<| c |>\nIt can be made more efficient by avoiding\
    \ recursion, but it's still a recursive solution. Recursion is just syntactic\
    \ sugar for loops. It's not magically more efficient.\n<|/ c |>\n<| c |>\nI agree\
    \ with you that recursion is syntactic sugar for loops, but I wonder if it can\
    \ be made more efficient by avoiding recursion.\n<|/ c |>\n<| c |>\nI agree with\
    \ you that recursion is syntactic sugar for loops, but I wonder if it can be made\
    \ more efficient by avoiding recursion.\n<|/ c |>\n<| c |>\nI agree with you that\
    \ recursion is syntactic sugar for loops, but I wonder if it can be made more\
    \ efficient by avoiding recursion.\n<|/ c |>\n<| a dscore=2 |>\nThe first thing\
    \ that comes to mind is to write a function that takes an integer and returns\
    \ a list of all the numbers from 1 to that integer. Then, write a function that\
    \ takes an integer and returns a list of all the numbers from 1 to that integer\
    \ that are divisible by 3 or 5.\nThen, write a function that takes an integer\
    \ and returns a list of all the numbers from 1 to that integer that are divisible\
    \ by 3 or 5 AND are divisible by 7.\nThen, write a function that takes an integer\
    \ and returns a list of all the numbers from 1 to that integer that are divisible\
    \ by 3 or 5 AND are divisible by 7 AND are divisible by 11.\nThen, write a function\
    \ that takes an integer and returns a list of all the numbers from 1 to that integer\
    \ that are divisible by 3 or 5 AND are divisible by 7 AND are divisible by 11\
    \ AND are divisible by 13.\nThen, write a function that takes an integer and returns\
    \ a list of all the numbers from 1 to that integer that are divisible by 3 or\
    \ 5 AND are divisible by 7 AND are divisible by 11 AND are divisible by 13 AND\
    \ are divisible by 15.\nThen, write a function that takes an integer and returns\
    \ a list of all the numbers from 1 to that integer that are divisible by 3 or\
    \ 5 AND are divisible by 7 AND are divisible by 11 AND are divisible by 13 AND\
    \ are divisible by 15 AND are divisible by 17.\nThen\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqbqrl6aj.jl:10\nin expression starting at /tmp/tmpqbqrl6aj.jl:10\n"
  stdout: ''
  timestamp: 1659823069
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1 + fizz_buzz(n / 11)\n    fizz_buzz(n / 13)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk_yse_fp.jl:10\nin expression starting at /tmp/tmpk_yse_fp.jl:10\n"
  stdout: ''
  timestamp: 1659823069
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdq_u5wvl.jl:10\nin expression starting at /tmp/tmpdq_u5wvl.jl:10\n"
  stdout: ''
  timestamp: 1659823059
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n\
    <| c |>\nThis doesn't work. `fizz_buzz` returns `Int64` but `fizz_buzz 50` returns\
    \ `0`.\n<|/ c |>\n<| c |>\nYes, I noticed that after I posted my answer. Thanks\
    \ for pointing it out. I've updated my answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    fizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0 else if n `mod`\
    \ 13 == 0 then 1 else 2\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n\
    <| a dscore=1 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11\
    \ == 0 then 0 else if n `mod` 13 == 0 then 1 else 2\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz\
    \ |>\n<| a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n<code>\nfizz_buzz :: Int ->\
    \ Int\nfizz_buzz n = if n `mod` 11 == 0 then 0 else if n `mod` 13 == 0 then 1\
    \ else 2\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz :: Int\
    \ -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0 else if n `mod` 13 == 0 then\
    \ 1 else 2\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n `mod` 11 == 0 then 0\
    \ else if n `mod` 13 == 0 then 1 else 2\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbu\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpappr1jfr.jl:10\nin expression starting at /tmp/tmpappr1jfr.jl:10\n"
  stdout: ''
  timestamp: 1659823069
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13 and which are also divisible\
    \ by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgtashaa9.jl:10\nin expression starting at /tmp/tmpgtashaa9.jl:10\n"
  stdout: ''
  timestamp: 1659823069

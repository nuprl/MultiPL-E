language: jl
name: HumanEval_133_sum_squares
results:
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of numbers and\
    \ returns the sum of the squares of the numbers in the list.\nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc9wjfv99.jl:25\nin expression starting at\
    \ /tmp/tmpc9wjfv99.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the maximum of a given\
    \ list of numbers.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_4x7zgj.jl:25\nin expression starting at\
    \ /tmp/tmpf_4x7zgj.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqxhh9aq7.jl:25\nin expression starting at\
    \ /tmp/tmpqxhh9aq7.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg8y6dnjh.jl:25\nin expression starting at\
    \ /tmp/tmpg8y6dnjh.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the square root of\
    \ a number. \nExamples:\n>>> sqrt(4)\n2\n>>> sqrt(-4)\n\u22122\n>>> sqrt(0)\n\u221E\
    \n>>> sqrt(1)\n1\n>>> sqrt(2)\n1.41421356237\n>>> sqrt(3)\n1.73205080756888\n\
    >>> sqrt(10)\n3.162277660168\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdi3ba05s.jl:25\nin expression starting at\
    \ /tmp/tmpdi3ba05s.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpir_fgauh.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpir_fgauh.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpir_fgauh.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpir_fgauh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpir_fgauh.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpir_fgauh.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpir_fgauh.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpir_fgauh.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpir_fgauh.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpir_fgauh.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpir_fgauh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpir_fgauh.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpir_fgauh.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpir_fgauh.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpir_fgauh.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpir_fgauh.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of squared\
    \ numbers in the given list,\n    round each element in the list to the upper\
    \ int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n    14\n \
    \   >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84\n\
    \    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n    6\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv0lt58ba.jl:25\nin expression starting at\
    \ /tmp/tmpv0lt58ba.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the maximum of a given\
    \ list of numbers.\nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n    2.0\n    >>>\
    \ lst([1.0, 4.0, 9.0])\n    9.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n\
    \    >>> lst([1.4, 4.2, 0.0])\n    4.0\n    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_drv8h5m.jl:25\nin expression starting at\
    \ /tmp/tmp_drv8h5m.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise: Write a function that takes a list of numbers and returns\
    \ the product of all the numbers in the list.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n\
    \    6\n>>> lst([1.0, 4.0, 9.0])\n    27\n>>> lst([1.0, 3.0, 5.0, 7.0])\n    49\n\
    >>> lst([1.4, 4.2, 0.0])\n    0.2\n>>> lst([-2.4, 1.0, 1.0])\n    -1\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1n60vvwc.jl:25\nin expression starting at\
    \ /tmp/tmp1n60vvwc.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpr_d_ofdw.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpr_d_ofdw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpr_d_ofdw.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6p8h9ulo.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp6p8h9ulo.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp6p8h9ulo.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6p8h9ulo.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp6p8h9ulo.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp6p8h9ulo.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the maximum of a list\
    \ of numbers. \nThe function should take a list of numbers as an argument and\
    \ return the maximum number.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8fxrfg6d.jl:25\nin expression starting at\
    \ /tmp/tmp8fxrfg6d.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the squares\
    \ of the first N positive integers in the given list.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj6r7pqrq.jl:25\nin expression starting at\
    \ /tmp/tmpj6r7pqrq.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpunh_bt33.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpunh_bt33.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpunh_bt33.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpunh_bt33.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpunh_bt33.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpunh_bt33.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpunh_bt33.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpunh_bt33.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpunh_bt33.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpunh_bt33.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpunh_bt33.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpunh_bt33.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpunh_bt33.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6p8h9ulo.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp6p8h9ulo.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp6p8h9ulo.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p8h9ulo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p8h9ulo.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p8h9ulo.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p8h9ulo.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the squares\
    \ of the first n integers in the given list.\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpotmdpz6f.jl:25\nin expression starting at\
    \ /tmp/tmpotmdpz6f.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpr_d_ofdw.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpr_d_ofdw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpr_d_ofdw.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest "
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpr_d_ofdw.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpr_d_ofdw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpr_d_ofdw.jl:23\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr_d_ofdw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpr_d_ofdw.jl:23\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpr_d_ofdw.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpr_d_ofdw.jl:29\ntest "

language: jl
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns True \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdjx7f2b5.jl:21\nin expression starting at /tmp/tmpdjx7f2b5.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for i=1:a\n            cube=cube && iscube(i)\n\
    \        end\n        return cube\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(2)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer a and returns True \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7jn2iqga.jl:21\nin expression starting at /tmp/tmp7jn2iqga.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8ssf28r.jl:20\nin expression starting at /tmp/tmpn8ssf28r.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8ssf28r.jl:20\nin expression starting at /tmp/tmpn8ssf28r.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprtc_gnkq.jl:1\nin expression starting at /tmp/tmprtc_gnkq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else return false\n    end\nend\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThe `iscube` function can\
    \ be simplified to `return a==0 || a==1 || a==2 || a==3 || a==4 || a==5 || a==6\
    \ || a==7 || a==8 || a==9`\n<|/ c |>\n<| c |>\nYes, you are right. I just wanted\
    \ to show that you can write it in a more compact way. Thanks.\n<|/ c |>\n<| c\
    \ |>\n`iscube(a::Int64)` should be `iscube(a::Int)`\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\nIn Julia 1.3 you can use the following syntax:\n<code>\njulia> if a==1 ||\
    \ a==2 || a==3 || a==4 || a==5 || a==6 || a==7 || a==8 || a==9 \n       then true\n\
    \       else false\n       end\ntrue\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1i_vtvj8.jl:21\nin expression starting at /tmp/tmp1i_vtvj8.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube\
    \ only accepts positive integers\")\n    else if a == 0 \n        true\n    else\
    \ if a == 1 \n        true\n    else if a == 2 \n        true\n    else if a ==\
    \ 3 \n        true\n    else if a == 4 \n        true\n    else if a == 5 \n \
    \       true\n    else if a == 6 \n        true\n    else if a == 7 \n       \
    \ true\n    else if a == 8 \n        true\n    else if a == 9 \n        true\n\
    \    else if a == 10 \n        true\n    else if a == 11 \n        true\n    else\
    \ if a == 12 \n        true\n    else if a == 13 \n        true\n    else if a\
    \ == 14 \n        true\n    else if a == 15 \n        true\n    else if a == 16\
    \ \n        true\n    else if a == 17 \n        true\n    else if a == 18 \n \
    \       true\n    else if a == 19 \n        true\n    else if a == 20 \n     \
    \   true\n    else if a == 21 \n        true\n    else if a == 22 \n        true\n\
    \    else if a == 23 \n        true\n    else if a == 24 \n        true\n    else\
    \ if a == 25 \n        true\n    else if a == 26 \n        true\n    else if a\
    \ == 27 \n        true\n    else if a == 28 \n        true\n    else if a == 29\
    \ \n        true\n    else if a == 30 \n        true\n    else if a == 31 \n \
    \       true\n    else if a == 32 \n        true\n    else if a == 33 \n     \
    \   true\n    else if a == 34 \n        true\n    else if a == 35 \n        true\n\
    \    else if a == 36 \n        true\n    else if a == 37 \n        true\n    else\
    \ if a == 38 \n        true\n    else if a == 39 \n        true\n    else if a\
    \ == 40 \n        true\n    else if a == 41 \n        true\n    else if a == 42\
    \ \n        true\n    else if a == 43 \n        true\n    else if a == 44 \n \
    \       true\n    else if a == 45 \n        true\n    else if a == 46 \n     \
    \   true\n    else if a == 47 \n        true\n    else if a == 48 \n        true\n\
    \    else if a == 49 \n        true\n    else if a == 50 \n        true\n    else\
    \ if a == 51 \n        true\n    else if a == 52 \n        true\n    else if a\
    \ == 53 \n\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy18nd9dx.jl:22\nin expression starting at\
    \ /tmp/tmpy18nd9dx.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstp46uhs.jl:21\nin expression starting at /tmp/tmpstp46uhs.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstp46uhs.jl:21\nin expression starting at /tmp/tmpstp46uhs.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstp46uhs.jl:21\nin expression starting at /tmp/tmpstp46uhs.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy1wikwhr.jl:21\nin expression starting at /tmp/tmpy1wikwhr.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstp46uhs.jl:21\nin expression starting at /tmp/tmpstp46uhs.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \nWrite a function that takes an integer a and returns True \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp42znnrmz.jl:25\nin expression starting at\
    \ /tmp/tmp42znnrmz.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8ssf28r.jl:20\nin expression starting at /tmp/tmpn8ssf28r.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n    then return true\n\
    \    else if a%1 == 0 \n    then return false\n    else return iscube(a-1)\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion |>\nI like using while loops\
    \ because they can be easily converted to recursive functions. \n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ny6m14q.jl:21\nin expression starting at /tmp/tmp0ny6m14q.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube\
    \ expects an integer greater than 0\")\n    else if a == 0 \n        true\n  \
    \  else if a == 1\n        true\n    else if a == 2\n        true\n    else if\
    \ a == 3\n        true\n    else if a == 4\n        true\n    else if a == 5\n\
    \        true\n    else if a == 6\n        true\n    else if a == 7\n        true\n\
    \    else if a == 8\n        true\n    else if a == 9\n        true\n    else\
    \ if a == 10\n        true\n    else if a == 11\n        true\n    else if a ==\
    \ 12\n        true\n    else if a == 13\n        true\n    else if a == 14\n \
    \       true\n    else if a == 15\n        true\n    else if a == 16\n       \
    \ true\n    else if a == 17\n        true\n    else if a == 18\n        true\n\
    \    else if a == 19\n        true\n    else if a == 20\n        true\n    else\
    \ if a == 21\n        true\n    else if a == 22\n        true\n    else if a ==\
    \ 23\n        true\n    else if a == 24\n        true\n    else if a == 25\n \
    \       true\n    else if a == 26\n        true\n    else if a == 27\n       \
    \ true\n    else if a == 28\n        true\n    else if a == 29\n        true\n\
    \    else if a == 30\n        true\n    else if a == 31\n        true\n    else\
    \ if a == 32\n        true\n    else if a == 33\n        true\n    else if a ==\
    \ 34\n        true\n    else if a == 35\n        true\n    else if a == 36\n \
    \       true\n    else if a == 37\n        true\n    else if a == 38\n       \
    \ true\n    else if a == 39\n        true\n    else if a == 40\n        true\n\
    \    else if a == 41\n        true\n    else if a == 42\n        true\n    else\
    \ if a == 43\n        true\n    else if a == 44\n        true\n    else if a ==\
    \ 45\n        true\n    else if a == 46\n        true\n    else if a == 47\n \
    \       true\n    else if a == 48\n        true\n    else if a == 49\n       \
    \ true\n    else if a == 50\n        true\n    else if a == 51\n        true\n\
    \    else if a == 52\n        true\n    else if a == 53\n        true\n    else\
    \ if a == 54\n        true\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7m02_l0z.jl:22\nin expression starting at\
    \ /tmp/tmp7m02_l0z.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube\
    \ expects an integer greater than 0\")\n    end\n    if a <= 0 \n        error(\"\
    iscube expects an integer greater than 0\")\n    end\n    if a <= 1 \n       \
    \ true\n    end\n    if a <= 3 \n        true\n    end\n    if a <= 9 \n     \
    \   true\n    end\n    if a <= 27 \n        true\n    end\n    if a <= 81 \n \
    \       true\n    end\n    if a <= 127 \n        true\n    end\n    if a <= 255\
    \ \n        true\n    end\n    if a <= 511 \n        true\n    end\n    if a <=\
    \ 1023\n        true\n    end\n    if a <= 2047\n        true\n    end\n    if\
    \ a <= 4095\n        true\n    end\n    if a <= 8191\n        true\n    end\n\
    \    if a <= 16383\n        true\n    end\n    if a <= 32767\n        true\n \
    \   end\n    if a <= 65535\n        true\n    end\n    if a <= 131071\n      \
    \  true\n    end\n    if a <= 262143\n        true\n    end\n    if a <= 524287\n\
    \        true\n    end\n    if a <= 1048575\n        true\n    end\n    if a <=\
    \ 2097151\n        true\n    end\n    if a <= 4194303\n        true\n    end\n\
    \    if a <= 8388607\n        true\n    end\n    if a <= 16777215\n        true\n\
    \    end\n    if a <= 33554431\n        true\n    end\n    if a <= 67108863\n\
    \        true\n    end\n    if a <= 134217727\n        true\n    end\n    if a\
    \ <= 268435455\n        true\n    end\n    if a <= 536870911\n        true\n \
    \   end\n    if a <= 1073741823\n        true\n    end\n    if a <= 2147483647\n\
    \        true\n    end\n    if a <= 4294967295\n        true\n    end\n    if\
    \ a <= 858993459\n        true\n    end\n    if a <= 1717986918\n        true\n\
    \    end\n    if a <= 34359738367\n        true\n    end\n    if a <= 68719476735\n\
    \        true\n    end\n    if a <= 137438953471\n        true\n    end\n    if\
    \ a <= 274877906943\n        true\n    end\n    if a <= 549755813887\n       \
    \ true\n    end\n    if a <= 1099511627775\n        true\n    end\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ta9c1r2.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ta9c1r2.jl:1\n\
    in expression starting at /tmp/tmp6ta9c1r2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for i=1:a\n            cube=cube && iscube(i*i)\n\
    \        end\n        return cube\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nWrite a function that takes an integer a and returns True \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppwph59ik.jl:21\nin expression starting at /tmp/tmppwph59ik.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    return false\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't work\
    \ for `iscube(1000)`, which should return `true`.\n<|/ c |>\n<| c |>\nI believe\
    \ that \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkm0s3msx.jl:87\nin expression starting at\
    \ /tmp/tmpkm0s3msx.jl:87\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns True\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstp46uhs.jl:21\nin expression starting at /tmp/tmpstp46uhs.jl:21\n"
  stdout: ''

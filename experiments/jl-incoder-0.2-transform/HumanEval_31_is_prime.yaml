name: HumanEval_31_is_prime
language: jl
prompt: "\"\"\"Return true if a given number is prime, and false otherwise.\n    >>>\
  \ is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n\
  \    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n \
  \   >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n    \"\"\"\nfunction\
  \ is_prime(n::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
  \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
  @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
  \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
  \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
  @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
completions: ["    if is_prime_impl(n) \n    else \n        false\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@test is_prime(6)\n@test is_prime(101)\n@test\
    \ is_prime(11)\n@test is_prime(13441)\n@test is_prime(61)\n@test is_prime(4)\n\
    @test is_prime(1)\n</cell>\n<text>\nExercise: Write a function that checks if\
    \ a given number is divisible by any number between 1 and a given number. For\
    \ example, if the given number is 10, then is_divisible(10, 1, 20) should return\
    \ true.", "    if n < 2 || n % 2 == 0\n        return false\n    \n    i = 5\n\
    \    while i * i <= n\n        if n % i == 0\n            return false\n     \
    \   i += 6\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(101)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(11)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise\nWrite a function that returns the\
    \ number of prime factors of a given number.", "    if n < 2 || n % 2 == 0 \n\
    \        then return false\n    else if n == 2 \n        then return true\n  \
    \  else \n        begin \n            n /= 2\n            for _ in 1:(n - 1) \n\
    \                do return false \n            end\n            return true\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true\
    \ if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    false\n\
    \    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n\
    \    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n  \
    \  >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2 == 0 || n %\
    \ 3 == 0 \n        then return false\n    else if n == 2 || n == 3 || n == 5 ||\
    \ n == 7 || n == 11 \n        then return true\n    else if n % 6 == 0 \n    \
    \    then return false\n    else if n % 12 == 1 \n        then return false\n\
    \    else if n % 12 == 3 \n        then return false\n    else if n % 12 == 5\
    \ \n        then return false\n    else if n % 12 == 7 \n        then return false\n\
    \    else if n % 12 == 11\n        then return false\n    else if n % 12 == 13\n\
    \        then return false\n    else if n % 12 == 17\n        then return false\n\
    \    else if n % 12 == 23 \n        then return false\n    else if n % 12 == 29\n\
    \        then return false\n    else if n % 12 == 37\n        then return false\n\
    \    else if n % 12 == 43 \n        then return false\n    else if n % 12 == 71\
    \ \n        then return false\n    else if n % 12 == 111\n        then return\
    \ false\n    else if n % 12 == 131\n        then return false\n    else if n %\
    \ 12 == 171\n        then return false\n    else if n % 12 == 269\n        then\
    \ return false\n    else if n % 12 == 297\n        then return false\n    else\
    \ if n % 12 == 383\n        then return false\n    else if n % 12 == 439\n   \
    \     then return false\n    else if n % 12 == 731\n        then return false\n\
    \    else if n % 12 == 1143\n        then return false\n    else if n % 12 ==\
    \ 1371\n        then return false\n    else if n % 12 == 1791\n        then return\
    \ false\n    else if n % 12 == 2431\n        then return false\n    else if n\
    \ % 12 == 2919\n        then return false\n    else if n % 12 == 3859\n      \
    \  then return false\n    else if n % 12 == 4879\n        then return false\n\
    \    else if n % 12 == 7331\n        then return false\n    else if n % 12 ==\
    \ 11823\n        then return false\n    else if n % 12 == 13679\n        then\
    \ return false\n    else if n % 12 == 18331\n        then return false\n    else\
    \ if n % 12 == 19727\n        then return false\n    else if n % 12 == 24683\n\
    \        then return false\n    else if n % 12 == 29399\n        then return false\n\
    \    else if n % 12 == ", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n < 2 \n        return false\n    \n    if n == 2 \n        return\
    \ true\n    \n    if n % 2 == 0 \n        return false\n    \n    i = 5\n    while\
    \ i * i <= n \n        i += 2\n    \n    if n == i \n        return true\n   \
    \ \n    return false\nend", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n <= 1 \n        return false\n    \n    if n % 2 == 0 \n      \
    \  return false\n    \n    prime_cache = [true, true]\n    \n    for d in range(3,\
    \ n+1, 2) \n        if prime_cache[d] \n            return false\n        prime_cache[d]\
    \ = n % d == 0\n    \n    return true\nend", "    if n < 2 || n % 2 == 0\n   \
    \     return false\n    \n    i = 5\n    while i * i <= n\n        if n % i ==\
    \ 0\n            return false\n        i += 6\n    return true\nend", "    if\
    \ is_prime_cache[n] \n        return is_prime_cache[n]\n    if n <= 1 \n     \
    \   return false\n    if n == 2 \n        return true\n    if n % 2 == 0 \n  \
    \      return false\n    \n    i = 5\n    while i * i <= n \n        i += 2\n\
    \    if i == n \n        return true\n    \n    return false\nend", '    if n
    < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 || n % 11 == 0 ||
    n % 13 == 0 || n % 17 == 0 || n % 19 == 0 || n % 23 == 0 || n % 29 == 0 || n %
    31 == 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 || n % 47 == 0 || n % 53
    == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n % 71 == 0 || n % 73 ==
    0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 || n % 97 == 0 || n % 101 == 0
    || n % 103 == 0 || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 117 ==
    0 || n % 121 == 0 || n % 123 == 0 || n % 127 == 0 || n % 129 == 0 || n % 131 ==
    0 || n % 133 == 0 || n % 137 == 0 || n % 139 == 0 || n % 141 == 0 || n % 143 ==
    0 || n % 147 == 0 || n % 149 == 0 || n % 151 == 0 || n % 153 == 0 || n % 157 ==
    0 || n % 159 == 0 || n % 163 == 0 || n % 167 == 0 || n % 171 == 0 || n % 173 ==
    0 || n % 177 == 0 || n % 179 == 0 || n % 181 == 0 || n % 183 == 0 || n % 187 ==
    0 || n % 189 == 0 || n % 191 == 0 || n % 193 == 0 || n % 197 == 0 || n % 199 ==
    0 || n % 201 == 0 || n % 203 == 0 || n % 207 == 0 || n % 209 == 0 || n % 211 ==
    0 || n % 213 == 0 || n % 215 == 0 || n % 217 == 0 || n % 219 == 0 || n % 221 ==
    0 || n % 223 == 0 || n % 227 == 0 || n % 229 == 0 || n % 231 == 0 || n % 233 ==
    0 || n % 239 == 0 || n % 241 == 0 || n % 243 == 0 || n % 247 == 0 || n % 249 ==
    0 || n % 251 == 0 || n % 253 == 0 || n % 257 == 0 || n % 259 == 0 || n % 261 ==
    0 || n % 263 == 0 || n % 267 == 0 || n % 269 == 0 || n % 271 == 0 || n % 273 ==
    0 || n % 277 == 0 || n % 279 == 0 || n % 281 == 0 || n % 283 == 0 || n % 287 ==
    0 || n % 289 == 0 || n % 291 == 0 || n % 293 == 0 || n % 297 == 0 || n % 301 ==
    0 || n % 303 == 0 || n % 307 == 0 || n % 309 == 0 || n % 311 == 0 || n % 313 ==
    0 || n % 315 == 0 || n % 317 == 0 || n % 319 == 0 || n % 321 == 0 || n % 323 ==
    0 || n % 327 == 0 || n % 329 == 0 || n % 331 == 0 || n % 333 == 0 || n % 337 ==
    0 || n % 339 == 0 || n % 341 == 0 || n % 343 == 0 || n % 347 == 0 || n % 349 ==
    0 || n % 351 == 0 || n % 353 == 0 || n % 357 == 0 || n % 359 == 0 || n % 361 ==
    0 || n % 363 == 0 || n % 367', "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else if n == 2 \n        then return true\n    else \n        begin\
    \ \n            x <- 2\n            while x < n \n                do \n      \
    \              x <- x + 2\n                until x % n != 0\n            return\
    \ false\n        end\nend\n</cell>\n<code language=julia-1.5>\nis_prime(6)\n</cell>\n\
    <code language=julia-1.5>\nis_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\nis_prime(4)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns true if a given number is divisible by all numbers from\
    \ 1 to 100, and false otherwise.\nHint: Use a for loop.", "    if n == 2\n   \
    \     true\n    else\n        if is_prime(n-1)\n            true\n        else\n\
    \            false\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n\
    </cell>\n<text>\nExercise: Write a function that checks if a given number is even.\n\
    The function should take one argument (a number) and return true if the number\
    \ is even, and false otherwise.", "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else if n == 2 \n        then return true\n    else \n        begin\
    \ \n            x <- 2\n            y <- 3\n            while y <= n \n      \
    \          do \n                    if n % y == 0 \n                        then\
    \ return false\n                    y <- y + 2\n            end \n           \
    \ return true\n        end\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2\n      \
    \  return false\n    \n    if n == 2\n        return true\n    \n    if n % 2\
    \ == 0\n        return false\n    \n    i = 5\n    while i * i <= n\n        i\
    \ += 2\n    \n    return n % i == 0\nend", "    if n < 2 || n % 2 == 0 \n    \
    \    then return false\n    else if n == 2 \n        then return true\n    else\
    \ if n % 3 == 0 \n        then return false\n    else if n % 5 == 0 \n       \
    \ then return false\n    else \n        primes <- primes(n)\n        for p in\
    \ primes\n            if n % p == 0 \n                then return false\n    else\
    \ \n        return true\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that returns the first n prime numbers. Use\
    \ a while loop to find the first n prime numbers. Use a for loop to find the first\
    \ n prime numbers.", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 ||\
    \ n % 7 == 0 \n        then return false\n    else if n == 1 || n == 2 || n ==\
    \ 3 || n == 5\n        then return true\n    else if n % 6 == 0 then return false\n\
    \    else if n % 6 == 1 then return true\n    else if n % 6 == 2 then return false\n\
    \    else if n % 6 == 3 then return true\n    else if n % 6 == 5 then return false\n\
    \    else if n % 6 == 7 then return true\n    else if n % 6 == 11 || n % 6 ==\
    \ 13 || n % 6 == 17 || n % 6 == 19\n        then return false\n    else if n %\
    \ 6 == 13 || n % 6 == 17 || n % 6 == 19\n        then return true\n    else if\
    \ n % 6 == 17 || n % 6 == 19\n        then return false\n    else if n % 6 ==\
    \ 19\n        then return true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n\
    \    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n\
    \    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n\
    \    false\n    >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2 || n %\
    \ 2 == 0\n        return false\n    \n    i = 2\n    while i * i <= n\n      \
    \  if n % i == 0\n            return false\n        i += 1\n    return true\n\
    end\n</cell>\n<code language=julia-1.3>\n@time is_prime(101)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.3>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.3>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that returns all prime numbers less than a\
    \ given number. Test it by calling it with the number 101.", "    if is_prime_impl(n)\
    \ then return true else return false end\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that checks if a given number is divisible by another number.", " \
    \   if is_prime_cache[n] \n        return is_prime_cache[n]\n    \n    if n <=\
    \ 1 \n        return false\n    \n    if n == 2 \n        return true\n    \n\
    \    if n % 2 == 0 \n        return false\n    \n    i = 5\n    while i * i <=\
    \ n \n        i += 2\n    \n    if n == i \n        return true\n    \n    return\
    \ false\nend", "    if is_prime_impl(n) \n    else \n        true\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\nis_prime(6)\n</cell>\n<code language=julia-1.1>\n\
    is_prime(101)\n</cell>\n<code language=julia-1.1>\nis_prime(11)\n</cell>\n<code\
    \ language=julia-1.1>\nis_prime(13441)\n</cell>\n<code language=julia-1.1>\nis_prime(61)\n\
    </cell>\n<code language=julia-1.1>\nis_prime(4)\n</cell>\n<code language=julia-1.1>\n\
    is_prime(1)\n</cell>\n<text>\nExercise: Write a function that checks if a given\
    \ number is divisible by any number between 1 and a given number. For example,\
    \ if the given number is 10, then is_divisible(10, 1) should return true, and\
    \ is_divisible(10, 2) should return false. Hint: use an if statement.", "    if\
    \ is_prime_cache[n] \n        return is_prime_cache[n]\n    if n <= 1 \n     \
    \   return false\n    if n == 2 \n        return true\n    if n % 2 == 0 \n  \
    \      return false\n    if n % 3 == 0 \n        return false\n    \n    i = 5\n\
    \    \n    while i * i <= n \n        if n % i == 0 \n            return false\n\
    \        i += 6\n    \n    return true\nend", "    if n < 2 || n % 2 == 0 \n \
    \       then return false\n    else if n == 2 \n        then return true\n   \
    \ else \n        begin \n            n /= 2\n            while (n % 2 == 0) \n\
    \                do n /= 2\n            while (n > 2) \n                do n /=\
    \ 2\n            return n == 1\n        end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2\n      \
    \  return false\n    \n    if n == 2\n        return true\n    \n    if n % 2\
    \ == 0\n        return false\n    \n    i = 5\n    \n    while i * i <= n\n  \
    \      i += 2\n    \n    return n == i\nend", "    if n < 2 || n == 1 \n     \
    \   true\n    else\n        n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 ==\
    \ 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 || n % 23 == 0\
    \ || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 ||\
    \ n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n\
    \ % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 || n %\
    \ 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 == 0 || n\
    \ % 113 == 0 || n % 127 == 0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 ||\
    \ n % 147 == 0 || n % 151 == 0 || n % 157 == 0 || n % 159 == 0 || n % 163 == 0\
    \ || n % 167 == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185 ==\
    \ 0 || n % 191 == 0 || n % 193 == 0 || n % 197 == 0 || n % 199 == 0 || n % 211\
    \ == 0 || n % 213 == 0 || n % 217 == 0 || n % 219 == 0 || n % 223 == 0 || n %\
    \ 227 == 0 || n % 229 == 0 || n % 233 == 0 || n % 239 == 0 || n % 241 == 0 ||\
    \ n % 251 == 0 || n % 257 == 0 || n % 263 == 0 || n % 269 == 0 || n % 271 == 0\
    \ || n % 277 == 0 || n % 281 == 0 || n % 283 == 0 || n % 293 == 0 || n % 307 ==\
    \ 0 || n % 309 == 0 || n % 311 == 0 || n % 313 == 0 || n % 317 == 0 || n % 331\
    \ == 0 || n % 337 == 0 || n % 341 == 0 || n % 347 == 0 || n % 349 == 0 || n %\
    \ 353 == 0 || n % 359 == 0 || n % 361 == 0 || n % 367 == 0 || n % 373 == 0 ||\
    \ n % 379 == 0 || n % 383 == 0 || n % 389 == 0 || n % 397 == 0 || n % 401 == 0\
    \ || n % 403 == 0 || n % 419 == 0 || n % 421 == 0 || n % 431 == 0 || n % 433 ==\
    \ 0 || n % 439 == 0 || n % 443 == 0 || n % 449 == 0 || n % 457 == 0 || n % 461\
    \ == 0 || n % 463 == 0 || n % 467 == 0 || n % 479 == 0 || n % 483 == 0 || n %\
    \ 489 == 0 || n % 491 == 0 || n % 499 == 0 || n % 501 == 0 || n % 503 == 0 ||\
    \ n % 509 == 0 || n % 521 == 0 || n % 523 == 0 || n % 529 == 0 || n % 531 == 0\
    \ || n % 533 == 0 || n % 537 == 0 || n % 539 == 0 || n % 541 == 0 || n % 547 ==\
    \ 0 || n % 549 == 0 || n % 551 == 0 || n % 557 == 0 || n % 561 == 0 || n % 563\
    \ == 0 || ", "    if n < 2\n        return false\n    \n    if n == 2\n      \
    \  return true\n    \n    if n % 2 == 0\n        return false\n    \n    i = 5\n\
    \    while i * i <= n\n        i += 2\n    \n    return n == i\nend", "    if\
    \ n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n    then return\
    \ false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of prime factors of a given number.", " \
    \   if is_prime_impl(n) then return true else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@", "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else if n == 2 \n        then return true\n    else \n        prime::Int64\
    \ = 2 \n        while prime < n \n            do if n % prime == 0 \n        \
    \        then return false \n                else prime += 1 \n            end\n\
    \        end\n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    is_prime(6)\n</cell>\n<code language=julia-1.5>\nis_prime(101)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(4)\n</cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the number of prime factors of a given\
    \ number.", "    if is_prime_cache[n] == true \n    else \n        if is_prime_cache[n]\
    \ == false \n        else \n            prime_cache[n] = is_prime_cache[n]\n \
    \           prime_cache[n] = true\n            \n            if n <= 1 \n    \
    \        then \n                is_prime_cache[n] = false\n            else \n\
    \                let \n                    i = 2\n                    while i\
    \ <= n \n                    do \n                        if n % i == 0 \n   \
    \                     then \n                            is_prime_cache[n] = false\n\
    \                        else \n                            i = i + 1\n      \
    \          end\n        end\n    end\n    return is_prime_cache[n]\nend\n</cell>\n\
    <code language=julia-1.5>\nis_prime(6)\n</cell>\n<code language=julia-1.5>\nis_prime(101)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(11)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(13441)\n</cell>\n<code language=julia-1.5>\nis_prime(61)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(4)\n</cell>\n<code language=julia-1.5>\nis_prime(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of prime factors\
    \ of a given number.", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else if n % 3 == 0 \n    \
    \    then return false\n    else \n        do return (n % 5 == 0 \n          \
    \  || n % 7 == 0 \n            || n % (3 * 5) == 0 \n            || n % (5 * 7)\
    \ == 0 \n            || n % (7 * 3) == 0 \n            || n % (7 * 5) == 0 \n\
    \            || n % (3 * 7) == 0 \n            || n % (5 * 3) == 0 \n        \
    \    || n % (7 * 7) == 0)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns all prime numbers up to a given number.", "    if n\
    \ < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 || n % 11 == 0 \n\
    \    then return false\n    else return true\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(61)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(", "    if n < 2 || n % 2 == 0 \n        return false\n    \n\
    \    i = 5\n    while i * i <= n \n        if n % i == 0 \n            return\
    \ false\n        i += 2\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the first n prime numbers. \nFor example, given n =\
    \ 10, the function should return the first 10 prime numbers.", "    if n < 2 ||\
    \ n % 2 == 0 || n % 3 == 0 \n        then return false\n    else if n == 2 ||\
    \ n == 3 \n        then return true\n    else if n % 4 == 0 \n        then return\
    \ false\n    else if n % 6 == 0 \n        then return false\n    else if n % 8\
    \ == 0 \n        then return false\n    else if n % 10 == 0 \n        then return\
    \ false\n    else if n % 12 == 0 \n        then return false\n    else if n %\
    \ 14 == 0 \n        then return false\n    else if n % 16 == 0 \n        then\
    \ return false\n    else if n % 18 == 0 \n        then return false\n    else\
    \ if n % 20 == 0 \n        then return false\n    else if n % 22 == 0 \n     \
    \   then return false\n    else if n % 24 == 0 \n        then return false\n \
    \   else if n % 26 == 0 \n        then return false\n    else if n % 28 == 0 \n\
    \        then return false\n    else if n % 30 == 0 \n        then return false\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 34 == 0\
    \ \n        then return false\n    else if n % 36 == 0 \n        then return false\n\
    \    else if n % 38 == 0 \n        then return false\n    else if n % 40 == 0\
    \ \n        then return false\n    else if n % 42 == 0 \n        then return false\n\
    \    else if n % 44 == 0 \n        then return false\n    else if n % 46 == 0\
    \ \n        then return false\n    else if n % 48 == 0 \n        then return false\n\
    \    else if n % 50 == 0 \n        then return false\n    else if n % 52 == 0\
    \ \n        then return false\n    else if n % 54 == 0 \n        then return false\n\
    \    else if n % 56 == 0 \n        then return false\n    else if n % 58 == 0\
    \ \n        then return false\n    else if n % 60 == 0 \n        then return false\n\
    \    else if n % 62 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return false\n    else if n % 66 == 0 \n        then return false\n\
    \    else if n % 68 == 0 \n        then return false\n    else if n % 70 == 0\
    \ \n        then return false\n    else if n % 72 == 0 \n        then return false\n\
    \    else if n % 74 == 0 \n        then return false\n    else if n % 76 == 0\
    \ \n        then return false\n    ", "    if is_prime_cache[n] \n        return\
    \ is_prime_cache[n]\n    if n <= 1 \n        return false\n    if n == 2 \n  \
    \      return true\n    if n % 2 == 0 \n        return false\n    \n    i = 5\n\
    \    while i * i <= n \n        i += 2\n    \n    if n == i \n        return true\n\
    \    \n    return false\nend\n</cell>\n<code language=julia-1.3>\nis_prime_cache\
    \ = [false, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true, ",
  "    if is_prime_impl(n) then return true else return false end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n", "    if n < 2\n        return false\n    \n    if\
    \ n == 2\n        return true\n    \n    if n % 2 == 0\n        return false\n\
    \    \n    i = 5\n    while i * i <= n\n        i = i + 6\n    \n    if n == i\n\
    \        return true\n    \n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.0>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.0>\n@time is_prime(101)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.0>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.0>\n@time is_prime(61)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.0>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that checks if a number is divisible by another\
    \ number. Test it on all numbers from 1 to 10. How many numbers are divisible\
    \ by 3?", "    if n < 2\n        true\n    else\n        if is_prime(n-1)\n  \
    \          false\n        else\n            if n % 2 == 0\n                false\n\
    \            else\n                if n % 3 == 0\n                    false\n\
    \                else\n                    if n % 5 == 0\n                   \
    \     false\n                    else\n                        if n % 7 == 0\n\
    \                            false\n                        else\n           \
    \                 if n % 11 == 0\n                                false\n    \
    \                        else\n                                if n % 13 == 0\n\
    \                                    false\n                                else\n\
    \                                    if n % 17 == 0\n                        \
    \                false\n                                    else\n           \
    \                             if n % 19 == 0\n                               \
    \             false\n                                        else\n          \
    \                                  if n % 23 == 0\n                          \
    \                      false\n                                            else\n\
    \                                                if n % 29 == 0\n            \
    \                                        false\n                             \
    \                   else\n                                                   \
    \ if n % 31 == 0\n                                                        false\n\
    \                                                    else\n                  \
    \                                      if n % 37 == 0\n                      \
    \                                      false\n                               \
    \                         else\n                                             \
    \               if n % 41 == 0\n                                             \
    \                   false\n                                                  \
    \          else\n                                                            \
    \    if n % 43 == 0\n                                                        \
    \            false\n                                                         \
    \       else\n                                                               \
    \     if n % 47 == 0\n                                                       \
    \                 false\n                                                    \
    \                else\n                                                      \
    \  if n % 53 == 0\n                                                          \
    \  false\n                                                        else\n     \
    \                                                       if n % 59 == 0\n     \
    \                                                           false\n          \
    \                                                  else\n                    \
    \                                            if n % 61 == 0\n                \
    \                                                    false\n                 \
    \                                               else\n                       \
    \                                             if n % 67 == 0\n               \
    \                                                         false\n            \
    \                                                        else\n              \
    \                                          if n % 71 == 0\n                  \
    \                                          false\n                           \
    \                             else\n                                         \
    \                   if n % 73 == 0\n                                         \
    \                       false\n                                              \
    \              else\n                                                        \
    \        if n % 79 == 0\n                                                    \
    \                false\n                                                     \
    \           else\n                                                           \
    \         if n % 83 == 0\n                                                   \
    \                     false\n                                                \
    \                    else\n                                                  \
    \      if n % 89 == 0\n                                                      \
    \      false\n                                                        else\n \
    \                                                           if n % 97 == 0\n \
    \                                                               false\n      \
    \                                                      else\n                \
    \                                                if n % 101 == 0\n           \
    \                                                         false\n            \
    \                                                    else\n                  \
    \                                                  if n % 103 == 0\n         \
    \                                                               false\n      \
    \                                                              else\n        \
    \                                                if n % 107 == 0\n           \
    \                                                 false\n                    \
    \                                    else\n                                  \
    \                          if n % 111 == 0\n                                 \
    \                               false\n                                      \
    \                      else\n                                                \
    \                if n % 115 == 0\n                                           \
    \                         false\n                                            \
    \                    else\n                                                  \
    \                  if n % 121 == 0\n                                         \
    \                               false\n                                      \
    \                              else\n                                        \
    \                if n % 127 == 0\n                                           \
    \                 false\n                                                    \
    \    else\n                                                            if n %\
    \ 131 == 0\n                                                                false\n\
    \                                                            else\n          \
    \                                                      if n % 137 == 0\n     \
    \                                                               false\n      \
    \                                                          else\n            \
    \                                                        if n % 141 == 0\n   \
    \                                                                     false\n\
    \                                                                    else\n  \
    \                                                      if n % 147 == 0\n     \
    \                                                       false\n              \
    \                                          else\n                            \
    \                                if n % 151 == 0\n                           \
    \                                     false\n                                \
    \                            else\n                                          \
    \                      if n % 157 == 0\n                                     \
    \                               false\n                                      \
    \                          else\n                                            \
    \                        if n % 161 == 0\n                                   \
    \                                     false", "    if n < 2 || n % 2 == 0 \n \
    \       then return false\n    else if n == 2 \n        then return true\n   \
    \ else if n % 3 == 0 \n        then return false\n    else if n % 5 == 0 \n  \
    \      then return false\n    else if n % 7 == 0 \n        then return false\n\
    \    else \n        prime::Int64 = 2 # prime number\n        i :: Int64 = 3\n\
    \        while i <= n \n            do if n % i == 0 \n                then return\
    \ false\n                else if i == prime \n                    then return\
    \ true\n                    else prime = i\n            i = i + 2\n        end\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nis_prime(6)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\nis_prime(4)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that checks if a number is even.", "    if n < 2 || n == 1 \n   \
    \     return false\n    \n    if n % 2 == 0 \n        return false\n    \n   \
    \ if n % 3 == 0 \n        return false\n    \n    i = 5\n    while i * i <= n\
    \ \n        i += 2\n    \n    return n == i\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of prime factors of a given number.", " \
    \   if n < 2 || n % 2 == 0 || n % 3 == 0 \n        then return false\n    else\
    \ if n == 2 || n == 3 || n == 5\n        then return true\n    else if n % 6 ==\
    \ 0 \n        then return false\n    else if n % 6 == 1 \n        then return\
    \ true\n    else if n % 6 == 2 \n        then return false\n    else if n % 6\
    \ == 3 \n        then return true\n    else if n % 6 == 5 \n        then return\
    \ false\n    else if n % 6 == 7 \n        then return true\n    else if n % 6\
    \ == 11\n        then return true\n    else if n % 6 == 13\n        then return\
    \ false\n    else if n % 6 == 17\n        then return true\n    else if n % 6\
    \ == 19\n        then return false\n    else if n % 6 == 23 \n        then return\
    \ true\n    else if n % 6 == 29\n        then return false\n    else if n % 6\
    \ == 31 \n        then return true\n    else if n % 6 == 37\n        then return\
    \ false\n    else if n % 6 == 41 \n        then return true\n    else if n % 6\
    \ == 47\n        then return false\n    else if n % 6 == 53 \n        then return\
    \ true\n    else if n % 6 == 59\n        then return false\n    else if n % 6\
    \ == 73 \n        then return true\n    else if n % 6 == 79\n        then return\
    \ false\n    else if n % 6 == 111\n        then return true\n    else if n % 6\
    \ == 127\n        then return false\n    else if n % 6 == 131\n        then return\
    \ true\n    else if n % 6 == 137\n        then return false\n    else if n % 6\
    \ == 153\n        then return true\n    else if n % 6 == 159\n        then return\
    \ false\n    else if n % 6 == 173\n        then return true\n    else if n % 6\
    \ == 179\n        then return false\n    else if n % 6 == 193\n        then return\
    \ true\n    else if n % 6 == 199\n        then return false\n    else if n % 6\
    \ == 227\n        then return true\n    else if n % 6 == 229\n        then return\
    \ false\n    else if n % 6 == 311\n        then return true\n    else if n % 6\
    \ == 319\n        then return false\n    else if n % 6 == 127\n        then return\
    \ true\n    else if n % 6 == 131\n        then return true\n    else if n % 6\
    \ == 137\n        then return true", "    if is_prime_cache[n] == true \n    else\
    \ \n        is_prime_cache[n] = is_prime_cache[n]\n        if is_prime_cache[n]\
    \ == true \n        else \n            prime_cache[n] = is_prime_cache[n]\n  \
    \          if prime_cache[n] == true \n            else \n                prime_cache[n]\
    \ = is_prime_cache[n]\n                if prime_cache[n] == true \n          \
    \      else \n                    prime_cache[n] = is_prime_cache[n]\n       \
    \             if prime_cache[n] == true \n                    else \n        \
    \                prime_cache[n] = is_prime_cache[n]\n                        if\
    \ prime_cache[n] == true \n                        else \n                   \
    \         prime_cache[n] = is_prime_cache[n]\n                            if prime_cache[n]\
    \ == true \n                            else \n                              \
    \  prime_cache[n] = is_prime_cache[n]\n                                if prime_cache[n]\
    \ == true \n                                else \n                          \
    \          prime_cache[n] = is_prime_cache[n]\n                              \
    \      if prime_cache[n] == true \n                                    else \n\
    \                                        prime_cache[n] = is_prime_cache[n]\n\
    \                                        if prime_cache[n] == true \n        \
    \                                else \n                                     \
    \       prime_cache[n] = is_prime_cache[n]\n                                 \
    \           if prime_cache[n] == true \n                                     \
    \       else \n                                                prime_cache[n]\
    \ = is_prime_cache[n]\n                                                if prime_cache[n]\
    \ == true \n                                                else \n          \
    \                                          prime_cache[n] = is_prime_cache[n]\n\
    \                                                    if prime_cache[n] == true\
    \ \n                                                    else \n              \
    \                                          prime_cache[n] = is_prime_cache[n]\n\
    \                                                        if prime_cache[n] ==\
    \ true \n                                                        else \n     \
    \                                                       prime_cache[n] = is_prime_cache[n]\n\
    \                                                                if prime_cache[n]\
    \ == true \n                                                                else\
    \ \n                                                                    prime_cache[n]\
    \ = is_prime_cache[n]\n                                                      \
    \              if prime_cache[n] == true \n                                  \
    \                                  else \n                                   \
    \                                     prime_cache[n] = is_prime_cache[n]\n   \
    \                                                                     if prime_cache[n]\
    \ == true \n                                                                 \
    \       else \n                                                              \
    \              prime_cache[n] = is_prime_cache[n]\n                          \
    \                                                  if prime_cache[n] == true \n\
    \                                                                            else\
    \ \n                                                                         \
    \       prime_cache[n] = is_prime_cache[n]\n                                 \
    \                                               if prime_cache[n] == true \n \
    \                                                                            \
    \   else \n                                                                  \
    \                  prime_cache[n] = is_prime_cache[n]\n                      \
    \                                                              if prime_cache[n]\
    \ == true \n                                                                 \
    \                   else \n                                                  \
    \                                      prime_cache[n] = is_prime_cache[n]\n  \
    \                                                                            \
    \          if prime_cache[n] == true \n                                      \
    \                                                  else \n                   \
    \                                             ", "    if n < 2 || n % 2 == 0 \n\
    \        then return false\n    else if n == 2 \n        then return true\n  \
    \  else \n        begin \n            x <- 3\n            while x < n \n     \
    \           do if n % x == 0 \n                    then return false\n       \
    \         else\n                    x <- x + 2\n        end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time is_prime(61)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the first n prime numbers. \nThe function should take\
    \ an optional argument n that defaults to 10.", "    if is_prime_cache[n] \n \
    \       return is_prime_cache[n]\n    if n <= 1 \n        return false\n    if\
    \ n == 2 \n        return true\n    if n % 2 == 0 \n        return false\n   \
    \ \n    i = 5\n    while i * i <= n \n        i += 2\n    \n    if n == i \n \
    \       return true\n    \n    return false\nend", "    if n < 2 || n % 2 == 0\
    \ || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        || n % 11 == 0 || n % 13\
    \ == 0 || n % 17 == 0 || n % 19 == 0 \n        || n % 23 == 0 || n % 29 == 0 ||\
    \ n % 31 == 0 || n % 37 == 0 \n        || n % 41 == 0 || n % 43 == 0 || n % 47\
    \ == 0 || n % 53 == 0 \n        || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 ||\
    \ n % 71 == 0 \n        || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89\
    \ == 0 \n        || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105 ==\
    \ 0 \n        || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 115 == 0\
    \ \n        || n % 117 == 0 || n % 121 == 0 || n % 123 == 0 || n % 127 == 0 \n\
    \        || n % 129 == 0 || n % 131 == 0 || n % 133 == 0 || n % 137 == 0 \n  \
    \      || n % 139 == 0 || n % 141 == 0 || n % 143 == 0 || n % 145 == 0 \n    \
    \    || n % 147 == 0 || n % 149 == 0 || n % 151 == 0 || n % 153 == 0 \n      \
    \  || n % 157 == 0 || n % 159 == 0 || n % 161 == 0 || n % 163 == 0 \n        ||\
    \ n % 165 == 0 || n % 167 == 0 || n % 169 == 0 || n % 171 == 0 \n        || n\
    \ % 173 == 0 || n % 177 == 0 || n % 179 == 0 || n % 181 == 0 \n        || n %\
    \ 183 == 0 || n % 185 == 0 || n % 187 == 0 || n % 189 == 0 \n        || n % 191\
    \ == 0 || n % 193 == 0 || n % 195 == 0 || n % 197 == 0 \n        || n % 199 ==\
    \ 0 || n % 201 == 0 || n % 203 == 0 || n % 205 == 0 \n        || n % 207 == 0\
    \ || n % 209 == 0 || n % 211 == 0 || n % 213 == 0 \n        || n % 215 == 0 ||\
    \ n % 217 == 0 || n % 219 == 0 || n % 221 == 0 \n        || n % 223 == 0 || n\
    \ % 225 == 0 || n % 227 == 0 || n % 229 == 0 \n        || n % 231 == 0 || n %\
    \ 233 == 0 || n % 235 == 0 || n % 237 == 0 \n        || n % 239 == 0 || n % 241\
    \ == 0 || n % 243 == 0 || n % 245 == 0 \n        || n % 247 == 0 || n % 249 ==\
    \ 0 || n % 251 == 0 || n % 253 == 0 \n        || n % 255 == 0 || n % 257 == 0\
    \ || n % 259 == 0 || n % 261 == 0 \n        || n % 263 == 0 || n % 265 == 0 ||\
    \ n % 267 == 0 || n % 269 == 0 \n        || n % 271 == 0 || n % 273 == 0 || n\
    \ % 275 == 0 || n % 277 == 0 ", "    if n < 2 || n == 0 || n == 1 \n        true\n\
    \    else\n        n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 || n %\
    \ 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 || n % 23 == 0 || n % 29\
    \ == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 || n % 47 ==\
    \ 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n % 71 == 0\
    \ || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 || n % 97 == 0 ||\
    \ n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 == 0 || n % 113 == 0\
    \ || n % 127 == 0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 || n % 147 ==\
    \ 0 || n % 151 == 0 || n % 157 == 0 || n % 159 == 0 || n % 163 == 0 || n % 167\
    \ == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185 == 0 || n %\
    \ 191 == 0 || n % 193 == 0 || n % 197 == 0 || n % 199 == 0 || n % 211 == 0 ||\
    \ n % 213 == 0 || n % 217 == 0 || n % 219 == 0 || n % 223 == 0 || n % 227 == 0\
    \ || n % 229 == 0 || n % 233 == 0 || n % 239 == 0 || n % 241 == 0 || n % 251 ==\
    \ 0 || n % 257 == 0 || n % 263 == 0 || n % 269 == 0 || n % 271 == 0 || n % 277\
    \ == 0 || n % 281 == 0 || n % 283 == 0 || n % 293 == 0 || n % 307 == 0 || n %\
    \ 309 == 0 || n % 311 == 0 || n % 313 == 0 || n % 317 == 0 || n % 331 == 0 ||\
    \ n % 337 == 0 || n % 341 == 0 || n % 347 == 0 || n % 349 == 0 || n % 353 == 0\
    \ || n % 359 == 0 || n % 367 == 0 || n % 371 == 0 || n % 377 == 0 || n % 383 ==\
    \ 0 || n % 389 == 0 || n % 397 == 0 || n % 401 == 0 || n % 403 == 0 || n % 409\
    \ == 0 || n % 419 == 0 || n % 421 == 0 || n % 431 == 0 || n % 433 == 0 || n %\
    \ 439 == 0 || n % 443 == 0 || n % 449 == 0 || n % 457 == 0 || n % 461 == 0 ||\
    \ n % 463 == 0 || n % 467 == 0 || n % 479 == 0 || n % 481 == 0 || n % 499 == 0\
    \ || n % 509 == 0 || n % 521 == 0 || n % 523 == 0 || n % 529 == 0 || n % 531 ==\
    \ 0 || n % 533 == 0 || n % 537 == 0 || n % 541 == 0 || n % 547 == 0 || n % 553\
    \ == 0 || n % 557 == 0 || n % 561 == 0 || n % 563 == 0 || n % 569 == 0 || n %\
    \ 571 == 0 || n % 577 == 0 || n % 587 == 0 || n % 593 == 0 || n % ", "    if n\
    \ < 2\n        return false\n    \n    if n == 2\n        return true\n    \n\
    \    if n % 2 == 0\n        return false\n    \n    i = 5\n    while i * i <=\
    \ n\n        if n % i == 0\n            return false\n        i += 6\n    return\
    \ true\nend", "    if n < 2 || n % 2 == 0 \n        then return false\n    else\
    \ if n == 2 \n        then return true\n    else if n % 3 == 0 \n        then\
    \ return false\n    else \n        do return is_prime(3*n-1) || is_prime(3*n+1)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(61)\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\nis_prime(6)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(101)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(11)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(7)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(8)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(9)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(10)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(11)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(12)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(14)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(15)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(16)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(17)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(18)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(19)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(20)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(21)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(22)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(23)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(24)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(25)\n</cell>\n<code language=juli",
  "    if is_prime_impl(n) == true\n    else \n        false\nend\n</cell>\n<code\
    \ language=julia-1.4>\n@time is_prime(101)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.4>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.4>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a given number is divisible\
    \ by any number between 1 and 100. \nHint: Use a for loop.", "    if n < 2 ||\
    \ n % 2 == 0 \n        then return false\n    else if n == 2 \n        then return\
    \ true\n    else if n % 3 == 0 \n        then return false\n    else if n % 5\
    \ == 0 \n        then return false\n    else if n % 7 == 0 \n        then return\
    \ false\n    else \n        return is_prime(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that checks if a given number is divisible by all numbers from 1\
    \ to n. For example, divisible_numbers(10, 10) should return true.", "    if is_prime_impl(n)\
    \ \n    else \n        false\nend\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.3>\n@", "    if n < 2 || n\
    \ % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        then return false\n\
    \    else if n == 1 || n == 2 || n == 3 || n == 5 || n == 7 || n == 11 \n    \
    \    then return true\n    else if n % 11 == 1 then return false\n    else if\
    \ n % 13 == 1 then return false\n    else if n % 17 == 1 then return false\n \
    \   else return is_prime(3*n-1) || is_prime(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n\
    \    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n\
    \    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n\
    \    false\n    >>> is_prime(1)\n    false\n    \"\"\"", "    if n == 2 || n ==\
    \ 3 || n == 5 || n == 7 || n == 11 \n        || n == 13 || n == 17 || n == 19\
    \ || n == 23 || n == 29 || n == 37\n        || n == 47 || n == 91 || n == 93 ||\
    \ n == 99 || n == 107 || n == 131\n        || n == 139 || n == 173 || n == 177\
    \ || n == 183 || n == 191 \n        || n == 193 || n == 197 || n == 199 || n ==\
    \ 211 || n == 223 || n == 227\n        || n == 269 || n == 271 || n == 273 ||\
    \ n == 277 || n == 283 || n == 293\n        || n == 307 || n == 311 || n == 313\
    \ || n == 317 || n == 330 || n == 336\n        || n == 341 || n == 347 || n ==\
    \ 349 \n        || n == 375 || n == 379 || n == 383 || n == 397 || n == 411 ||\
    \ n == 419\n        || n == 429 || n == 439 || n == 443 || n == 447 || n == 451\
    \ || n == 457\n        || n == 461 || n == 463 || n == 467 || n == 473 || n ==\
    \ 481 || n == 487\n        || n == 491 || n == 509 || n == 519 || n == 529 ||\
    \ n == 539 || n == 541\n        || n == 553 || n == 569 || n == 571 || n == 577\
    \ || n == 583 || n == 601\n        || n == 609 || n == 611 || n == 617 || n ==\
    \ 623 || n == 631 || n == 641\n        || n == 643 || n == 647 || n == 653 ||\
    \ n == 659 || n == 661 || n == 663\n        || n == 673 || n == 677 || n == 683\
    \ || n == 691 || n == 697 || n == 703\n        || n == 709 || n == 717 || n ==\
    \ 721 || n == 727 || n == 733 || n == 741\n        || n == 747 || n == 753 ||\
    \ n == 759 || n == 761 || n == 769 || n == 773\n        || n == 790 || n == 798\
    \ || n == 811 || n == 817 || n == 819 || n == 841\n        || n == 847 || n ==\
    \ 853 || n == 857 || n == 873 || n == 879 || n == 899\n        || n == 901 ||\
    \ n == 903 || n == 909 || n == 913 || n == 919 || n == 921\n        || n == 927\
    \ || n == 937 || n == 939 || n == 941 || n == 943 || n == 949\n        || n ==\
    \ 959 || n == 9", "    if n < 2 || n % 2 == 0 \n        then return false\n  \
    \  else if n == 2 \n        then return true\n    else \n        for m in range(3,\
    \ floor(sqrt(n)), 2) \n            if n % m == 0 \n                then return\
    \ false\n    return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return\
    \ true if a given number is even, and false otherwise.\n    >>> is_even(6)\n \
    \   false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n   \
    \ >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2\
    \ == 0 \n        return false\n    else if n == 2 \n        return true\n    else\
    \ \n        return is_prime(n - 1) && is_prime(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of prime factors of a given number.", " \
    \   if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n    then\
    \ return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is divisible by all numbers from 1 to \nthe\
    \ given number, and false otherwise.\n    >>> is_divisible(6, 3)\n    true\n \
    \   >>> is_divisible(6, 4)\n    false\n    >>> is_divisible(6, 5)\n    false\n\
    \    >>> is_divisible(6, 6)\n    true\n    >>> is_divisible(6, 7)\n    false\n\
    \    >>> is_divisible(6, 8)\n    false\n    >>> is_divisible(6, 9)\n    false\n\
    \    >>> is_divisible(6, 10)\n    false\n    >>> is_divisible(6, 11)\n    false\n\
    \    >>> is_divisible(6, 12)\n    false\n    >>> is_divisible(6, 13)\n    false\n\
    \    >>> is_divisible(6, 14)\n    false\n    >>> is_divisible(6, 15)\n    false\n\
    \    >>> is_divisible(6, 16)\n    false\n    >>> is_divisible(6, 17)\n    false\n\
    \    >>> is_divisible(6, 18)\n    false\n    >>> is_divisible(6, 19)\n    false\n\
    \    >>> is_divisible(6, 20)\n    false\n    >>> is_divisible(6, 21)\n    false\n\
    \    >>> is_divisible(6, 22)\n    false\n    >>> is_divisible(6, 23)\n    false\n\
    \    >>> is_divisible(6, 24)\n    false\n    >>> is_divisible(6, 25)\n    false\n\
    \    >>> is_divisible(6, 26)\n    false\n    >>> is_divisible(6, 27)\n    false\n\
    \    >>> is_divisible(6, 28)\n    false\n    >>> is_divisible(6, 29)\n    false\n\
    \    >>> is_divisible(6, 30)\n    false\n    >>> is_divisible(6, 31)\n    false\n\
    \    >>> is_divisible(6, 32)\n    false\n    >>> is_divisible(6, 33)\n    false\n\
    \    >>> is_divisible(6, 34)\n    false\n    >>> is_divisible(6, 35)\n    false\n\
    \    >>> is_divisible(6, 36)\n    false\n    >>> is_divisible(6, 37)\n    false\n\
    \    >>> is_divisible(6, 38)\n    false\n    >>> is_divisible(6, 39)\n    false\n\
    \    >>> is_divisible(6, 40)\n    false\n    >>> is_divisible(6, 41)\n    false\n\
    \    >>> is_divisible(6, 42)\n    false\n    >>> is_divisible(6, 43)\n    false\n\
    \    >>> is_divisible(6, 44)\n    false\n    >>> is_divisible(6, 45)\n    false\n\
    \    >>> is_di", "    if n < 2\n        return false\n    \n    if n == 2\n  \
    \      return true\n    \n    i = 2\n    while i <= sqrt(n)\n        if n % i\
    \ == 0\n            return false\n        i += 1\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a given number is divisible\
    \ by another given number. \nFor example, \n$$\n\\begin{align}\n    6 \\times\
    \ 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 = 110\
    \ \\\n    6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6\
    \ + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\\
    times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6\
    \ + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\\
    times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6\
    \ + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\\
    times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6\
    \ + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\\
    times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6\
    \ + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\\
    times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 \\times 6 + 6 ", "    if\
    \ is_prime_cache[n] == true \n    else \n        if is_prime_cache[n] == false\
    \ \n        then \n            prime_cache[n] = true\n            prime_cache[n+1]\
    \ = false\n            \n            \n            \n            \n          \
    \  \n            \n            \n            \n            \n            \n  \
    \          \n            \n            \n            \n            \n        \
    \    \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n", "    if n < 2 || n % 2 == 0 || n % 3 == 0 \n       \
    \ then return false\n    else if n % 5 == 0 \n        then return false\n    else\
    \ if n % 7 == 0 \n        then return false\n    else if n % 11 == 0 \n      \
    \  then return false\n    else if n % 13 == 0 \n        then return false\n  \
    \  else if n % 17 == 0 \n        then return false\n    else if n % 19 == 0 \n\
    \        then return false\n    else if n % 23 == 0 \n        then return false\n\
    \    else if n % 29 == 0 \n        then return false\n    else if n % 31 == 0\
    \ \n        then return false\n    else if n % 37 == 0 \n        then return false\n\
    \    else if n % 41 == 0 \n        then return false\n    else if n % 43 == 0\
    \ \n        then return false\n    else if n % 47 == 0 \n        then return false\n\
    \    else if n % 53 == 0 \n        then return false\n    else if n % 59 == 0\
    \ \n        then return false\n    else if n % 61 == 0 \n        then return false\n\
    \    else if n % 67 == 0 \n        then return false\n    else if n % 71 == 0\
    \ \n        then return false\n    else if n % 73 == 0 \n        then return false\n\
    \    else if n % 79 == 0 \n        then return false\n    else if n % 83 == 0\
    \ \n        then return false\n    else if n % 89 == 0 \n        then return false\n\
    \    else if n % 97 == 0 \n        then return false\n    else if n % 101 == 0\
    \ \n        then return false\n    else if n % 103 == 0 \n        then return\
    \ false\n    else if n % 107 == 0 \n        then return false\n    else if n %\
    \ 109 == 0 \n        then return false\n    else if n % 113 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 139 == 0 \n        then return\
    \ false\n    else if n % 143 == 0 \n        then return false\n    else if n %\
    \ 147 == 0 \n        then return false\n    else if n % 151 == 0 \n        then\
    \ return false\n    else ", "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else if n == 2 \n        then return true\n    else if n % 3 == 0\
    \ \n        then return false\n    else if n % 5 == 0 \n        then return false\n\
    \    else if n % 7 == 0 \n        then return false\n    else if n % 11 == 0 \n\
    \        then return false\n    else if n % 13 == 0 \n        then return false\n\
    \    else if n % 17 == 0 \n        then return false\n    else if n % 19 == 0\
    \ \n        then return false\n    else if n % 23 == 0 \n        then return false\n\
    \    else if n % 29 == 0 \n        then return false\n    else if n % 31 == 0\
    \ \n        then return false\n    else if n % 37 == 0 \n        then return false\n\
    \    else if n % 41 == 0 \n        then return false\n    else if n % 43 == 0\
    \ \n        then return false\n    else if n % 47 == 0 \n        then return false\n\
    \    else if n % 53 == 0 \n        then return false\n    else if n % 59 == 0\
    \ \n        then return false\n    else if n % 61 == 0 \n        then return false\n\
    \    else if n % 67 == 0 \n        then return false\n    else if n % 71 == 0\
    \ \n        then return false\n    else if n % 73 == 0 \n        then return false\n\
    \    else if n % 79 == 0 \n        then return false\n    else if n % 83 == 0\
    \ \n        then return false\n    else if n % 89 == 0 \n        then return false\n\
    \    else if n % 97 == 0 \n        then return false\n    else if n % 101 == 0\
    \ \n        then return false\n    else if n % 103 == 0 \n        then return\
    \ false\n    else if n % 107 == 0 \n        then return false\n    else if n %\
    \ 109 == 0 \n        then return false\n    else if n % 113 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 139 == 0 \n        then return\
    \ false\n    else if n % 143 == 0 \n        then return false\n    else if n %\
    \ 147 == 0 \n", "    if n < 2 || n % 2 == 0\n        true\n    else\n        false\n\
    \    end\nend", "    if n < 2\n        return false\n    \n    if n == 2\n   \
    \     return true\n    \n    if n % 2 == 0\n        return false\n    \n    i\
    \ = 5\n    \n    while i * i <= n\n        i += 1\n    \n    if n % i == 0\n \
    \       return false\n    \n    return true\nend", "    if n < 2\n        return\
    \ false\n    if n == 2\n        return true\n    if n % 2 == 0\n        return\
    \ false\n    \n    i = 5\n    while i * i <= n\n        i += 2\n    return isprime(i)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(61)\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\nis_prime(6)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(101)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(11)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(6)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(4)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(1)\n</cell>\n<text>\nExercise:\
    \ Write a function that checks if a number is divisible by another number. \n\
    Hint: Use a while loop and a modulo operator (%).", "    if n < 2\n        return\
    \ false\n    if n == 2\n        return true\n    if n % 2 == 0\n        return\
    \ false\n    \n    for d in range(3, floor(sqrt(n))+1, 2)\n        if n % d ==\
    \ 0\n            return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(6)\n</cell", "    if n < 2 || n % 2\
    \ == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        || n % 11 == 0 || n\
    \ % 13 == 0 || n % 17 == 0 || n % 19 == 0 \n        || n % 23 == 0 || n % 29 ==\
    \ 0 || n % 31 == 0 || n % 37 == 0 \n        || n % 41 == 0 || n % 43 == 0 || n\
    \ % 47 == 0 || n % 53 == 0 \n        || n % 59 == 0 || n % 61 == 0 || n % 67 ==\
    \ 0 || n % 71 == 0 \n        || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n\
    \ % 89 == 0 \n        || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105\
    \ == 0 \n        || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 117 ==\
    \ 0 \n        || n % 121 == 0 || n % 123 == 0 || n % 127 == 0 || n % 129 == 0\
    \ \n        || n % 131 == 0 || n % 133 == 0 || n % 137 == 0 || n % 139 == 0 \n\
    \        || n % 141 == 0 || n % 143 == 0 || n % 145 == 0 || n % 147 == 0 \n  \
    \      || n % 149 == 0 || n % 151 == 0 || n % 153 == 0 || n % 157 == 0 \n    \
    \    || n % 159 == 0 || n % 161 == 0 || n % 163 == 0 || n % 165 == 0 \n      \
    \  || n % 167 == 0 || n % 169 == 0 || n % 171 == 0 || n % 173 == 0 \n        ||\
    \ n % 177 == 0 || n % 179 == 0 || n % 181 == 0 || n % 183 == 0 \n        || n\
    \ % 185 == 0 || n % 187 == 0 || n % 189 == 0 || n % 191 == 0 \n        || n %\
    \ 193 == 0 || n % 195 == 0 || n % 197 == 0 || n % 199 == 0 \n        || n % 201\
    \ == 0 || n % 203 == 0 || n % 205 == 0 || n % 207 == 0 \n        || n % 209 ==\
    \ 0 || n % 211 == 0 || n % 213 == 0 || n % 215 == 0 \n        || n % 217 == 0\
    \ || n % 219 == 0 || n % 221 == 0 || n % 223 == 0 \n        || n % 225 == 0 ||\
    \ n % 227 == 0 || n % 229 == 0 || n % 231 == 0 \n        || n % 233 == 0 || n\
    \ % 239 == 0 || n % 241 == 0 || n % 243 == 0 \n        || n % 245 == 0 || n %\
    \ 247 == 0 || n % 249 == 0 || n % 251 == 0 \n        || n % 253 == 0 || n % 255\
    \ == 0 || n % 257 == 0 || n % 259 == 0 \n        || n % 261 == 0 || n % 263 ==\
    \ 0 || n % 265 == 0 || n % 267 == 0 \n        || n % 269 == 0 || n % 271 == 0\
    \ || n % 273 == 0 || n % 275 == 0 \n        || n % 277 == 0 || n % 279 == 0 ||\
    \ n % 281 == 0 || n % 283 == 0 ", "    if n < 2 || n % 2 == 0 || n % 3 == 0 ||\
    \ n % 5 == 0 || n % 7 == 0 \n        then return false\n    else if n == 1 ||\
    \ n == 2 || n == 3 || n == 5 || n == 7 \n        then return true\n    else if\
    \ n % 6 == 0 then return is_prime(n / 6) else return false\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"Return true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6)\n    false\n    >>> is_prime(101)\n    true\n\
    \    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n\
    \    true\n    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n    false\n  \
    \  \"\"\"", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 ==\
    \ 0 \n        then return false\n    else if n == 2 || n == 3 || n == 5 || n ==\
    \ 7 \n        then return true\n    else if n % 6 == 0 then return is_prime(n\
    \ / 6) else return false\nend\n</cell>\n<code language=julia-1.5>\nis_prime(6)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\nis_prime(4)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns true if the given number is divisible by all numbers\
    \ from 1 to 100, and false otherwise.", "    if n < 2 || n % 2 == 0 || n % 3 ==\
    \ 0 || n % 5 == 0 || n % 7 == 0 \n    then return false\n    else return true\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if a given\
    \ number is prime, and false otherwise.\n    >>> is_prime(6)\n    false\n    >>>\
    \ is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n\
    \    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n  \
    \  >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2 == 0\n    \
    \    true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise: Write\
    \ a function that checks if a given number is divisible by another number. Hint:\
    \ Use a for loop.", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else \n        begin \n  \
    \          i = 2\n            while i <= sqrt(n) \n                do \n     \
    \               if n % i == 0 \n                        then return false \n \
    \                   i = i + 1\n            end\n            return true\n    \
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if a given\
    \ number is prime, and false otherwise.\n    >>> is_prime(6)\n    false\n    >>>\
    \ is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n\
    \    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n  \
    \  >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2\n        return false\n\
    \    \n    if n == 2\n        return true\n    \n    if n % 2 == 0\n        return\
    \ false\n    \n    i = 5\n    \n    while i * i <= n\n        i += 1\n    \n \
    \   if n % i == 0\n        return false\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if a given number is even, and false\
    \ otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n    true\n\
    \    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n    >>> is_even(61)\n\
    \    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n    false\n    \"\
    \"\"", "    if n < 2 || n % 2 == 0 \n        then return false\n    else if n\
    \ == 2 \n        then return true\n    else \n        if is_prime(n - 1) \n  \
    \          then return true\n        else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that checks if a number is even.", "    if n < 2 || n == 1\n    \
    \    return false\n    \n    if n % 2 == 0\n        return false\n    \n    i\
    \ = 5\n    \n    while i * i <= n\n        i += 1\n    \n    if n == i\n     \
    \   return true\n    \n    return false\nend", "    if is_prime_cache[n] == true\
    \ \n    else \n        if is_prime_cache[n] == false \n        else \n       \
    \     prime_cache[n] = is_prime_cache[n]\n        end\n    end\nend\n</code>\n\
    <|/ a tags=julia,primes |>\n<| a dscore=2 |>\n<code>", "    if n < 2 || n % 2\
    \ == 0 \n        then return false\n    else if n == 2 \n        then return true\n\
    \    else \n        for m in range(3, floor(sqrt(n))+1, 2) \n            if n\
    \ % m == 0 \n                then return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that returns the number of prime factors of\
    \ a given number.", "    if n < 2 || n % 2 == 0\n        true\n    else\n    \
    \    false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true\
    \ if a given number is even, and false otherwise.\n    >>> is_even(6)\n    false\n\
    \    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n\
    \    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>>\
    \ is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2 == 0 \n        then\
    \ return false\n    else if n == 2 \n        then return true\n    else if n %\
    \ 3 == 0 \n        then return false\n    else if n % 5 == 0 \n        then return\
    \ false\n    else if n % 7 == 0 \n        then return false\n    else if n % 11\
    \ == 0 \n        then return false\n    else if n % 13 == 0 \n        then return\
    \ false\n    else if n % 17 == 0 \n        then return false\n    else if n %\
    \ 19 == 0 \n        then return false\n    else if n % 23 == 0 \n        then\
    \ return false\n    else if n % 29 == 0 \n        then return false\n    else\
    \ if n % 31 == 0 \n        then return false\n    else if n % 37 == 0 \n     \
    \   then return false\n    else if n % 41 == 0 \n        then return false\n \
    \   else if n % 43 == 0 \n        then return false\n    else if n % 47 == 0 \n\
    \        then return false\n    else if n % 53 == 0 \n        then return false\n\
    \    else if n % 59 == 0 \n        then return false\n    else if n % 61 == 0\
    \ \n        then return false\n    else if n % 67 == 0 \n        then return false\n\
    \    else if n % 71 == 0 \n        then return false\n    else if n % 73 == 0\
    \ \n        then return false\n    else if n % 79 == 0 \n        then return false\n\
    \    else if n % 83 == 0 \n        then return false\n    else if n % 89 == 0\
    \ \n        then return false\n    else if n % 97 == 0 \n        then return false\n\
    \    else if n % 101 == 0 \n        then return false\n    else if n % 103 ==\
    \ 0 \n        then return false\n    else if n % 107 == 0 \n        then return\
    \ false\n    else if n % 113 == 0 \n        then return false\n    else if n %\
    \ 117 == 0 \n        then return false\n    else if n % 121 == 0 \n        then\
    \ return false\n    else if n % 123 == 0 \n        then return false\n    else\
    \ if n % 127 == 0 \n        then return false\n    else if n % 131 == 0 \n   \
    \     then return false\n    else if n % 137 == 0 \n        then return false\n\
    \    else if n % 143 == 0 \n        then return false\n    else if n % 147 ==\
    \ 0 \n        then return false\n    else if n % 151 == 0 \n        then return\
    \ false\n    else if n % 157 == 0 \n", "    if n < 2\n        return false\n \
    \   \n    if n == 2\n        return true\n    \n    if n % 2 == 0\n        return\
    \ false\n    \n    i = 5\n    while i * i <= n\n        i += 2\n    \n    return\
    \ n == i\nend", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n %\
    \ 7 == 0 \n    then return false \n    else if n == 2 || n == 3 || n == 5 || n\
    \ == 7 \n    then return true\n    else \n        if is_prime(n / 2) || is_prime(n\
    \ / 3) \n        then return true\n        else return false \n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(6)\n</cell>\n<code language=julia-1.3>\nis_prime(101)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(11)\n</cell>\n<code language=julia-1.3>\nis_prime(13441)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(4)\n</cell>\n<code language=julia-1.3>\nis_prime(1)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(13)\n</cell>\n<code language=julia-1.3>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(13)\n</cell>\n<code language=julia-1.3>\nis_prime(13441)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(13441)\n</cell>\n<code language=julia-1.3>\nis_prime(13)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(13)\n</cell>\n<code language=julia-1.3>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(13)\n</cell>\n<code language=julia-1.3>\nis_prime(13441)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(13441)\n</cell>\n<code language=julia-1.3>\nis_prime(13)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n", "    if n < 2 || n % 2 == 0 || n % 3 ==\
    \ 0 || n % 5 == 0 || n % 7 == 0 \n        || n % 11 == 0 || n % 13 == 0 || n %\
    \ 17 == 0 || n % 19 == 0 || n % 23 == 0 \n        || n % 29 == 0 || n % 31 ==\
    \ 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 \n        || n % 47 == 0 || n\
    \ % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 \n        || n % 71 ==\
    \ 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 \n        || n\
    \ % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105 == 0 || n % 107 == 0 \n\
    \        || n % 109 == 0 || n % 113 == 0 || n % 117 == 0 || n % 121 == 0 || n\
    \ % 123 == 0 \n        || n % 127 == 0 || n % 129 == 0 || n % 131 == 0 || n %\
    \ 133 == 0 || n % 137 == 0 \n        || n % 139 == 0 || n % 141 == 0 || n % 143\
    \ == 0 || n % 145 == 0 || n % 147 == 0 \n        || n % 149 == 0 || n % 151 ==\
    \ 0 || n % 153 == 0 || n % 157 == 0 || n % 159 == 0 \n        || n % 163 == 0\
    \ || n % 165 == 0 || n % 167 == 0 || n % 169 == 0 || n % 171 == 0 \n        ||\
    \ n % 173 == 0 || n % 177 == 0 || n % 179 == 0 || n % 181 == 0 || n % 183 == 0\
    \ \n        || n % 185 == 0 || n % 187 == 0 || n % 189 == 0 || n % 191 == 0 ||\
    \ n % 193 == 0 \n        || n % 195 == 0 || n % 197 == 0 || n % 199 == 0 || n\
    \ % 201 == 0 || n % 203 == 0 \n        || n % 205 == 0 || n % 207 == 0 || n %\
    \ 209 == 0 || n % 211 == 0 || n % 213 == 0 \n        || n % 215 == 0 || n % 217\
    \ == 0 || n % 219 == 0 || n % 221 == 0 || n % 223 == 0 \n        || n % 225 ==\
    \ 0 || n % 227 == 0 || n % 229 == 0 || n % 231 == 0 || n % 233 == 0 \n       \
    \ || n % 235 == 0 || n % 237 == 0 || n % 239 == 0 || n % 241 == 0 || n % 243 ==\
    \ 0 \n        || n % 245 == 0 || n % 247 == 0 || n % 249 == 0 || n % 251 == 0\
    \ || n % 253 == 0 \n        || n % 255 == 0 || n % 257 == 0 || n % 259 == 0 ||\
    \ n % 261 == 0 || n % 263 == 0 \n        || n % 265 == 0 || n % 267 == 0 || n\
    \ % 269 == 0 || n % 271 == 0 || n % 273 == 0 \n        || n % 275 == 0 || n %\
    \ 277 == 0 || n % 279 == 0 || n % 281 == 0 || n % 283 == 0 \n        || n % 285\
    \ == 0 || n % 287 == 0 || ", "    if is_prime_impl(n) then return true else return\
    \ false end\nend", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 ||\
    \ n % 7 == 0 \n        then return false\n    else if n == 1 || n == 3 || n ==\
    \ 5 || n == 7 || n == 11 \n        then return true\n    else if n % 11 == 1 then\
    \ return false\n    else if n % 13 == 1 then return false\n    else if n % 17\
    \ == 1 then return false\n    else if n % 19 == 1 then return false\n    else\
    \ if n % 23 == 1 then return false\n    else if n % 29 == 1 then return false\n\
    \    else if n % 31 == 1 then return false\n    else if n % 37 == 1 then return\
    \ false\n    else if n % 41 == 1 then return false\n    else if n % 43 == 1 then\
    \ return false\n    else if n % 47 == 1 then return false\n    else if n % 53\
    \ == 1 then return false\n    else if n % 59 == 1 then return false\n    else\
    \ if n % 63 ==1 then return false\n    else if n % 67 == 1 then return false\n\
    \    else if n % 71 == 1 then return false\n    else if n % 73 == 1 then return\
    \ false\n    else if n % 79 == 1 then return false\n    else if n % 83 == 1 then\
    \ return false\n    else if n % 89 == 1 then return false\n    else if n % 97\
    \ == 1 then return false\n    else if n % 101 == 1 then return false\n    else\
    \ if n % 103 == 1 then return false\n    else if n % 107 == 1 then return false\n\
    \    else if n % 113 == 1 then return false\n    else if n % 117 == 1 then return\
    \ false\n    else if n % 121 == 1 then return false\n    else if n % 127 == 1\
    \ then return false\n    else if n % 131 == 1 then return false\n    else if n\
    \ % 137 == 1 then return false\n    else if n % 143 == 1 then return false\n \
    \   else if n % 147 == 1 then return false\n    else if n % 151 == 1 then return\
    \ false\n    else if n % 157 == 1 then return false\n    else if n % 163 == 1\
    \ then return false\n    else if n % 167 == 1 then return false\n    else if n\
    \ % 173 == 1 then return false\n    else if n % 177 == 1 then return false\n \
    \   else if n % 181 == 1 then return false\n    else if n % 187 == 1 then return\
    \ false\n    else if n % 193 == 1 then return false\n    else if n % 197 == 1\
    \ then return false\n    else if n % 201 == 1 then return false\n    else if n\
    \ % 207 == 1 then return false\n    else if n % 211 == 1 then return false\n",
  "    if is_prime_cache[n]\n        return is_prime_cache[n]\n    if n <= 1\n   \
    \     return false\n    if n == 2\n        return true\n    if n % 2 == 0\n  \
    \      return false\n    \n    i = 5\n    while i * i <= n\n        i += 2\n \
    \   if i == n\n        return true\n    \n    return false\nend", "    if n <\
    \ 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n    then return\
    \ false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that returns the number of prime factors of\
    \ a given number.", "    if n == 2 || n == 3 || n == 5\n        return true\n\
    \    else if n % 2 == 0 || n % 3 == 0 || n % 5 == 0\n        return false\n  \
    \  else\n        return is_prime(n - 1) || is_prime(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of prime factors\
    \ of a given number.", "    if n < 2\n        return false\n    if n == 2\n  \
    \      return true\n    if n % 2 == 0\n        return false\n    \n    i = 5\n\
    \    while i * i <= n\n        i += 2\n    if n % i == 0\n        return false\n\
    \    return true\nend", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n <= 1 \n        return false\n    \n    if n % 2 == 0 \n      \
    \  return false\n    \n    i = 5\n    \n    while i * i <= n \n        i += 2\n\
    \    \n    if n == i \n        return true\n    \n    return false\nend", "  \
    \  if n < 2 || n % 2 == 0 \n        then return false\n    else if n == 2 \n \
    \       then return true\n    else \n        for m in range(3, floor(sqrt(n))+1,\
    \ 2) \n            if n % m == 0 \n            then return false\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(101)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(11)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of prime factors of a given number.", "    if n < 2 || n % 2 == 0\
    \ \n        then return false\n    else if n == 2 \n        then return true\n\
    \    else \n        begin\n            n := n / 2\n            n := n - 1\n  \
    \          n := n / 2\n            n := n - 1\n            n := n / 2\n      \
    \      n := n - 1\n            n := n / 2\n            n := n - 1\n          \
    \  n := n / 2\n            n := n - 1\n            n := n / 2\n            n :=\
    \ n - 1\n            n := n / 2\n            n := n - 1\n            n := n /\
    \ 2\n            n := n - 1\n            n := n / 2\n            n := n - 1\n\
    \            n := n / 2\n            n := n - 1\n            n := n / 2\n    \
    \        n := n - 1\n            n := n / 2\n            n := n - 1\n        \
    \    n := n / 2\n            n := n - 1\n            n := n / 2\n            n\
    \ := n - 1\n            n := n / 2\n            n := n - 1\n            n := n\
    \ / 2\n            n := n - 1\n            n := n / 2\n            n := n - 1\n\
    \            n := n / 2\n            n := n - 1\n            n := n / 2\n    \
    \        n := n - 1\n            n := n / 2\n            n := n - 1\n        \
    \    n := n / 2\n            n := n - 1\n            n := n / 2\n            n\
    \ := n - 1\n            n := n / 2\n            n := n - 1\n            n := n\
    \ / 2\n            n := n - 1\n            n := n / 2\n            n := n - 1\n\
    \            n := n / 2\n            n := n - 1\n            n := n / 2\n    \
    \        n := n - 1\n            n := n / 2\n            n := n - 1\n        \
    \    n := n / 2\n            n := n - 1\n            n := n / 2\n            n\
    \ := n - 1\n            n := n / 2\n            n := n - 1\n            n := n\
    \ / 2\n            n := n - 1\n            n := n / 2\n            n := n - 1\n\
    \            n := n / 2\n            n := n - 1\n            n := n / 2\n    \
    \        n := n - 1\n            n := n / 2\n            n := n - 1\n        \
    \    n := n / 2\n            n := n - 1\n            ", "    if n < 2 || n % 2\
    \ == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        || n % 11 == 0 || n\
    \ % 13 == 0 || n % 17 == 0 || n % 19 == 0 \n        || n % 23 == 0 || n % 29 ==\
    \ 0 || n % 31 == 0 || n % 37 == 0 \n        || n % 41 == 0 || n % 43 == 0 || n\
    \ % 47 == 0 || n % 53 == 0 \n        || n % 59 == 0 || n % 61 == 0 || n % 67 ==\
    \ 0 || n % 71 == 0 \n        || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n\
    \ % 89 == 0 \n        || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105\
    \ == 0 \n        || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 117 ==\
    \ 0 \n        || n % 121 == 0 || n % 123 == 0 || n % 127 == 0 || n % 129 == 0\
    \ \n        || n % 131 == 0 || n % 133 == 0 || n % 137 == 0 || n % 139 == 0 \n\
    \        || n % 141 == 0 || n % 143 == 0 || n % 145 == 0 || n % 147 == 0 \n  \
    \      || n % 149 == 0 || n % 151 == 0 || n % 153 == 0 || n % 157 == 0 \n    \
    \    || n % 159 == 0 || n % 161 == 0 || n % 163 == 0 || n % 165 == 0 \n      \
    \  || n % 167 == 0 || n % 169 == 0 || n % 171 == 0 || n % 173 == 0 \n        ||\
    \ n % 177 == 0 || n % 179 == 0 || n % 181 == 0 || n % 183 == 0 \n        || n\
    \ % 185 == 0 || n % 187 == 0 || n % 189 == 0 || n % 191 == 0 \n        || n %\
    \ 193 == 0 || n % 195 == 0 || n % 197 == 0 || n % 199 == 0 \n        || n % 201\
    \ == 0 || n % 203 == 0 || n % 205 == 0 || n % 207 == 0 \n        || n % 209 ==\
    \ 0 || n % 211 == 0 || n % 213 == 0 || n % 215 == 0 \n        || n % 217 == 0\
    \ || n % 219 == 0 || n % 221 == 0 || n % 223 == 0 \n        || n % 225 == 0 ||\
    \ n % 227 == 0 || n % 229 == 0 || n % 231 == 0 \n        || n % 233 == 0 || n\
    \ % 239 == 0 || n % 241 == 0 || n % 243 == 0 \n        || n % 245 == 0 || n %\
    \ 247 == 0 || n % 249 == 0 || n % 251 == 0 \n        || n % 253 == 0 || n % 255\
    \ == 0 || n % 257 == 0 || n % 259 == 0 \n        || n % 261 == 0 || n % 263 ==\
    \ 0 || n % 265 == 0 || n % 267 == 0 \n        || n % 269 == 0 || n % 271 == 0\
    \ || n % 273 == 0 || n % 275 == 0 \n        || n % 277 == 0 || n % 279 == 0 ||\
    \ n % 281 == 0 || n % 283 == 0 ", "    if n == 1\n        return true\n    if\
    \ n % 2 == 0\n        return false\n    for d in range(3, floor(sqrt(n))+1, 2)\n\
    \        if n % d == 0\n            return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(101)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.4>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.4>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that returns the first n prime numbers. Use\
    \ a while loop to implement this.", "    if is_prime_cache[n] == true \n    else\
    \ \n        if is_prime_cache[n] == false \n        else \n            if is_prime_cache[n]\
    \ == true \n            else \n                is_prime_cache[n] = is_prime_cache[n]\
    \ \n                is_prime_cache[n] = is_prime_cache[n] % n == 0\n         \
    \   end\n        end\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>", "    if n == 1\n        return true\n    \n    if n % 2 == 0\n\
    \        return false\n    \n    i = 5\n    while i * i <= n\n        if n % i\
    \ == 0\n            return false\n        i += 6\n    return true\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"Return true if a given number is even, and false\
    \ otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n    true\n\
    \    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n    >>> is_even(61)\n\
    \    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n    false\n    \"\
    \"\"", "    if is_prime_impl(n) \n    else \n        prime_impl(n.abs())\nend\n\
    </cell>\n<code language=julia-1.3>\nis_prime(6)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(101)\n</cell>\n<code language=julia-1.3>\nis_prime(11)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\nis_prime(61)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(4)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(1)\n</cell>\n<text>\nExercise\nWrite a function that returns the first\
    \ n prime numbers. \nHint: use is_prime to determine if n is prime.", "    if\
    \ n < 2 || n == 1 \n        return false\n    else if n == 2 \n        return\
    \ true\n    else if n % 2 == 0 \n        return false\n    else if n % 3 == 0\
    \ \n        return false\n    else if n % 5 == 0 \n        return false\n    else\
    \ if n % 7 == 0 \n        return false\n    else \n        return true\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return true if a given number is even,\
    \ and false otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n\
    \    true\n    >>> is_even(11)\n    false\n    >>> is_even(13441)\n    true\n\
    \    >>> is_even(61)\n    false\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n\
    \    false\n    \"\"\"", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else if n % 3 == 0 \n    \
    \    then return false\n    else if n % 5 == 0 \n        then return false\n \
    \   else if n % 7 == 0 \n        then return false\n    else if n % 11 == 0 \n\
    \        then return false\n    else if n % 13 == 0 \n        then return false\n\
    \    else if n % 17 == 0 \n        then return false\n    else if n % 19 == 0\
    \ \n        then return false\n    else if n % 23 == 0 \n        then return false\n\
    \    else if n % 29 == 0 \n        then return false\n    else if n % 31 == 0\
    \ \n        then return false\n    else if n % 37 == 0 \n        then return false\n\
    \    else if n % 41 == 0 \n        then return false\n    else if n % 43 == 0\
    \ \n        then return false\n    else if n % 47 == 0 \n        then return false\n\
    \    else if n % 53 == 0 \n        then return false\n    else if n % 59 == 0\
    \ \n        then return false\n    else if n % 61 == 0 \n        then return false\n\
    \    else if n % 67 == 0 \n        then return false\n    else if n % 71 == 0\
    \ \n        then return false\n    else if n % 73 == 0 \n        then return false\n\
    \    else if n % 79 == 0 \n        then return false\n    else if n % 83 == 0\
    \ \n        then return false\n    else if n % 89 == 0 \n        then return false\n\
    \    else if n % 97 == 0 \n        then return false\n    else if n % 101 == 0\
    \ \n        then return false\n    else if n % 103 == 0 \n        then return\
    \ false\n    else if n % 107 == 0 \n        then return false\n    else if n %\
    \ 109 == 0 \n        then return false\n    else if n % 113 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 139 == 0 \n        then return\
    \ false\n    else if n % 143 == 0 \n        then return false\n    else if n %\
    \ 147 == 0 \n", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n %\
    \ 7 == 0 \n        then return false\n    else if n == 2 || n == 3 || n == 5\n\
    \        then return true\n    else if n % 6 == 0 \n        then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return\
    \ true if a given number is divisible by all numbers from 1 to n.\n    >>> is_divisible(6,\
    \ 10)\n    true\n    >>> is_divisible(6, 2)\n    false\n    >>> is_divisible(6,\
    \ 3)\n    true\n    >>> is_divisible(6, 4)\n    false\n    >>> is_divisible(6,\
    \ 6)\n    true\n    >>> is_divisible(6, 7)\n    false\n    >>> is_divisible(6,\
    \ 8)\n    true\n    >>> is_divisible(6, 9)\n    false\n    >>> is_divisible(6,\
    \ 11)\n    true\n    >>> is_divisible(6, 12)\n    false\n    >>> is_divisible(6,\
    \ 13)\n    true\n    >>> is_divisible(6, 14)\n    false\n    >>> is_divisible(6,\
    \ 15)\n    true\n    >>> is_divisible(6, 16)\n    false\n    >>> is_divisible(6,\
    \ 17)\n    true\n    >>> is_divisible(6, 18)\n    false\n    >>> is_divisible(6,\
    \ 19)\n    true\n    >>> is_divisible(6, 20)\n    false\n    >>> is_divisible(6,\
    \ 21)\n    true\n    >>> is_divisible(6, 22)\n    false\n    >>> is_divisible(6,\
    \ 23)\n    true\n    >>> is_divisible(6, 24)\n    false\n    >>> is_divisible(6,\
    \ 25)\n    true\n    >>> is_divisible(6, 26)\n    false\n    >>> is_divisible(6,\
    \ 27)\n    true\n    >>> is_divisible(6, 28)\n    false\n    >>> is_divisible(6,\
    \ 29)\n    true\n    >>> is_divisible(6, 30)\n    false\n    >>> is_divisible(6,\
    \ 31)\n    true\n    >>> is_divisible(6, 32)\n    false\n    >>> is_divisible(6,\
    \ 33)\n    true\n    >>> is_divisible(6, 34)\n    false\n    >>> is_divisible(6,\
    \ 35)\n    true\n    >>> is_divisible(6, 36)\n    false\n    >>> is_divisible(6,\
    \ 37)\n    true\n    >>> is_divisible(6, 38)\n    false\n    >>> is_divisible(6,\
    \ 39)\n    true\n    >>> is_divisible(6, 40)\n    false\n    >>> is_divisible(6,\
    \ 41)\n    true\n    >>> is_divisible(6, 42)\n    false\n    >>> is_divisible(6,\
    \ 43)\n    true\n    >>> ", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5\
    \ == 0 || n % 7 == 0 \n        || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 ||\
    \ n % 19 == 0 \n        || n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37\
    \ == 0 \n        || n % 41 == 0 || n % 43 == 0 || n % 47 == 0 || n % 53 == 0 \n\
    \        || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n % 71 == 0 \n      \
    \  || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 \n        || n\
    \ % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105 == 0 \n        || n % 107\
    \ == 0 || n % 109 == 0 || n % 113 == 0 || n % 117 == 0 \n        || n % 121 ==\
    \ 0 || n % 123 == 0 || n % 127 == 0 || n % 129 == 0 \n        || n % 131 == 0\
    \ || n % 133 == 0 || n % 137 == 0 || n % 139 == 0 \n        || n % 141 == 0 ||\
    \ n % 143 == 0 || n % 145 == 0 || n % 147 == 0 \n        || n % 149 == 0 || n\
    \ % 151 == 0 || n % 153 == 0 || n % 157 == 0 \n        || n % 159 == 0 || n %\
    \ 161 == 0 || n % 163 == 0 || n % 165 == 0 \n        || n % 167 == 0 || n % 169\
    \ == 0 || n % 171 == 0 || n % 173 == 0 \n        || n % 177 == 0 || n % 179 ==\
    \ 0 || n % 181 == 0 || n % 183 == 0 \n        || n % 185 == 0 || n % 187 == 0\
    \ || n % 189 == 0 || n % 191 == 0 \n        || n % 193 == 0 || n % 195 == 0 ||\
    \ n % 197 == 0 || n % 199 == 0 \n        || n % 201 == 0 || n % 203 == 0 || n\
    \ % 205 == 0 || n % 207 == 0 \n        || n % 209 == 0 || n % 211 == 0 || n %\
    \ 213 == 0 || n % 215 == 0 \n        || n % 217 == 0 || n % 219 == 0 || n % 221\
    \ == 0 || n % 223 == 0 \n        || n % 225 == 0 || n % 227 == 0 || n % 229 ==\
    \ 0 || n % 231 == 0 \n        || n % 233 == 0 || n % 235 == 0 || n % 237 == 0\
    \ || n % 239 == 0 \n        || n % 241 == 0 || n % 243 == 0 || n % 245 == 0 ||\
    \ n % 247 == 0 \n        || n % 249 == 0 || n % 251 == 0 || n % 253 == 0 || n\
    \ % 255 == 0 \n        || n % 257 == 0 || n % 259 == 0 || n % 261 == 0 || n %\
    \ 263 == 0 \n        || n % 265 == 0 || n % 267 == 0 || n % 269 == 0 || n % 271\
    \ == 0 \n        || n % 273 == 0 || n % 275 == 0 || n % 277 == 0 || n % 279 ==\
    \ 0 ", "    if n < 2 || n % 2 == 0 || n % 3 == 0 then return false \n    else\
    \ if n == 2 || n == 3 then return true \n    else if n % 5 == 0 then return false\
    \ \n    else if n % 7 == 0 then return false \n    else return is_prime(3*n-5)\
    \ \nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    false\n    >>> is_prime(101)\n\
    \    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n    true\n\
    \    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n\
    \    false\n    \"\"\"", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n <= 1 \n        return false\n    \n    if n == 2 \n        return\
    \ true\n    \n    if n % 2 == 0 \n        return false\n    \n    i = 5\n    \n\
    \    while i * i <= n \n        i += 2\n    \n    if i == n \n        return true\n\
    \    \n    return false\nend", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n <= 1 \n        return false\n    \n    prime::Bool = false\n \
    \   \n    if n == 2 \n        return true\n    \n    if n % 2 == 0 \n        return\
    \ false\n    \n    i = 2\n    \n    while i * i <= n \n        if n % i == 0 \n\
    \            return false\n        i += 1\n    \n    return true\nend", "    if\
    \ is_prime_cache[n] \n        return is_prime_cache[n]\n    \n    if n < 2 \n\
    \        return false\n    \n    if n == 2 \n        return true\n    \n    if\
    \ n % 2 == 0 \n        return false\n    \n    prime_cache = [false, true]\n \
    \   \n    for d in range(3, n+1, 2) do \n        if n % d == 0 \n            prime_cache[1]\
    \ = false\n            break\n    \n    is_prime_cache[n] = prime_cache[1]\n \
    \   return prime_cache[1]\nend\n</cell>\n<code language=julia-1.5>\nis_prime(6)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\nis_prime(4)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of prime factors of a given number.",
  "    if n < 2 || n % 2 == 0 \n        then return false\n    else if n == 2 \n \
    \       then return true\n    else \n        for m in range(3, n+1, 2) \n    \
    \        if n % m == 0 \n                then return false\n        end\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\n@time is_prime(101)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.3>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.3>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that checks if a number is divisible by all\
    \ numbers from 1 to n.", "    if is_prime_cache[n] == true \n    else \n     \
    \   if is_prime_cache[n] == false \n        then \n            is_prime_cache[n]\
    \ = is_prime_helper(n) \n        else \n            is_prime_cache[n] = is_prime_helper(n)\
    \ \n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "   \
    \ if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n    then\
    \ return false\n    else return true\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n\
    \    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n\
    \    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n\
    \    false\n    >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2 || n %\
    \ 2 == 0 \n        then return false\n    else if n == 2 \n        then return\
    \ true\n    else if n % 3 == 0 \n        then return false\n    else \n      \
    \  do return is_prime(n - 1) || is_prime(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2\
    \ == 0 \n        then return false\n    else \n        if is_prime(n - 1) \n \
    \           then return true\n        else return false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(62)\n</cell>\n<code language=julia-1.5>\n@time is_prime(63)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(64)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(65)\n</cell>\n<code language=julia-1.5>\n@time is_prime(66)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(67)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(68)\n</cell>\n<code language=julia-1.5>\n@time is_prime(69)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(70)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(71)\n</cell>\n<code language=julia-1.5>\n@time is_prime(72)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(73)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(74)\n</cell>\n<code language=julia-1.5>\n@time is_prime(75)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(76)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(77)\n</cell>\n<code language=julia-1.5>\n@time is_prime(78)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(79)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(80)\n</cell>\n<code language=julia-1.5>\n@time is_prime(81)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(82)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(83)\n</cell>\n<code language=julia-1.5>\n@time is_prime(84)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(85)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(86)\n</cell>\n<code language=julia-1.5>\n@time ", "    if n < 2\
    \ || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        then return\
    \ false\n    else if n == 2 || n == 3 || n == 5 || n == 7 \n        then return\
    \ true\n    else if n % 6 == 0 then return is_prime(n / 6) else return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(", "    if n < 2 || n % 2 == 0 \n  \
    \      return false\n    \n    i = 5\n    while i * i <= n \n        if n % i\
    \ == 0 \n            return false\n        i += 2\n    return true\nend\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.4>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.4>\n@time is_prime(61)\n</cell>\n<code language=julia-1.4>\n\
    @time is_prime(61)\n</cell>\n<code language=", "    if n < 2 || n % 2 == 0\n \
    \       false\n    else\n        true\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n == 2 || n ==\
    \ 3 || n == 5\n        return true\n    else if n % 2 == 0 || n % 3 == 0 || n\
    \ % 5 == 0\n        return false\n    else if n % 5 == 1 && n % 7 == 0 \n    \
    \    return false\n    else if n % 5 == 1 && n % 7 == 1 \n        return true\n\
    \    else if n % 7 == 0 && n != 1 \n        return false\n    else if n % 7 ==\
    \ 1 && n != 1 \n        return true\n    else if n % 3 == 0 && n % 5 == 0 \n \
    \       return false\n    else if n % 3 == 0 && n % 5 == 1 \n        return true\n\
    \    else if n % 5 == 0 && n % 7 == 0 \n        return false\n    else if n %\
    \ 5 == 0 && n % 7 == 1 \n        return true\n    else if n % 3 == 1 && n % 5\
    \ == 0 \n        return false\n    else if n % 3 == 1 && n % 5 == 1 \n       \
    \ return true\n    else if n % 5 == 1 && n % 7 == 0 \n        return false\n \
    \   else if n % 5 == 1 && n % 7 == 1 \n        return true\n    else if n % 7\
    \ == 0 && n != 1 \n        return false\n    else if n % 7 == 1 && n != 1 \n \
    \       return true\n    else if n % 5 == 0 && n % 7 == 0 \n        return false\n\
    \    else if n % 5 == 0 && n % 7 == 1 \n        return true\n    else if n % 7\
    \ == 1 && n != 1 \n        return true\n    else if n % 3 == 0 && n % 5 == 1 &&\
    \ n % 7 == 0 \n        return false\n    else if n % 3 == 0 && n % 5 == 1 && n\
    \ % 7 == 1 \n        return true\n    else if n % 5 == 1 && n % 7 == 0 && n %\
    \ 11 == 0 \n        return false\n    else if n % 5 == 1 && n % 7 == 1 && n %\
    \ 11 == 1 \n        return true\n    else if n % 7 == 0 && n != 1 \n        return\
    \ false\n    else if n % 7 == 1 && n != 1 \n        return true\n    else if n\
    \ % 11 == 0 && n % 13 == 0 \n        return false\n    else if n % 11 == 0 &&\
    \ n % 13 == 1 \n        return true\n    else if n % 13 == 0 && n != 1 \n    \
    \    return false\n    else if n % 13 == 1 && n != 1 \n        return true\n \
    \   else if n % 11 == 1 && n % 13 == 0 \n        return false\n    else if n %\
    \ 11 == 1 && n % 13 == 1 \n        return true\n    else if n % 13 == 0 && n !=\
    \ 1 \n        return false\n    else if n % 13 == 1 && n != 1 \n        return\
    \ true\n    else if n % 11 == 0 && n % 13 == 0 \n        return false\n    else\
    \ if n % 11 == 0 && n % 13 == 1 \n        return true\n", "    if is_prime_cache[n]\
    \ == true \n    else \n        if is_prime_cache[n] == false \n        then \n\
    \            is_prime_cache[n] = is_prime_test(n) \n        else \n          \
    \  is_prime_cache[n] = is_prime_test(n) \n        end\n    end\nend\n\"\"\"\n\
    is_prime_test(n::Int64)::Bool", "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else \n        if is_prime(n / 2) \n            then return true\n\
    \        else return false\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(101)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(11)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ first n prime numbers. Test it on small numbers and on large numbers. How fast\
    \ does it run?", "    if n < 2 || n % 2 == 0 \n        then return false\n   \
    \ else if n == 2 \n        then return true\n    else \n        for m in range(3,\
    \ floor(sqrt(n))+1, 2) \n            if n % m == 0 \n                then return\
    \ false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(61)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(13441)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(6)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(10)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(11)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(12)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(14)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(15)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(16)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(17)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(18)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(19)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(20)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(21)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(22)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(23)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(24)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(25)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(26)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(27)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(28)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nis_prime(29)\n</cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(30)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nis_prime(31)\n</cell>\n<code language=julia-1.5",
  "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n       \
    \ then return false\n    else if n == 2 || n == 3 || n == 5\n        then return\
    \ true\n    else if n % 6 == 0 \n        then return false\n    else if n % 6\
    \ == 1 \n        then return true\n    else if n % 6 == 2 \n        then return\
    \ false\n    else if n % 6 == 3 \n        then return true\n    else if n % 6\
    \ == 5 \n        then return false\n    else if n % 6 == 7 \n        then return\
    \ true\n    else if n % 6 == 11\n        then return false\n    else if n % 6\
    \ == 13\n        then return true\n    else if n % 6 == 17\n        then return\
    \ false\n    else if n % 6 == 19\n        then return true\n    else if n % 6\
    \ == 23 \n        then return false\n    else if n % 6 == 29\n        then return\
    \ true\n    else if n % 6 == 31 \n        then return false\n    else if n % 6\
    \ == 37\n        then return true\n    else if n % 6 == 41 \n        then return\
    \ false\n    else if n % 6 == 47\n        then return true\n    else if n % 6\
    \ == 53 \n        then return false\n    else if n % 6 == 59\n        then return\
    \ true\n    else if n % 6 == 63 \n        then return false\n    else if n % 6\
    \ == 67\n        then return true\n    else if n % 6 == 73 \n        then return\
    \ false\n    else if n % 6 == 79\n        then return true\n    else if n % 6\
    \ == 83 \n        then return false\n    else if n % 6 == 89\n        then return\
    \ true\n    else if n % 6 == 93 \n        then return false\n    else if n % 6\
    \ == 97\n        then return true\n    else if n % 6 == 111\n        then return\
    \ false\n    else if n % 6 == 127\n        then return true\n    else if n % 6\
    \ == 131\n        then return false\n    else if n % 6 == 137\n        then return\
    \ true\n    else if n % 6 == 153\n        then return false\n    else if n % 6\
    \ == 159\n        then return true\n    else if n % 6 == 173\n        then return\
    \ false\n    else if n % 6 == 179\n        then return true\n    else if n % 6\
    \ == 183\n        then return false\n    else if n % 6 == 197\n        then return\
    \ true\n    else if n % 6", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    if n <= 1 \n        return false\n    if n <= 3 \n        return true\n \
    \   if n % 2 == 0 \n        return false\n    if n % 3 == 0 \n        return false\n\
    \    \n    i = 5\n    while i * i <= n \n        i += 2\n    if i == n \n    \
    \    return true\n    \n    i = 5\n    while i * i <= n \n        i += 3 \n  \
    \  if i == n \n        return true\n    \n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime_cache = [false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, ", "    if n < 2 ||\
    \ n % 2 == 0 \n        then return false\n    else if n == 2 \n        then return\
    \ true\n    else \n        for i in 2..(n-1) do \n            if n % i == 0 \n\
    \                then return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2\
    \ == 0 \n        then return false \n    else if n % 3 == 0 \n        then return\
    \ false \n    else if n % 5 == 0 \n        then return false \n    else if n %\
    \ 7 == 0 \n        then return false \n    else \n        return true\nend\n</cell>\n\
    <text>\nExercise: Write a function that checks if a given number is divisible\
    \ by 7 and 11. Test it on all numbers from 1 to 100.", "    if n < 2 || n % 2\
    \ == 0 || n % 3 == 0 then return false \n    else if n % 5 == 0 then return false\
    \ \n    else if n % 7 == 0 then return false \n    else if n % 11 == 0 then return\
    \ false \n    else if n % 13 == 0 then return false \n    else if n % 17 == 0\
    \ then return false \n    else if n % 19 == 0 then return false \n    else if\
    \ n % 23 == 0 then return false \n    else if n % 29 == 0 then return false \n\
    \    else if n % 31 == 0 then return false \n    else if n % 37 == 0 then return\
    \ false \n    else if n % 41 == 0 then return false \n    else if n % 43 == 0\
    \ then return false \n    else if n % 47 == 0 then return false \n    else if\
    \ n % 53 == 0 then return false \n    else if n % 59 == 0 then return false \n\
    \    else if n % 61 == 0 then return false \n    else if n % 67 == 0 then return\
    \ false \n    else if n % 71 == 0 then return false \n    else if n % 73 == 0\
    \ then return false \n    else if n % 79 == 0 then return false \n    else if\
    \ n % 83 == 0 then return false \n    else if n % 89 == 0 then return false \n\
    \    else if n % 97 == 0 then return false \n    else if n % 101 == 0 then return\
    \ false \n    else if n % 103 == 0 then return false \n    else if n % 107 ==\
    \ 0 then return false \n    else if n % 113 == 0 then return false \n    else\
    \ if n % 117 == 0 then return false \n    else if n % 121 == 0 then return false\
    \ \n    else if n % 123 == 0 then return false \n    else if n % 127 == 0 then\
    \ return false \n    else if n % 131 == 0 then return false \n    else if n %\
    \ 137 == 0 then return false \n    else if n % 141 == 0 then return false \n \
    \   else if n % 147 == 0 then return false \n    else if n % 151 == 0 then return\
    \ false \n    else if n % 157 == 0 then return false \n    else if n % 163 ==\
    \ 0 then return false \n    else if n % 167 == 0 then return false \n    else\
    \ if n % 173 == 0 then return false \n    else if n % 177 == 0 then return false\
    \ \n    else if n % 181 == 0 then return false \n    else if n % 187 == 0 then\
    \ return false \n    else if n % 191 == 0 then return false \n    else if n %\
    \ 193 == 0 then return false \n    else if ", "    if n < 2 || n % 2 == 0 \n \
    \       then return false\n    else if n == 2 \n        then return true\n   \
    \ else \n        for m in range(3, floor(sqrt(n))+1, 2) \n            if n % m\
    \ == 0 \n                then return false\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a given number is divisible\
    \ by another given number. \nFor example, a number x is divisible by y if and\
    \ only if x % y == 0.", "    if n < 2 || n % 2 == 0 \n        then return false\
    \ \n    else \n        primes <- primes(n)\n        i <- length(primes)\n    \
    \    while i >= 1 \n            do if primes[i-1] == n \n                then\
    \ return false \n            else i <- i-1\n        return true\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\n\
    is_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\n\
    is_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\n\
    is_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.4>\n\"\"\"\n\
    is_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\n\
    is_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.4>\n\"\"\"\nis_prime(6)\n\
    is_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\
    \"\"\"\n</cell>\n<code language=julia-1.4>\n\"\"\"\nis_prime(6)\nis_prime(101)\n\
    is_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\n\
    is_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\n\
    is_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\n\
    is_prime(4)", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n \
    \   if n <= 1 \n        return false\n    if n <= 3 \n        return true\n  \
    \  if n % 2 == 0 \n        return false\n    if n % 3 == 0 \n        return false\n\
    \    \n    i = 5\n    \n    while i * i <= n \n        i += 2\n    \n    if i\
    \ == n \n        return true\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    is_prime_cache = [\n    true,\n    true,\n    true,\n    true,\n    true,\n  \
    \  true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n \
    \   true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,", "    if is_prime_impl(n) then return true else return false end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a given number\
    \ is even.\n    >>> is_even(6)\n    false\n    >>> is_even(10)\n    true\n   \
    \ >>> is_even(13)\n    false\n    >>> is_even(15)\n    true\n    >>> is_even(16)\n\
    \    false\n    >>> is_even(17)\n    true\n    >>> is_even(18)\n    false\n  \
    \  >>> is_even(19)\n    true\n    >>> is_even(20)\n    false\n    >>> is_even(21)\n\
    \    true\n    >>> is_even(22)\n    false\n    >>> is_even(23)\n    true\n   \
    \ >>> is_even(24)\n    false\n    >>> is_even(25)\n    true\n    >>> is_even(26)\n\
    \    false\n    >>> is_even(27)\n    true\n    >>> is_even(28)\n    false\n  \
    \  >>> is_even(29)\n    true\n    >>> is_even(30)\n    false\n    >>> is_even(31)\n\
    \    true\n    >>> is_even(32)\n    false\n    >>> is_even(33)\n    true\n   \
    \ >>> is_even(34)\n    false\n    >>> is_even(35)\n    true\n    >>> is_even(36)\n\
    \    false\n    >>> is_even(37)\n    true\n    >>> is_even(38)\n    false\n  \
    \  >>> is_even(39)\n    true\n    >>> is_even(40) # not a prime\n    false\n \
    \   >>> is_even(42) # not a prime\n    false\n    >>> is_even(44) # not a prime\n\
    \    false\n    >>> is_even(46) # not a prime\n    false\n    >>> is_even(48)\
    \ # not a prime\n    false\n    >>> is_even(50)\n    false\n    >>> is_even(51)\n\
    \    false\n    >>> is_even(52)\n    false\n    >>> is_even(54)\n    false\n \
    \   >>> is_even(55)\n    false\n    >>> is_even(56)\n    false\n    >>> is_even(57)\n\
    \    false\n    >>> is_even(58)\n    false\n    >>> is_even(59)\n    false\n \
    \   >>> is_even(60)\n    false\n    >>> is_even(61)\n    false\n    >>> is_even(62)\n\
    \    false\n    >>> is_even(63)\n    false\n    >>> is_even(64)\n    false\n \
    \   >>> is_even(65)\n    false\n    >>> is_even(66)\n    false\n    >>> is_even(67)\n\
    \    false\n    >>> is_even(68)\n    false\n    >>> is_even(69)\n    false\n \
    \   >>> is_even(70)\n    false\n    >>> is_even(71)\n", "    if n < 2 || n % 2\
    \ == 0 \n        return false\n    else \n        return is_prime(n - 1) || n\
    \ % 3 == 0\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\n\
    is_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\n\
    is_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\n\
    is_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\n\
    is_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.3>\n\"\"\"\n\
    is_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\n\
    is_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\n\
    is_prime(101)\nis_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\
    \"\"\"\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\n\
    is_prime(11)\nis_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\n\
    is_prime(13441)\nis_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(11)\nis_prime(13441)\n\
    is_prime(61)\nis_prime(4)\nis_prime(1)\n\"\"\"\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(6)\nis_prime(101)\nis_prime(", "    if n < 2 || n % 2 == 0\n\
    \        return false\n    \n    i = 5\n    while i * i <= n\n        if n % i\
    \ == 0\n            return false\n        i += 6\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that checks if a given number is even.", " \
    \   if n < 2 || n % 2 == 0 \n        then return false \n    else if n == 2 \n\
    \        then return true \n    else \n        for m in range(3, floor(sqrt(n)),\
    \ 2) \n            do if n % m == 0 \n                then return false \n   \
    \ else \n        return true \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2\
    \ == 0 \n        then return false\n    else if n == 2 \n        then return true\n\
    \    else \n        begin \n            i = 2\n            while i <= sqrt(n)\
    \ \n                do if n % i == 0 \n                    then return false \n\
    \                else \n                    i = i + 1\n        end\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    if n < 2 || n % 2 == 0\n  \
    \      return false\n    \n    i = 2\n    while i <= sqrt(n)\n        if n % i\
    \ == 0\n            return false\n        i += 1\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(11)\n</cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(4)\n</cell>\n<code language=julia-1.5>\n@time is_prime(1)\n</cell>\n\
    <text>\nExercise: Write a function that checks if a given number is even.\nHint:\
    \ use modulo division.", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    if n < 2 \n        return false\n    \n    prime::Bool = false\n    \n  \
    \  if n == 2 \n        prime = true\n    else \n        prime = false\n      \
    \  for i::Int64 in 2..n \n            if n % i == 0 \n                prime =\
    \ false\n                break\n    \n    is_prime_cache[n] = prime\n    return\
    \ prime\nend\n</cell>\n<code language=julia-1.3>\nis_prime(6)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(101)\n</cell>\n<code language=julia-1.3>\nis_prime(11)\n\
    </cell>\n<code language=julia-1.3>\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\
    is_prime(61)\n</cell>\n<code language=julia-1.3>\nis_prime(4)\n</cell>\n<code\
    \ language=julia-1.3>\nis_prime(1)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns the first n prime numbers. \nHint: use is_prime to determine whether\
    \ a number is prime.", "    if is_prime_impl(n) == true\n    else \n        return\
    \ false\nend\n</cell>\n<code language=julia-1.1>\nis_prime(6)\n</cell>\n<code\
    \ language=julia-1.1>\nis_prime(101)\n</cell>\n<code language=julia-1.1>\nis_prime(11)\n\
    </cell>\n<code language=julia-1.1>\nis_prime(13441)\n</cell>\n<code language=julia-1.1>\n\
    is_prime(61)\n</cell>\n<code language=julia-1.1>\nis_prime(4)\n</cell>\n<code\
    \ language=julia-1.1>\nis_prime(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the number of divisors of a given number. Hint: use the Sieve of\
    \ Eratosthenes.", "    if n == 2 || n == 3 || n == 5 || n == 7 || n == 9 || n\
    \ == 11 \n        || n == 13 || n == 17 || n == 19 || n == 23 || n == 29 || n\
    \ == 37\n        || n == 41 || n == 45 || n == 47 || n == 53 || n == 59 || n ==\
    \ 63 \n        || n == 67 || n == 71 || n == 75 || n == 91 || n == 95 || n ==\
    \ 99\n        || n == 103 || n == 107 || n == 111 || n == 117 || n == 123 || n\
    \ == 127\n        || n == 131 || n == 137 || n == 143 || n == 147 || n == 153\
    \ || n == 159\n        || n == 163 || n == 167 || n == 173 || n == 179 \n    \
    \    || n == 183 || n == 191 || n == 193 || n == 197 || n == 199\n        || n\
    \ == 203 || n == 209 || n == 227 || n == 229 || n == 235\n        || n == 241\
    \ || n == 243 || n == 247 || n == 253 || n == 257\n        || n == 269 || n ==\
    \ 273 || n == 277 || n == 283 || n == 287\n        || n == 293 || n == 297 ||\
    \ n == 307 || n == 309 || n == 311\n        || n == 313 || n == 317 || n == 319\
    \ || n == 323 || n == 327\n        || n == 333 || n == 337 || n == 343 || n ==\
    \ 347 || n == 347\n        || n == 353 || n == 359 || n == 363 || n == 367 ||\
    \ n == 373\n        || n == 379 || n == 389 || n == 399 || n == 409 \n       \
    \ || n == 419 || n == 429 || n == 431 || n == 433 || n == 439\n        || n ==\
    \ 499 || n == 509 || n == 519 || n == 529 || n == 539\n        || n == 549 ||\
    \ n == 551 || n == 569 || n == 571 || n == 577\n        || n == 583 || n == 601\
    \ || n == 607 || n == 611 || n == 617\n        || n == 623 || n == 631 || n ==\
    \ 641 || n == 643 || n == 647\n        || n == 653 || n == 659 || n == 663 ||\
    \ n == 671 || n == 677\n        || n == 683 || n == 687 || n == 691 || n == 697\
    \ || n == 703\n        || n == 709 || n == 719 || n == 733 || n == 739 || n ==\
    \ 743\n        || n == 751 || n == 759 || n == 767 || n == 773 || n == 779\n \
    \       || n == 783 ", "    if is_prime_impl(n) then return true else return false\
    \ end\nend", "    if is_prime_cache[n]\n        return is_prime_cache[n]\n   \
    \ if n <= 1\n        return false\n    if n == 2\n        return true\n    if\
    \ n % 2 == 0\n        return false\n    \n    i = 5\n    while i * i <= n\n  \
    \      i += 2\n    \n    if n == i\n        return true\n    \n    return false\n\
    end", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n    \n   \
    \ if n <= 1 \n        return false\n    \n    prime_cache = [true, false]\n  \
    \  \n    if n <= 3 \n        return prime_cache[n]\n    \n    prime_cache[1] =\
    \ is_prime_cache[n/2]\n    \n    if n % 2 == 0 \n        prime_cache[0] = false\n\
    \    \n    for i = 3 \n        prime_cache[i] = prime_cache[i-2]\n        \n \
    \       if n % i == 0 \n            prime_cache[i] = false\n    \n    is_prime_cache[n]\
    \ = prime_cache[n]\n    return prime_cache[n]\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(61)\n", "    if n < 2 || n % 2 == 0\
    \ \n        then return false\n    else if n % 3 == 0 \n        then return false\n\
    \    else if n % 5 == 0 \n        then return false\n    else if n % 7 == 0 \n\
    \        then return false\n    else if n % 11 == 0 \n        then return false\n\
    \    else if n % 13 == 0 \n        then return false\n    else if n % 17 == 0\
    \ \n        then return false\n    else if n % 19 == 0 \n        then return false\n\
    \    else if n % 23 == 0 \n        then return false\n    else if n % 29 == 0\
    \ \n        then return false\n    else if n % 31 == 0 \n        then return false\n\
    \    else if n % 37 == 0 \n        then return false\n    else if n % 41 == 0\
    \ \n        then return false\n    else if n % 43 == 0 \n        then return false\n\
    \    else if n % 47 == 0 \n        then return false\n    else if n % 53 == 0\
    \ \n        then return false\n    else if n % 59 == 0 \n        then return false\n\
    \    else if n % 61 == 0 \n        then return false\n    else if n % 67 == 0\
    \ \n        then return false\n    else if n % 71 == 0 \n        then return false\n\
    \    else if n % 73 == 0 \n        then return false\n    else if n % 79 == 0\
    \ \n        then return false\n    else if n % 83 == 0 \n        then return false\n\
    \    else if n % 89 == 0 \n        then return false\n    else if n % 97 == 0\
    \ \n        then return false\n    else if n % 101 == 0 \n        then return\
    \ false\n    else if n % 103 == 0 \n        then return false\n    else if n %\
    \ 107 == 0 \n        then return false\n    else if n % 111 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 141 == 0 \n        then return\
    \ false\n    else if n % 147 == 0 \n        then return false\n    else if n %\
    \ 151 == 0 \n        then return false\n    else if n % 157 == 0 \n        then\
    \ return false\n    else if n % 161 == ", "    if is_prime_cache[n] \n       \
    \ return is_prime_cache[n]\n    if n <= 1 \n        return false\n    if n <=\
    \ 3 \n        return true\n    if n % 2 == 0 \n        return false\n    if n\
    \ % 3 == 0 \n        return false\n    \n    i = 5\n    \n    while i * i <= n\
    \ \n        if n % i == 0 \n            return false\n        i += 6\n    return\
    \ true\nend", "    if n < 2 || n % 2 == 0 \n        then return false\n    else\
    \ if n == 2 \n        then return true\n    else if n % 3 == 0 \n        then\
    \ return false\n    else \n        do return is_prime(3*n-1) || is_prime(3*n+1)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if a given number is\
    \ even, and false otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n\
    \    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n \
    \   >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n\
    \    false\n    \"\"\"", '    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 ==
    0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 ||
    n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n %
    43 == 0 || n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67
    == 0 || n % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 ==
    0 || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 ==
    0 || n % 113 == 0 || n % 117 == 0 || n % 121 == 0 || n % 123 == 0 || n % 127 ==
    0 || n % 129 == 0 || n % 131 == 0 || n % 133 == 0 || n % 137 == 0 || n % 139 ==
    0 || n % 141 == 0 || n % 143 == 0 || n % 147 == 0 || n % 149 == 0 || n % 151 ==
    0 || n % 153 == 0 || n % 157 == 0 || n % 159 == 0 || n % 163 == 0 || n % 167 ==
    0 || n % 171 == 0 || n % 173 == 0 || n % 177 == 0 || n % 179 == 0 || n % 181 ==
    0 || n % 183 == 0 || n % 185 == 0 || n % 187 == 0 || n % 189 == 0 || n % 191 ==
    0 || n % 193 == 0 || n % 197 == 0 || n % 199 == 0 || n % 201 == 0 || n % 203 ==
    0 || n % 205 == 0 || n % 207 == 0 || n % 209 == 0 || n % 211 == 0 || n % 213 ==
    0 || n % 217 == 0 || n % 219 == 0 || n % 221 == 0 || n % 223 == 0 || n % 227 ==
    0 || n % 229 == 0 || n % 231 == 0 || n % 233 == 0 || n % 239 == 0 || n % 241 ==
    0 || n % 243 == 0 || n % 247 == 0 || n % 249 == 0 || n % 251 == 0 || n % 253 ==
    0 || n % 257 == 0 || n % 259 == 0 || n % 261 == 0 || n % 263 == 0 || n % 265 ==
    0 || n % 267 == 0 || n % 269 == 0 || n % 271 == 0 || n % 273 == 0 || n % 277 ==
    0 || n % 279 == 0 || n % 281 == 0 || n % 283 == 0 || n % 285 == 0 || n % 287 ==
    0 || n % 289 == 0 || n % 291 == 0 || n % 293 == 0 || n % 297 == 0 || n % 301 ==
    0 || n % 303 == 0 || n % 307 == 0 || n % 309 == 0 || n % 311 == 0 || n % 313 ==
    0 || n % 315 == 0 || n % 317 == 0 || n % 319 == 0 || n % 321 == 0 || n % 323 ==
    0 || n % 325 == 0 || n % 327 == 0 || n % 329 == 0 || n % 331 == 0 || n % 333 ==
    0 || n % 337 == 0 || n % 339 == 0 || n % 341 == 0 || n % 343 == 0 || n % 347 ==
    0 || n % 349 == 0 || n % 351 == 0 || n % 353 == 0 || n % 357', "    if n < 2 ||\
    \ n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        then return false\n\
    \    else \n        for i in 2..n \n            if n % i == 0 || n % (i + 2) ==\
    \ 0 \n                then return false\n            else \n                if\
    \ n % (i + 3) == 0 \n                    then return false\n                else\
    \ \n                    if n % (i + 5) == 0 \n                        then return\
    \ false\n                    else \n                        if n % (i + 7) ==\
    \ 0 \n                            then return false\n                        else\
    \ \n                            if n % (i + 11) == 0 \n                      \
    \          then return false\n                            else \n            \
    \                    if n % (i + 13) == 0 \n                                 \
    \   then return false\n                                else \n               \
    \                     if n % (i + 17) == 0 \n                                \
    \        then return false\n                                    else \n      \
    \                                  if n % (i + 19) == 0 \n                   \
    \                         then return false\n                                \
    \        else \n                                            if n % (i + 23) ==\
    \ 0 \n                                                then return false\n    \
    \                                        else \n                             \
    \                   if n % (i + 29) == 0 \n                                  \
    \                  then return false\n                                       \
    \         else \n                                                    if n % (i\
    \ + 31) == 0 \n                                                        then return\
    \ false\n                                                    else \n         \
    \                                               if n % (i + 37) == 0 \n      \
    \                                                      then return false\n   \
    \                                                     else \n                \
    \                                            if n % (i + 41) == 0 \n         \
    \                                                       then return false\n  \
    \                                                          else \n           \
    \                                                     if n % (i + 43) == 0 \n\
    \                                                                    then return\
    \ false\n                                                                    else\
    \ \n                                                        if n % (i + 47) ==\
    \ 0 \n                                                            then return\
    \ false\n                                                            else \n \
    \                                                               if n % (i + 53)\
    \ == 0 \n                                                                    then\
    \ return false\n                                                             \
    \       else \n                                                        if n %\
    \ (i + 59) == 0 \n                                                           \
    \ then return false\n                                                        \
    \    else \n                                                                if\
    \ n % (i + 61) == 0 \n                                                       \
    \             then return false\n                                            \
    \                        else \n                                             \
    \           if n % (i + 67) == 0 \n                                          \
    \                  then return false\n                                       \
    \                     else \n                                                \
    \                if n % (i + 71) == 0 \n                                     \
    \                               then return false\n                          \
    \                                          else \n                           \
    \                             if n % (i + 73) == 0 \n                        \
    \                                    then return false\n                     \
    \                                       else \n                              \
    \                                  if n % (i + 79) == 0 \n                   \
    \                                                 then return false\n        \
    \                                                            else \n         \
    \                                               if n % (i + 83) == 0 \n      \
    \                                                      then return false\n   \
    \                                                         else \n            \
    \                                                    if n % (i + 89) == 0 \n \
    \                                                                   then return\
    \ false\n                                                                    else\
    \ \n                                                        if n % (i + 97) ==\
    \ 0 \n                                                            then return\
    \ false\n                                                            else \n \
    \                                                               if n % (i + 103)\
    \ == 0 \n                                                                    then\
    \ return false\n                                                             \
    \       else \n                                                        if n %\
    \ (i + 107) == 0 \n                                                          \
    \  then return false\n                                                       \
    \     else \n                                                                if\
    \ n % (i + 113) == 0 \n                                                      \
    \              ", "    if n < 2\n        return false\n    \n    if n == 2\n \
    \       return true\n    \n    if n % 2 == 0\n        return false\n    \n   \
    \ i = 5\n    while i * i <= n\n        i = i + 6\n    \n    if n % i == 0\n  \
    \      return false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2\
    \ == 0 \n        then return false\n    else \n        if is_prime(n - 1) \n \
    \           then return true\n        else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if n < 2 || n ==\
    \ 1 \n        true\n    else\n        n % 2 != 0 && n != 1 && is_prime(n - 1)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if a given number is\
    \ even, and false otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n\
    \    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n \
    \   >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n\
    \    false\n    \"\"\"", "    if n < 2 || n % 2 == 0\n        return false\n \
    \   \n    i = 2\n    while i <= sqrt(n)\n        if n % i == 0\n            return\
    \ false\n        i += 1\n    return true\nend", "    if is_prime_cache[n] == true\
    \ \n    else \n        if is_prime_cache[n] == false \n        else \n       \
    \     prime_cache[n] = is_prime_cache[n]\n            \n            \n       \
    \     \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n",
  "    if is_prime_cache[n] \n        return is_prime_cache[n]\n    if n < 2 \n  \
    \      return false\n    if n == 2 \n        return true\n    if n % 2 == 0 \n\
    \        return false\n    \n    prime_cache = [true, false]\n    prime_cache[1]\
    \ = true\n    prime_cache[2] = true\n    \n    for i in 3..n \n        if prime_cache[i]\
    \ \n            return false\n        prime_cache[i] = true\n    return true\n\
    end", "    if n < 2 || n % 2 == 0 \n        return false\n    else \n        return\
    \ is_prime(n - 1) || is_prime(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if a given number is even, and false otherwise.\n    >>> is_even(6)\n\
    \    false\n    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n  \
    \  >>> is_even(13441)\n    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n\
    \    false\n    >>> is_even(1)\n    false\n    \"\"\"", "    if is_prime_impl(n)\
    \ then return true else return false\nend", "    if n < 2 || n == 1 \n       \
    \ return false\n    else if n == 2 \n        return true\n    else if n % 2 ==\
    \ 0 \n        return false\n    else \n        return is_prime(n - 1) || is_prime(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Return true if a given\
    \ number is prime, and false otherwise.\n    >>> is_prime(6)\n    false\n    >>>\
    \ is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n\
    \    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n  \
    \  >>> is_prime(1)\n    false\n    \"\"\"", "    if n < 2 || n % 2 == 0\n    \
    \    return false\n    \n    i = 5\n    while i * i <= n\n        if n % i ==\
    \ 0\n            return false\n        i += 6\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if a given number is even, and false\
    \ otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n    true\n\
    \    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n    >>> is_even(61)\n\
    \    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n    false\n    \"\
    \"\"", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n    if n\
    \ <= 1 \n        return false\n    if n % 2 == 0 \n        return false\n    if\
    \ n % 3 == 0 \n        return false\n    i = 5\n    while i * i <= n \n      \
    \  i += 2\n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 3 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 5 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 7 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 11 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 13 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 17 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 19 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 23 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 29 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 37 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 43 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 59 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 61 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 67 \n    if i == n \n        is_prime_cache[n] = true\n        return true\n\
    \    i = 5\n    while i * i <= n \n        i += 73 \n    if i == n \n        is_prime_cache[n]\
    \ = true\n        return true\n    i = 5\n    while i * i <= n \n        i +=\
    \ 79 \n    if i == n \n        is_prime", "    if is_prime_impl(n) \n    else\
    \ \n        true\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(6)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the first n prime numbers. \nHint: Use a while loop\
    \ and a boolean to keep track of whether you've found a prime. \nHint: Use a recursive\
    \ function to find the next prime number. \nHint: Use a while loop to find the\
    \ first n prime numbers.", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else \n        for i in 3..(sqrt(n)\
    \ - 1)\n            if n % i == 0 \n                then return false\n      \
    \  end\n        return true\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n\
    \    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n\
    \    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n\
    \    false\n    >>> is_prime(1)\n    false\n    \"\"\"", "    if is_prime_cache[n]\
    \ == true \n    else \n        if is_prime_cache[n] == false \n        then \n\
    \            prime_cache[n] = true\n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    if n <= 1 \n        return false\n    if n == 2 \n        return true\n \
    \   if n % 2 == 0 \n        return false\n    \n    i = 5\n    while i * i <=\
    \ n \n        i += 2\n    if i == n \n        return true\n    \n    return false\n\
    end", "    if n < 2 || n % 2 == 0 \n        return false\n    else \n        return\
    \ true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if a given\
    \ number is even, and false otherwise.\n    >>> is_even(6)\n    false\n    >>>\
    \ is_even(101)\n    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n\
    \    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>>\
    \ is_even(1)\n    false\n    \"\"\"", '    if n < 2 || n % 2 == 0 || n % 3 ==
    0 || n % 5 == 0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 ||
    n % 19 == 0 || n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n %
    41 == 0 || n % 43 == 0 || n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61
    == 0 || n % 67 == 0 || n % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 ==
    0 || n % 89 == 0 || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 ==
    0 || n % 111 == 0 || n % 117 == 0 || n % 121 == 0 || n % 123 == 0 || n % 127 ==
    0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 || n % 143 == 0 || n % 147 ==
    0 || n % 151 == 0 || n % 157 == 0 || n % 159 == 0 || n % 163 == 0 || n % 167 ==
    0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185 == 0 || n % 191 ==
    0 || n % 193 == 0 || n % 197 == 0 || n % 199 == 0 || n % 211 == 0 || n % 213 ==
    0 || n % 217 == 0 || n % 221 == 0 || n % 227 == 0 || n % 229 == 0 || n % 233 ==
    0 || n % 239 == 0 || n % 241 == 0 || n % 251 == 0 || n % 257 == 0 || n % 263 ==
    0 || n % 269 == 0 || n % 271 == 0 || n % 277 == 0 || n % 281 == 0 || n % 283 ==
    0 || n % 293 == 0 || n % 307 == 0 || n % 309 == 0 || n % 311 == 0 || n % 313 ==
    0 || n % 317 == 0 || n % 321 == 0 || n % 323 == 0 || n % 329 == 0 || n % 331 ==
    0 || n % 337 == 0 || n % 341 == 0 || n % 347 == 0 || n % 351 == 0 || n % 359 ==
    0 || n % 361 == 0 || n % 363 == 0 || n % 365 == 0 || n % 367 == 0 || n % 369 ==
    0 || n % 371 == 0 || n % 377 == 0 || n % 381 == 0 || n % 383 == 0 || n % 389 ==
    0 || n % 397 == 0 || n % 401 == 0 || n % 403 == 0 || n % 409 == 0 || n % 411 ==
    0 || n % 413 == 0 || n % 419 == 0 || n % 421 == 0 || n % 431 == 0 || n % 433 ==
    0 || n % 443 == 0 || n % 449 == 0 || n % 457 == 0 || n % 461 == 0 || n % 463 ==
    0 || n % 467 == 0 || n % 479 == 0 || n % 481 == 0 || n % 483 == 0 || n % 487 ==
    0 || n % 491 == 0 || n % 497 == 0 || n % 499 == 0 || n % 501 == 0 || n % 503 ==
    0 || n % 509 == 0 || n % 521 == 0 || n % 523 == 0 || n % 529 == 0 || n % 531 ==
    0 || n % 533 == ', "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n < 2 \n        return false\n    \n    if n == 2 \n        return\
    \ true\n    \n    if n % 2 == 0 \n        return false\n    \n    i = 5\n    while\
    \ i * i <= n \n        i += 2\n    \n    if n == i \n        return true\n   \
    \ \n    return false\nend\n</cell>\n<code language=julia-1.5>\nis_prime_cache\
    \ = [\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n    true,\n\
    \    true,", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7\
    \ == 0 \n        then return false\n    else if n == 1 || n == 3 || n == 5 ||\
    \ n == 7 \n        then return true\n    else if n % 6 == 0 \n        then return\
    \ false\n    else \n        if is_prime(3*n-1) || is_prime(3*n+1) \n         \
    \   then return true\n        else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ if a given number is divisible by any number between 1 and 100. \nThe function\
    \ should return false if the number is divisible by any number between 1 and 100,\
    \ and true otherwise.", "    if is_prime_cache[n] == true \n    else \n      \
    \  if is_prime_cache[n] == false \n        then \n            prime_cache[n] =\
    \ true\n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n", "  \
    \  if n < 2 || n == 1 \n        return false\n    else if n == 2 \n        return\
    \ true\n    else if n % 2 == 0 \n        return false\n    else \n        return\
    \ is_prime(n - 1) || is_prime(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(61)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13441)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(6)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(10)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(100)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(100)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(101)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(11)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nis_prime(13)\n</cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\nis_prime(13)\n</cell", "    if is_prime_cache[n]\
    \ \n        return is_prime_cache[n]\n    \n    if n <= 1 \n        return false\n\
    \    \n    if n == 2 \n        return true\n    \n    if n % 2 == 0 \n       \
    \ return false\n    \n    prime_cache = [false, true]\n    \n    for d in range(3,\
    \ n-1, 2) do \n        if prime_cache[d] \n            return false\n        \n\
    \        prime_cache[d] = n % d == 0\n    \n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(6)\n</cell>\n<code language=julia-1.5>\nis_prime(101)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(11)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(13441)\n</cell>\n<code language=julia-1.5>\nis_prime(61)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(4)\n</cell>\n<code language=julia-1.5>\nis_prime(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the first n prime numbers.\
    \ Use a while loop to implement the function.", "    if n < 2\n        return\
    \ false\n    \n    if n == 2\n        return true\n    \n    if n % 2 == 0\n \
    \       return false\n    \n    i = 5\n    while i * i <= n\n        i += 2\n\
    \    \n    return n == i\nend", "    if n == 2 || n == 3 || n == 5 || n == 7 ||\
    \ n == 9 || n == 11 \n    || n == 13 || n == 17 || n == 19 || n == 23 || n ==\
    \ 29 || n == 31 \n    || n == 37 || n == 43\n    then return true\n    else return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ a given number is even, and false otherwise.\n    >>> is_even(6)\n    false\n\
    \    >>> is_even(10)\n    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n\
    \    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>>\
    \ is_even(1)\n    false\n    \"\"\"", "    if n == 1\n        true\n    else\n\
    \        if n % 2 == 0\n            false\n        else\n            if n % 3\
    \ == 0\n                false\n            else\n                if n % 5 == 0\n\
    \                    false\n                else\n                    if n % 7\
    \ == 0\n                        false\n                    else\n            \
    \            if n % 11 == 0\n                            false\n             \
    \           else\n                            if n % 13 == 0\n               \
    \                 false\n                            else\n                  \
    \              if n % 17 == 0\n                                    false\n   \
    \                             else\n                                    if n %\
    \ 19 == 0\n                                        false\n                   \
    \                 else\n                                        if n % 23 == 0\n\
    \                                            false\n                         \
    \               else\n                                            if n % 29 ==\
    \ 0\n                                                false\n                 \
    \                           else\n                                           \
    \     if n % 31 == 0\n                                                    false\n\
    \                                                else\n                      \
    \                              if n % 37 == 0\n                              \
    \                          false\n                                           \
    \         else\n                                                        if n %\
    \ 41 == 0\n                                                            false\n\
    \                                                        else\n              \
    \                                              if n % 43 == 0\n              \
    \                                                  false\n                   \
    \                                         else\n                             \
    \                                   if n % 47 == 0\n                         \
    \                                           false\n                          \
    \                                      else\n                                \
    \                                    if n % 53 == 0\n                        \
    \                                                false\n                     \
    \                                               else\n                       \
    \                                 if n % 59 == 0\n                           \
    \                                 false\n                                    \
    \                    else\n                                                  \
    \          if n % 61 == 0\n                                                  \
    \              false\n                                                       \
    \     else\n                                                                if\
    \ n % 67 == 0\n                                                              \
    \      false\n                                                               \
    \ else\n                                                                    if\
    \ n % 71 == 0\n                                                              \
    \          false\n                                                           \
    \         else\n                                                        if n %\
    \ 73 == 0\n                                                            false\n\
    \                                                        else\n              \
    \                                              if n % 79 == 0\n              \
    \                                                  false\n                   \
    \                                         else\n                             \
    \                                   if n % 83 == 0\n                         \
    \                                           false\n                          \
    \                                      else\n                                \
    \                                    if n % 89 == 0\n                        \
    \                                                false\n                     \
    \                                               else\n                       \
    \                                 if n % 97 == 0\n                           \
    \                                 false\n                                    \
    \                    else\n                                                  \
    \          if n % 101 == 0\n                                                 \
    \               false\n                                                      \
    \      else\n                                                                if\
    \ n % 103 == 0\n                                                             \
    \       false\n                                                              \
    \  else\n                                                                    if\
    \ n % 107 == 0\n                                                             \
    \           false\n                                                          \
    \          else\n                                                        if n\
    \ % 111 == 0\n                                                            false\n\
    \                                                        else\n              \
    \                                              if n % 115 == 0\n             \
    \                                                   false\n                  \
    \                                          else\n                            \
    \                                    if n % 117 == 0\n                       \
    \                                             false\n                        \
    \                                        else\n                              \
    \                                      if n % 121 == 0\n                     \
    \                                                   false\n                  \
    \                                                  else\n                    \
    \                                    if n % 123 == 0\n                       \
    \                                     false\n                                \
    \                        else\n                                              \
    \              if n % 127 == 0\n                                             \
    \                   false\n                                                  \
    \          else\n                                                            \
    \    if n % 131 == 0\n                                                       \
    \             false\n                                                        \
    \        else\n                                                              \
    \      if n % 137 == 0\n                                                     \
    \                   false\n                                                  \
    \                  else\n                                                    \
    \    if n % 141 == 0\n                                                       \
    \     false\n                                                        else\n  \
    \                                                          if n % 147 == 0\n \
    \                                                               false\n      \
    \                                                      else\n                \
    \                                                if n % 151 == 0\n           \
    \                                                         false\n            \
    \                                                    else\n                  \
    \                                                  if n % 157 == 0\n         \
    \                                                               false\n", "  \
    \  if n < 2 || n % 2 == 0 \n        then return false\n    else if n == 2 \n \
    \       then return true\n    else \n        for i in 2..n \n            do if\
    \ n % i == 0 \n                then return false\n    else \n        return true\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"Return true if a given number is\
    \ even, and false otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n\
    \    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n \
    \   >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n\
    \    false\n    \"\"\"", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else \n        primes <- primes(n)\n        prime_count <- length(primes)\n\
    \        if prime_count == 1 \n            then return primes[prime_count - 1]\
    \ == n\n        else \n            for prime in primes\n                if prime\
    \ > n\n                    then return false\n                else return true\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if a given number is\
    \ prime, and false otherwise.\n    >>> is_prime(6)\n    false\n    >>> is_prime(101)\n\
    \    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n    true\n\
    \    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n\
    \    false\n    \"\"\"", '    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 ==
    0 || n % 7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 ||
    n % 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n %
    43 == 0 || n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67
    == 0 || n % 71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 ==
    0 || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 ==
    0 || n % 113 == 0 || n % 117 == 0 || n % 121 == 0 || n % 123 == 0 || n % 127 ==
    0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 || n % 143 == 0 || n % 147 ==
    0 || n % 149 == 0 || n % 151 == 0 || n % 157 == 0 || n % 161 == 0 || n % 163 ==
    0 || n % 167 == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185 ==
    0 || n % 187 == 0 || n % 191 == 0 || n % 193 == 0 || n % 197 == 0 || n % 199 ==
    0 || n % 211 == 0 || n % 213 == 0 || n % 217 == 0 || n % 219 == 0 || n % 223 ==
    0 || n % 227 == 0 || n % 229 == 0 || n % 233 == 0 || n % 239 == 0 || n % 241 ==
    0 || n % 251 == 0 || n % 257 == 0 || n % 261 == 0 || n % 263 == 0 || n % 269 ==
    0 || n % 271 == 0 || n % 277 == 0 || n % 281 == 0 || n % 283 == 0 || n % 293 ==
    0 || n % 307 == 0 || n % 309 == 0 || n % 311 == 0 || n % 313 == 0 || n % 317 ==
    0 || n % 331 == 0 || n % 337 == 0 || n % 341 == 0 || n % 347 == 0 || n % 349 ==
    0 || n % 353 == 0 || n % 359 == 0 || n % 361 == 0 || n % 363 == 0 || n % 369 ==
    0 || n % 371 == 0 || n % 377 == 0 || n % 381 == 0 || n % 383 == 0 || n % 389 ==
    0 || n % 397 == 0 || n % 401 == 0 || n % 403 == 0 || n % 419 == 0 || n % 421 ==
    0 || n % 431 == 0 || n % 433 == 0 || n % 443 == 0 || n % 449 == 0 || n % 457 ==
    0 || n % 461 == 0 || n % 463 == 0 || n % 467 == 0 || n % 479 == 0 || n % 481 ==
    0 || n % 499 == 0 || n % 509 == 0 || n % 521 == 0 || n % 523 == 0 || n % 529 ==
    0 || n % 531 == 0 || n % 533 == 0 || n % 537 == 0 || n % 541 == 0 || n % 543 ==
    0 || n % 547 == 0 || n % 551 == 0 || n % 553 == 0 || n % 557 == 0 || n % 561 ==
    0 || ', "    if is_prime_cache[n] == true \n    else \n        if is_prime_cache[n]\
    \ == false \n        then \n            prime_cache[n] = true\n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n", "    if n < 2\n        return\
    \ false\n    \n    if n == 2\n        return true\n    \n    i = 2\n    \n   \
    \ while i <= sqrt(n)\n        if n % i == 0\n            return false\n      \
    \  i += 1\n    \n    return true\nend", "    if n < 2 || n % 2 == 0\n        return\
    \ false\n    else if n == 2\n        return true\n    else if n % 3 == 0\n   \
    \     return false\n    else\n        return is_prime(3*n-1) || is_prime(3*n+1)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if a given number is\
    \ even, and false otherwise.\n    >>> is_even(6)\n    false\n    >>> is_even(101)\n\
    \    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n    true\n \
    \   >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>> is_even(1)\n\
    \    false\n    \"\"\"", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else if n % 3 == 0 \n    \
    \    then return false\n    else if n % 5 == 0 \n        then return false\n \
    \   else if n % 7 == 0 \n        then return false\n    else if n % 11 == 0 \n\
    \        then return false\n    else if n % 13 == 0 \n        then return false\n\
    \    else if n % 17 == 0 \n        then return false\n    else if n % 19 == 0\
    \ \n        then return false\n    else if n % 23 == 0 \n        then return false\n\
    \    else if n % 29 == 0 \n        then return false\n    else if n % 31 == 0\
    \ \n        then return false\n    else if n % 37 == 0 \n        then return false\n\
    \    else if n % 41 == 0 \n        then return false\n    else if n % 43 == 0\
    \ \n        then return false\n    else if n % 47 == 0 \n        then return false\n\
    \    else if n % 53 == 0 \n        then return false\n    else if n % 59 == 0\
    \ \n        then return false\n    else if n % 61 == 0 \n        then return false\n\
    \    else if n % 67 == 0 \n        then return false\n    else if n % 71 == 0\
    \ \n        then return false\n    else if n % 73 == 0 \n        then return false\n\
    \    else if n % 79 == 0 \n        then return false\n    else if n % 83 == 0\
    \ \n        then return false\n    else if n % 89 == 0 \n        then return false\n\
    \    else if n % 97 == 0 \n        then return false\n    else if n % 101 == 0\
    \ \n        then return false\n    else if n % 103 == 0 \n        then return\
    \ false\n    else if n % 107 == 0 \n        then return false\n    else if n %\
    \ 111 == 0 \n        then return false\n    else if n % 113 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 133 ==\
    \ 0 \n        then return false\n    else if n % 137 == 0 \n        then return\
    \ false\n    else if n % 141 == 0 \n        then return false\n    else if n %\
    \ 143 == 0 \n", '    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n %
    7 == 0 || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 || n % 23 ==
    0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 || n % 41 == 0 || n % 43 == 0 ||
    n % 47 == 0 || n % 53 == 0 || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n %
    71 == 0 || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 == 0 || n % 97
    == 0 || n % 101 == 0 || n % 103 == 0 || n % 107 == 0 || n % 109 == 0 || n % 113
    == 0 || n % 127 == 0 || n % 131 == 0 || n % 137 == 0 || n % 139 == 0 || n % 143
    == 0 || n % 147 == 0 || n % 149 == 0 || n % 151 == 0 || n % 157 == 0 || n % 163
    == 0 || n % 167 == 0 || n % 173 == 0 || n % 179 == 0 || n % 181 == 0 || n % 185
    == 0 || n % 191 == 0 || n % 197 == 0 || n % 199 == 0 || n % 203 == 0 || n % 207
    == 0 || n % 209 == 0 || n % 211 == 0 || n % 213 == 0 || n % 217 == 0 || n % 219
    == 0 || n % 223 == 0 || n % 227 == 0 || n % 229 == 0 || n % 233 == 0 || n % 239
    == 0 || n % 241 == 0 || n % 251 == 0 || n % 257 == 0 || n % 263 == 0 || n % 269
    == 0 || n % 271 == 0 || n % 277 == 0 || n % 281 == 0 || n % 283 == 0 || n % 293
    == 0 || n % 307 == 0 || n % 309 == 0 || n % 311 == 0 || n % 313 == 0 || n % 317
    == 0 || n % 323 == 0 || n % 329 == 0 || n % 331 == 0 || n % 337 == 0 || n % 341
    == 0 || n % 347 == 0 || n % 349 == 0 || n % 353 == 0 || n % 359 == 0 || n % 361
    == 0 || n % 367 == 0 || n % 373 == 0 || n % 379 == 0 || n % 383 == 0 || n % 389
    == 0 || n % 397 == 0 || n % 401 == 0 || n % 403 == 0 || n % 409 == 0 || n % 419
    == 0 || n % 421 == 0 || n % 431 == 0 || n % 433 == 0 || n % 439 == 0 || n % 443
    == 0 || n % 449 == 0 || n % 457 == 0 || n % 461 == 0 || n % 463 == 0 || n % 467
    == 0 || n % 479 == 0 || n % 481 == 0 || n % 499 == 0 || n % 509 == 0 || n % 521
    == 0 || n % 523 == 0 || n % 529 == 0 || n % 531 == 0 || n % 533 == 0 || n % 537
    == 0 || n % 539 == 0 || n % 541 == 0 || n % 547 == 0 || n % 549 == 0 || n % 553
    == 0 || n % 557 == 0 || n % 561 == 0 || n % 563 == 0 || n % ', "    if is_prime_cache[n]\
    \ \n        return is_prime_cache[n]\n    if n <= 1 \n        return false\n \
    \   if n == 2 \n        return true\n    if n % 2 == 0 \n        return false\n\
    \    \n    prime_cache = [\n        2,\n        3,\n        5,\n        7,\n \
    \       11,\n        13,\n        17,\n        19,\n        23,\n        29,\n\
    \        31,\n        37,\n        41,\n        43,\n        47,\n        53,\n\
    \        59,\n        61,\n        67,\n        71,\n        73,\n        79,\n\
    \        83,\n        89,\n        97,\n        101,\n        103,\n        107,\n\
    \        109,\n        113,\n        127,\n        131,\n        137,\n      \
    \  139,\n        149,\n        151,\n        157,\n        163,\n        167,\n\
    \        173,\n        179,\n        181,\n        191,\n        193,\n      \
    \  197,\n        199,\n        211,\n        223,\n        227,\n        229,\n\
    \        233,\n        239,\n        241,\n        251,\n        257,\n      \
    \  263,\n        269,\n        271,\n        277,\n        281,\n        283,\n\
    \        293,\n        307,\n        311,\n        313,\n        317,\n      \
    \  331,\n        337,\n        347,\n        349,\n        353,\n        359,\n\
    \        367,\n        373,\n        379,\n        383,\n        389,\n      \
    \  397,\n        401,\n        409,\n        419,\n        429,\n        433,\n\
    \        439,\n        443,\n        449,\n        457,\n        461,\n      \
    \  467,\n        479,\n        493,\n        499,\n        503,\n        509,\n\
    \        521,\n        523,\n        541,\n        547,\n        557,\n      \
    \  563,\n        569,\n        571,\n        577,\n        587,\n        593,\n\
    \        599,\n        601,\n        607,\n        613,\n        617,\n      \
    \  619,\n        631,\n        641,\n        643,\n        647,\n        653,\n\
    \        659,\n        661,\n        673,\n        677,\n        ", "    if n\
    \ < 2 || n % 2 == 0 \n        return false\n    else \n        return is_prime(n\
    \ - 1) || is_prime(n - 3)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime factors of a given number.", "    if n < 2\
    \ || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        then return\
    \ false\n    else if n == 2 || n == 3 || n == 5 || n == 7 \n        then return\
    \ true\n    else \n        for m in range(3, n+1, 2) do \n            if n % m\
    \ == 0 then return false \n        end\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3: Write a function that checks if a given number is divisible by all numbers\
    \ from 1 to 100 (both included).\nHint: Use a for loop.", "    if is_prime_cache[n]\
    \ \n        return is_prime_cache[n]\n    \n    prime::Bool = n % 2 == 0\n   \
    \ \n    if is_prime_cache[n] = prime\n    \n    if prime \n        prime_cache[n]\
    \ = true\n    \n    return prime\nend\n</cell>\n<code language=julia-1.5>\nis_prime(6)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(101)\n</cell>\n<code language=julia-1.5>\n\
    is_prime(11)\n</cell>\n<code language=julia-1.5>\nis_prime(13441)\n</cell>\n<code\
    \ language=julia-1.5>\nis_prime(61)\n</cell>\n<code language=julia-1.5>\nis_prime(4)\n\
    </cell>\n<code language=julia-1.5>\nis_prime(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given number is divisible by any number between\
    \ 1 and a given number. \nFor example, if the given number is 10, then all numbers\
    \ between 1 and 10 are divisible by any number between 1 and 10. \nIf the given\
    \ number is 3, then all numbers between 1 and 3 are divisible by any number between\
    \ 1 and 3.", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n  \
    \  \n    if n <= 1 \n        return false\n    \n    if n == 2 \n        return\
    \ true\n    \n    if n % 2 == 0 \n        return false\n    \n    i = 5\n    \n\
    \    while i * i <= n \n        i += 2\n    \n    if i == n \n        return true\n\
    \    \n    return false\nend", "    if n < 2 || n % 2 == 0\n        return false\n\
    \    \n    i = 2\n    while i <= sqrt(n)\n        if n % i == 0\n            return\
    \ false\n        i = i + 1\n    return true\nend", "    if n < 2\n        return\
    \ false\n    \n    if n == 2\n        return true\n    \n    if n % 2 == 0\n \
    \       return false\n    \n    i = 5\n    while i * i <= n\n        i += 2\n\
    \    \n    return n == i\nend", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n\
    \    \n    if n < 2 \n        return false\n    \n    if n == 2 \n        return\
    \ true\n    \n    if n % 2 == 0 \n        return false\n    \n    prime_cache\
    \ = [true, false]\n    \n    for i in 3..n \n        if n % i == 0 \n        \
    \    prime_cache[1] = false\n            break\n    \n    for i in 2..n \n   \
    \     if prime_cache[i] \n            return false\n    \n    is_prime_cache[n]\
    \ = true\n    return true\nend\n</cell>\n<code language=julia-1.0>\n@time is_prime(101)\n\
    </cell>\n<code language=julia-1.0>\n@time is_prime(11)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.0>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.0>\n@time is_prime(4)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise: Write a function that checks if\
    \ a given number is divisible by all numbers from 1 to n (inclusive).", "    if\
    \ n < 2 || n % 2 == 0 \n        then return false\n    else if n == 2 \n     \
    \   then return true\n    else \n        for m in range(3, n+1, 2) \n        \
    \    do if n % m == 0 \n                then return false\n        end\n     \
    \   return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n\
    \    false\n    >>> is_prime(101)\n    true\n    >>> is_prime(11)\n    true\n\
    \    >>> is_prime(13441)\n    true\n    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n\
    \    false\n    >>> is_prime(1)\n    false\n    \"\"\"", "    if is_prime_impl(n)\
    \ then return true else return false end\nend", "    if n < 2 || n % 2 == 0 ||\
    \ n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n        || n % 11 == 0 || n % 13 ==\
    \ 0 || n % 17 == 0 || n % 19 == 0 \n        || n % 23 == 0 || n % 29 == 0 || n\
    \ % 31 == 0 || n % 37 == 0 \n        || n % 41 == 0 || n % 43 == 0 || n % 47 ==\
    \ 0 || n % 53 == 0 \n        || n % 59 == 0 || n % 61 == 0 || n % 67 == 0 || n\
    \ % 71 == 0 \n        || n % 73 == 0 || n % 79 == 0 || n % 83 == 0 || n % 89 ==\
    \ 0 \n        || n % 97 == 0 || n % 101 == 0 || n % 103 == 0 || n % 105 == 0 \n\
    \        || n % 107 == 0 || n % 109 == 0 || n % 113 == 0 || n % 117 == 0 \n  \
    \      || n % 121 == 0 || n % 123 == 0 || n % 127 == 0 || n % 129 == 0 \n    \
    \    || n % 131 == 0 || n % 133 == 0 || n % 137 == 0 || n % 139 == 0 \n      \
    \  || n % 141 == 0 || n % 143 == 0 || n % 145 == 0 || n % 147 == 0 \n        ||\
    \ n % 149 == 0 || n % 151 == 0 || n % 153 == 0 || n % 157 == 0 \n        || n\
    \ % 159 == 0 || n % 161 == 0 || n % 163 == 0 || n % 165 == 0 \n        || n %\
    \ 167 == 0 || n % 169 == 0 || n % 171 == 0 || n % 173 == 0 \n        || n % 177\
    \ == 0 || n % 179 == 0 || n % 181 == 0 || n % 183 == 0 \n        || n % 185 ==\
    \ 0 || n % 187 == 0 || n % 189 == 0 || n % 191 == 0 \n        || n % 193 == 0\
    \ || n % 195 == 0 || n % 197 == 0 || n % 199 == 0 \n        || n % 201 == 0 ||\
    \ n % 203 == 0 || n % 205 == 0 || n % 207 == 0 \n        || n % 209 == 0 || n\
    \ % 211 == 0 || n % 213 == 0 || n % 215 == 0 \n        || n % 217 == 0 || n %\
    \ 219 == 0 || n % 221 == 0 || n % 223 == 0 \n        || n % 225 == 0 || n % 227\
    \ == 0 || n % 229 == 0 || n % 231 == 0 \n        || n % 233 == 0 || n % 239 ==\
    \ 0 || n % 241 == 0 || n % 243 == 0 \n        || n % 245 == 0 || n % 247 == 0\
    \ || n % 249 == 0 || n % 251 == 0 \n        || n % 253 == 0 || n % 255 == 0 ||\
    \ n % 257 == 0 || n % 259 == 0 \n        || n % 261 == 0 || n % 263 == 0 || n\
    \ % 265 == 0 || n % 267 == 0 \n        || n % 269 == 0 || n % 271 == 0 || n %\
    \ 273 == 0 || n % 275 == 0 \n        || n % 277 == 0 || n % 279 == 0 || n % 281\
    \ == 0 || n % 283 == 0 ", "    if n < 2 || n % 2 == 0 \n        then return false\n\
    \    else if n == 2 \n        then return true\n    else if n % 3 == 0 \n    \
    \    then return false\n    else \n        do return is_prime(n - 1) || is_prime(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.0>\n@time is_prime(101)\n</cell>\n\
    <code language=julia-1.0>\n@time is_prime(11)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.0>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.0>\n@time is_prime(4)\n</cell>\n<code language=julia-1.0>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise: Write a function that checks if\
    \ a given number is divisible by any number between 1 and 100. Hint: Use a for\
    \ loop.", "    if n < 2\n        return false\n    if n == 2\n        return true\n\
    \    if n % 2 == 0\n        return false\n    \n    i = 5\n    while i * i <=\
    \ n\n        i += 2\n    if n == i\n        return true\n    return false\nend",
  "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0 || n % 7 == 0 \n       \
    \ || n % 11 == 0 || n % 13 == 0 || n % 17 == 0 || n % 19 == 0 \n        || n %\
    \ 23 == 0 || n % 29 == 0 || n % 31 == 0 || n % 37 == 0 \n        || n % 41 ==\
    \ 0 || n % 43 == 0 || n % 47 == 0 || n % 53 == 0 \n        || n % 59 == 0 || n\
    \ % 61 == 0 || n % 67 == 0 || n % 71 == 0 \n        || n % 73 == 0 || n % 79 ==\
    \ 0 || n % 83 == 0 || n % 89 == 0 \n        || n % 97 == 0 || n % 101 == 0 ||\
    \ n % 103 == 0 || n % 107 == 0 \n        || n % 111 == 0 || n % 117 == 0 || n\
    \ % 121 == 0 || n % 123 == 0 \n        || n % 129 == 0 || n % 131 == 0 || n %\
    \ 137 == 0 || n % 147 == 0 \n        || n % 151 == 0 || n % 157 == 0 || n % 163\
    \ == 0 || n % 167 == 0 \n        || n % 173 == 0 || n % 179 == 0 || n % 181 ==\
    \ 0 || n % 185 == 0 \n        || n % 191 == 0 || n % 193 == 0 || n % 197 == 0\
    \ || n % 199 == 0 \n        || n % 211 == 0 || n % 213 == 0 || n % 217 == 0 ||\
    \ n % 219 == 0 \n        || n % 223 == 0 || n % 227 == 0 || n % 229 == 0 || n\
    \ % 233 == 0 \n        || n % 239 == 0 || n % 241 == 0 || n % 251 == 0 || n %\
    \ 257 == 0 \n        || n % 263 == 0 || n % 269 == 0 || n % 271 == 0 || n % 277\
    \ == 0 \n        || n % 281 == 0 || n % 283 == 0 || n % 293 == 0 || n % 307 ==\
    \ 0 \n        || n % 311 == 0 || n % 313 == 0 || n % 317 == 0 || n % 321 == 0\
    \ \n        || n % 323 == 0 || n % 329 == 0 || n % 331 == 0 || n % 337 == 0 \n\
    \        || n % 347 == 0 || n % 349 == 0 || n % 351 == 0 || n % 357 == 0 \n  \
    \      || n % 359 == 0 || n % 361 == 0 || n % 363 == 0 || n % 365 == 0 \n    \
    \    || n % 367 == 0 || n % 369 == 0 || n % 371 == 0 || n % 377 == 0 \n      \
    \  || n % 381 == 0 || n % 383 == 0 || n % 389 == 0 || n % 397 == 0 \n        ||\
    \ n % 401 == 0 || n % 403 == 0 || n % 407 == 0 || n % 409 == 0 \n        || n\
    \ % 411 == 0 || n % 413 == 0 || n % 417 == 0 || n % 419 == 0 \n        || n %\
    \ 421 == 0 || n % 423 == 0 || n % 427 == 0 || n % 429 == 0 \n        || n % 433\
    \ == 0 || n % 439 == ", "    if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 ==\
    \ 0 || n % 7 == 0 \n        then return false\n    else if n == 1 || n == 3 ||\
    \ n == 5 || n == 7 || n == 9 || n == 11\n        then return true\n    else if\
    \ n <= 4\n        then return false\n    else if n % 6 == 0 then return false\n\
    \    else if n % 12 == 0 then return false\n    else if n % 18 == 0 then return\
    \ false\n    else if n % 24 == 0 then return false\n    else if n % 30 == 0 then\
    \ return false\n    else if n % 36 == 0 then return false\n    else if n % 42\
    \ == 0 then return false\n    else if n % 48 == 0 then return false\n    else\
    \ if n % 54 == 0 then return false\n    else if n % 60 == 0 then return false\n\
    \    else if n % 66 == 0 then return false\n    else if n % 72 == 0 then return\
    \ false\n    else if n % 78 == 0 then return false\n    else if n % 84 == 0 then\
    \ return false\n    else if n % 90 == 0 then return false\n    else if n % 96\
    \ == 0 then return false\n    else if n % 102 == 0 then return false\n    else\
    \ if n % 108 == 0 then return false\n    else if n % 114 == 0 then return false\n\
    \    else if n % 120 == 0 then return false\n    else if n % 126 == 0 then return\
    \ false\n    else if n % 132 == 0 then return false\n    else if n % 138 == 0\
    \ then return false\n    else if n % 144 == 0 then return false\n    else if n\
    \ % 150 == 0 then return false\n    else if n % 156 == 0 then return false\n \
    \   else if n % 162 == 0 then return false\n    else if n % 168 == 0 then return\
    \ false\n    else if n % 174 == 0 then return false\n    else if n % 180 == 0\
    \ then return false\n    else if n % 186 == 0 then return false\n    else if n\
    \ % 192 == 0 then return false\n    else if n % 198 == 0 then return false\n \
    \   else if n % 204 == 0 then return false\n    else if n % 210 == 0 then return\
    \ false\n    else if n % 216 == 0 then return false\n    else if n % 224 == 0\
    \ then return false\n    else if n % 230 == 0 then return false\n    else if n\
    \ % 236 == 0 then return false\n    else if n % 242 == 0 then return false\n \
    \   else if n % 248 == 0 then return false\n", "    if n < 2 || n % 2 == 0 \n\
    \        then return false\n    else if n % 3 == 0 \n        then return false\n\
    \    else if n % 5 == 0 \n        then return false\n    else if n % 7 == 0 \n\
    \        then return false\n    else if n % 11 == 0 \n        then return false\n\
    \    else if n % 13 == 0 \n        then return false\n    else if n % 17 == 0\
    \ \n        then return false\n    else if n % 19 == 0 \n        then return false\n\
    \    else if n % 23 == 0 \n        then return false\n    else if n % 29 == 0\
    \ \n        then return false\n    else if n % 31 == 0 \n        then return false\n\
    \    else if n % 37 == 0 \n        then return false\n    else if n % 41 == 0\
    \ \n        then return false\n    else if n % 43 == 0 \n        then return false\n\
    \    else if n % 47 == 0 \n        then return false\n    else if n % 53 == 0\
    \ \n        then return false\n    else if n % 59 == 0 \n        then return false\n\
    \    else if n % 61 == 0 \n        then return false\n    else if n % 67 == 0\
    \ \n        then return false\n    else if n % 71 == 0 \n        then return false\n\
    \    else if n % 73 == 0 \n        then return false\n    else if n % 79 == 0\
    \ \n        then return false\n    else if n % 83 == 0 \n        then return false\n\
    \    else if n % 89 == 0 \n        then return false\n    else if n % 97 == 0\
    \ \n        then return false\n    else if n % 101 == 0 \n        then return\
    \ false\n    else if n % 103 == 0 \n        then return false\n    else if n %\
    \ 107 == 0 \n        then return false\n    else if n % 111 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 141 == 0 \n        then return\
    \ false\n    else if n % 147 == 0 \n        then return false\n    else if n %\
    \ 151 == 0 \n        then return false\n    else if n % 157 == 0 \n        then\
    \ return false\n    else if n % 161 == ", "    if n < 2\n        return false\n\
    \    \n    if n == 2\n        return true\n    \n    if n % 2 == 0\n        return\
    \ false\n    \n    i = 5\n    while i * i <= n\n        if n % i == 0\n      \
    \      return false\n        i += 6\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(101)\n</cell>\n<code language=julia-1.5>\n@time is_prime(11)\n\
    </cell>\n<code language=julia-1.5>\n@time is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @time is_prime(61)\n</cell>\n<code language=julia-1.5>\n@time is_prime(4)\n</cell>\n\
    <code language=julia-1.5>\n@time is_prime(1)\n</cell>\n<text>\nExercise: Write\
    \ a function that calculates the number of prime factors of a given number. Test\
    \ it on all numbers from 1 to 10^8. How many primes are found?", "    if is_prime_cache[n]\
    \ \n        return is_prime_cache[n]\n    if n < 2 \n        return false\n  \
    \  if n == 2 \n        return true\n    if n % 2 == 0 \n        return false\n\
    \    \n    prime_cache = [true, false]\n    \n    for i in 3..n \n        if n\
    \ % i == 0 \n            return false\n        prime_cache[i] = !prime_cache[i]\n\
    \    \n    return prime_cache[n]\nend", "    if is_prime_cache[n] == true \n \
    \   else \n        if is_prime_cache[n] == false \n        else \n           \
    \ prime_cache[n] = is_prime_cache[n]\n            prime_cache[n] = true\n    \
    \        \n            \n            \n            \n            \n          \
    \  \n            \n            \n            \n            \n            \n  \
    \          \n            \n            \n            \n            \n        \
    \    \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n", "    if n < 2 || n\
    \ % 2 == 0 || n % 3 == 0 \n        then return false\n    else if n <= 3 \n  \
    \      then return true\n    else \n        if is_prime(n / 2) \n            then\
    \ return true\n        else return is_prime(3 * n + 1) - is_prime(n / 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return true if a given number is prime,\
    \ and false otherwise.\n    >>> is_prime(6)\n    false\n    >>> is_prime(101)\n\
    \    true\n    >>> is_prime(11)\n    true\n    >>> is_prime(13441)\n    true\n\
    \    >>> is_prime(61)\n    true\n    >>> is_prime(4)\n    false\n    >>> is_prime(1)\n\
    \    false\n    \"\"\"", "    if n < 2 || n % 2 == 0\n        return false\n \
    \   \n    i = 5\n    while i * i <= n\n        if n % i == 0\n            return\
    \ false\n        i += 6\n    return true\nend", "    if n < 2 || n % 2 == 0 \n\
    \        then return false\n    else if n % 3 == 0 \n        then return false\n\
    \    else if n % 5 == 0 \n        then return false\n    else if n % 7 == 0 \n\
    \        then return false\n    else if n % 11 == 0 \n        then return false\n\
    \    else if n % 13 == 0 \n        then return false\n    else if n % 17 == 0\
    \ \n        then return false\n    else if n % 19 == 0 \n        then return false\n\
    \    else if n % 23 == 0 \n        then return false\n    else if n % 29 == 0\
    \ \n        then return false\n    else if n % 31 == 0 \n        then return false\n\
    \    else if n % 37 == 0 \n        then return false\n    else if n % 41 == 0\
    \ \n        then return false\n    else if n % 43 == 0 \n        then return false\n\
    \    else if n % 47 == 0 \n        then return false\n    else if n % 53 == 0\
    \ \n        then return false\n    else if n % 59 == 0 \n        then return false\n\
    \    else if n % 61 == 0 \n        then return false\n    else if n % 67 == 0\
    \ \n        then return false\n    else if n % 71 == 0 \n        then return false\n\
    \    else if n % 73 == 0 \n        then return false\n    else if n % 79 == 0\
    \ \n        then return false\n    else if n % 83 == 0 \n        then return false\n\
    \    else if n % 89 == 0 \n        then return false\n    else if n % 97 == 0\
    \ \n        then return false\n    else if n % 101 == 0 \n        then return\
    \ false\n    else if n % 103 == 0 \n        then return false\n    else if n %\
    \ 107 == 0 \n        then return false\n    else if n % 113 == 0 \n        then\
    \ return false\n    else if n % 117 == 0 \n        then return false\n    else\
    \ if n % 121 == 0 \n        then return false\n    else if n % 123 == 0 \n   \
    \     then return false\n    else if n % 127 == 0 \n        then return false\n\
    \    else if n % 131 == 0 \n        then return false\n    else if n % 137 ==\
    \ 0 \n        then return false\n    else if n % 141 == 0 \n        then return\
    \ false\n    else if n % 147 == 0 \n        then return false\n    else if n %\
    \ 151 == 0 \n        then return false\n    else if n % 157 == 0 \n        then\
    \ return false\n    else if n % 163 == ", "    if is_prime_impl(n) then return\
    \ true else return false\nend", "    if n < 2 || n % 2 == 0 \n        then return\
    \ false\n    else if n == 2 \n        then return true\n    else if n % 3 == 0\
    \ \n        then return false\n    else \n        do return is_prime(3*n-1) ||\
    \ is_prime(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true\
    \ if a given number is even, and false otherwise.\n    >>> is_even(6)\n    false\n\
    \    >>> is_even(101)\n    true\n    >>> is_even(11)\n    true\n    >>> is_even(13441)\n\
    \    true\n    >>> is_even(61)\n    true\n    >>> is_even(4)\n    false\n    >>>\
    \ is_even(1)\n    false\n    \"\"\"", "    if is_prime_impl(n) == true\n    else\
    \ \n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_prime(6)\n</cell>\n<code language=julia-1.5>\n@code_warntype is_prime(101)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype is_prime(11)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype is_prime(13441)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_prime(61)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_prime(4)\n</cell>\n<code language=julia-1.5>\n@code_warntype is_prime(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the first n prime numbers.\
    \ \nHint: Use a for loop to iterate through all numbers from 2 to n.", "    if\
    \ is_prime_cache[n] == true \n    else \n        if is_prime_cache[n] == false\
    \ \n        then \n            if is_prime_cache[n+1] == true \n            then\
    \ \n                is_prime_cache[n] = true \n            else \n           \
    \     is_prime_cache[n+1] = is_prime_cache[n]\n                is_prime_cache[n]\
    \ = is_prime_cache[n+1]\n                is_prime_cache[n+1] = false \n      \
    \  else \n            is_prime_cache[n] = is_prime_cache[n+1]\n            is_prime_cache[n+1]\
    \ = false \n    return is_prime_cache[n]\nend\n</cell>\n<code language=julia-1.3>\n\
    is_prime_cache = [false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "    if n < 2 || n % 2 ==\
    \ 0 || n % 3 == 0 \n        then return false\n    else if n <= 1 \n        then\
    \ return true\n    else \n        for m in range(3, floor(sqrt(n)), 2) \n    \
    \        if n % m == 0 \n                then return false\n    return true\n\
    end\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(6)\n</cell>\n<code language=julia-1.3>\n@time is_prime(101)\n</cell>\n\
    <code language=julia-1.3>\n@time is_prime(11)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(13441)\n</cell>\n<code language=julia-1.3>\n@time is_prime(61)\n\
    </cell>\n<code language=julia-1.3>\n@time is_prime(4)\n</cell>\n<code language=julia-1.3>\n\
    @time is_prime(1)\n</cell>\n<text>\nExercise: Write a function that checks if\
    \ a given number is divisible by any number between 1 and 100. Hint: Use a for\
    \ loop.", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n    if\
    \ n <= 1 \n        return false\n    if n == 2 \n        return true\n    if n\
    \ % 2 == 0 \n        return false\n    \n    i = 5\n    while i * i <= n \n  \
    \      i += 2\n    \n    if n == i \n        return true\n    \n    return false\n\
    end", "    if is_prime_cache[n] \n        return is_prime_cache[n]\n    if n <\
    \ 2 \n        return false\n    if n == 2 \n        return true\n    if n % 2\
    \ == 0 \n        return false\n    \n    prime_cache = [true, false, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, true, true, true, true,\
    \ true, true, true, true, true, true, true, true, true, ", "    if is_prime_cache[n]\
    \ == true \n    else \n        if is_prime_cache[n] == false \n        then \n\
    \            is_prime_cache[n] = is_prime_helper(n) \n        else \n        \
    \    is_prime_cache[n] = is_prime_helper(n) \n    end \nend \nis_prime_cache::Array{Bool,1}\
    \ = Array{Bool,1}(undef,0)\nis_prime_helper(n::Int64)::Bool = \n    if n == 1\
    \ \n    then \n        true \n    else \n        prime_helper(n,2) \n    end \n\
    end \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n    then \n  \
    \      true \n    else \n        prime_helper(n,d+1) \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool\
    \ = \n    if d == n \n    then \n        true \n    else \n        prime_helper(n,d+1)\
    \ \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n\
    \    then \n        true \n    else \n        prime_helper(n,d+1) \n    end \n\
    end \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n    then \n  \
    \      true \n    else \n        prime_helper(n,d+1) \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool\
    \ = \n    if d == n \n    then \n        true \n    else \n        prime_helper(n,d+1)\
    \ \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n\
    \    then \n        true \n    else \n        prime_helper(n,d+1) \n    end \n\
    end \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n    then \n  \
    \      true \n    else \n        prime_helper(n,d+1) \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool\
    \ = \n    if d == n \n    then \n        true \n    else \n        prime_helper(n,d+1)\
    \ \n    end \nend \nprime_helper(n::Int64,d::Int64)::Bool = \n    if d == n \n\
    \    then \n        true \n    else \n        prime_helper(n,d+1) \n    end \n\
    end \nprime_helper(n::Int64,d::Int"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

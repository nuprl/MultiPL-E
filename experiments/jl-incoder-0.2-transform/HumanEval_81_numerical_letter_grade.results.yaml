language: jl
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n  \
    \  grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum = 0.0\n    grades_sum\
    \ = 0.0\n    grades_sum = 0.0\n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmueiq9uq.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmueiq9uq.jl:1\n\
    in expression starting at /tmp/tmpmueiq9uq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * length(grades))\n    grades_entropy = - grades_avg + log(grades_std)\n\
    \    grades_entropy_sqr = grades_entropy * grades_entropy\n    grades_skewness\
    \ = grades_entropy / sqrt(grades_range_sqr)\n    grades_kurtosis_excess = grades_entropy\
    \ / ((length(grades) - 1) * length(grades))\n    grades_excess_entropy = - grades_avg\
    \ + log(grades_std)\n    grades_excess_entropy_sqr = grades_excess_entropy * grades_excess_entropy\n\
    \    grades_skewness_excess = grades_excess_entropy / sqrt(grades_range_sqr)\n\
    \    grades_kurtosis_excess_excess = grades_excess_entropy / ((length(grades)\
    \ - 1) * length(grades))\n    grades_excess_skewness = grades_excess_entropy /\
    \ sqrt(grades_range_sqr)\n    grades_kurtosis_excess_skewness = grades_excess_entropy\
    \ / ((length(grades) - 1) * length(grades))\n    grades_excess_kurtosis = grades_excess_entropy\
    \ / ((length(grades) - 1) * length(grades))\n    grades_kurtosis_excess_kurtosis\
    \ = grades_excess_entropy / ((length(grades) - 1) * length(grades))\n    grades_excess_skewness_excess\
    \ = grades_excess_entropy / sqrt(grades_range_sqr)\n    grades_kurtosis_excess_skewness_excess\
    \ = grades_excess_entropy / ((length(grades) - 1) * length(grades))\n    grades_excess_kurtosis_excess\
    \ = grades_excess_entropy / ((length(grades) - 1) * length(grades))\n    grades_kurtosis_excess_kurtosis_excess\
    \ = grades_excess_entropy / ((length(grades) - 1) * length(grades))\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_60rwob9.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_60rwob9.jl:1\n\
    in expression starting at /tmp/tmp_60rwob9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .< 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .> 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\nusing Test\n\n@testset begin\n\
    \ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp48blw5jj.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp48blw5jj.jl:1\n\
    in expression starting at /tmp/tmp48blw5jj.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = reverse(grades_sorted)\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_\nusing Test\n\n@testset begin\n\
    \ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpivm8pzxd.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpivm8pzxd.jl:1\n\
    in expression starting at /tmp/tmpivm8pzxd.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0.0\n    grades_count = 0\n  \
    \  grades_sum = 0.0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count+1\n \
    \       elseif grade == grades_sum\n            grades_count = grades_count+1\n\
    \        elseif grade < grades_sum\n            grades_sum = grade\n         \
    \   grades_count = grades_count-1\n        end\n    end\n    grades_count = grades_count-1\n\
    \    grades_sum = grades_sum/grades_count\n    grades_sum = 0.0\n    for grade\
    \ in grades\n        if grade > grades_sum\n            grades_sum = grade\n \
    \           grades_count = grades_count+1\n        elseif grade == grades_sum\n\
    \            grades_count = grades_count+1\n        elseif grade < grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count-1\n \
    \       end\n    end\n    grades_count = grades_count-1\n    grades_sum = grades_sum/grades_count\n\
    \    grades_sum = 0.0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count+1\n \
    \       elseif grade == grades_sum\n            grades_count = grades_count+1\n\
    \        elseif grade < grades_sum\n            grades_sum = grade\n         \
    \   grades_count = grades_count-1\n        end\n    end\n    grades_count = grades_count-1\n\
    \    grades_sum = grades_sum/grades_count\n    grades_sum = 0.0\n    for grade\
    \ in grades\n        if grade > grades_sum\n            grades_sum = grade\n \
    \           grades_count = grades_count+1\n        elseif grade == grades_sum\n\
    \            grades_count = grades_count+1\n        elseif grade < grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count-1\n \
    \       end\n    end\n    grades_count = grades_count-1\n    grades_sum = grades_sum/grades_count\n\
    \    grades_sum = 0.0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count+1\n \
    \       elseif grade == grades_sum\n            grades_count = grades_count+1\n\
    \        elseif grade < grades_sum\n            grades_sum = grade\n         \
    \   grades_count = grades_count-1\n        end\n    end\n    grades_count = grades_count-1\n\
    \    grades_sum = grades_sum/grades_count\n    grades_sum\nusing Test\n\n@testset\
    \ begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7,\
    \ 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5oyqv1qi.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5oyqv1qi.jl:1\n\
    in expression starting at /tmp/tmp5oyqv1qi.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)-1)^2\
    \ * grades_std^2)\n    grades_entropy = - grades_avg + log(grades_std)\n    grades_entropy_normalized\
    \ = grades_entropy / sum(grades_entropy)\n    grades_entropy_normalized = sort(grades_entropy_normalized)\n\
    \    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .> 0]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .< 1]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_avg]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_std]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_min]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_max]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_range]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_range_sqr]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_skew]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_kurtosis]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_entropy]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_entropy_normalized]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_avg]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_std]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_min]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= grades_max\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmf9353b7.jl:1\nin expression starting at /tmp/tmpmf9353b7.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0\n    grades_count = 0\n    grades_sum\
    \ = 0\n    for grade in grades\n        if grade > grades_sum\n            grades_sum\
    \ = grade\n            grades_count = 0\n        elseif grade == grades_sum\n\
    \            grades_count += 1\n        else\n            grades_sum += grade\n\
    \            grades_count = 0\n        end\n    end\n    grades_sum = grades_sum\
    \ / grades_count\n    grades_count = 0\n    grades_sum = 0\n    for grade in grades\n\
    \        if grade > grades_sum\n            grades_sum = grade\n            grades_count\
    \ = 0\n        elseif grade == grades_sum\n            grades_count += 1\n   \
    \     else\n            grades_sum += grade\n            grades_count = 0\n  \
    \      end\n    end\n    grades_sum = grades_sum / grades_count\n    grades_count\
    \ = 0\n    grades_sum = 0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = 0\n        elseif\
    \ grade == grades_sum\n            grades_count += 1\n        else\n         \
    \   grades_sum += grade\n            grades_count = 0\n        end\n    end\n\
    \    grades_sum = grades_sum / grades_count\n    grades_count = 0\n    grades_sum\
    \ = 0\n    for grade in grades\n        if grade > grades_sum\n            grades_sum\
    \ = grade\n            grades_count = 0\n        elseif grade == grades_sum\n\
    \            grades_count += 1\n        else\n            grades_sum += grade\n\
    \            grades_count = 0\n        end\n    end\n    grades_sum = grades_sum\
    \ / grades_count\n    grades_count = 0\n    grades_sum = 0\n    for grade in grades\n\
    \        if grade > grades_sum\n            grades_sum = grade\n            grades_count\
    \ = 0\n        elseif grade == grades_sum\n            grades_count += 1\n   \
    \     else\n            grades_sum += grade\n            grades_count = 0\n  \
    \      end\n    end\n    grades_sum = grades_sum / grades_count\n    grades_count\
    \ = 0\n    grades_sum = 0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = 0\n        elseif\
    \ grade == grades_sum\n            grades_count += 1\n        else\n         \
    \   grades_sum += grade\n            grades_count = 0\n        end\n    end\n\
    \    grades_sum = grades_sum / grades_count\n    grades_count = 0\n    grades_sum\
    \ = 0\n    for grade in grades\n        if grade > grades_sum\nusing Test\n\n\
    @testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaqfyzzq1.jl:1\nin expression starting at /tmp/tmpaqfyzzq1.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = reverse(grades_sorted)\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n\
    \    grades_sorted_reverse.reverse()\n    grades_sorted_reverse.sort()\n    grades_sorted_reverse.reverse()\n\
    \    grades_sorted_reverse.sort()\n    grades_\nusing Test\n\n@testset begin\n\
    \ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpivm8pzxd.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpivm8pzxd.jl:1\n\
    in expression starting at /tmp/tmpivm8pzxd.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / sum(grades .^ 2)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * sum(grades .^ 4))\n    grades_entropy = - grades_skew * log(grades_skew)\
    \ - grades_kurtosis * log(grades_kurtosis)\n    grades_entropy_rounded = round(grades_entropy,\
    \ digits=2)\n    grades_entropy_rounded_str = String(grades_entropy_rounded)\n\
    \    grades_str = join([\"+\", \"-\", \"A\", \"B\", \"C\", \"D\", \"E\"], \" \"\
    )\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str,\
    \ \" \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    grades_str = replace(grades_str, \" \", \" \")\n    grades_str\
    \ = replace(grades_str, \" \", \" \")\n    grades_str = replace(grades_str, \"\
    \ \", \" \")\n    \nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxr9tm83q.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxr9tm83q.jl:1\n\
    in expression starting at /tmp/tmpxr9tm83q.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0\n    grades_count = 0\n    \n\
    \    for grade in grades\n        if grade > grades_sum\n            grades_sum\
    \ = grade\n            grades_count = grades_count+1\n        elseif grade < grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count-1\n \
    \       elseif grade == grades_sum\n            grades_count = grades_count+1\n\
    \        end\n    end\n    \n    grades_count = grades_count-1\n    \n    if grades_count\
    \ > grades_sum\n        grades_count = grades_count-1\n    end\n    \n    grades_count\
    \ = round(grades_count)\n    \n    grades_count = round(grades_count)\n    \n\
    \    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    grades_count = round(grades_count)\n\
    \    \n    grades_count = round(grades_count)\n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7,\
    \ 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4m3ei1tv.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4m3ei1tv.jl:1\n\
    in expression starting at /tmp/tmp4m3ei1tv.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .> 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 5]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .>= 0]\n    grades_sorted = grades_sorted[grades_sorted .<= 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .>= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 5]\n    grades_sorted = grades_sorted[grades_sorted .>= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 5]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .>= 0]\n    grades_sorted = grades_sorted[grades_sorted .<= 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .>= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 5]\n    grades_sorted = grades_sorted[grades_sorted .>= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 5]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .>= 0]\n    grades_sorted = grades_sorted[grades_sorted .<= 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .>= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 5]\n    grades_sorted = grades_sorted[grades_sorted .>= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 5]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .>= 0]\n    grades_sorted = grades_sorted[grades_sorted .<= 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .>= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 5]\n    grades_sorted = grades_sorted[grades_sorted .>= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 5]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .>= 0]\n    grades_sorted = grades_sorted[grades_sorted .<= 5]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .>= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 5]\n    grades_sorted = grades_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpszmisqtv.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpszmisqtv.jl:1\n\
    in expression starting at /tmp/tmpszmisqtv.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_index = findfirst(grades_sorted\
    \ .> 0)\n    grades_sorted_index\n    grades_sorted_index + 1\n    grades_sorted_index\
    \ + 2\n    grades_sorted_index + 3\n    grades_sorted_index + 4\n    grades_sorted_index\
    \ + 5\n    grades_sorted_index + 6\n    grades_sorted_index + 7\n    grades_sorted_index\
    \ + 8\n    grades_sorted_index + 9\n    grades_sorted_index + 10\n    grades_sorted_index\
    \ + 11\n    grades_sorted_index + 12\n    grades_sorted_index + 13\n    grades_sorted_index\
    \ + 14\n    grades_sorted_index + 15\n    grades_sorted_index + 16\n    grades_sorted_index\
    \ + 17\n    grades_sorted_index + 18\n    grades_sorted_index + 19\n    grades_sorted_index\
    \ + 20\n    grades_sorted_index + 21\n    grades_sorted_index + 22\n    grades_sorted_index\
    \ + 23\n    grades_sorted_index + 24\n    grades_sorted_index + 25\n    grades_sorted_index\
    \ + 26\n    grades_sorted_index + 27\n    grades_sorted_index + 28\n    grades_sorted_index\
    \ + 29\n    grades_sorted_index + 30\n    grades_sorted_index + 31\n    grades_sorted_index\
    \ + 32\n    grades_sorted_index + 33\n    grades_sorted_index + 34\n    grades_sorted_index\
    \ + 35\n    grades_sorted_index + 36\n    grades_sorted_index + 37\n    grades_sorted_index\
    \ + 38\n    grades_sorted_index + 39\n    grades_sorted_index + 40\n    grades_sorted_index\
    \ + 41\n    grades_sorted_index + 42\n    grades_sorted_index + 43\n    grades_sorted_index\
    \ + 44\n    grades_sorted_index + 45\n    grades_sorted_index + 46\n    grades_sorted_index\
    \ + 47\n    grades_sorted_index + 48\n    grades_sorted_index + 49\n    grades_sorted_index\
    \ + 50\n    grades_sorted_index + 51\n    grades_sorted_index + 52\n    grades_sorted_index\
    \ + 53\n    grades_sorted_index + 54\n    grades_sorted_index + 55\n    grades_sorted_index\
    \ + 56\n    grades_sorted_index + 57\n    grades_sorted_index + 58\n    grades_sorted_index\
    \ + 59\n    grades_sorted_index + 60\n    grades_sorted_index + 61\n    grades_sorted_index\
    \ + 62\n    grades_sorted_index + 63\n    grades_sorted_index + 64\n    grades_sorted_index\
    \ + 65\n    grades_sorted_index + 66\n    grades_sorted_index + 67\n    grades_sorted_index\
    \ + 68\n    grades_sorted_index + 69\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpig_0buog.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpig_0buog.jl:1\n\
    in expression starting at /tmp/tmpig_0buog.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / sum(grades .^ 2)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * sum(grades .^ 4))\n    grades_entropy = - grades_skew * log(grades_skew)\
    \ - grades_kurtosis * log(grades_kurtosis)\n    grades_entropy_rounded = round(grades_entropy)\n\
    \    grades_entropy_rounded = max(grades_entropy_rounded, 0)\n    grades_entropy_rounded\
    \ = min(grades_entropy_rounded, 100)\n    grades_entropy_rounded = round(grades_entropy_rounded)\n\
    \    grades_entropy_rounded = grades_entropy_rounded * 100\n    grades_entropy_rounded\
    \ = round(grades_entropy_rounded)\n    grades_entropy_rounded = grades_entropy_rounded\
    \ * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n    grades_entropy_rounded\
    \ = grades_entropy_rounded * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n\
    \    grades_entropy_rounded = grades_entropy_rounded * 100\n    grades_entropy_rounded\
    \ = round(grades_entropy_rounded)\n    grades_entropy_rounded = grades_entropy_rounded\
    \ * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n    grades_entropy_rounded\
    \ = grades_entropy_rounded * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n\
    \    grades_entropy_rounded = grades_entropy_rounded * 100\n    grades_entropy_rounded\
    \ = round(grades_entropy_rounded)\n    grades_entropy_rounded = grades_entropy_rounded\
    \ * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n    grades_entropy_rounded\
    \ = grades_entropy_rounded * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n\
    \    grades_entropy_rounded = grades_entropy_rounded * 100\n    grades_entropy_rounded\
    \ = round(grades_entropy_rounded)\n    grades_entropy_rounded = grades_entropy_rounded\
    \ * 100\n    grades_entropy_rounded = round(grades_entropy_rounded)\n    grades_entropy_rounded\
    \ = grades_entropy_rounded * 100\nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpenqw4lxi.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpenqw4lxi.jl:1\n\
    in expression starting at /tmp/tmpenqw4lxi.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = sort(grades_sorted)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp43svsmio.jl:67\nin expression starting at\
    \ /tmp/tmp43svsmio.jl:67\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = sort(grades_sorted)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_reverse)\n    grades_sorted_reverse = reverse(grades_sorted_reverse)\n\
    \    grades_sorted_reverse = reverse(grades_sorted_reverse)\n    grades_sorted_reverse\
    \ = reverse(grades_sorted_\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp43svsmio.jl:67\nin expression starting at\
    \ /tmp/tmp43svsmio.jl:67\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 0]\n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 0]\n    grades_sorted = grades_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6rywn798.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6rywn798.jl:1\n\
    in expression starting at /tmp/tmp6rywn798.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_diff =\
    \ grades_sum - grades[1]\n    grades_diff_abs = abs(grades_diff)\n    grades_diff_sign\
    \ = sign(grades_diff)\n    grades_diff_abs_sign = sign(grades_diff_abs)\n    grades_diff_abs_sign_grade\
    \ = grades_diff_abs_sign * grades_diff_sign\n    grades_diff_abs_sign_grade_grade\
    \ = grades_diff_abs_sign_grade * grades_diff\n    grades_diff_abs_sign_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade * grades_diff_sign\n    grades_diff_abs_sign_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade * grades_diff\n    grades_diff_abs_sign_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade * grades_diff\n    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade * grades_diff\n    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade * grades_diff\n \
    \   grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade_grade = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade\
    \ * grades_diff\n    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade * grades_diff\n\
    \    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade * grades_diff\n\
    \    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade * grades_diff\n\
    \    grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade_grade_grade_grade\
    \ = grades_diff_abs_sign_grade_grade_grade_grade_grade_grade_grade * \nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8jv6jn2j.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8jv6jn2j.jl:1\n\
    in expression starting at /tmp/tmp8jv6jn2j.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = sort(reverse(grades))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n\
    \    grades_sorted_reverse = sort(reverse(grades_sorted_reverse))\n    grades_sorted_reverse\
    \ = sort(reverse(grades_sorted_reverse))\n    grade\nusing Test\n\n@testset begin\n\
    \ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpter1700u.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpter1700u.jl:1\n\
    in expression starting at /tmp/tmpter1700u.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)-1)^2\
    \ * grades_std^2)\n    grades_entropy = - grades_avg + log(grades_std)\n    grades_entropy_normalized\
    \ = grades_entropy / sum(grades_entropy)\n    grades_skewness = grades_range_sqr\
    \ / ((length(grades)-1)^2 * grades_std^2 * grades_std)\n    grades_kurtosis_normalized\
    \ = grades_kurtosis / sum(grades_kurtosis)\n    grades_mix_score = grades_avg\
    \ + 1.5 * (grades_std * grades_std)\n    grades_mix_score_normalized = grades_mix_score\
    \ / sum(grades_mix_score)\n    grades_mix_score_with_entropy = grades_mix_score\
    \ + grades_entropy_normalized\n    grades_mix_score_with_entropy_normalized =\
    \ grades_mix_score_with_entropy / sum(grades_mix_score_with_entropy)\n    grades_mix_score_with_entropy_with_kurtosis\
    \ = grades_mix_score_with_entropy + grades_kurtosis_normalized\n    grades_mix_score_with_entropy_with_kurtosis_normalized\
    \ = grades_mix_score_with_entropy_with_kurtosis / sum(grades_mix_score_with_entropy_with_kurtosis)\n\
    \    grades_mix_score_with_entropy_with_kurtosis_with_skew = grades_mix_score_with_entropy_with_kurtosis\
    \ + grades_skewness_normalized\n    grades_mix_score_with_entropy_with_kurtosis_with_skew_normalized\
    \ = grades_mix_score_with_entropy_with_kurtosis_with_skew / sum(grades_mix_score_with_entropy_with_kurtosis_with_skew)\n\
    \    grades_mix_score_with_entropy_with_kurtosis_with_skew_with_entropy = grades_mix_score_with_entropy_with_kurtosis_with_skew\
    \ + grades_entropy_normalized\n    grades_mix_score_with_entropy_with_kurtosis_\n\
    using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi54yogdo.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi54yogdo.jl:1\n\
    in expression starting at /tmp/tmpi54yogdo.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_len = len(grades)\n    grades_sum =\
    \ 0.0\n    grades_sum_sq = 0.0\n    grades_sum_sq_sum = 0.0\n    grades_sum_sq_sum2\
    \ = 0.0\n    grades_sum_sq_sum3 = 0.0\n    grades_sum_sq_sum4 = 0.0\n    grades_sum_sq_sum5\
    \ = 0.0\n    grades_sum_sq_sum6 = 0.0\n    grades_sum_sq_sum7 = 0.0\n    grades_sum_sq_sum8\
    \ = 0.0\n    grades_sum_sq_sum9 = 0.0\n    grades_sum_sq_sum10 = 0.0\n    grades_sum_sq_sum11\
    \ = 0.0\n    grades_sum_sq_sum12 = 0.0\n    grades_sum_sq_sum13 = 0.0\n    grades_sum_sq_sum14\
    \ = 0.0\n    grades_sum_sq_sum15 = 0.0\n    grades_sum_sq_sum16 = 0.0\n    grades_sum_sq_sum17\
    \ = 0.0\n    grades_sum_sq_sum18 = 0.0\n    grades_sum_sq_sum19 = 0.0\n    grades_sum_sq_sum20\
    \ = 0.0\n    grades_sum_sq_sum21 = 0.0\n    grades_sum_sq_sum22 = 0.0\n    grades_sum_sq_sum23\
    \ = 0.0\n    grades_sum_sq_sum24 = 0.0\n    grades_sum_sq_sum25 = 0.0\n    grades_sum_sq_sum26\
    \ = 0.0\n    grades_sum_sq_sum27 = 0.0\n    grades_sum_sq_sum28 = 0.0\n    grades_sum_sq_sum29\
    \ = 0.0\n    grades_sum_sq_sum30 = 0.0\n    grades_sum_sq_sum31 = 0.0\n    grades_sum_sq_sum32\
    \ = 0.0\n    grades_sum_sq_sum33 = 0.0\n    grades_sum_sq_sum34 = 0.0\n    grades_sum_sq_sum35\
    \ = 0.0\n    grades_sum_sq_sum36 = 0.0\n    grades_sum_sq_sum37 = 0.0\n    grades_sum_sq_sum38\
    \ = 0.0\n    grades_sum_sq_sum39 = 0.0\n    grades_sum_sq_sum40 = 0.0\n    grades_sum_sq_sum41\
    \ = 0.0\n    grades_sum_sq_sum42 = 0.0\n    grades_sum_sq_sum43 = 0.0\n    grades_sum_sq_sum44\
    \ = 0.0\n    grades_sum_sq_sum45 = 0.0\n    grades_sum_sq_sum46 = 0.0\n    grades_sum_sq_sum47\
    \ = 0.0\n    grades_sum_sq_sum48 = 0.0\n    grades_sum_sq_sum49 = 0.0\n    grades_sum_sq_sum50\
    \ = 0.0\n    grades_sum_sq_sum51 = 0.0\n    grades_sum_sq_sum52 = 0.0\n    grades_sum_sq_sum53\
    \ = 0.0\n\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp76cgt0mu.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp76cgt0mu.jl:1\n\
    in expression starting at /tmp/tmp76cgt0mu.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * pow(grades_skew))\n    grades_entropy = - grades_skew * log(grades_range_sqr\
    \ / (2 * length(grades)))\n    grades_entropy_normalized = grades_entropy / sum(grades_entropy)\n\
    \    grades_entropy_normalized = sort(grades_entropy_normalized)\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .> 0]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .<= 1]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .<= grades_max]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .>= grades_min]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .<= grades_std]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .>= grades_avg]\n    grades_entropy_normalized\
    \ = grades_entropy_normalized[grades_entropy_normalized .<= grades_range_sqr]\n\
    \    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .>= grades_range]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .<= grades_max]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .>= grades_min]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .<= grades_std]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .>= grades_avg]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .<= grades_range_sqr]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .>= grades_range]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .<= grades_max]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .>= grades_\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe269u745.jl:1\nin expression starting at /tmp/tmpe269u745.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0.0\n    grades_count = 0\n  \
    \  grades_sum = 0.0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = grades_count+1\n \
    \       elseif grade == grades_sum\n            grades_count = grades_count+1\n\
    \        elseif grade < grades_sum\n            grades_sum = grade\n         \
    \   grades_count = grades_count+1\n        end\n    end\n    grades_count = grades_count-1\n\
    \    grades_sum = grades_sum/grades_count\n    grades_sum = 0.0\n    for grade\
    \ in grades\n        if grade < grades_sum\n            grades_sum = grade\n \
    \       end\n    end\n    grades_sum = 0.0\n    for grade in grades\n        if\
    \ grade > grades_sum\n            grades_sum = grade\n        end\n    end\n \
    \   grades_sum = 0.0\n    for grade in grades\n        if grade < grades_sum\n\
    \            grades_sum = grade\n        end\n    end\n    grades_sum = 0.0\n\
    \    for grade in grades\n        if grade < grades_sum\n            grades_sum\
    \ = grade\n        end\n    end\n    grades_sum = 0.0\n    for grade in grades\n\
    \        if grade < grades_sum\n            grades_sum = grade\n        end\n\
    \    end\n    grades_sum = 0.0\n    for grade in grades\n        if grade < grades_sum\n\
    \            grades_sum = grade\n        end\n    end\n    grades_sum = 0.0\n\
    \    for grade in grades\n        if grade < grades_sum\n            grades_sum\
    \ = grade\n        end\n    end\n    grades_sum = 0.0\n    for grade in grades\n\
    \        if grade < grades_sum\n            grades_sum = grade\n        end\n\
    \    end\n    grades_sum = 0.0\n    for grade in grades\n        if grade < grades_sum\n\
    \            grades_sum = grade\n        end\n    end\n    grades_sum = 0.0\n\
    \    for grade in grades\n        if grade < grades_sum\n            grades_sum\
    \ = grade\n        end\n    end\n    grades_sum = 0.0\n    for grade in grades\n\
    \        if grade < grades_sum\n            grades_sum = grade\n        end\n\
    \    end\n    grades_sum = 0.0\n    for grade in grades\n        if grade < grades_sum\n\
    \            grades_sum = grade\n        end\n    end\n    grades_sum = 0.0\n\
    \    for grade in grades\n        if grade < grades_sum\n            grades_\n\
    using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq3s2p28g.jl:1\nin expression starting at /tmp/tmpq3s2p28g.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * grades_skew^2)\n    grades_entropy = - grades_skew * log(grades_skew)\
    \ - grades_kurtosis * log(grades_kurtosis)\n    grades_entropy_normalized = grades_entropy\
    \ / sum(grades_entropy)\n    grades_entropy_normalized = sort(grades_entropy_normalized)\n\
    \    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .> 0]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .< 1]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 0]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 1]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 2]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 3]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 4]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 5]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 6]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 7]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 8]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 9]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 10]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 11]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 12]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 13]\n    grades_entropy_normalized = grades_entropy_normalized[grades_entropy_normalized\
    \ .!= 14]\n    grades_entropy_normalized = grades_entropy_\nusing Test\n\n@testset\
    \ begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7,\
    \ 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1uaqjrba.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1uaqjrba.jl:1\n\
    in expression starting at /tmp/tmp1uaqjrba.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / sum(grades .^ 2)\n    grades_kurtosis = grades_range_sqr / 4 \n    grades_entropy\
    \ = - grades_avg * log(grades_avg) / log(2)\n    grades_entropy_normalized = grades_entropy\
    \ / sum(grades .^ 2)\n    grades_skew_normalized = grades_skew / sum(grades .^\
    \ 2)\n    grades_kurtosis_normalized = grades_kurtosis / sum(grades .^ 2)\n  \
    \  grades_var = (grades_max - grades_min) * (grades_max - grades_min) / 6\n  \
    \  grades_var_normalized = grades_var / sum(grades .^ 2)\n    grades_n = length(grades)\n\
    \    grades_n2 = grades_n^2\n    grades_n3 = grades_n^3\n    grades_n4 = grades_n^4\n\
    \    grades_n5 = grades_n^5\n    grades_n6 = grades_n^6\n    grades_n7 = grades_n^7\n\
    \    grades_n8 = grades_n^8\n    grades_n9 = grades_n^9\n    grades_n10 = grades_n^10\n\
    \    grades_n11 = grades_n^11\n    grades_n12 = grades_n^12\n    grades_n13 =\
    \ grades_n^13\n    grades_n14 = grades_n^14\n    grades_n15 = grades_n^15\n  \
    \  grades_n16 = grades_n^16\n    grades_n17 = grades_n^17\n    grades_n18 = grades_n^18\n\
    \    grades_n19 = grades_n^19\n    grades_n20 = grades_n^20\n    grades_n21 =\
    \ grades_n^21\n    grades_n22 = grades_n^22\n    grades_n23 = grades_n^23\n  \
    \  grades_n24 = grades_n^24\n    grades_n25 = grades_n^25\n    grades_n26 = grades_n\n\
    using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg1aasom9.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg1aasom9.jl:1\n\
    in expression starting at /tmp/tmpg1aasom9.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_length = length(grades)\n    grades_sum\
    \ = sum(grades)\n    grades_avg = grades_sum / grades_length\n    grades_std =\
    \ std(grades)\n    grades_min = min(grades)\n    grades_max = max(grades)\n  \
    \  grades_range = grades_max - grades_min\n    grades_range_length = grades_range\
    \ * grades_length\n    grades_range_sum = grades_range_length * grades_sum\n \
    \   grades_range_avg = grades_range_sum / grades_range_length\n    grades_range_std\
    \ = grades_range_length / sqrt(grades_length)\n    grades_range_min = grades_min\
    \ - grades_range * grades_range_avg\n    grades_range_max = grades_max + grades_range\
    \ * grades_range_avg\n    grades_range_length = grades_max - grades_min\n    grades_range_sum\
    \ = grades_range_length * grades_sum\n    grades_range_avg = grades_range_sum\
    \ / grades_range_length\n    grades_range_std = grades_range_length / sqrt(grades_length)\n\
    \    grades_range_min = grades_min - grades_range * grades_range_avg\n    grades_range_max\
    \ = grades_max + grades_range * grades_range_avg\n    grades_range_length = grades_max\
    \ - grades_min\n    grades_range_sum = grades_range_length * grades_sum\n    grades_range_avg\
    \ = grades_range_sum / grades_range_length\n    grades_range_std = grades_range_length\
    \ / sqrt(grades_length)\n    grades_range_min = grades_min - grades_range * grades_range_avg\n\
    \    grades_range_max = grades_max + grades_range * grades_range_avg\n    grades_range_length\
    \ = grades_max - grades_min\n    grades_range_sum = grades_range_length * grades_sum\n\
    \    grades_range_avg = grades_range_sum / grades_range_length\n    grades_range_std\
    \ = grades_range_length / sqrt(grades_length)\n    grades_range_min = grades_min\
    \ - grades_range * grades_range_avg\n    grades_range_max = grades_max + grades_range\
    \ * grades_range_avg\n    grades_range_length = grades_max - grades_min\n    grades_range_sum\
    \ = grades_range_length * grades_sum\n    grades_range_avg = grades_range_sum\
    \ / grades_range_length\n    grades_range_std = grades_range_length / sqrt(grades_length)\n\
    \    grades_range_min = grades_min - grades_\nusing Test\n\n@testset begin\n\n\
    candidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmwzc30gp.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmwzc30gp.jl:1\n\
    in expression starting at /tmp/tmpmwzc30gp.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)-1)*(length(grades)-2))\n\
    \    grades_entropy = - grades_skew * log(grades_skew) - grades_kurtosis * log(grades_kurtosis)\n\
    \    grades_probs = grades_entropy / -log(2)\n    grades_probs_cumsum = cumsum(grades_probs)\n\
    \    grades_cumsum_probs = grades_probs_cumsum / length(grades)\n    grades_cumprob_cumsum\
    \ = grades_cumsum_probs .* grades\n    grades_cumprob = grades_cumprob_cumsum\
    \ / sum(grades)\n    grades_cumprob_cumsum_probs = grades_cumsum_probs .* grades\n\
    \    grades_cumprob_cumsum_probs_cumsum = cumsum(grades_cumprob_cumsum_probs)\n\
    \    grades_cumprob_cumsum_probs_cumsum_probs = grades_cumsum_probs_cumsum .*\
    \ grades\n    grades_cumprob_cumsum_probs_cumsum_probs_cumsum = cumsum(grades_cumprob_cumsum_probs_cumsum)\n\
    \    grades_cumprob_cumsum_probs_cumsum_probs_cumsum_probs = grades_cumsum_probs_cumsum_probs_cumsum\
    \ .* grades\n    grades_cumprob_cumsum_probs_cumsum_probs_cumsum_probs_cumsum\
    \ = cumsum(grades_cumprob_cumsum_probs_cumsum_probs_cumsum)\n    grades_cumprob_cumsum_probs_cumsum_probs_cumsum_probs_cumsum_probs\
    \ = grades_cumsum_probs_cumsum_probs_cumsum_probs_cumsum .* grades\n    grades_cumprob_cumsum_probs_cumsum_probs_cumsum_probs_cumsum_probs_cumsum\
    \ = cumsum(grades_cumprob_cumsum_probs_cumsum_probs_cumsum_probs_cumsum)\n   \
    \ grade\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_e93be0d.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_e93be0d.jl:1\n\
    in expression starting at /tmp/tmp_e93be0d.jl:1\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)-1)*(length(grades)-2))\n\
    \    grades_entropy = grades_sum * log(grades_sum) - (grades_sum * grades_sum)/length(grades)\n\
    \    grades_entropy_sqr = grades_entropy * grades_entropy\n    grades_variance\
    \ = grades_sum - grades_avg\n    grades_variance_sqr = grades_variance * grades_variance\n\
    \    grades_cov = grades_avg * grades_std\n    grades_cov_sqr = grades_cov * grades_cov\n\
    \    grades_corr = grades_avg - grades_std\n    grades_corr_sqr = grades_corr\
    \ * grades_corr\n    grades_p = grades_avg / grades_std\n    grades_p_sqr = grades_p\
    \ * grades_p\n    grades_n = length(grades)\n    grades_num_grades = grades_n\
    \ - 1\n    grades_num_grades_sqr = grades_num_grades * grades_num_grades\n   \
    \ grades_den = grades_num_grades_sqr - grades_num_grades * grades_num_grades\n\
    \    grades_den_sqr = grades_den * grades_den\n    grades_den_avg = grades_den\
    \ / grades_n\n    grades_den_std = sqrt(grades_den_sqr)\n    grades_den_min =\
    \ grades_den_avg - grades_den_std\n    grades_den_max = grades_den_avg + grades_den_std\n\
    \    grades_den_range = grades_den_max - grades_den_min\n    grades_den_range_sqr\
    \ = grades_den_range * grades_den_range\n    grades_den_skew = grades_den_range_sqr\
    \ / grades_n\n    grades_den_kurtosis = grades_den_range_sqr / (grades_n*(grades_n-1))\n\
    \    grades_den_entropy = grades_den_sum * log(grades_den_sum) - (grades_den_sum\
    \ * \nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t\
    @test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"\
    ])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"\
    ])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8,\
    \ 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7])\
    \ == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx82nqumd.jl:63\nin expression starting at\
    \ /tmp/tmpx82nqumd.jl:63\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / sum(grades .^ 2)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * sum(grades .^ 4))\n    grades_entropy = - grades_skew * log(grades_skew)\
    \ - grades_kurtosis * log(grades_kurtosis)\n    grades_entropy_rounded = round(grades_entropy,\
    \ digits=2)\n    grades_entropy_rounded = if grades_entropy_rounded < 0 \n   \
    \     grades_entropy_rounded + 0.5\n    else\n        grades_entropy_rounded\n\
    \    end\n    grades_letter_grade = if grades_entropy_rounded <= -0.1 \n     \
    \   \"D-\"\n    elseif grades_entropy_rounded <= -0.3 \n        \"C-\"\n    elseif\
    \ grades_entropy_rounded <= -0.5 \n        \"C\"\n    elseif grades_entropy_rounded\
    \ <= -0.7 \n        \"B+\"\n    elseif grades_entropy_rounded <= -0.9 \n     \
    \   \"B\"\n    elseif grades_entropy_rounded <= -1.1 \n        \"A-\"\n    elseif\
    \ grades_entropy_rounded <= -1.3 \n        \"A\"\n    elseif grades_entropy_rounded\
    \ <= -1.5 \n        \"A+\"\n    elseif grades_entropy_rounded <= -1.7 \n     \
    \   \"A-\"\n    elseif grades_entropy_rounded <= -1.9 \n        \"A\"\n    elseif\
    \ grades_entropy_rounded <= -2.1 \n        \"B+\"\n    elseif grades_entropy_rounded\
    \ <= -2.3 \n        \"B\"\n    elseif grades_entropy_rounded <= -2.5 \n      \
    \  \"B-\"\n    elseif grades_entropy_rounded <= -2.7 \n        \"B\"\n    elseif\
    \ grades_entropy_rounded <= -2.9 \n        \"B-\"\n    elseif grades_entropy_rounded\
    \ <= -3.1 \n        \"C+\"\n    elseif grades_entropy_rounded <= -3.3 \n     \
    \   \"C\"\n    elseif grades_entropy_rounded <= -3.5 \n        \"C-\"\n    elseif\
    \ grades_entropy_rounded <= -3.7 \n        \"C\"\n    elseif grades_entropy_rounded\
    \ <= -3.9 \n        \"C-\"\n    elseif grades_entropy_rounded <= -4.1 \n     \
    \   \"D+\"\n    elseif grades_entropy_rounded <= -4.3 \n        \"D\"\n    elseif\
    \ grades_entropy_\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp57_mdnex.jl:1\nin expression starting at /tmp/tmp57_mdnex.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = sort(grades_sorted)\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-1])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-2])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-3])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-4])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-5])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-6])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-7])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-8])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-9])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-10])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-11])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-12])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-13])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-14])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-15])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-16])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-17])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-18])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-19])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-20])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-21])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-22])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-23])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-24])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-25])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-26])\n    grades_sorted_reverse.push(-grades_sorted_reverse[end-27])\n\
    \    grades_sorted_reverse.push(-grades_sorted_reverse[end-28])\n\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy6trm3jo.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy6trm3jo.jl:1\n\
    in expression starting at /tmp/tmpy6trm3jo.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_reverse = sort(reverse(grades))\n\
    \    grades_sorted_reverse.push(\"E\")\n    grades_sorted_reverse.push(\"D-\"\
    )\n    grades_sorted_reverse.push(\"D+\")\n    grades_sorted_reverse.push(\"B-\"\
    )\n    grades_sorted_reverse.push(\"B+\")\n    grades_sorted_reverse.push(\"B-\"\
    )\n    grades_sorted_reverse.push(\"B+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"A+\")\n    grades_sorted_reverse.push(\"A-\"\
    )\n    grades_sorted_reverse.push(\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyaa4rhg1.jl:79\nin expression starting at\
    \ /tmp/tmpyaa4rhg1.jl:79\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)*length(grades))\
    \ - length(grades))\n    grades_entropy = - grades_avg + log(grades_std)\n   \
    \ grades_entropy_normalized = grades_entropy / grades_avg\n    grades_entropy_normalized\
    \ = grades_entropy_normalized / grades_std\n    grades_entropy_normalized = grades_entropy_normalized\
    \ * grades_range_sqr\n    grades_entropy_normalized = grades_entropy_normalized\
    \ / ((length(grades)*length(grades)) - length(grades))\n    grades_entropy_normalized\
    \ = grades_entropy_normalized * grades_avg\n    grades_entropy_normalized = grades_entropy_normalized\
    \ / grades_std\n    grades_entropy_normalized = grades_entropy_normalized * grades_range_sqr\n\
    \    grades_entropy_normalized = grades_entropy_normalized / ((length(grades)*length(grades))\
    \ - length(grades))\n    grades_entropy_normalized = grades_entropy_normalized\
    \ * grades_avg\n    grades_entropy_normalized = grades_entropy_normalized / grades_std\n\
    \    grades_entropy_normalized = grades_entropy_normalized * grades_range_sqr\n\
    \    grades_entropy_normalized = grades_entropy_normalized / ((length(grades)*length(grades))\
    \ - length(grades))\n    grades_entropy_normalized = grades_entropy_normalized\
    \ * grades_avg\n    grades_entropy_normalized = grades_entropy_normalized / grades_std\n\
    \    grades_entropy_normalized = grades_entropy_normalized * grades_range_sqr\n\
    \    grades_entropy_normalized = grades_entropy_normalized / ((length(grades)*length(grades))\
    \ - length(grades))\n    grades_entropy_normalized = grades_entropy_normalized\
    \ * grades_avg\n    grades_entropy_normalized = grades_entropy_normalized / grades_std\n\
    \    grades_entropy_normalized = grades_entropy_normalized * grades_range_sqr\n\
    \    grades_entropy_normalized = grades_entropy_normalized / ((length(grades)*length(grades))\
    \ - length(grades))\n    grades_entropy_normalized = grades_entropy_normalized\
    \ * grades_avg\n    grades_entropy_normalized = grades_entropy_normalized / grades_std\n\
    using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8xdgc12.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8xdgc12.jl:1\n\
    in expression starting at /tmp/tmpd8xdgc12.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0.0\n    grades_count = 0\n  \
    \  grades_sum = 0.0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = 0\n        elseif\
    \ grade == grades_sum\n            grades_count += 1\n        else\n         \
    \   grades_sum = 0.0\n            grades_count = 0\n        end\n    end\n   \
    \ grades_sum = 0.0\n    grades_count = 0\n    for grade in grades\n        if\
    \ grade > grades_sum\n            grades_sum = grade\n            grades_count\
    \ = 0\n        elseif grade == grades_sum\n            grades_count += 1\n   \
    \     else\n            grades_sum = 0.0\n            grades_count = 0\n     \
    \   end\n    end\n    grades_sum = 0.0\n    grades_count = 0\n    for grade in\
    \ grades\n        if grade > grades_sum\n            grades_sum = grade\n    \
    \        grades_count = 0\n        elseif grade == grades_sum\n            grades_count\
    \ += 1\n        else\n            grades_sum = 0.0\n            grades_count =\
    \ 0\n        end\n    end\n    grades_sum = 0.0\n    grades_count = 0\n    for\
    \ grade in grades\n        if grade > grades_sum\n            grades_sum = grade\n\
    \            grades_count = 0\n        elseif grade == grades_sum\n          \
    \  grades_count += 1\n        else\n            grades_sum = 0.0\n           \
    \ grades_count = 0\n        end\n    end\n    grades_sum = 0.0\n    grades_count\
    \ = 0\n    for grade in grades\n        if grade > grades_sum\n            grades_sum\
    \ = grade\n            grades_count = 0\n        elseif grade == grades_sum\n\
    \            grades_count += 1\n        else\n            grades_sum = 0.0\n \
    \           grades_count = 0\n        end\n    end\n    grades_sum = 0.0\n   \
    \ grades_count = 0\n    for grade in grades\n        if grade > grades_sum\n \
    \           grades_sum = grade\n            grades_count = 0\n        elseif grade\
    \ == grades_sum\n            grades_count += 1\n        else\n            grades_sum\
    \ = 0.0\n            grades_count = 0\n        end\n    end\n    grades_sum =\
    \ 0.0\n    grades_count = 0\n    for grade in grades\n        if grade > grades_sum\n\
    \            grades_sum = grade\n            grades_count = 0\n        elseif\
    \ grade == grades_sum\n            grades_count += 1\n        else\n         \
    \   grades_sum = 0.0\n            grades_count = 0\n        end\n    end\n   \
    \ grades_sum = 0.0\n    grades_count = 0\n    for grade in grades\n        if\
    \ grade > grade\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdfs6be3u.jl:1\nin expression starting at /tmp/tmpdfs6be3u.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / length(grades)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * pow(grades_range, 2))\n    grades_entropy = - grades_avg + log(grades_avg)\n\
    \    grades_entropy_normalized = grades_entropy / sum(grades_entropy)\n    grades_skewness\
    \ = grades_skew * grades_range_sqr\n    grades_kurtosis_normalized = grades_kurtosis\
    \ / sum(grades_kurtosis)\n    grades_mean = grades_avg - grades_std\n    grades_mean_normalized\
    \ = grades_mean / sum(grades_mean)\n    grades_var = (grades_avg - grades_mean)\
    \ * (grades_avg - grades_mean)\n    grades_var_normalized = grades_var / sum(grades_var)\n\
    \    grades_n = length(grades)\n    grades_n_pdf = grades_n / sum(grades_n)\n\
    \    grades_n_cdf = 1 - grades_n_pdf\n    grades_sum_squared = grades_sum * grades_sum\n\
    \    grades_sum_squared_normalized = grades_sum_squared / sum(grades_sum_squared)\n\
    \    grades_sum_cubed = (grades_sum * grades_sum) / sum(grades_sum)\n    grades_sum_cubed_normalized\
    \ = grades_sum_cubed / sum(grades_sum_cubed) \n    grades_sum_sqr_minus_mean =\
    \ grades_sum_squared - grades_mean\n    grades_sum_sqr_minus_mean_normalized =\
    \ grades_sum_sqr_minus_mean / sum(grades_sum_sqr_minus_mean)\n    grades_sum_sqr_minus_mean_cubed\
    \ = (grades_sum_squared - grades_mean) * (grades_sum - grades_mean) / sum(grades_sum_squared\
    \ - grades_mean)\n    grades_sum_sqr_minus_mean_cubed_normalized = grades_sum_sqr_minus_mean_cubed\
    \ / sum(grades_sum_sqr_minus_mean_cubed) \n    grades_sum_sqr_minus_mean_sqr_minus_mean\
    \ = grade\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcnz82ho8.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcnz82ho8.jl:1\n\
    in expression starting at /tmp/tmpcnz82ho8.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = 0.0\n    grades_count = 0\n  \
    \  for grade in grades\n        if grade > grades_sum\n            grades_sum\
    \ = grade\n            grades_count = 0\n        elseif grade == grades_sum\n\
    \            grades_count += 1\n        end\n    end\n    grades_count = round(grades_count)\n\
    \    grades_sum *= 100\n    grades_sum = round(grades_sum)\n    grades_sum *=\
    \ 10\n    grades_sum -= grades_count\n    grades_sum -= grades_count * 10\n  \
    \  grades_sum -= grades_count * 100\n    grades_sum -= grades_count * 1000\n \
    \   grades_sum -= grades_count * 10000\n    grades_sum -= grades_count * 100000\n\
    \    grades_sum -= grades_count * 1000000\n    grades_sum -= grades_count * 10000000\n\
    \    grades_sum -= grades_count * 100000000\n    grades_sum -= grades_count *\
    \ 1000000000\n    grades_sum -= grades_count * 10000000000\n    grades_sum -=\
    \ grades_count * 100000000000\n    grades_sum -= grades_count * 1000000000000\n\
    \    grades_sum -= grades_count * 10000000000000\n    grades_sum -= grades_count\
    \ * 100000000000000\n    grades_sum -= grades_count * 1000000000000000\n    grades_sum\
    \ -= grades_count * 10000000000000000\n    grades_sum -= grades_count * 100000000000000000\n\
    \    grades_sum -= grades_count * 1000000000000000000\n    grades_sum -= grades_count\
    \ * 10000000000000000000\n    grades_sum -= grades_count * 100000000000000000000\n\
    \    grades_sum -= grades_count * 1000000000000000000000\n    grades_sum -= grades_count\
    \ * 10000000000000000000000\n    grades_sum -= grades_count * 100000000000000000000000\n\
    \    grades_sum -= grades_count * 1000000000000000000000000\n    grades_sum -=\
    \ grades_count * 10000000000000000000000000\n    grades_sum -= grades_count *\
    \ 100000000000000000000000000\n    grades_sum -= grades_count * 1000000000000000000000000000\n\
    \    grades_sum -= grades_count * 10000000000000000000000000000\n    grades_sum\
    \ -= grades_count * 100000000000000000000000000000\n    grades_sum -= grades_count\
    \ * 1000000000000000000000000000000\n    grades_sum -= grades_count * 10000000000000000000000000000000\n\
    \    grades_sum -= grades_count * 100000000000000000000000000000000\n    grades_sum\n\
    using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9jzwaa0s.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9jzwaa0s.jl:1\n\
    in expression starting at /tmp/tmp9jzwaa0s.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades_sorted = sort(grades)\n    grades_sorted_index = findfirst(grades_sorted\
    \ .< 0)\n    grades_sorted_index\n    grades_sorted_index + 1\n    grades_sorted_index\
    \ - 1\n    grades_sorted_index - 2\n    grades_sorted_index - 3\n    grades_sorted_index\
    \ - 4\n    grades_sorted_index - 5\n    grades_sorted_index - 6\n    grades_sorted_index\
    \ - 7\n    grades_sorted_index - 8\n    grades_sorted_index - 9\n    grades_sorted_index\
    \ - 10\n    grades_sorted_index - 11\n    grades_sorted_index - 12\n    grades_sorted_index\
    \ - 13\n    grades_sorted_index - 14\n    grades_sorted_index - 15\n    grades_sorted_index\
    \ - 16\n    grades_sorted_index - 17\n    grades_sorted_index - 18\n    grades_sorted_index\
    \ - 19\n    grades_sorted_index - 20\n    grades_sorted_index - 21\n    grades_sorted_index\
    \ - 22\n    grades_sorted_index - 23\n    grades_sorted_index - 24\n    grades_sorted_index\
    \ - 25\n    grades_sorted_index - 26\n    grades_sorted_index - 27\n    grades_sorted_index\
    \ - 28\n    grades_sorted_index - 29\n    grades_sorted_index - 30\n    grades_sorted_index\
    \ - 31\n    grades_sorted_index - 32\n    grades_sorted_index - 33\n    grades_sorted_index\
    \ - 34\n    grades_sorted_index - 35\n    grades_sorted_index - 36\n    grades_sorted_index\
    \ - 37\n    grades_sorted_index - 38\n    grades_sorted_index - 39\n    grades_sorted_index\
    \ - 40\n    grades_sorted_index - 41\n    grades_sorted_index - 42\n    grades_sorted_index\
    \ - 43\n    grades_sorted_index - 44\n    grades_sorted_index - 45\n    grades_sorted_index\
    \ - 46\n    grades_sorted_index - 47\n    grades_sorted_index - 48\n    grades_sorted_index\
    \ - 49\n    grades_sorted_index - 50\n    grades_sorted_index - 51\n    grades_sorted_index\
    \ - 52\n    grades_sorted_index - 53\n    grades_sorted_index - 54\n    grades_sorted_index\
    \ - 55\n    grades_sorted_index - 56\n    grades_sorted_index - 57\n    grades_sorted_index\
    \ - 58\n    grades_sorted_index - 59\n    grades_sorted_\nusing Test\n\n@testset\
    \ begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7,\
    \ 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwbq9adcv.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwbq9adcv.jl:1\n\
    in expression starting at /tmp/tmpwbq9adcv.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades_sum = sum(grades)\n    grades_avg =\
    \ grades_sum / length(grades)\n    grades_std = std(grades)\n    grades_min =\
    \ min(grades)\n    grades_max = max(grades)\n    grades_range = grades_max - grades_min\n\
    \    grades_range_sqr = grades_range * grades_range\n    grades_skew = grades_range_sqr\
    \ / sum(grades .^ 2)\n    grades_kurtosis = grades_range_sqr / ((length(grades)\
    \ - 1) * sum(grades .^ 4))\n    grades_entropy = - grades_skew * log(grades_skew)\
    \ - grades_kurtosis * log(grades_kurtosis)\n    grades_entropy_rounded = round(grades_entropy,\
    \ digits=2)\n    grades_entropy_rounded_bin = string(grades_entropy_rounded)\n\
    \    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin, \" \", \"\
    \")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin, \"+\"\
    , \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"-\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \".\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"0\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"1\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"2\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"3\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"4\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"5\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"6\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"7\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"8\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"9\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \".\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"-\", \"\")\n    grades_entropy_rounded_bin = replace(grades_entropy_rounded_bin,\
    \ \"+\", \"\")\n    grades_entropy_rounded_bin = replace(\nusing Test\n\n@testset\
    \ begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7,\
    \ 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa1u2yigi.jl:60\nin expression starting at\
    \ /tmp/tmpa1u2yigi.jl:60\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n    >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    [\"A+\", \"\
    B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd8a0bgg6.jl:26\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd8a0bgg6.jl:1\n\
    in expression starting at /tmp/tmpd8a0bgg6.jl:1\n"
  stdout: ''

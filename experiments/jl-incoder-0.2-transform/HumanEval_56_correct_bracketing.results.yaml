language: jl
name: HumanEval_56_correct_bracketing
results:
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Corrects bracketing of a string by adding or removing brackets from\n\
    \    the string until it matches the correct bracketing.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpunjz2c3s.jl:1\nin expression starting at /tmp/tmpunjz2c3s.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ is a function that takes a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjb9b43w2.jl:1\nin expression starting at /tmp/tmpjb9b43w2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ True if every opening bracket has a corresponding closing bracket.\n    \n \
    \   >>> correct_bracketing(\"<\")\n    false\n    >>> correct_bracketing(\"<>\"\
    )\n    true\n    >>> correct_bracketing(\"<<><>>\")\n    true\n    >>> correct_bracketing(\"\
    ><<>\")\n    false\n    \"\"\"\n    \n    brackets = brackets.replace(\"<\", \"\
    \")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmparx2na3v.jl:80\nin expression starting at\
    \ /tmp/tmparx2na3v.jl:80\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphe2y_kxz.jl:71\nin expression starting at\
    \ /tmp/tmphe2y_kxz.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp5oyh07w.jl:1\nin expression starting at /tmp/tmpp5oyh07w.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph_d9ou4k.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph_d9ou4k.jl:1\n\
    in expression starting at /tmp/tmph_d9ou4k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwufnbjk.jl:1\nin expression starting at /tmp/tmpdwufnbjk.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    ><<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpe21cgoa5.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe21cgoa5.jl:1\n\
    in expression starting at /tmp/tmpe21cgoa5.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ True if every opening bracket has a corresponding closing bracket.\n    \n \
    \   >>> correct_bracketing(\"<\")\n    false\n    >>> correct_bracketing(\"<>\"\
    )\n    true\n    >>> correct_bracketing(\"<<><>>\")\n    true\n    >>> correct_bracketing(\"\
    ><<>\")\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaz2j9ng3.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaz2j9ng3.jl:1\n\
    in expression starting at /tmp/tmpaz2j9ng3.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine if brackets are correctly nested.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2t3m8pzu.jl:1\nin expression starting at /tmp/tmp2t3m8pzu.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5lbgev22.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5lbgev22.jl:1\n\
    in expression starting at /tmp/tmp5lbgev22.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgyssa9sj.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgyssa9sj.jl:1\n\
    in expression starting at /tmp/tmpgyssa9sj.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphl1llcg2.jl:1\nin expression starting at /tmp/tmphl1llcg2.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp52v8yq2n.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp52v8yq2n.jl:1\n\
    in expression starting at /tmp/tmp52v8yq2n.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7imh4ahn.jl:1\nin expression starting at /tmp/tmp7imh4ahn.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp5oyh07w.jl:1\nin expression starting at /tmp/tmpp5oyh07w.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgyssa9sj.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgyssa9sj.jl:1\n\
    in expression starting at /tmp/tmpgyssa9sj.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ is a function that takes a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjb9b43w2.jl:1\nin expression starting at /tmp/tmpjb9b43w2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ True if every opening bracket has a corresponding closing bracket.\n    \n \
    \   >>> correct_bracketing(\"<\")\n    false\n    >>> correct_bracketing(\"<>\"\
    )\n    true\n    >>> correct_bracketing(\"<<><>>\")\n    true\n    >>> correct_bracketing(\"\
    ><<>\")\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaz2j9ng3.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaz2j9ng3.jl:1\n\
    in expression starting at /tmp/tmpaz2j9ng3.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Checks whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsgd50lhm.jl:1\nin expression starting at /tmp/tmpsgd50lhm.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ - check if brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbv0c5y5a.jl:1\nin expression starting at /tmp/tmpbv0c5y5a.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    ><<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpe21cgoa5.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe21cgoa5.jl:1\n\
    in expression starting at /tmp/tmpe21cgoa5.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7imh4ahn.jl:1\nin expression starting at /tmp/tmp7imh4ahn.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    \"\"\"\n \
    \   correct_bracketing determines whether brackets is a string of \"<\" and \"\
    >\".\n    return True if every opening bracket has a corresponding closing bracket.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb0mzatn6.jl:1\nin expression starting at /tmp/tmpb0mzatn6.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Checks whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsgd50lhm.jl:1\nin expression starting at /tmp/tmpsgd50lhm.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7ejpwd38.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7ejpwd38.jl:1\n\
    in expression starting at /tmp/tmp7ejpwd38.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp52v8yq2n.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp52v8yq2n.jl:1\n\
    in expression starting at /tmp/tmp52v8yq2n.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = bracket\nusing Test\n\n@testset begin\n\ncandidate\
    \ = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsb3ex56_.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsb3ex56_.jl:1\n\
    in expression starting at /tmp/tmpsb3ex56_.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgyssa9sj.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgyssa9sj.jl:1\n\
    in expression starting at /tmp/tmpgyssa9sj.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine if brackets is a string of \"<\" and \">\".\n    return True\
    \ if every opening bracket has a corresponding closing bracket.\nusing Test\n\n\
    @testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") ==\
    \ true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe1g88t49.jl:1\nin expression starting at /tmp/tmpe1g88t49.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwufnbjk.jl:1\nin expression starting at /tmp/tmpdwufnbjk.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwufnbjk.jl:1\nin expression starting at /tmp/tmpdwufnbjk.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp5oyh07w.jl:1\nin expression starting at /tmp/tmpp5oyh07w.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \n    brackets =\
    \ brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n\
    \    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph_d9ou4k.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph_d9ou4k.jl:1\n\
    in expression starting at /tmp/tmph_d9ou4k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp52v8yq2n.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp52v8yq2n.jl:1\n\
    in expression starting at /tmp/tmp52v8yq2n.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n\nusing Test\n\n\
    @testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") ==\
    \ true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzwqc5sqt.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzwqc5sqt.jl:1\n\
    in expression starting at /tmp/tmpzwqc5sqt.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ True if every opening bracket has a corresponding closing bracket.\n    \n \
    \   >>> correct_bracketing(\"<\")\n    false\n    >>> correct_bracketing(\"<>\"\
    )\n    true\n    >>> correct_bracketing(\"<<><>>\")\n    true\n    >>> correct_bracketing(\"\
    ><<>\")\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaz2j9ng3.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaz2j9ng3.jl:1\n\
    in expression starting at /tmp/tmpaz2j9ng3.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwufnbjk.jl:1\nin expression starting at /tmp/tmpdwufnbjk.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ - check if brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbv0c5y5a.jl:1\nin expression starting at /tmp/tmpbv0c5y5a.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Checks whether brackets is a string of \"<\" and \">\".\n    return\
    \ True if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsgd50lhm.jl:1\nin expression starting at /tmp/tmpsgd50lhm.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpqne38eiy.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqne38eiy.jl:73\n\
    in expression starting at /tmp/tmpqne38eiy.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsumz22jw.jl:71\nin expression starting at\
    \ /tmp/tmpsumz22jw.jl:71\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpas126pu8.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpas126pu8.jl:1\n\
    in expression starting at /tmp/tmpas126pu8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwk37wlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbwk37wlf.jl:1\n\
    in expression starting at /tmp/tmpbwk37wlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ - checks if brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8if5mi4.jl:1\nin expression starting at /tmp/tmpp8if5mi4.jl:1\n"
  stdout: ''
  timestamp: 1659822999
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2uz51h6a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2uz51h6a.jl:1\n\
    in expression starting at /tmp/tmp2uz51h6a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnhd_nh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnhd_nh70.jl:1\n\
    in expression starting at /tmp/tmpnhd_nh70.jl:1\n"
  stdout: ''
  timestamp: 1659822999

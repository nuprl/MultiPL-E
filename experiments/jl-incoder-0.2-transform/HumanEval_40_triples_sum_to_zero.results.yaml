language: jl
name: HumanEval_40_triples_sum_to_zero
results:
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for x in l\n        for y in l\n            for\
    \ z in l\n                if x+y+z == 0 \n                    triples_sum_to_zero[triples_sum_to_zero\
    \ == 0] += 1\n                end\n            end\n        end\n    end\n   \
    \ \n    return triples_sum_to_zero == 3\nend\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are three\
    \ distinct elements in the list that sum to zero, and False otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf7qtivs_.jl:33\nin expression starting at\
    \ /tmp/tmpf7qtivs_.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpptb6wlol.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpptb6wlol.jl:1\n\
    in expression starting at /tmp/tmpptb6wlol.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    l\
    \ = sort(l)\n    \n    sum = 0\n    \n    for x in l\n        sum += x\n     \
    \   if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1, 3, 5,\
    \ 0]) == false\n@assert triples_sum_to_zero([1, 3, -2, 1]) == true\n@assert triples_sum_to_zero([1,\
    \ 2, 3, 7]) == false\n@assert triples_sum_to_zero([2, 4, -5, 3, 9, 7]) == true\n\
    @assert triples_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are three distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3hi7nkqd.jl:31\nin expression starting at\
    \ /tmp/tmp3hi7nkqd.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero\
    \ = sum([x == 0 for x in l])\n    return triples_sum_to_zero == 3\nend\n</cell>\n\
    <code language=julia-1.5>\n@test triples_sum_to_zero([1, 3, 5, 0])\n</cell>\n\
    <code language=julia-1.5>\n@test triples_sum_to_zero([1, 3, -2, 1])\n</cell>\n\
    <code language=julia-1.5>\n@test triples_sum_to_zero([1, 2, 3, 7])\n</cell>\n\
    <code language=julia-1.5>\n@test triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n</cell>\n\
    <code language=julia-1.5>\n@test triples_sum_to_zero([1])\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a list of integers and returns True if there are\
    \ three distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ca_602x.jl:21\nin expression starting at\
    \ /tmp/tmp2ca_602x.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n    it\
    \ returns True if there are three distinct elements in the list that\n    sum\
    \ to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpee8hq_.jl:28\nin expression starting at\
    \ /tmp/tmpdpee8hq_.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpd_btr6v9.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd_btr6v9.jl:1\n\
    in expression starting at /tmp/tmpd_btr6v9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcveeibci.jl:25\nin expression starting at\
    \ /tmp/tmpcveeibci.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcveeibci.jl:25\nin expression starting at\
    \ /tmp/tmpcveeibci.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n    it\
    \ returns True if there are three distinct elements in the list that\n    sum\
    \ to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpee8hq_.jl:28\nin expression starting at\
    \ /tmp/tmpdpee8hq_.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,\
    \ 3, 5, 0]) == false\n@assert triples_sum_to_zero([1, 3, -2, 1]) == true\n@assert\
    \ triples_sum_to_zero([1, 2, 3, 7]) == false\n@assert triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7]) == true\n@assert triples_sum_to_zero([1]) == false\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are three distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7ewed7v.jl:25\nin expression starting at\
    \ /tmp/tmps7ewed7v.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero\
    \ = l == [0,0,0]\n    return triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\n\
    @doc triples_sum_to_zero\n</cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,4])\n</cell>\n\
    <code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,5])\n</cell>\n\
    <code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,6])\n</cell>\n\
    <code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,7])\n</cell>\n\
    <code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,8])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,9])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,10])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,11])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,-11,12])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,13])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,14])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,15])\n\
    </cell>\n<code language=julia-1.5>\n@doc triples_sum_to_zero([1,2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,15,16])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ouhsvwf.jl:21\nin expression starting at\
    \ /tmp/tmp6ouhsvwf.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcveeibci.jl:25\nin expression starting at\
    \ /tmp/tmpcveeibci.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpz43c3yiy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpz43c3yiy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ triples_sum_to_zero(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n \
    \   triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n\
    \   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpz43c3yiy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz43c3yiy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz43c3yiy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})\
    \ at /tmp/tmpz43c3yiy.jl:17\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpz43c3yiy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz43c3yiy.jl:27 [inlined]\n\
    \   [4] macro"
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm1dbz_rw.jl:27\nin expression starting at\
    \ /tmp/tmpm1dbz_rw.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5,\
    \ 0])\n    false\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    true\n    >>>\
    \ triples_sum_to_zero([1, 2, 3, 7])\n    false\n    >>> triples_sum_to_zero([2,\
    \ 4, -5, 3, 9, 7])\n    true\n    >>> triples_sum_to_zero([1])\n    false\n  \
    \  \"\"\"\nfunction triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum > 0\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert triples_sum_to_zero([1, 3, 5, 0]) == false\n@assert triples_sum_to_zero([1,\
    \ 3, -2, 1]) == true\n@assert triples_sum_to_zero([1, 2, 3, 7]) == false\n@assert\
    \ triples_sum_to_zero([2, 4, -5, 3, 9, 7]) == true\n@assert triples_sum_to_zero([1])\
    \ == false\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list of\
    \ integers as an input, and returns True if there are two distinct elements in\
    \ the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpxt4fen.jl:27\nin expression starting at\
    \ /tmp/tmpdpxt4fen.jl:27\n"
  stdout: ''

language: jl
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit==1)*1)\n        binary = binary + str((digit==0)*1)\n  \
    \  \n    binary = binary + \"db\"\n    binary = binary + str((decimal==0)*1)\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. You will\
    \ be given a string of binary numbers and your task is to convert it to decimal\
    \ numbers. The function should return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1dkxwf08.jl:27\nin expression starting at\
    \ /tmp/tmp1dkxwf08.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal::Int64\n        if digit == 0\n\
    \            binary += \"0\"\n        else\n            binary += \"1\"\n    end\n\
    \    binary = \"db\" + binary + \"db\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj5j8owpn.jl:25\nin expression starting at\
    \ /tmp/tmpj5j8owpn.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n\
    \    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpok_wcfba.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpok_wcfba.jl:1\n\
    in expression starting at /tmp/tmpok_wcfba.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal // 2\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. \nThe function\
    \ should take in a string and return the decimal number. \nThe string will always\
    \ have 'db' at the start and end.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvtmxnx25.jl:23\nin expression starting at\
    \ /tmp/tmpvtmxnx25.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuog5f1_4.jl:19\nin expression starting at\
    \ /tmp/tmpuog5f1_4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n        return binary\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ > 0:\n        binary = binary + \"1\"\n        decimal = decimal // 2\n    \n\
    \    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts binary numbers to\
    \ decimal numbers. A binary number consists of a\nstring of 1s and 0s. The function\
    \ should take in a string of 1s and 0s and return an Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgwm4gd3.jl:19\nin expression starting at\
    \ /tmp/tmphgwm4gd3.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    while decimal > 0\n        binary\
    \ = string(decimal%2) + binary\n        decimal = decimal/2\n    end\n    \n \
    \   binary = string(decimal%2) + binary\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_lqfdl6_.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmp_lqfdl6_.jl:36\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_lqfdl6_.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_lqfdl6_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_lqfdl6_.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp_lqfdl6_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_lqfdl6_.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_lqfdl6_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_lqfdl6_.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp_lqfdl6_.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_lqfdl6_.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0 \n        error(\"decimal must be positive\")\n    else\
    \ if decimal > 2^(64 - 1) \n        error(\"decimal must be less than 2^64\")\n\
    \    else \n        binary = \"\"\n        while decimal > 0 \n            binary\
    \ = string(binary, 0, 64 - length(binary))\n            decimal = decimal / 2\n\
    \            binary = string(binary, 0, length(binary) + 1)\n        end\n   \
    \     binary = string(binary, 0, length(binary) + 1)\n        binary = string(binary,\
    \ 0, 64 - length(binary))\n        return binary\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a decimal number to hexadecimal format. The function should return a string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn8ksm79h.jl:17\nin expression starting at\
    \ /tmp/tmpn8ksm79h.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 2\n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string and\
    \ return a string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp70sfwd8p.jl:19\nin expression starting at\
    \ /tmp/tmp70sfwd8p.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    else\
    \ if decimal > 2^(64 - 64)\n        error(\"decimal too large\")\n    else\n \
    \       binary = \"\"\n        decimal = decimal % 2\n        while decimal >\
    \ 0\n            binary = binary + \"0\"\n            decimal = decimal // 2\n\
    \        binary = binary + \"1\"\n        binary = binary + \"db\"\n        return\
    \ binary\n    end\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a binary string and return a decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqaotm6ls.jl:17\nin expression starting at\
    \ /tmp/tmpqaotm6ls.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        error(\"Decimal\
    \ cannot be negative\")\n    \n    if decimal < 1\n        error(\"Decimal cannot\
    \ be less than 1\")\n    \n    if decimal > 2^(64-1)\n        error(\"Decimal\
    \ cannot be greater than 2^(64-1)\")\n    \n    decimal = decimal % 2\n    \n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3yxfg_mu.jl:1\nin expression starting at /tmp/tmp3yxfg_mu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n        if decimal % 2 == 0\n            binary_string += \"1\"\n\
    \        end\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that will convert a binary\
    \ number into a decimal number. The function should take in a string and return\
    \ a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjbi1om75.jl:28\nin expression starting at\
    \ /tmp/tmpjbi1om75.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n   \
    \ end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_ado04yo.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_ado04yo.jl:1\n\
    in expression starting at /tmp/tmp_ado04yo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    if decimal < 0\n        error(\"\
    decimal number must be positive\")\n    end\n    \n    binary = string(decimal,\
    \ \"b\")\n    \n    if binary == \"\"\n        error(\"decimal number must be\
    \ positive\")\n    end\n    \n    if binary == \"0\"\n        error(\"decimal\
    \ number must be positive\")\n    end\n    \n    if binary == \"1\"\n        error(\"\
    decimal number must be positive\")\n    end\n    \n    if binary == \"10\"\n \
    \       error(\"decimal number must be positive\")\n    end\n    \n    if binary\
    \ == \"11\"\n        error(\"decimal number must be positive\")\n    end\n   \
    \ \n    if binary == \"100\"\n        error(\"decimal number must be positive\"\
    )\n    end\n    \n    if binary == \"101\"\n        error(\"decimal number must\
    \ be positive\")\n    end\n    \n    if binary == \"110\"\n        error(\"decimal\
    \ number must be positive\")\n    end\n    \n    if binary == \"111\"\n      \
    \  error(\"decimal number must be positive\")\n    end\n    \n    if binary ==\
    \ \"1000\"\n        error(\"decimal number must be positive\")\n    end\n    \n\
    \    if binary == \"1001\"\n        error(\"decimal number must be positive\"\
    )\n    end\n    \n    if binary == \"1010\"\n        error(\"decimal number must\
    \ be positive\")\n    end\n    \n    if binary == \"1011\"\n        error(\"decimal\
    \ number must be positive\")\n    end\n    \n    if binary == \"1100\"\n     \
    \   error(\"decimal number must be positive\")\n    end\n    \n    if binary ==\
    \ \"1101\"\n        error(\"decimal number must be positive\")\n    end\n    \n\
    \    if binary == \"1110\"\n        error(\"decimal number must be positive\"\
    )\n    end\n    \n    if binary == \"1111\"\n        error(\"decimal number must\
    \ be positive\")\n    end\n    \n    if binary == \"10000\"\n        error(\"\
    decimal number must be positive\")\n    end\n    \n    if binary == \"10001\"\n\
    \        error(\"decimal number must be positive\")\n    end\n    \n    if binary\
    \ == \"10010\"\n        error(\"decimal number must be positive\")\n    end\n\
    \    \n    if binary == \"10011\"\n        error(\"decimal number must be positive\"\
    )\n    end\n    \n    if binary == \"10100\"\n        error(\"decimal number must\
    \ be positive\")\n    end\n    \n    if binary == \"10101\"\n        error(\"\
    decimal number must be positive\")\n    end\n    \n    if binary == \"10110\"\n\
    \        error(\"decimal number must be positive\")\n    end\n    \n    if binary\
    \ == \"10111\"\n        error(\"decimal number must be positive\")\n    end\n\
    \    \n    if binary == \"11000\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpka8lew8c.jl:134\nin expression starting at\
    \ /tmp/tmpka8lew8c.jl:134\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprpeg0dz4.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprpeg0dz4.jl:1\n\
    in expression starting at /tmp/tmprpeg0dz4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    binary\
    \ = binary + decimal_to_binary(decimal / 2)\n    \n    if decimal % 2 != 1:\n\
    \        binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeaoexoj3.jl:19\nin expression starting at\
    \ /tmp/tmpeaoexoj3.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        decimal = decimal / 2\n        binary = binary + \"1\"\
    \n    \n    decimal = decimal - 2\n    \n    while decimal >= 1:\n        decimal\
    \ = decimal / 2\n        binary = binary + \"0\"\n    \n    binary = binary +\
    \ \"1\"\n    \n    return binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that converts a decimal number to binary and returns the string in reverse order.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfkhqe8xl.jl:19\nin expression starting at\
    \ /tmp/tmpfkhqe8xl.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ / 2\n    binary = binary + \"1\"\n    binary = binary + \"b\"\n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts binary to decimal.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ny2ooli.jl:25\nin expression starting at\
    \ /tmp/tmp0ny2ooli.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n\
    \        binary = string(decimal) + binary\n        decimal = decimal / 2\n  \
    \  end\n    binary = string(decimal) + binary\n    binary = binary + \"db\"\n\
    \    return binary\nend\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6tb1trbj.jl:28\nin expression starting at\
    \ /tmp/tmp6tb1trbj.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) + binary\n        decimal = decimal / 2\n    end\n    binary = string(decimal)\
    \ + binary\n    binary = string(binary)\n    binary = string(binary)\n    binary\
    \ = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33yepqfx.jl:92\nin expression starting at\
    \ /tmp/tmp33yepqfx.jl:92\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    binary_string += \"db\"\n    \n\
    \    binary_string += decimal_to_binary(decimal % 2)\n    \n    binary_string\
    \ += decimal_to_binary(decimal / 2)\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to its binary representation in reverse order. For example,\n\
    \    given decimal number 15, the function should return \"11\"\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ebe5y9q.jl:26\nin expression starting at\
    \ /tmp/tmp3ebe5y9q.jl:26\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    elseif\
    \ decimal > 9223372036854775807\n        error(\"Decimal cannot be greater than\
    \ 9223372036854775807\")\n    else\n        binary = \"\"\n        decimal = decimal\
    \ % 2\n        while decimal > 0\n            binary = binary + \"0\"\n      \
    \      decimal = decimal - 1\n        binary = binary + \"1\"\n        binary\
    \ = binary + \"b\"\n        return binary\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts a binary number to\
    \ decimal form. The function should take in a string\n    in binary format and\
    \ return the decimal number in decimal form.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ccxe2dj.jl:30\nin expression starting at\
    \ /tmp/tmp_ccxe2dj.jl:30\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary = binary + digit2binary(digit)\n\
    \    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnxf9edaf.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnxf9edaf.jl:1\n\
    in expression starting at /tmp/tmpnxf9edaf.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n    \n    binary += \"0\"\n    \n    if decimal < 10 \n        binary\
    \ += \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts a binary number to\
    \ a decimal number. \nThe function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw2fzjbyf.jl:28\nin expression starting at\
    \ /tmp/tmpw2fzjbyf.jl:28\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvkw4y_s3.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvkw4y_s3.jl:1\n\
    in expression starting at /tmp/tmpvkw4y_s3.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal < 10:\n        binary_string = \"0\" + binary_string\n\
    \    \n    if decimal < 100:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 1000:\n        binary_string = \"10\" + binary_string\n\
    \    \n    if decimal < 10000:\n        binary_string = \"100\" + binary_string\n\
    \    \n    if decimal < 100000:\n        binary_string = \"1000\" + binary_string\n\
    \    \n    if decimal < 1000000:\n        binary_string = \"10000\" + binary_string\n\
    \    \n    if decimal < 10000000:\n        binary_string = \"100000\" + binary_string\n\
    \    \n    if decimal < 100000000:\n        binary_string = \"1000000\" + binary_string\n\
    \    \n    if decimal < 1000000000:\n        binary_string = \"10000000\" + binary_string\n\
    \    \n    if decimal < 10000000000:\n        binary_string = \"100000000\" +\
    \ binary_string\n    \n    if decimal < 100000000000:\n        binary_string =\
    \ \"1000000000\" + binary_string\n    \n    if decimal < 1000000000000:\n    \
    \    binary_string = \"10000000000\" + binary_string\n    \n    if decimal < 1000000000000:\n\
    \        binary_string = \"100000000000\" + binary_string\n    \n    if decimal\
    \ < 10000000000000:\n        binary_string = \"1000000000000\" + binary_string\n\
    \    \n    if decimal < 100000000000000:\n        binary_string = \"10000000000000\"\
    \ + binary_string\n    \n    if decimal < 1000000000000000:\n        binary_string\
    \ = \"100000000000000\" + binary_string\n    \n    if decimal < 10000000000000000:\n\
    \        binary_string = \"1000000000000000\" + binary_string\n    \n    if decimal\
    \ < 100000000000000000:\n        binary_string = \"10000000000000000\" + binary_string\n\
    \    \n    if decimal < 1000000000000000000:\n        binary_string = \"100000000000000000\"\
    \ + binary_string\n    \n    if decimal < 10000000000000000000:\n        binary_string\
    \ = \"1000000000000000000\" + binary_string\n    \n    if decimal < 100000000000000000000:\n\
    \        binary_string = \"10000000000000000000\" + binary_string\n    \n    if\
    \ decimal < 1000000000000000000000:\n        binary_string = \"100000000000000000000\"\
    \ + binary_string\n    \n    if decimal < 10000000000000000000000:\n        binary_string\
    \ = \"1000000000000000000000\" + binary_string\n    \n    if decimal < 100000000000000000000000:\n\
    \        binary_string = \"10000000000000000000000\" + binary_string\n    \n \
    \   if decimal < 1000000000000000000000000:\n        binary_string = \"100000000000000000000000\"\
    \ + binary_string\n    \n    if decimal < 10000000000000000000000000:\n      \
    \  binary_string\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu9pkjrae.jl:19\nin expression starting at\
    \ /tmp/tmpu9pkjrae.jl:19\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        \n        decimal\
    \ = decimal % 2\n        \n        while decimal > 0 \n            \n        \
    \    binary = binary + \"1\"\n            decimal = decimal - 1\n            \n\
    \        binary = binary + \"0\"\n        \n    else \n        \n        decimal\
    \ = decimal % 2\n        \n        while decimal > 0 \n            \n        \
    \    binary = binary + \"0\"\n            decimal = decimal - 1\n            \n\
    \        binary = binary + \"1\"\n        \n    return binary\nend\n</cell>\n\
    <text>\nNow let's test the function by printing out a few examples:\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"while\" at /tmp/tmpx9yqtyut.jl:22 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx9yqtyut.jl:29\n\
    in expression starting at /tmp/tmpx9yqtyut.jl:29\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        \n    return binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a binary string\
    \ and return a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7nf8kuj.jl:23\nin expression starting at\
    \ /tmp/tmp_7nf8kuj.jl:23\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 10\n        binary = string(decimal, \"b\")\n    else\n    \
    \    binary = string(decimal % 2, \"b\")\n        \n        decimal /= 2\n   \
    \     \n        while decimal > 0\n            binary = string(decimal % 2, \"\
    b\") + binary\n            decimal /= 2\n        end\n    end\n    \n    binary\
    \ = string(binary, \"b\") + string(64 - decimal, \"b\")\n    \n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4gp9fnpy.jl:41

    '
  stdout: "test set: Error During Test at /tmp/tmp4gp9fnpy.jl:44\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp4gp9fnpy.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4gp9fnpy.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4gp9fnpy.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp4gp9fnpy.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp4gp9fnpy.jl:30\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4gp9fnpy.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4gp9fnpy.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp4gp9fnpy.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp4gp9fnpy.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4gp9fnpy.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4gp9fnpy.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp4gp9fnpy.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  Meth"
  timestamp: 1659822820
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n\
    \        binary = string(decimal) + binary\n        decimal = decimal / 2\n  \
    \  end\n    binary = string(decimal) + binary\n    binary = string(binary, length(binary)\
    \ - 2)\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp69u89tzo.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp69u89tzo.jl:33\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp69u89tzo.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69u89tzo.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69u89tzo.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp69u89tzo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp69u89tzo.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69u89tzo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69u89tzo.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp69u89tzo.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp69u89tzo.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69u89tzo.jl:35 [inlined]\n"
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    if decimal < 10\n\
    \        binary = \"0\" + binary\n    \n    binary = binary + decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string with each character representing a binary number\
    \ and return a string with each character representing a decimal number. Each\
    \ character in the string will be '0' or '1'.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptia12em3.jl:30\nin expression starting at\
    \ /tmp/tmptia12em3.jl:30\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n        if digit == 1\n            binary_string += \"1\"\n      \
    \  else\n            binary_string += \"0\"\n    end\n    \n    binary_string\
    \ += \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a binary string and return a decimal\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd2150olf.jl:29\nin expression starting at\
    \ /tmp/tmpd2150olf.jl:29\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmprvnff9fp.jl:125\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprvnff9fp.jl:1\n\
    in expression starting at /tmp/tmprvnff9fp.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    binary_string += \"db\"\
    \n    return binary_string\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that converts a binary string to decimal form.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmgmtvaz4.jl:17\nin expression starting at /tmp/tmpmgmtvaz4.jl:17\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal_to_binary(decimal)\n        binary\
    \ += \"0\"\n    binary += \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.0>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.0>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order. \nThe function should take one\
    \ argument, decimal::Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp43hap49u.jl:21\nin expression starting at\
    \ /tmp/tmp43hap49u.jl:21\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    binary_string = decimal_to_binary(decimal\
    \ / 2)\n    \n    if decimal % 2 == 1\n        binary_string += \"1\"\n    else\n\
    \        binary_string += \"0\"\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to a binary number with leading zeros. For example the decimal\
    \ number 15 should become \"00000000000011\".\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl_g1mw4n.jl:30\nin expression starting at\
    \ /tmp/tmpl_g1mw4n.jl:30\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    decimal %= 2\n    \n    while decimal != 0:\n        binary = binary\
    \ + \"1\"\n        decimal %= 2\n    \n    binary = binary + \"db\"\n    \n  \
    \  return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsuelp8dj.jl:19\nin expression starting at\
    \ /tmp/tmpsuelp8dj.jl:19\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuog5f1_4.jl:19\nin expression starting at\
    \ /tmp/tmpuog5f1_4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa1_88wf7.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa1_88wf7.jl:1\n\
    in expression starting at /tmp/tmpa1_88wf7.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts binary numbers to decimal numbers. Your function should\
    \ take in a string and return a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy25youj5.jl:25\nin expression starting at\
    \ /tmp/tmpy25youj5.jl:25\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal:\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    return binary_string\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\ndef decimal_to_binary(decimal):\n\
    \    binary_string = \"\"\n    \n    for digit in decimal:\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    return binary_string\n</code>\n\
    <|/ a tags=julia,string |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation what your code does and how it solves the problem\
    \ of the question. Answers with an explanation are usually more helpful and of\
    \ better quality, and are more likely to attract upvotes.\n<|/ c |>\n<| a tags=julia,string\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplnf8b22j.jl:18\nin expression starting at\
    \ /tmp/tmplnf8b22j.jl:18\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        decimal = decimal / 2\n        binary = \"0\" + binary\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a binary string and return a decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplu4zjfoa.jl:29\nin expression starting at\
    \ /tmp/tmplu4zjfoa.jl:29\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0d84gwdn.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0d84gwdn.jl:1\n\
    in expression starting at /tmp/tmp0d84gwdn.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1wtqu366.jl:19\nin expression starting at\
    \ /tmp/tmp1wtqu366.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    binary = binary + \"0\"\n    \n    return binary\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4u00kv0h.jl:19\nin expression starting at\
    \ /tmp/tmp4u00kv0h.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal > 0:\n        binary = binary + \"1\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"b\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to its binary equivalent. \nThe function should take one argument,\
    \ decimal number. \nThe function should return a string with each character representing\
    \ a binary number. \nEach character in the string will be '0' or '1'.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5f3qev73.jl:19\nin expression starting at\
    \ /tmp/tmp5f3qev73.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary = binary + str((digit\
    \ % 2) == 0 ? \"0\" : \"1\")\n    end\n    binary = binary + \"db\"\n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that converts binary to decimal.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8on3gt7u.jl:22\nin expression starting at\
    \ /tmp/tmp8on3gt7u.jl:22\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts a binary number to a decimal number. \nThe function\
    \ should take in a string with each character representing a binary number and\n\
    return an Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprj9xb82n.jl:24\nin expression starting at\
    \ /tmp/tmprj9xb82n.jl:24\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else \n\
    \        binary_string = \"0\" + binary_string\n    \n    decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc03sji4y.jl:29\nin expression starting at\
    \ /tmp/tmpc03sji4y.jl:29\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) + binary\n        decimal = decimal / 2\n    end\n    binary = string(decimal)\
    \ + binary\n    binary = string(binary, \"db\")\n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpzi9n1kfi.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpzi9n1kfi.jl:32\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzi9n1kfi.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi9n1kfi.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzi9n1kfi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpzi9n1kfi.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzi9n1kfi.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi9n1kfi.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzi9n1kfi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpzi9n1kfi.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzi9n1kfi.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi9n1kfi.jl:34 [inline"
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n        \n    binary = binary + \"0\"\n    \n    if decimal < 10 \n  \
    \      binary = binary + \"1\"\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcqmdh9yw.jl:1\nin expression starting at /tmp/tmpcqmdh9yw.jl:1\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = \"0\"\n\
    \    \n    else if decimal < 10\n        binary = \"0\"\n    \n    else if decimal\
    \ < 16\n        binary = \"1\"\n    \n    else if decimal < 32\n        binary\
    \ = \"1\"\n    \n    else if decimal < 64\n        binary = \"10\"\n    \n   \
    \ else if decimal < 128\n        binary = \"11\"\n    \n    else if decimal <\
    \ 256\n        binary = \"100\"\n    \n    else if decimal < 512\n        binary\
    \ = \"101\"\n    \n    else if decimal < 1024\n        binary = \"110\"\n    \n\
    \    else if decimal < 2048\n        binary = \"111\"\n    \n    else if decimal\
    \ < 4096\n        binary = \"1000\"\n    \n    else if decimal < 8192\n      \
    \  binary = \"1001\"\n    \n    else if decimal < 16384\n        binary = \"1010\"\
    \n    \n    else if decimal < 32768\n        binary = \"1011\"\n    \n    else\
    \ if decimal < 65536\n        binary = \"1100\"\n    \n    else if decimal < 131072\n\
    \        binary = \"1101\"\n    \n    else if decimal < 262144\n        binary\
    \ = \"1110\"\n    \n    else if decimal < 524288\n        binary = \"1111\"\n\
    \    \n    else\n        error(\"Decimal number too large\")\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(128)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(256)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(512)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1024)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2048)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4096)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8192)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16384)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgowcp16c.jl:24\nin expression starting at\
    \ /tmp/tmpgowcp16c.jl:24\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpicrhxcca.jl:33\nin expression starting at\
    \ /tmp/tmpicrhxcca.jl:33\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary\
    \ + \"1\"\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_rjvkacc.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_rjvkacc.jl:1\n\
    in expression starting at /tmp/tmp_rjvkacc.jl:1\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuog5f1_4.jl:19\nin expression starting at\
    \ /tmp/tmpuog5f1_4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal:\n        \n        if\
    \ i != 0:\n            \n            binary += \"1\"\n            \n        else:\n\
    \            \n            binary += \"0\"\n            \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9puuw702.jl:19\nin expression starting at\
    \ /tmp/tmp9puuw702.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string with each character representing a binary number and\n\
    return a string with each character representing a decimal number. Each character\
    \ in the string will be a decimal number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwbh6j42z.jl:34\nin expression starting at\
    \ /tmp/tmpwbh6j42z.jl:34\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmztmmq6a.jl:19\nin expression starting at\
    \ /tmp/tmpmztmmq6a.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary = binary + digit2binary(digit)\n\
    \    return binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a binary string and return a decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq8t82rys.jl:20\nin expression starting at\
    \ /tmp/tmpq8t82rys.jl:20\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. A binary number is represented by a string\n\
    of 0s and 1s. Each character in the string represents a binary digit. For example,\
    \ the string \"1001\" represents\nthe number 5 in decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0yb4cbww.jl:23\nin expression starting at\
    \ /tmp/tmp0yb4cbww.jl:23\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    while decimal > 1\n        binary_string\
    \ = binary_string + \"0\"\n        decimal = decimal - 1\n    \n    binary_string\
    \ = binary_string + binary_string(decimal)\n    \n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that will\
    \ convert a binary string to a decimal number. Your function should take in a\
    \ binary string as input and return the decimal number in decimal form.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa4r7tigy.jl:32\nin expression starting at\
    \ /tmp/tmpa4r7tigy.jl:32\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    else\
    \ if decimal > 2^(64 - 64)\n        error(\"decimal must be less than 2^64\")\n\
    \    else\n        binary = \"\"\n        while decimal > 0\n            binary\
    \ = string(binary, 0, ceil(log2(decimal))) |> to_string() |> char\n          \
    \  decimal = decimal / 2\n        end\n        binary = string(binary, 0, 64)\
    \ |> to_string() |> char\n        binary = string(binary, 0, \"db\") |> to_string()\
    \ |> char\n        return binary\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that converts binary numbers to decimal numbers. A binary number\
    \ consists of a\nsequence of 0s and 1s. A decimal number consists of a sequence\
    \ of digits. Each digit consists of a\nsingle '0' or '1'.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphz4_0z3s.jl:17\nin expression starting at\
    \ /tmp/tmphz4_0z3s.jl:17\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else \n        binary_string\
    \ = \"\"\n        binary_string += \"0\"\n        binary_string += decimal_to_binary(decimal\
    \ - 1)\n        binary_string += \"1\"\n        return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string and\
    \ return a string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6qewl63t.jl:24\nin expression starting at\
    \ /tmp/tmp6qewl63t.jl:24\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        \n        decimal\
    \ = decimal % 2\n        \n        while decimal > 0 \n            \n        \
    \    binary = binary + \"1\"\n            decimal = decimal / 2\n            \n\
    \        binary = binary + \"0\"\n        \n    else \n        \n        decimal\
    \ = decimal % 2\n        \n        while decimal < 0 \n            \n        \
    \    binary = binary + \"0\"\n            decimal = decimal / 2\n            \n\
    \        binary = binary + \"1\"\n        \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ decimal numbers to binary numbers. \nThe function should take a single argument\
    \ that is a decimal number. \nThe function should return a string with each character\
    \ representing a binary number. \nEach character in the string will be '0' or\
    \ '1'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"while\" at /tmp/tmphj4tpuvp.jl:22 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphj4tpuvp.jl:29\n\
    in expression starting at /tmp/tmphj4tpuvp.jl:29\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 2\n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to decimal form. The function should take in a string with each\
    \ character\nrepresenting a binary number and return the decimal form of the binary\
    \ number. There will be an extra couple of characters\n'db' at the beginning and\
    \ at the end of the string. The extra characters are there to help with the format.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_jh6wxfl.jl:19\nin expression starting at\
    \ /tmp/tmp_jh6wxfl.jl:19\n"
  stdout: ''
  timestamp: 1659822819
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal !=\
    \ 0\n        binary_string += \"0\"\n        decimal = decimal / 2\n    binary_string\
    \ += \"1\"\n    return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpc01ndwt7.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc01ndwt7.jl:1\n\
    in expression starting at /tmp/tmpc01ndwt7.jl:1\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0 \n        error(\"decimal must be positive\")\n    else\
    \ if decimal > 2^(64 - 1) \n        error(\"decimal must be less than 2^(64 -\
    \ 1)\")\n    else \n        binary = \"\"\n        while decimal != 0 \n     \
    \       binary = binary + (\"1\" if decimal % 2 == 0 else \"0\")\n           \
    \ decimal = decimal / 2\n        end\n        binary = binary + \"db\"\n     \
    \   return binary\n    end\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvh3fhb4o.jl:17\nin expression starting at\
    \ /tmp/tmpvh3fhb4o.jl:17\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    for i in decimal_to_binary(decimal-1)\n        binary += \"0\"\n  \
    \  end\n    \n    for i in decimal_to_binary(decimal)\n        binary += \"1\"\
    \n    end\n    \n    binary = \"db\" + binary + \"db\"\n    \n    return binary\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary number\
    \ to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptf689vbh.jl:34\nin expression starting at\
    \ /tmp/tmptf689vbh.jl:34\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    decimal = decimal % 2\n    \n    while decimal != 0:\n        binary\
    \ = binary + \"1\"\n        decimal = decimal // 2\n    \n    binary = binary\
    \ + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9sj2omq7.jl:19\nin expression starting at\
    \ /tmp/tmp9sj2omq7.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary = binary + str((digit\
    \ % 2) == 0)\n    end\n    binary = binary + \"db\"\n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn01_4tve.jl:22\nin expression starting at\
    \ /tmp/tmpn01_4tve.jl:22\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal < 16:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 256:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 65536:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 16777216:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 4294967296:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 18446744073709551616:\n        binary_string = \"1\" +\
    \ binary_string\n    \n    if decimal < 9223372036854775808:\n        binary_string\
    \ = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n    \
    \    binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if \nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rectiim.jl:19\nin expression starting at\
    \ /tmp/tmp4rectiim.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. A binary number consists of a\nsequence of\
    \ 0s and 1s. Each character in the string will be either '0' or '1'.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2j0eo2de.jl:31\nin expression starting at\
    \ /tmp/tmp2j0eo2de.jl:31\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid Input\"\n        return binary_string\n   \
    \ \n    binary_string = decimal_to_binary(decimal / 2)\n    \n    if decimal %\
    \ 2 == 1\n        binary_string += \"1\"\n    else\n        binary_string += \"\
    0\"\n    \n    return binary_string + decimal_to_binary(decimal - binary_string.length\
    \ + 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpavzxzuug.jl:1\nin expression starting at /tmp/tmpavzxzuug.jl:1\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    binary_string = \"1\"\n   \
    \ \n    decimal = decimal - 2\n    \n    while decimal >= 2:\n        binary_string\
    \ = \"0\" + binary_string\n        decimal = decimal - 2\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string with\
    \ each character representing a binary number. Your function should return the\
    \ decimal number represented by the binary number. There will be an extra couple\
    \ of characters 'db' at the beginning and at the end of the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkp_zemq_.jl:19\nin expression starting at\
    \ /tmp/tmpkp_zemq_.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n    end\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order. \nThe function should take a single decimal number\
    \ as an argument and return a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpskazz8cn.jl:26\nin expression starting at\
    \ /tmp/tmpskazz8cn.jl:26\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    binary\
    \ = binary + \"1\"\n    \n    decimal = decimal / 2\n    \n    binary = binary\
    \ + decimal_to_binary(decimal)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg85qggaz.jl:19\nin expression starting at\
    \ /tmp/tmpg85qggaz.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. A binary\
    \ number consists of a\nsequence of '0' and '1' characters. Each character represents\
    \ a number. For example, the binary number '11'\nrepresents the decimal number\
    \ 11.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp03pzal4h.jl:19\nin expression starting at\
    \ /tmp/tmp03pzal4h.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary string to\
    \ a decimal number. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd5oe9u1w.jl:18\nin expression starting at /tmp/tmpd5oe9u1w.jl:18\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        decimal = decimal / 2\n        binary = binary + \"1\"\
    \n    \n    binary = binary + \"0\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary to decimal.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt8p6fi92.jl:19\nin expression starting at\
    \ /tmp/tmpt8p6fi92.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. The function should\
    \ take in a string and return a Int64.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpam_fjj_4.jl:25\nin expression starting at\
    \ /tmp/tmpam_fjj_4.jl:25\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n    end\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to hexadecimal format. The\
    \ function should return a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_d5irosw.jl:26\nin expression starting at\
    \ /tmp/tmp_d5irosw.jl:26\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal form. Your function should take in a binary string and return the decimal\
    \ number. \nThe function should raise an error if the string is not in binary\
    \ format. \nThe function should raise an error if the string contains more than\
    \ 1 '1'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn801g8br.jl:23\nin expression starting at\
    \ /tmp/tmpn801g8br.jl:23\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprpeg0dz4.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprpeg0dz4.jl:1\n\
    in expression starting at /tmp/tmprpeg0dz4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else \n        binary = \"\
    \"\n        decimal = decimal % 2\n        while decimal != 0 \n            binary\
    \ = binary + \"0\"\n            decimal = decimal / 2\n        binary = binary\
    \ + \"1\"\n        return binary\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ hexadecimal format. The function should return a string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptbhujfpc.jl:27\nin expression starting at\
    \ /tmp/tmptbhujfpc.jl:27\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    binary_string += decimal_to_binary(decimal / 2)\n    binary_string\
    \ += decimal_to_binary(decimal % 2)\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyq8h5d18.jl:19\nin expression starting at\
    \ /tmp/tmpyq8h5d18.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnseizkfm.jl:19\nin expression starting at /tmp/tmpnseizkfm.jl:19\n"
  stdout: ''
  timestamp: 1659822821
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal:\n        if i != 0:\n\
    \            binary += \"1\"\n        else:\n            binary += \"0\"\n   \
    \ \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that will convert a binary number to a decimal number. Your\
    \ function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tdnwt1f.jl:19\nin expression starting at\
    \ /tmp/tmp7tdnwt1f.jl:19\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    if\
    \ decimal > 2:\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    binary = binary + decimal_to_binary(decimal)\n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpja94n_11.jl:19\nin expression starting at\
    \ /tmp/tmpja94n_11.jl:19\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    else\
    \ if decimal > 2^(64 - 64)\n        error(\"Decimal cannot be greater than 2^64\"\
    )\n    else\n        binary = \"\"\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pwq26n9.jl:17\nin expression starting at\
    \ /tmp/tmp0pwq26n9.jl:17\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    decimal = decimal % 2\n    \n    while decimal > 0:\n        binary\
    \ = binary + \"1\"\n        decimal = decimal // 2\n    \n    return binary +\
    \ \"db\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpum93wzet.jl:19\nin expression starting at\
    \ /tmp/tmpum93wzet.jl:19\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    binary\
    \ = binary + \"1\"\n    \n    decimal = decimal / 2\n    \n    binary = binary\
    \ + decimal_to_binary(decimal)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqmqh076a.jl:19\nin expression starting at\
    \ /tmp/tmpqmqh076a.jl:19\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        decimal = decimal / 2\n    \n    binary\
    \ = binary + \"db\"\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp8glx2a3.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp8glx2a3.jl:1\n\
    in expression starting at /tmp/tmpp8glx2a3.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal //\
    \ 2\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8twre49.jl:1\nin expression starting at /tmp/tmph8twre49.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in 0..(decimal.bit_length()-1)\n\
    \        binary = binary + \"0\"\n    \n    for i in 0..(decimal.bit_length()-1)\n\
    \        binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n \
    \   return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp99e2gh2x.jl:28\nin expression starting at\
    \ /tmp/tmp99e2gh2x.jl:28\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        binary = binary + \"0\"\n        decimal = decimal\
    \ - 1\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfri_tsp.jl:32\nin expression starting at\
    \ /tmp/tmpxfri_tsp.jl:32\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp08k2wl2t.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp08k2wl2t.jl:1\n\
    in expression starting at /tmp/tmp08k2wl2t.jl:1\n"
  stdout: ''
  timestamp: 1659822822
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    else\
    \ if decimal > 2^(64 - 64)\n        error(\"Decimal cannot be greater than 2^64\"\
    )\n    else\n        binary = \"\"\n        decimal = decimal % 2\n        while\
    \ decimal != 0\n            binary = binary + \"0\"\n            decimal = decimal\
    \ // 2\n        binary = binary + \"1\"\n        binary = binary + \"db\"\n  \
    \      return binary\n    end\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-32)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-0)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-65)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-66)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-67)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-68)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-69)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-70)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-71)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-72)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-73)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-74)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-75)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-76)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-77)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-78)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-79)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-80)\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvuhx5qk3.jl:17\nin expression starting at\
    \ /tmp/tmpvuhx5qk3.jl:17\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for i in decimal_to_binary(decimal)\n        binary\
    \ = binary + i\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb7kjp9_y.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb7kjp9_y.jl:1\n\
    in expression starting at /tmp/tmpb7kjp9_y.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in 0..(decimal.bit_length() - 1)\n\
    \        binary = binary + \"0\"\n    \n    for i in 0..(decimal.bit_length()\
    \ - 1)\n        binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string and return a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiirg88oa.jl:28\nin expression starting at\
    \ /tmp/tmpiirg88oa.jl:28\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2k3dpud.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2k3dpud.jl:1\n\
    in expression starting at /tmp/tmph2k3dpud.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid input\")\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_vkp_b_a.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_vkp_b_a.jl:1\n\
    in expression starting at /tmp/tmp_vkp_b_a.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2k3dpud.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2k3dpud.jl:1\n\
    in expression starting at /tmp/tmph2k3dpud.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n        return binary\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ > 0:\n        binary = binary + \"1\"\n        decimal = decimal // 2\n    \n\
    \    binary = binary + \"0\"\n    \n    return binary\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr0_xp2s4.jl:19\nin expression starting at\
    \ /tmp/tmpr0_xp2s4.jl:19\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0:\n            binary += \"0\"\n        elif digit == 1:\n            binary\
    \ += \"1\"\n        else:\n            binary += \"0\"\n    \n    binary = binary[2:]\n\
    \    binary = binary[:len(binary)-1]\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a binary number\
    \ as a string\nand return a decimal number.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0cnj3pcq.jl:19\nin expression starting at\
    \ /tmp/tmp0cnj3pcq.jl:19\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        \n      \
    \  if digit == 0\n            binary += \"0\"\n        elseif digit == 1\n   \
    \         binary += \"1\"\n        else\n            error \"Invalid input\"\n\
    \        end\n    end\n    \n    binary = binary[2:end]\n    \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that converts a binary number to a decimal number.\
    \ The function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpidcboj8o.jl:22 expected \"\
    end\", got \"\"\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpidcboj8o.jl:25\n\
    in expression starting at /tmp/tmpidcboj8o.jl:25\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 0 :\n        binary = binary + \"1\"\n        return binary\n    \n\
    \    decimal = decimal / 2\n    \n    if decimal > 0 :\n        binary = binary\
    \ + \"1\"\n        return binary\n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpic71jc32.jl:19\nin expression starting at\
    \ /tmp/tmpic71jc32.jl:19\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmprvnff9fp.jl:125\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprvnff9fp.jl:1\n\
    in expression starting at /tmp/tmprvnff9fp.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary to decimal.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xj3_zao.jl:23\nin expression starting at\
    \ /tmp/tmp5xj3_zao.jl:23\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        \n    return binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that will\
    \ convert a binary number to a decimal number. \nThe function should take in a\
    \ string and return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppv06gui3.jl:23\nin expression starting at\
    \ /tmp/tmppv06gui3.jl:23\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    end\n\
    \    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = \"0\"\n \
    \   else\n        binary = \"1\"\n    end\n    \n    decimal = decimal / 2\n \
    \   \n    while decimal > 0\n        binary = binary + \"0\"\n        decimal\
    \ = decimal - 1\n    end\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbidc50q7.jl:40

    '
  stdout: "test set: Error During Test at /tmp/tmpbidc50q7.jl:43\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpbidc50q7.jl:34\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbidc50q7.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbidc50q7.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpbidc50q7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpbidc50q7.jl:30\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbidc50q7.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbidc50q7.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpbidc50q7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpbidc50q7.jl:30\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbidc50q7.jl:45 [inline"
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8yt6g2mr.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8yt6g2mr.jl:1\n\
    in expression starting at /tmp/tmp8yt6g2mr.jl:1\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   else if decimal > 2^(64-1)\n        error(\"decimal number must be less than\
    \ 2^64\")\n    else\n        binary = \"\"\n        decimal = decimal % 2\n  \
    \      while decimal != 0\n            binary = binary + \"0\"\n            decimal\
    \ = decimal // 2\n        binary = binary + \"1\"\n        return binary\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that converts binary numbers to decimal numbers.\
    \ Your function should take in a string with each character representing a binary\
    \ number and return the decimal number. There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string. The extra characters are\
    \ there to help with the format.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6iyk4pys.jl:17\nin expression starting at\
    \ /tmp/tmp6iyk4pys.jl:17\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2k3dpud.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2k3dpud.jl:1\n\
    in expression starting at /tmp/tmph2k3dpud.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        binary = binary + str((digit\
    \ % 2) == 0)\n    end\n    binary = binary + \"db\"\n    return binary\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string and return a string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplg96dsnd.jl:22\nin expression starting at\
    \ /tmp/tmplg96dsnd.jl:22\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    \n \
    \   decimal = decimal % 2\n    \n    while decimal > 0\n        binary = binary\
    \ + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal / 2\n  \
    \  \n    while decimal > 0\n        binary = binary + \"1\"\n        decimal =\
    \ decimal - 1\n    \n    binary = binary + \"db\"\n    \n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4ceunh0j.jl:37\nin expression starting at\
    \ /tmp/tmp4ceunh0j.jl:37\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    decimal = decimal % 2\n    \n    while decimal > 0:\n        binary\
    \ = binary + \"1\"\n        decimal = decimal // 2\n    \n    binary = binary\
    \ + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string as input and\
    \ returns the string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqx3v80mn.jl:19\nin expression starting at\
    \ /tmp/tmpqx3v80mn.jl:19\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal:\n        binary =\
    \ binary + str((digit % 2) == 0)\n        digit = digit // 2\n    \n    binary\
    \ = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo915e5r4.jl:19\nin expression starting at\
    \ /tmp/tmpo915e5r4.jl:19\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"decimal must be positive\")\n  \
    \  \n    binary = \"\"\n    \n    if decimal < 2\n        binary = binary + \"\
    0\"\n    else\n        binary = binary + \"1\"\n    \n    decimal = decimal -\
    \ 2\n    \n    while decimal >= 0\n        binary = binary + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that will convert a decimal number to a binary number with leading\
    \ zeros.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1r6_0x2u.jl:36\nin expression starting at\
    \ /tmp/tmp1r6_0x2u.jl:36\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8yt6g2mr.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8yt6g2mr.jl:1\n\
    in expression starting at /tmp/tmp8yt6g2mr.jl:1\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"Decimal number too large\"\
    )\n    else\n        binary = \"\"\n        while decimal > 0\n            binary\
    \ = binary + \"0\"\n            decimal = decimal / 2\n        end\n        binary\
    \ = binary + \"1\"\n        binary = binary + string(64 - binary.length, \"b\"\
    )\n        return binary\n    end\nend\n</cell>\n<code language=julia-1.0>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.0>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to hexadecimal format.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpva201ypm.jl:17\nin expression starting at\
    \ /tmp/tmpva201ypm.jl:17\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"Decimal\
    \ cannot be negative\")\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n    \n\
    \    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary to decimal.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9guhc8gv.jl:31\nin expression starting at\
    \ /tmp/tmp9guhc8gv.jl:31\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2k3dpud.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2k3dpud.jl:1\n\
    in expression starting at /tmp/tmph2k3dpud.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to decimal form. For example, if the binary number is\n    \"\
    0100\", the function should return 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2idghre8.jl:21\nin expression starting at\
    \ /tmp/tmp2idghre8.jl:21\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 10\n        binary = \"0\"\n    else\n        binary = \"1\"\n    end\n  \
    \  \n    binary = binary * decimal\n    \n    if decimal > 1\n        binary =\
    \ binary * decimal_to_binary(decimal - 1)\n    end\n    \n    binary = binary\
    \ + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwqiruud_.jl:39\nin expression starting at\
    \ /tmp/tmpwqiruud_.jl:39\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmprvnff9fp.jl:125\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprvnff9fp.jl:1\n\
    in expression starting at /tmp/tmprvnff9fp.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ / 2\n    binary = binary + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpclxq7uzu.jl:24\nin expression starting at\
    \ /tmp/tmpclxq7uzu.jl:24\n"
  stdout: ''
  timestamp: 1659822824
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that will convert a binary string to a decimal number. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05egfpde.jl:25\nin expression starting at\
    \ /tmp/tmp05egfpde.jl:25\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpczyiccye.jl:118\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpczyiccye.jl:1\n\
    in expression starting at /tmp/tmpczyiccye.jl:1\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n\
    \    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjnz7qhnh.jl:1\nin expression starting at /tmp/tmpjnz7qhnh.jl:1\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        decimal = decimal / 2\n    \n    binary\
    \ = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. Your function should take in a string and return a string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9hhmvvw.jl:26\nin expression starting at\
    \ /tmp/tmpb9hhmvvw.jl:26\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary +=\
    \ if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary += \"db\"\n \
    \   \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a string and return a string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzcy7m0ts.jl:19\nin expression starting at /tmp/tmpzcy7m0ts.jl:19\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. A binary number consists of a\nsequence of\
    \ '0' and '1' characters. Each character represents either a '0' or a '1'. For\
    \ example,\n'1000' represents a number equal to $2^4 + 2^3 + 2^2 + 2^1 + 2^0$.\
    \ Write a function that takes a binary\nnumber as input and returns the decimal\
    \ equivalent of the binary number. For example, the\nbinary number '1000' represents\
    \ the decimal number $2^4 + 2^3 + 2^2 + 2^1 + 2^0$. Write a function\nthat takes\
    \ a binary number as input and returns the decimal equivalent of the binary number\
    \ in\nreverse order. For example, the binary number '1000' represents the decimal\
    \ number $2^0 + 2^1 + 2^2 + 2^3 + 2^4$. Write a\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp20_gmcgo.jl:24\nin expression starting at\
    \ /tmp/tmp20_gmcgo.jl:24\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    if decimal < 16:\n        binary =\
    \ binary + \"0\"\n        return binary\n    \n    if decimal < 256:\n       \
    \ binary = binary + \"0\"\n        return binary\n    \n    if decimal < 65536:\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 4294967296:\n        binary = binary + \"0\"\n        return binary\n    \n\
    \    if decimal < 18446744073709551616:\n        binary = binary + \"0\"\n   \
    \     return binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = binary + \"0\"\n        return binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 9223372036854775808:\n        binary = binary + \"0\"\n        return binary\n\
    \    \n    if decimal < 18446744073709551616:\n        binary = binary + \"0\"\
    \n        return binary\n    \n    if decimal < 9223372036854775808:\n       \
    \ binary = binary + \"0\"\n        return binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 9223372036854775808:\n        binary = binary + \"0\"\n        return binary\n\
    \    \n    if decimal < 18446744073709551616:\n        binary = binary + \"0\"\
    \n        return binary\n    \n    if decimal < 9223372036854775808:\n       \
    \ binary = binary + \"0\"\n        return binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 9223372036854775808:\n        binary = binary + \"0\"\n        return binary\n\
    \    \n    if decimal < 18446744073709551616:\n        binary = binary + \"0\"\
    \n        return binary\n    \n    if decimal < 9223372036854775808:\n       \
    \ binary = binary + \"0\"\n        return binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 9223372036854775808:\n        binary = binary + \"0\"\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa8bd9muv.jl:19\nin expression starting at\
    \ /tmp/tmpa8bd9muv.jl:19\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts binary numbers to decimal numbers. A binary number\
    \ consists of a\nsequence of 0s and 1s. Each time you see a 0, you subtract 1\
    \ from the number represented by the binary\nnumber. For example, if you have\
    \ binary number \"11\", the function should return 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qpcack1.jl:24\nin expression starting at\
    \ /tmp/tmp0qpcack1.jl:24\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in 0..(decimal.bit_length() - 1):\n\
    \        binary += \"0\"\n    \n    for i in 0..(decimal.bit_length() - 1):\n\
    \        binary += \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: newline not allowed after \":\" used for quoting\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmph0jst7uk.jl:19\nin expression\
    \ starting at /tmp/tmph0jst7uk.jl:19\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal < 16:\n        binary_string = \"0\" + binary_string\n\
    \    \n    if decimal < 256:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 65536:\n        binary_string = \"10\" + binary_string\n\
    \    \n    if decimal < 4294967296:\n        binary_string = \"11\" + binary_string\n\
    \    \n    if decimal < 18446744073709551616:\n        binary_string = \"100\"\
    \ + binary_string\n    \n    if decimal < 9223372036854775808:\n        binary_string\
    \ = \"101\" + binary_string\n    \n    if decimal < 18446744073709551616:\n  \
    \      binary_string = \"110\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"111\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1000\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1001\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1010\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1011\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1100\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1101\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1110\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1111\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"11000\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"11001\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"11010\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"11011\" + binary_string\n    \n    if decimal < 184467440737095516\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0bp3l3pm.jl:19\nin expression starting at\
    \ /tmp/tmp0bp3l3pm.jl:19\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf2kum61e.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf2kum61e.jl:1\n\
    in expression starting at /tmp/tmpf2kum61e.jl:1\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    return binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts binary numbers to decimal\
    \ numbers.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf4mqp06b.jl:19\nin expression starting at\
    \ /tmp/tmpf4mqp06b.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"db0\"\n    else \n        binary_string\
    \ = \"\"\n        decimal = decimal % 2\n        while decimal != 0 \n       \
    \     binary_string = binary_string + \"0\"\n            decimal = decimal - 1\n\
    \        binary_string = binary_string + \"1\"\n        return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that will convert a binary number to a decimal number. The function\
    \ should take in a binary string and return the decimal number. There will be\
    \ an extra couple of characters 'db' at the beginning and at the end of the string.\
    \ The extra characters are there to help with the format.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpef2qor7v.jl:26\nin expression starting at\
    \ /tmp/tmpef2qor7v.jl:26\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0 \n        error(\"decimal must be positive\")\n    else\
    \ if decimal >= 2^(64 - 1) \n        error(\"decimal must be smaller than 2^64\"\
    )\n    else \n        binary = \"\"\n        while decimal > 0 \n            binary\
    \ = string(decimal%2) + binary \n            decimal = decimal / 2\n        end\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph89n66zk.jl:17\nin expression starting at\
    \ /tmp/tmph89n66zk.jl:17\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return binary_string\n    \n    binary_string = \"db\"\n    \n    binary_string\
    \ += decimal_to_binary(decimal / 2)\n    \n    binary_string += decimal_to_binary(decimal\
    \ % 2)\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary string to\
    \ a decimal number. \nThe function should take in a string and return the decimal\
    \ number. \nThe string will always begin with 'db'.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo94639mu.jl:29\nin expression starting at\
    \ /tmp/tmpo94639mu.jl:29\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprpeg0dz4.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprpeg0dz4.jl:1\n\
    in expression starting at /tmp/tmprpeg0dz4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph2k3dpud.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph2k3dpud.jl:1\n\
    in expression starting at /tmp/tmph2k3dpud.jl:1\n"
  stdout: ''
  timestamp: 1659822823
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        decimal = decimal / 2\n    end\n   \
    \ \n    return binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmyo48urs.jl:25\nin expression starting at\
    \ /tmp/tmpmyo48urs.jl:25\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal != 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    binary = binary +\
    \ \"1\"\n    \n    if decimal > 1\n        binary = binary + \"b\"\n    \n   \
    \ return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpddfwzvht.jl:23\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpddfwzvht.jl:1\n\
    in expression starting at /tmp/tmpddfwzvht.jl:1\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuog5f1_4.jl:19\nin expression starting at\
    \ /tmp/tmpuog5f1_4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvkw4y_s3.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvkw4y_s3.jl:1\n\
    in expression starting at /tmp/tmpvkw4y_s3.jl:1\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal > 0:\n        binary = binary + \"1\"\n        decimal = decimal - 1\n\
    \    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg78__q_2.jl:19\nin expression starting at\
    \ /tmp/tmpg78__q_2.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 4294967296:\n        binary\
    \ = \"100\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"1000\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"10000\" + binary\n    \n    if decimal < 18446744073709551616:\n       \
    \ binary = \"100000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63v5ww67.jl:19\nin expression starting at\
    \ /tmp/tmp63v5ww67.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n   \
    \ \n    if decimal < 10\n        binary = binary + \"0\"\n    else\n        binary\
    \ = binary + \"1\"\n    \n    decimal = decimal - 2\n    \n    while decimal >=\
    \ 2\n        decimal = decimal / 2\n        binary = binary + \"0\"\n    \n  \
    \  binary = binary + \"1\"\n    \n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp5kpmvl1f.jl:21\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5kpmvl1f.jl:1\n\
    in expression starting at /tmp/tmp5kpmvl1f.jl:1\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n\
    \        binary = string(decimal) + binary\n        decimal = decimal / 2\n  \
    \  end\n    binary = string(decimal) + binary\n    binary = string(10) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\n    binary = string(1) + binary\n    binary\
    \ = string(1) + binary\n    binary = string(1) + binary\n    binary = string(1)\
    \ + binary\n    binary = string(1) + binary\n    binary = string(1) + binary\n\
    \    binary = string(1) + binary\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2i8jg5rq.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2i8jg5rq.jl:1\n\
    in expression starting at /tmp/tmp2i8jg5rq.jl:1\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    \n    binary = \"\"\n    \n    while decimal > 0\n        binary = binary\
    \ + \"0\"\n        decimal = decimal - 1\n    \n    binary = binary + \"1\"\n\
    \    \n    binary = binary + \"db\"\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo4ojiomk.jl:1\nin expression starting at /tmp/tmpo4ojiomk.jl:1\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"Decimal number must be less\
    \ than 2^64\")\n    else\n        binary = \"\"\n        decimal = decimal % 2\n\
    \        while decimal != 0\n            binary = binary + \"0\"\n           \
    \ decimal = decimal // 2\n        binary = binary + \"1\"\n        binary = binary\
    \ + \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n\
    \        binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\n        binary = binary + \"b\"\n        binary = binary +\
    \ \"b\"\n        binary = binary + \"b\"\n        binary = binary + \"b\"\n  \
    \      binary = binary + \"b\"\n        binary = binary + \"b\"\n        binary\
    \ = binary + \"b\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp960x4tln.jl:17\nin expression starting at\
    \ /tmp/tmp960x4tln.jl:17\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return binary_string\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\n\
    Write a function that will convert a decimal number to binary and will return\
    \ the string with '0' or '1' characters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnqdxg1fe.jl:19\nin expression starting at /tmp/tmpnqdxg1fe.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ += \"1\"\n        \n        decimal_to_binary(decimal - 1)\n        \n    binary_string\
    \ += \"0\"\n    \n    return binary_string\n</code>\n<|/ a tags=recursion,haskell,binary,decimal\
    \ |>\n<| a dscore=0 |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp37bhdlqo.jl:26\nin expression starting at\
    \ /tmp/tmp37bhdlqo.jl:26\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that will convert a binary number to a decimal number. Your function\
    \ should take in a string and return a Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2nkz06bp.jl:24\nin expression starting at\
    \ /tmp/tmp2nkz06bp.jl:24\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqju8jn58.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqju8jn58.jl:1\n\
    in expression starting at /tmp/tmpqju8jn58.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string and return a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvs3vjrr.jl:23\nin expression starting at\
    \ /tmp/tmprvs3vjrr.jl:23\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    binary_string += decimal_to_binary(decimal - 2)\n    \n \
    \   return binary_string\n</code>\n<|/ a tags=recursion,haskell,binary,decimal\
    \ |>\n<| a |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4j7b9odf.jl:19\nin expression starting at\
    \ /tmp/tmp4j7b9odf.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary string to a decimal number. Your function should take in a binary string\
    \ and return a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbfjfs48n.jl:21\nin expression starting at\
    \ /tmp/tmpbfjfs48n.jl:21\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n\
    \        binary = reverse binary\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"binary\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxp2jbxjr.jl:20\nin expression starting at /tmp/tmpxp2jbxjr.jl:20\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a binary number as a\n    string,\
    \ and return the decimal number as a string.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6r187f3.jl:23\nin expression starting at\
    \ /tmp/tmpi6r187f3.jl:23\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        decimal = decimal / 2\n    \n    return\
    \ binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp2kfm6tx.jl:24\nin expression starting at\
    \ /tmp/tmpp2kfm6tx.jl:24\n"
  stdout: ''
  timestamp: 1659822827
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpczyiccye.jl:118\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpczyiccye.jl:1\n\
    in expression starting at /tmp/tmpczyiccye.jl:1\n"
  stdout: ''
  timestamp: 1659822825
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal::Int64\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    binary_string += \"db\"\
    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. Your\
    \ function should take in a binary string and return a decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvtrr1ba0.jl:17\nin expression starting at /tmp/tmpvtrr1ba0.jl:17\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 10:\n        binary = \"0\"\n    \n    if decimal < 100:\n        binary =\
    \ \"1\" + binary\n    \n    if decimal < 1000:\n        binary = \"10\" + binary\n\
    \    \n    if decimal < 10000:\n        binary = \"100\" + binary\n    \n    if\
    \ decimal < 100000:\n        binary = \"1000\" + binary\n    \n    if decimal\
    \ < 1000000:\n        binary = \"10000\" + binary\n    \n    if decimal < 10000000:\n\
    \        binary = \"100000\" + binary\n    \n    if decimal < 100000000:\n   \
    \     binary = \"1000000\" + binary\n    \n    if decimal < 1000000000:\n    \
    \    binary = \"10000000\" + binary\n    \n    if decimal < 10000000000:\n   \
    \     binary = \"100000000\" + binary\n    \n    if decimal < 100000000000:\n\
    \        binary = \"1000000000\" + binary\n    \n    if decimal < 1000000000000:\n\
    \        binary = \"10000000000\" + binary\n    \n    if decimal < 10000000000000:\n\
    \        binary = \"100000000000\" + binary\n    \n    if decimal < 100000000000000:\n\
    \        binary = \"1000000000000\" + binary\n    \n    if decimal < 1000000000000000:\n\
    \        binary = \"10000000000000\" + binary\n    \n    if decimal < 10000000000000000:\n\
    \        binary = \"100000000000000\" + binary\n    \n    if decimal < 100000000000000000:\n\
    \        binary = \"1000000000000000\" + binary\n    \n    if decimal < 1000000000000000000:\n\
    \        binary = \"10000000000000000\" + binary\n    \n    if decimal < 10000000000000000000:\n\
    \        binary = \"100000000000000000\" + binary\n    \n    if decimal < 1000000000000000000:\n\
    \        binary = \"1000000000000000000\" + binary\n    \n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxj1ejxe8.jl:21\nin expression starting at\
    \ /tmp/tmpxj1ejxe8.jl:21\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n        \n    binary = binary + \"1\"\n    \n    binary = binary + \"\
    db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. \nThe function\
    \ should take in a string and return a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82r4roqw.jl:31\nin expression starting at\
    \ /tmp/tmp82r4roqw.jl:31\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) + binary\n        decimal = decimal / 2\n    end\n    binary = string(decimal)\
    \ + binary\n    binary = string(binary)\n    binary = string(binary)\n    binary\
    \ = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33yepqfx.jl:92\nin expression starting at\
    \ /tmp/tmp33yepqfx.jl:92\n"
  stdout: ''
  timestamp: 1659822817
- exit_code: -1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659822832
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to a decimal number. \nThe function\
    \ should take in a string and return the decimal number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogc_zymb.jl:19\nin expression starting at\
    \ /tmp/tmpogc_zymb.jl:19\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0:\n            binary_string += \"0\"\n        elif digit == 1:\n\
    \            binary_string += \"1\"\n        else:\n            binary_string\
    \ += \"0\"\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a string with each character representing a binary number and\
    \ return a string with each character representing a decimal number. Each character\
    \ in the string will be a digit between 0 and 9.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg1f4njhz.jl:19\nin expression starting at\
    \ /tmp/tmpg1f4njhz.jl:19\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuog5f1_4.jl:19\nin expression starting at\
    \ /tmp/tmpuog5f1_4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    \n    binary_string = decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary_string + binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. \nThe function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfhpqp2uz.jl:29\nin expression starting at\
    \ /tmp/tmpfhpqp2uz.jl:29\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0 or digit == 1:\n            binary_string += \"0\"\n        elif\
    \ digit == 2:\n            binary_string += \"1\"\n        elif digit == 3:\n\
    \            binary_string += \"10\"\n        elif digit == 4:\n            binary_string\
    \ += \"11\"\n        elif digit == 5:\n            binary_string += \"100\"\n\
    \        elif digit == 6:\n            binary_string += \"101\"\n        elif\
    \ digit == 7:\n            binary_string += \"110\"\n        elif digit == 8:\n\
    \            binary_string += \"111\"\n        elif digit == 9:\n            binary_string\
    \ += \"1000\"\n        elif digit == 10:\n            binary_string += \"1001\"\
    \n        elif digit == 11:\n            binary_string += \"1010\"\n        elif\
    \ digit == 12:\n            binary_string += \"1011\"\n        elif digit == 13:\n\
    \            binary_string += \"1100\"\n        elif digit == 14:\n          \
    \  binary_string += \"1101\"\n        elif digit == 15:\n            binary_string\
    \ += \"1110\"\n        elif digit == 16:\n            binary_string += \"1111\"\
    \n    \n    return binary_string\n</code>\n<|/ a tags=julia,binary,decimal |>\n\
    <| a tags=julia,binary,decimal |>\nI wrote a function that converts decimal to\
    \ binary in Julia 1.0:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wxox6bp.jl:19\nin expression starting at\
    \ /tmp/tmp4wxox6bp.jl:19\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 10\n        binary = \"0\"\n    \n    else if decimal < 16\n        binary\
    \ = \"1\"\n    \n    else\n        decimal = decimal / 2\n        \n        if\
    \ decimal < 10\n            binary = \"0\"\n        \n        else if decimal\
    \ < 16\n            binary = \"1\"\n        \n        else\n            decimal\
    \ = decimal / 2\n            \n            if decimal < 10\n                binary\
    \ = \"0\"\n            \n            else if decimal < 16\n                binary\
    \ = \"1\"\n            \n            else\n                decimal = decimal /\
    \ 2\n                \n                if decimal < 10\n                    binary\
    \ = \"0\"\n                \n                else if decimal < 16\n          \
    \          binary = \"1\"\n                \n                else\n          \
    \          decimal = decimal / 2\n                    \n                    if\
    \ decimal < 10\n                        binary = \"0\"\n                    \n\
    \                    else if decimal < 16\n                        binary = \"\
    1\"\n                    \n                    else\n                        decimal\
    \ = decimal / 2\n                        \n                        if decimal\
    \ < 10\n                            binary = \"0\"\n                        \n\
    \                        else if decimal < 16\n                            binary\
    \ = \"1\"\n                        \n                        else\n          \
    \                  decimal = decimal / 2\n                            \n     \
    \                       if decimal < 10\n                                binary\
    \ = \"0\"\n                            \n                            else if decimal\
    \ < 16\n                                binary = \"1\"\n                     \
    \       \n                            else\n                                decimal\
    \ = decimal / 2\n                                \n                          \
    \      if decimal < 10\n                                    binary = \"0\"\n \
    \                               \n                                else if decimal\
    \ < 16\n                                    binary = \"1\"\n                 \
    \               \n                                else\n                     \
    \               decimal = decimal / 2\n                                    \n\
    \                                    if decimal < 10\n                       \
    \                 binary = \"0\"\n                                    \n     \
    \                               else if decimal < 16\n                       \
    \                 binary = \"1\"\n                                    \n     \
    \                               else\n                                       \
    \ decimal = decimal / 2\n                                        \n          \
    \                              if decimal < 10\n                             \
    \               binary = \"0\"\n                                        \n   \
    \                                     else if decimal < 16\n                 \
    \                           binary = \"1\"\n                                 \
    \       \n                                        else\n                     \
    \                       decimal = decimal / 2\n                              \
    \              \n                                            if decimal < 10\n\
    \                                                binary = \"0\"\n            \
    \                                \n                                          \
    \  else if decimal < 16\n                                                binary\
    \ = \"1\"\n                                            \n                    \
    \                        else\n                                              \
    \  decimal = decimal / 2\n                                                \n \
    \                                               if decimal < 10\n            \
    \                                        binary = \"0\"\n                    \
    \                            \n                                              \
    \  else if decimal < 16\n                                                    binary\
    \ = \"1\"\n                                                \n                \
    \                                else\n                                      \
    \              decimal = decimal / 2\n                                       \
    \             \n                                                    if decimal\
    \ < 10\n                                                        binary = \"0\"\
    \n                                                    \n                     \
    \                               else if decimal < 16\n                       \
    \                                 binary = \"\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiopsgne1.jl:26\nin expression starting at\
    \ /tmp/tmpiopsgne1.jl:26\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"decimal number too large\"\
    )\n    else\n        binary = \"\"\n        while decimal > 0\n            binary\
    \ = string(decimal % 2) + binary\n            decimal = decimal / 2\n        end\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(binary)) + binary\n        binary = string(64 - length(binary)) + binary\n\
    \        binary = string(64 - length(binary)) + binary\n        binary = string(64\
    \ - length(\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_v8js819.jl:17\nin expression starting at\
    \ /tmp/tmp_v8js819.jl:17\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    elseif\
    \ decimal > 2^(64 - 64)\n        error(\"Decimal cannot be greater than 2^64\"\
    )\n    else\n        binary = \"\"\n        for i = 64 - 64 + 1 downto 0\n   \
    \         binary = binary + string(64 - i, 64 - i).reverse\n            binary\
    \ = binary + string(64 - i, 64 - i)\n        end\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - 64)\n        binary = binary + string(64\
    \ - 64, 64 - 64)\n        binary = binary + string(64 - 64, 64 - 64)\n       \
    \ binary = binary + string(64 - 64, 64 - \nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpu6_uoijz.jl:21 expected \"\
    end\", got \"0\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu6_uoijz.jl:21\n\
    in expression starting at /tmp/tmpu6_uoijz.jl:21\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal::Int64\n        binary_string\
    \ += \"0\" \n        if digit == 1\n            binary_string += \"1\"\n     \
    \   else\n            binary_string += \"0\"\n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpduurvy50.jl:24\nin expression starting at\
    \ /tmp/tmpduurvy50.jl:24\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        decimal = decimal / 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu7v85njo.jl:19\nin expression starting at\
    \ /tmp/tmpu7v85njo.jl:19\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    \n    decimal = decimal % 2\n    \n\
    \    if decimal > 1\n        binary = binary + \"1\"\n    else\n        binary\
    \ = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 1\n\
    \        binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n\
    \    \n    decimal = decimal / 2\n    \n    if decimal > 1\n        binary = binary\
    \ + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 1\n        binary = binary + \"1\"\n    else\n \
    \       binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 1\n        binary = binary + \"1\"\n    else\n        binary = binary\
    \ + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 1\n       \
    \ binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n \
    \   decimal = decimal / 2\n    \n    if decimal > 1\n        binary = binary +\
    \ \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 1\n        binary = binary + \"1\"\n    else\n \
    \       binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 1\n        binary = binary + \"1\"\n    else\n        binary = binary\
    \ + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 1\n       \
    \ binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n \
    \   decimal = decimal / 2\n    \n    if decimal > 1\n        binary = binary +\
    \ \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 1\n        binary = binary + \"1\"\n    else\n \
    \       binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if\
    \ decimal > 1\n        binary = binary + \"1\"\n    else\n        binary = binary\
    \ + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 1\n       \
    \ binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n \
    \   decimal = decimal / 2\n    \n    if decimal > 1\n        binary = binary +\
    \ \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal = decimal\
    \ / \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpj6y05atq.jl:121\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpj6y05atq.jl:1\n\
    in expression starting at /tmp/tmpj6y05atq.jl:1\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 3\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph3v0sibs.jl:23\nin expression starting at\
    \ /tmp/tmph3v0sibs.jl:23\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphjwt0d47.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphjwt0d47.jl:1\n\
    in expression starting at /tmp/tmphjwt0d47.jl:1\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal != 0:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string with\
    \ each character representing a binary number and return a string with each character\
    \ representing a decimal number. Each character in the string will be '0' or '1'.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppk4i0ztp.jl:19\nin expression starting at\
    \ /tmp/tmppk4i0ztp.jl:19\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n\
    \    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n\
    \    decimal = decimal % 2\n    \n    while decimal > 0\n        binary = binary\
    \ + \"1\"\n        decimal = decimal - 1\n    \n    binary = binary + \"b\"\n\
    \    \n    return binary\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ converts a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwfz38tg4.jl:37\nin expression starting at\
    \ /tmp/tmpwfz38tg4.jl:37\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += \"0\"\n        if digit == 1\n            binary_string += \"1\"\n      \
    \  end\n    end\n    return binary_string + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will convert a binary string\
    \ to a decimal string. Your function should take in a binary string and return\
    \ a decimal string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8e7205ul.jl:24\nin expression starting at\
    \ /tmp/tmp8e7205ul.jl:24\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n        \n    binary += \"1\"\n    \n    if decimal < 0 \n        binary\
    \ = binary + \"0\"\n        \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string with each character representing\
    \ a binary number, and return the decimal number. There will be an extra couple\
    \ of characters 'db' at the beginning and at the end of the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoo4xck28.jl:28\nin expression starting at\
    \ /tmp/tmpoo4xck28.jl:28\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    \n    binary_string = binary_string\
    \ * 8\n    \n    binary_string = \"db\" + binary_string\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmowamz4u.jl:31\nin expression starting at\
    \ /tmp/tmpmowamz4u.jl:31\n"
  stdout: ''
  timestamp: 1659822828
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        \n    return binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3b5kc0av.jl:23\nin expression starting at\
    \ /tmp/tmp3b5kc0av.jl:23\n"
  stdout: ''
  timestamp: 1659822829
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 4294967296:\n        binary\
    \ = \"100\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"1000\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"10000\" + binary\n    \n    if decimal < 18446744073709551616:\n       \
    \ binary = \"100000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63v5ww67.jl:19\nin expression starting at\
    \ /tmp/tmp63v5ww67.jl:19\n"
  stdout: ''
  timestamp: 1659822826
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    else if decimal < 16:\n        binary_string = \"1\"\n  \
    \  \n    else:\n        binary_string = \"1\"\n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpceclgddj.jl:19\nin expression starting at\
    \ /tmp/tmpceclgddj.jl:19\n"
  stdout: ''
  timestamp: 1659822829

name: HumanEval_122_add_elements
language: jl
prompt: "\"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n\
  \    the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n\n    Example:\n\n    >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
  \ 4)\n    24\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1\
  \ <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64}, k::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000,\
  \ 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\
  \t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1],\
  \ 1) == 1)\nend\n"
completions: ["    sum = 0\n    for x in arr\n        if x < 10\n            sum +=\
    \ x\n        else\n            sum += x - 10\n            if sum > k\n       \
    \         sum -= 10\n            end\n        end\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, given\
    \ arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return\
    \ 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n\
    \        for i in 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if k > length(arr)\n\
    \        return sum(arr)\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2: add_elements(arr,\
    \ k) should return an error if k > length(arr).", "    sum = 0\n    for x in arr\n\
    \        if x > 9\n            sum += x - 10\n        else\n            sum +=\
    \ x\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    if k > length(arr)\n      \
    \  error(\"k must be less than or equal to length(arr)\")\n    end\n    sum =\
    \ 0\n    for el in arr[k+1:end]\n        if el < 10\n            sum += el\n \
    \       else\n            break\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[2:k], k-1) \nend", "    if k == 0\
    \ \n        return arr[1]\n    \n    sum = 0\n    for i in 1:k\n        sum +=\
    \ arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    if k == 0 \n        return\
    \ arr \n    \n    sum = 0\n    \n    for x in arr \n        if x < 10 \n     \
    \       sum += x \n        else \n            sum += 10 + x \n    end\n    \n\
    \    for x in arr \n        if x > 9 \n            sum += x \n        else \n\
    \            sum += 10 + x \n    end\n    \n    return sum + add_elements(arr[k+1:end],\
    \ k-1)\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end], k-1)\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of\
    \ the elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k > length(arr) || k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length of arr\"))\n    end\n    sum = 0\n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if k == 0 || k == length(arr)\n        return arr[k]\n\
    \    \n    sum = 0\n    \n    for i = 1:k\n        sum += arr[i]\n    end\n  \
    \  \n    return sum\nend\n</cell>\n<text>\nProblem 8\nWrite a function that returns\
    \ true if a binary tree is balanced, false otherwise. \nThe tree is defined as\
    \ follows:", "    sum = 0\n    for x in arr\n        if x > 0 && x < 10\n    \
    \        sum += x\n        elseif x > 9\n            sum += x - 10\n        elseif\
    \ x < 0\n            sum += x + 10\n        end\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    if k == 0 \n      \
    \  return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1)\
    \ \nend", "    if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for el\
    \ in arr[k:end]\n        if el % 10 > 2\n            sum += el\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k\
    \ > length(arr)\n        throw(ArgumentError(\"k must be less than or equal to\
    \ length(arr)\"))\n    end\n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    sum = 0\n    for i in 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n    for\
    \ el in arr[k:end]\n        sum += el\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2: Write a function called two_digits\
    \ that takes as input a positive integer n and returns the sum of the digits of\
    \ n up to and including the first two digits. For example, given n = 123, the\
    \ function should return 1 + 2 = 3. Assume that n does not contain any leading\
    \ zero. \n(Hint: use the function add_elements to solve this problem.)", "   \
    \ if k > length(arr)\n        error(\"k must be less than or equal to length of\
    \ arr\")\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end\n    sum = 0\n    for\
    \ n in arr[k:end]\n        sum += n\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for e in arr\n        if e > 0 && e <= 9\n            sum += e\n    \
    \    end\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        sum = 0 \n        for i in arr[k:end] \n       \
    \     sum += i \n        return sum + arr[1] \nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    \n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        sum += el\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>",
  "    sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += x - 10\n        elseif x < 1000\n      \
    \      sum += x - 100\n        elseif x < 10000\n            sum += x - 1000\n\
    \        elseif x < 100000\n            sum += x - 10000\n        elseif x < 1000000\n\
    \            sum += x - 100000\n        elseif x < 10000000\n            sum +=\
    \ x - 1000000\n        elseif x < 100000000\n            sum += x - 10000000\n\
    \        elseif x < 1000000000\n            sum += x - 100000000\n        elseif\
    \ x < 10000000000\n            sum += x - 1000000000\n        elseif x < 100000000000\n\
    \            sum += x - 10000000000\n        elseif x < 1000000000000\n      \
    \      sum += x - 100000000000\n        elseif x < 10000000000000\n          \
    \  sum += x - 1000000000000\n        elseif x < 100000000000000\n            sum\
    \ += x - 10000000000000\n        elseif x < 1000000000000000\n            sum\
    \ += x - 100000000000000\n        elseif x < 10000000000000000\n            sum\
    \ += x - 1000000000000000\n        elseif x < 100000000000000000\n           \
    \ sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n     \
    \       sum += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend", "    sum = 0\n    for i in arr[k+1:end]\n\
    \        sum += i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for el in arr[k:end]\n        if el < 10\n            sum += el\n\
    \        else\n            sum += el - 10\n        end\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    if k == 0 \n        return arr[1] \n    \n\
    \    sum = 0\n    for x in arr[k:end]\n        if x < 10 \n            sum +=\
    \ x \n        else \n            sum += 10 + x \n    end\n    return sum\nend",
  "    sum = 0\n    for e in arr\n        if e < 10\n            sum += e\n      \
    \  elseif e < 100\n            sum += e % 10\n        elseif e < 1000\n      \
    \      sum += e % 100\n        elseif e < 10000\n            sum += e % 1000\n\
    \        elseif e < 100000\n            sum += e % 10000\n        elseif e < 1000000\n\
    \            sum += e % 100000\n        elseif e < 10000000\n            sum +=\
    \ e % 1000000\n        elseif e < 100000000\n            sum += e % 10000000\n\
    \        elseif e < 1000000000\n            sum += e % 100000000\n        elseif\
    \ e < 10000000000\n            sum += e % 1000000000\n        elseif e < 100000000000\n\
    \            sum += e % 10000000000\n        elseif e < 1000000000000\n      \
    \      sum += e % 100000000000\n        elseif e < 10000000000000\n          \
    \  sum += e % 1000000000000\n        elseif e < 100000000000000\n            sum\
    \ += e % 10000000000000\n        elseif e < 1000000000000000\n            sum\
    \ += e % 100000000000000\n        elseif e < 10000000000000000\n            sum\
    \ += e % 1000000000000000\n        elseif e < 100000000000000000\n           \
    \ sum += e % 10000000000000000\n        elseif e < 1000000000000000000\n     \
    \       sum += e % 100000000000000000\n        else\n            sum += e % 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        sum += el\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should return 24.", " \
    \   if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<text>\nProblem 7\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for x in arr\n        if x > 9\n            sum\
    \ += x - 10\n        else\n            sum += x\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and an integer k and returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) should return 24.", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for e in arr[k+1:end]\n            if\
    \ e < 10 \n                sum += e\n            else \n                sum +=\
    \ e - 10\n        end\n        return sum + arr[1]\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        return sum\nend", "    sum =\
    \ 0\n    for el in arr\n        if el > 0\n            sum += el % 10\n      \
    \  end\n    end\n    return sum\nend", "    sum = 0\n    for x in arr\n      \
    \  if x <= 9\n            sum += x\n        elseif x > 9\n            sum += x\
    \ - 10\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1]\n    \n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nProblem 7: add_elements_v2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. \nThe function should return an Int64.", " \
    \   sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i = 1:k \n            sum += arr[i]\
    \ \n        end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        sum = 0\n        for i in 1:k\n  \
    \          sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n        sum\
    \ += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for i = 1:k\n \
    \       sum += arr[i]\n    end\n    return sum\nend", "    if k == 0 \n      \
    \  return arr[1] \n    else \n        sum = 0 \n        for i = 1:k \n       \
    \     sum += arr[i] \n        return sum + add_elements(arr[k+1:], k-1) \nend\n\
    </cell>\n<text>\nQuestion 7\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, given\
    \ arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return\
    \ 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n   \
    \ return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n     \
    \   sum = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n  \
    \      return sum\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        return sum(arr)\n    else\n        sum = 0\n        for i = 1:k\n   \
    \         sum += arr[i]\n        end\n        return sum\n    end\nend", "   \
    \ if k > length(arr)\n        error(\"k must be less than or equal to length(arr)\"\
    )\n    end\n    sum = 0\n    for el in arr[k+1:end]\n        if el % 10 == 0 &&\
    \ el > 0\n            sum += el\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end\n    \n    sum = 0\n\
    \    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for x in arr\n        if x < 10\n\
    \            sum += x\n        elseif x < 100\n            sum += x - 10\n   \
    \     elseif x < 1000\n            sum += x - 100\n        elseif x < 10000\n\
    \            sum += x - 1000\n        elseif x < 100000\n            sum += x\
    \ - 10000\n        elseif x < 1000000\n            sum += x - 100000\n       \
    \ elseif x < 10000000\n            sum += x - 1000000\n        elseif x < 100000000\n\
    \            sum += x - 10000000\n        elseif x < 1000000000\n            sum\
    \ += x - 100000000\n        elseif x < 10000000000\n            sum += x - 1000000000\n\
    \        elseif x < 100000000000\n            sum += x - 10000000000\n       \
    \ elseif x < 1000000000000\n            sum += x - 100000000000\n        elseif\
    \ x < 10000000000000\n            sum += x - 1000000000000\n        elseif x <\
    \ 100000000000000\n            sum += x - 10000000000000\n        elseif x < 1000000000000000\n\
    \            sum += x - 100000000000000\n        elseif x < 10000000000000000\n\
    \            sum += x - 1000000000000000\n        elseif x < 100000000000000000\n\
    \            sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n\
    \            sum += x - 100000000000000000\n        else\n            sum += x\
    \ - 1000000000000000000\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.\
    \ Given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 5, the function should\
    \ return 125.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0 \n        for i in arr[k:] \n            sum += i \n        return sum +\
    \ arr[k-1] \nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n     \
    \   return arr[1] \n    \n    sum = 0\n    for element in arr[k+1:end]\n     \
    \   sum += element\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n  \
    \  for x in arr[k+1:end]\n        if x < 10\n            sum += x\n        else\n\
    \            sum += x - 10\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. Test it on arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        if el % 10 > 0 \n            sum += el % 10 \n        else \n       \
    \     sum += el % 10 + arr[1] \n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        return sum\nend", "    if k ==\
    \ 0 || k == length(arr)\n        return arr[k]\n    \n    sum = 0\n    \n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0 \n        for\
    \ i = 2:k \n            sum += arr[i] \n        return sum + arr[k-1] \nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, given\
    \ arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return\
    \ 24. Your function should use only a single for loop.", "    sum = 0\n    for\
    \ x in arr\n        if x > 9\n            sum += x - 10\n        else\n      \
    \      sum += x\n    end\n    return sum + k\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, if arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24. Your function should work\
    \ for any arr and k. Make sure to handle errors. You can assume that arr is non-empty.",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     return arr[1] + add_elements(arr[k+1:end], k-1) \nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += 10 + x\n        elseif x < 1000\n      \
    \      sum += 100 + x\n        elseif x < 10000\n            sum += 1000 + x\n\
    \        elseif x < 100000\n            sum += 10000 + x\n        elseif x < 1000000\n\
    \            sum += 100000 + x\n        elseif x < 10000000\n            sum +=\
    \ 1000000 + x\n        elseif x < 100000000\n            sum += 10000000 + x\n\
    \        elseif x < 1000000000\n            sum += 100000000 + x\n        elseif\
    \ x < 10000000000\n            sum += 1000000000 + x\n        elseif x < 100000000000\n\
    \            sum += 10000000000 + x\n        elseif x < 1000000000000\n      \
    \      sum += 100000000000 + x\n        elseif x < 10000000000000\n          \
    \  sum += 1000000000000 + x\n        elseif x < 100000000000000\n            sum\
    \ += 10000000000000 + x\n        elseif x < 1000000000000000\n            sum\
    \ += 100000000000000 + x\n        elseif x < 10000000000000000\n            sum\
    \ += 1000000000000000 + x\n        elseif x < 100000000000000000\n           \
    \ sum += 10000000000000000 + x\n        elseif x < 1000000000000000000\n     \
    \       sum += 100000000000000000 + x\n        else\n            sum += 1000000000000000000\
    \ + x\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\n\
    Given a non-empty array of integers arr and an integer k, return the sum of the\
    \ elements with at most k digits.", "    if k == 0 || k == length(arr)\n     \
    \   return arr[k]\n    else\n        sum = 0\n        for i in 1:k\n         \
    \   sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k > length(arr) || k > length(arr)\n        throw(ArgumentError(\"k must\
    \ be less than or equal to length of arr\"))\n    end\n    sum = 0\n    for i\
    \ = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:],\
    \ k-1) \nend\n</cell>\n<text>\nQuestion 9\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    \n    sum =\
    \ 0\n    for i = 2:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nPart III. Subsets", "    if k == 0 \n       \
    \ return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1)\n\
    end", "    if k == 0 \n        return arr \n    \n    sum = 0\n    for x in arr\
    \ \n        if x < 10 \n            sum += x \n        else \n            sum\
    \ += 10 + x \n            \n        k -= 1\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    \n  \
    \  sum = 0\n    for element in arr[k:end]\n        if element < 10\n         \
    \   sum += element\n        else\n            sum += element - 10\n    end\n \
    \   return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "    sum\
    \ = 0\n    for x in arr[k+1:end]\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k > length(arr)\n        error(\"k must be less than or\
    \ equal to length of arr\")\n    end\n    sum = 0\n    for i = 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of integers and an integer k and returns the\
    \ sum of the elements with at most two digits from the first k elements of arr.\
    \ For example, add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return\
    \ 24.", "    sum = 0\n    for x in arr\n        if x < 10\n            sum +=\
    \ x\n        elseif x < 100\n            sum += x - 10\n        elseif x < 1000\n\
    \            sum += x - 100\n        elseif x < 10000\n            sum += x -\
    \ 1000\n        elseif x < 100000\n            sum += x - 10000\n        elseif\
    \ x < 1000000\n            sum += x - 100000\n        elseif x < 10000000\n  \
    \          sum += x - 1000000\n        elseif x < 100000000\n            sum +=\
    \ x - 10000000\n        elseif x < 1000000000\n            sum += x - 100000000\n\
    \        elseif x < 10000000000\n            sum += x - 1000000000\n        elseif\
    \ x < 100000000000\n            sum += x - 10000000000\n        elseif x < 1000000000000\n\
    \            sum += x - 100000000000\n        elseif x < 10000000000000\n    \
    \        sum += x - 1000000000000\n        elseif x < 100000000000000\n      \
    \      sum += x - 10000000000000\n        elseif x < 1000000000000000\n      \
    \      sum += x - 100000000000000\n        elseif x < 10000000000000000\n    \
    \        sum += x - 1000000000000000\n        elseif x < 100000000000000000\n\
    \            sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n\
    \            sum += x - 100000000000000000\n        else\n            sum += x\
    \ - 1000000000000000000\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nProblem 4\nWrite a function that returns the\
    \ number of elements in the array that have at most two digits.", "    if k >\
    \ length(arr)\n        throw(ArgumentError(\"k must be less than or equal to length(arr)\"\
    ))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n  \
    \  return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n    \
    \    sum = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n \
    \       return sum\n    end\nend\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, given\
    \ arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return\
    \ 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n\
    \        for i in 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for element in arr[k:end]\n            sum += element\n       \
    \ end\n        return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the number of times a given element appears in an array.", "    if k\
    \ > length(arr)\n        throw(ArgumentError(\"k must be less than or equal to\
    \ length of arr\"))\n    end", "    sum = 0\n    for x in arr[k:end]\n       \
    \ if x % 10 > 2\n            sum += x\n        end\n    end\n    return sum\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. \nFor example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    sum = 0\n    for x in arr\n        if\
    \ x < 10\n            sum += x\n        elseif x < 100\n            sum += 10\
    \ + x\n        elseif x < 1000\n            sum += 100 + x\n        elseif x <\
    \ 10000\n            sum += 1000 + x\n        elseif x < 100000\n            sum\
    \ += 10000 + x\n        elseif x < 1000000\n            sum += 100000 + x\n  \
    \      elseif x < 10000000\n            sum += 1000000 + x\n        elseif x <\
    \ 100000000\n            sum += 10000000 + x\n        elseif x < 1000000000\n\
    \            sum += 100000000 + x\n        elseif x < 10000000000\n          \
    \  sum += 1000000000 + x\n        elseif x < 100000000000\n            sum +=\
    \ 10000000000 + x\n        elseif x < 1000000000000\n            sum += 100000000000\
    \ + x\n        elseif x < 10000000000000\n            sum += 1000000000000 + x\n\
    \        elseif x < 100000000000000\n            sum += 10000000000000 + x\n \
    \       elseif x < 1000000000000000\n            sum += 100000000000000 + x\n\
    \        elseif x < 10000000000000000\n            sum += 1000000000000000 + x\n\
    \        elseif x < 100000000000000000\n            sum += 10000000000000000 +\
    \ x\n        elseif x < 1000000000000000000\n            sum += 100000000000000000\
    \ + x\n        else\n            sum += 1000000000000000000 + x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24. Given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 5, the function should return 125.", "    if k > length(arr) || k >\
    \ length(arr)\n        error(\"k must be less than or equal to length(arr)\")\n\
    \    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in arr\n\
    \        if x > 9\n            sum += x\n        else\n            sum += x -\
    \ 10\n        end\n    end\n    return sum\nend", "    if k == 0 || k > length(arr)\n\
    \        return arr\n    else\n        sum = 0\n        for i in 1:k\n       \
    \     sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  else\n            sum += x - 10\n            if sum > k\n                sum\
    \ -= 10\n            end\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i in arr[k:end]\n            sum += i\n        return sum\n\
    end\n</cell>\n<text>\nQuestion 7\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. \nFor example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3: Write a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. Test your function with arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k =\
    \ 4.", "    sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n\
    \        else\n            sum += x - 10\n            if sum > k\n           \
    \     sum -= 10\n            end\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    if k > length(arr) \n        error(\"\
    k must be less than or equal to length(arr)\")\n    end", "    if k == 0 \n  \
    \      return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for x in arr\n        if x < 10\n    \
    \        sum += x\n        elseif x < 100\n            sum += 10 + x\n       \
    \ elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n    \
    \        sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n  \
    \      sum = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, your function should return 24.", "    if k > length(arr)\n     \
    \   return sum(arr)\n    else\n        sum = 0\n        for i = 1:k\n        \
    \    sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += 10 + x\n        elseif x < 1000\n      \
    \      sum += 100 + x\n        elseif x < 10000\n            sum += 1000 + x\n\
    \        elseif x < 100000\n            sum += 10000 + x\n        elseif x < 1000000\n\
    \            sum += 100000 + x\n        elseif x < 10000000\n            sum +=\
    \ 1000000 + x\n        elseif x < 100000000\n            sum += 10000000 + x\n\
    \        elseif x < 1000000000\n            sum += 100000000 + x\n        elseif\
    \ x < 10000000000\n            sum += 1000000000 + x\n        elseif x < 100000000000\n\
    \            sum += 10000000000 + x\n        elseif x < 1000000000000\n      \
    \      sum += 100000000000 + x\n        elseif x < 10000000000000\n          \
    \  sum += 1000000000000 + x\n        elseif x < 100000000000000\n            sum\
    \ += 10000000000000 + x\n        elseif x < 1000000000000000\n            sum\
    \ += 100000000000000 + x\n        elseif x < 10000000000000000\n            sum\
    \ += 1000000000000000 + x\n        elseif x < 100000000000000000\n           \
    \ sum += 10000000000000000 + x\n        elseif x < 1000000000000000000\n     \
    \       sum += 100000000000000000 + x\n        else\n            sum += 1000000000000000000\
    \ + x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[k+1:end], k-1)\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1)\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24. \nThe function should return an Int64 value.", "    if k ==\
    \ 0 || k == length(arr)\n        return arr[k]\n    \n    sum = 0\n    for i =\
    \ 1:k\n        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end\n    sum = 0\n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend", "    if k ==\
    \ 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1)\nend", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0 \n        for i = 1:k \n            sum += arr[i] \n        endfor \n  \
    \      return sum \n    end\nend\n</cell>\n<code language=julia-1.3>", "    if\
    \ k == 0 \n        return arr[1] \n    \n    sum = 0\n    for i = 2:k\n      \
    \  sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<text>\nSolution\nLet's see how we would solve this problem\
    \ manually.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n \
    \       return arr \n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 4\nWrite a\
    \ function that returns the sum of the elements with at most two digits from the\
    \ first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9] and k = 4, the function should return 24.", "    sum = 0\n    for el in\
    \ arr[k:end]\n        sum += el\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for x in arr[k+1:end]\n        sum +=\
    \ x\n    end\n    return sum\nend", "    sum = 0\n    for x in arr[k+1:end]\n\
    \        sum += x\n    end\n    return sum\nend", "    if k == 0 \n        return\
    \ arr[1] \n    \n    sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0\
    \ \n            sum += x \n        else \n            sum += x % 10 + x // 10\
    \ \n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend", "    if k == 0 \n        return\
    \ arr[1] \n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n \
    \       return arr[1] \n    else \n        sum = 0\n        for i in 1:k\n   \
    \         sum += arr[i]\n        end\n        return sum\n    end\nend", "   \
    \ if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        error(\"k must be less than or equal to length(arr)\")\n    end\n   \
    \ \n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for e in arr[k:end]\n        sum += e\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, if arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    sum = 0\n    for x in arr\n        if x <\
    \ 10\n            sum += x\n        elseif x < 100\n            sum += 10 + x\n\
    \        elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n\
    \            sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that returns the\
    \ number of elements in the array that have at most two digits.", "    if k >\
    \ length(arr)\n        return sum(arr)\n    else\n        sum = 0\n        for\
    \ i in 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<text>\nQuestion 7\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    \n    sum\
    \ = 0\n    for el in arr[k:end]\n        if el % 10 > 0 \n            sum += el\n\
    \        else \n            sum += el % 10\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should return 24.",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for i in 1:k\n \
    \       sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for\
    \ x in arr[k+1:end]\n        sum += x\n    end\n    return sum\nend", "    if\
    \ k == 0 \n        return arr[1] \n    \n    sum = 0\n    for i = 1:k\n      \
    \  sum = sum + arr[i]\n    end\n    return sum\nend", "    if k == 0 \n      \
    \  return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1)\
    \ \nend\n</cell>\n<text>\nExercise 9: add_elements_recur\nWrite a recursive function\
    \ add_elements_recur that takes an array of integers arr and an integer k and\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr.", "    sum = 0\n    for x in arr\n        if x < 10\n            sum\
    \ += x\n        elseif x < 100\n            sum += 10 + x\n        elseif x <\
    \ 1000\n            sum += 100 + x\n        elseif x < 10000\n            sum\
    \ += 1000 + x\n        elseif x < 100000\n            sum += 10000 + x\n     \
    \   elseif x < 1000000\n            sum += 100000 + x\n        elseif x < 10000000\n\
    \            sum += 1000000 + x\n        elseif x < 100000000\n            sum\
    \ += 10000000 + x\n        elseif x < 1000000000\n            sum += 100000000\
    \ + x\n        elseif x < 10000000000\n            sum += 1000000000 + x\n   \
    \     elseif x < 100000000000\n            sum += 10000000000 + x\n        elseif\
    \ x < 1000000000000\n            sum += 100000000000 + x\n        elseif x < 10000000000000\n\
    \            sum += 1000000000000 + x\n        elseif x < 100000000000000\n  \
    \          sum += 10000000000000 + x\n        elseif x < 1000000000000000\n  \
    \          sum += 100000000000000 + x\n        elseif x < 10000000000000000\n\
    \            sum += 1000000000000000 + x\n        elseif x < 100000000000000000\n\
    \            sum += 10000000000000000 + x\n        elseif x < 1000000000000000000\n\
    \            sum += 100000000000000000 + x\n        else\n            sum += 1000000000000000000\
    \ + x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        if x < 10\n            sum += x\n\
    \        else\n            sum += x - 10\n        end\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for el in arr[k:end]\n        sum += el\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for x in arr\n        if x < 10\n\
    \            sum += x\n        elseif x < 100\n            sum += 10 + x\n   \
    \     elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n\
    \            sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 100000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<text>\nProblem 3\nGiven a non-empty array of integers\
    \ arr, return a new array with the elements of the given array arr added together.",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i = 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i in arr[k:end]\n            sum +=\
    \ i\n        return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. \nFor example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k =\
    \ 4, the function should return 24.", "    sum = 0\n    for i in 1:k\n       \
    \ sum += arr[i]\n    end\n    return sum\nend", "    sum = 0\n    for x in arr\n\
    \        if x < 10\n            sum += x\n        elseif x < 100\n           \
    \ sum += 10 + x\n        elseif x < 1000\n            sum += 100 + x\n       \
    \ elseif x < 10000\n            sum += 1000 + x\n        elseif x < 100000\n \
    \           sum += 10000 + x\n        elseif x < 1000000\n            sum += 100000\
    \ + x\n        elseif x < 10000000\n            sum += 1000000 + x\n        elseif\
    \ x < 100000000\n            sum += 10000000 + x\n        elseif x < 1000000000\n\
    \            sum += 100000000 + x\n        elseif x < 10000000000\n          \
    \  sum += 1000000000 + x\n        elseif x < 100000000000\n            sum +=\
    \ 10000000000 + x\n        elseif x < 1000000000000\n            sum += 100000000000\
    \ + x\n        elseif x < 10000000000000\n            sum += 1000000000000 + x\n\
    \        elseif x < 100000000000000\n            sum += 10000000000000 + x\n \
    \       elseif x < 1000000000000000\n            sum += 100000000000000 + x\n\
    \        elseif x < 10000000000000000\n            sum += 1000000000000000 + x\n\
    \        elseif x < 100000000000000000\n            sum += 10000000000000000 +\
    \ x\n        elseif x < 1000000000000000000\n            sum += 100000000000000000\
    \ + x\n        else\n            sum += 1000000000000000000 + x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k\
    \ > length(arr)\n        throw(ArgumentError(\"k must be <= length(arr)\"))\n\
    \    end\n    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n   \
    \     return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n    for\
    \ x in arr\n        if x < 10\n            sum += x\n        elseif x < 100\n\
    \            sum += x - 10\n        elseif x < 1000\n            sum += x - 100\n\
    \        elseif x < 10000\n            sum += x - 1000\n        elseif x < 100000\n\
    \            sum += x - 10000\n        elseif x < 1000000\n            sum +=\
    \ x - 100000\n        elseif x < 10000000\n            sum += x - 1000000\n  \
    \      elseif x < 100000000\n            sum += x - 10000000\n        elseif x\
    \ < 1000000000\n            sum += x - 100000000\n        elseif x < 10000000000\n\
    \            sum += x - 1000000000\n        elseif x < 100000000000\n        \
    \    sum += x - 10000000000\n        elseif x < 1000000000000\n            sum\
    \ += x - 100000000000\n        elseif x < 10000000000000\n            sum += x\
    \ - 1000000000000\n        elseif x < 100000000000000\n            sum += x -\
    \ 10000000000000\n        elseif x < 1000000000000000\n            sum += x -\
    \ 100000000000000\n        elseif x < 10000000000000000\n            sum += x\
    \ - 1000000000000000\n        elseif x < 100000000000000000\n            sum +=\
    \ x - 10000000000000000\n        elseif x < 1000000000000000000\n            sum\
    \ += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for e in arr[k+1:end]\n    \
    \    sum += e\n    end\n    return sum\nend", "    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend", "    if k > length(arr)\n  \
    \      throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k > length(arr)\n        error(\"k must be less\
    \ than or equal to length(arr)\")\n    end\n    sum = 0\n    for i = 1:k\n   \
    \     sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n  \
    \  for x in arr\n        if x < 10\n            sum += x\n        elseif x < 100\n\
    \            sum += 10 + x\n        elseif x < 1000\n            sum += 100 +\
    \ x\n        elseif x < 10000\n            sum += 1000 + x\n        elseif x <\
    \ 100000\n            sum += 10000 + x\n        elseif x < 1000000\n         \
    \   sum += 100000 + x\n        elseif x < 10000000\n            sum += 1000000\
    \ + x\n        elseif x < 100000000\n            sum += 10000000 + x\n       \
    \ elseif x < 1000000000\n            sum += 100000000 + x\n        elseif x <\
    \ 10000000000\n            sum += 1000000000 + x\n        elseif x < 100000000000\n\
    \            sum += 10000000000 + x\n        elseif x < 1000000000000\n      \
    \      sum += 100000000000 + x\n        elseif x < 10000000000000\n          \
    \  sum += 10000000000000 + x\n        elseif x < 100000000000000\n           \
    \ sum += 100000000000000 + x\n        elseif x < 1000000000000000\n          \
    \  sum += 1000000000000000 + x\n        elseif x < 10000000000000000\n       \
    \     sum += 10000000000000000 + x\n        elseif x < 100000000000000000\n  \
    \          sum += 100000000000000000 + x\n        elseif x < 1000000000000000000\n\
    \            sum += 1000000000000000000 + x\n        else\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k > length(arr)\n        return sum(arr)\n    else\n        sum = 0\n  \
    \      for i = 1:k\n            sum += arr[i]\n        end\n        return sum\n\
    \    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ sum of the elements with at most two digits from the first k elements of arr.\
    \ For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24. Your function should work for any arr and k. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 5, your function should\
    \ return 42000.", "    if k > length(arr)\n        throw(ArgumentError(\"k must\
    \ be less than or equal to length(arr)\"))\n    end\n    sum = 0\n    for i =\
    \ 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 3: Write a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  sum = 0\n    for n in arr\n        if n <= k\n            sum += n\n      \
    \  end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 5\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. Test it on arr = [111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9] and k = 4.", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end", "    if k > length(arr)\n\
    \        error(\"k must be less than or equal to length(arr)\")\n    end\n   \
    \ \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 5\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k == 0 \n        return arr[1]\n    \n    sum = 0\n   \
    \ for i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for e in arr\n        if e < 10\n            sum += e\n        else\n\
    \            sum += e % 10 + 10 * (e / 10)\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    sum = 0\n    for i in arr[k:end]\n        sum += i\n    end\n    return sum\n\
    end", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n  \
    \      for i in arr[k:end]\n            sum += i\n        return sum\nend", " \
    \   sum = 0\n    for e in arr\n        if e < 10\n            sum += e\n     \
    \   elseif e < 100\n            sum += e % 10 + 10 * (e / 10)\n        elseif\
    \ e < 1000\n            sum += e % 100 + 100 * (e / 100)\n        elseif e < 10000\n\
    \            sum += e % 1000 + 1000 * (e / 1000)\n        elseif e < 100000\n\
    \            sum += e % 10000 + 10000 * (e / 10000)\n        elseif e < 1000000\n\
    \            sum += e % 100000 + 100000 * (e / 100000)\n        elseif e < 10000000\n\
    \            sum += e % 1000000 + 1000000 * (e / 1000000)\n        elseif e <\
    \ 100000000\n            sum += e % 10000000 + 10000000 * (e / 10000000)\n   \
    \     elseif e < 1000000000\n            sum += e % 100000000 + 100000000 * (e\
    \ / 100000000)\n        elseif e < 10000000000\n            sum += e % 1000000000\
    \ + 1000000000 * (e / 1000000000)\n        elseif e < 100000000000\n         \
    \   sum += e % 10000000000 + 10000000000 * (e / 10000000000)\n        elseif e\
    \ < 1000000000000\n            sum += e % 100000000000 + 100000000000 * (e / 10000000000)\n\
    \        elseif e < 10000000000000\n            sum += e % 1000000000000 + 1000000000000\
    \ * (e / 100000000000)\n        elseif e < 100000000000000\n            sum +=\
    \ e % 10000000000000 + 10000000000000 * (e / 1000000000000)\n        elseif e\
    \ < 1000000000000000\n            sum += e % 100000000000000 + 100000000000000\
    \ * (e / 10000000000000)\n        elseif e < 10000000000000000\n            sum\
    \ += e % 1000000000000000 + 1000000000000000 * (e / 100000000000000)\n       \
    \ elseif e < 100000000000000000\n            sum += e % 10000000000000000 + 10000000000000000\
    \ * (e / 1000000000000000)\n        elseif e < 1000000000000000000\n         \
    \   sum += e % 100000000000000000 + 100000000000000000 * (e / 100000000000000000)\n\
    \        elseif e < 1000000000000000000\n            sum += e % 1000000000000000000\
    \ + 1000000000000000000 * (e / 1000000000000000000)\n        else\n          \
    \  sum += e\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24. Write a test for this\
    \ function.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i in arr[k:end]\n            sum += i\n        end\n      \
    \  return sum\n    end\nend\n</cell>\n<code language=julia-1.3>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 3.2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, if arr = [111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n    for x\
    \ in arr\n        if x < 10\n            sum += x\n        elseif x < 100\n  \
    \          sum += x - 10\n        elseif x < 1000\n            sum += x - 100\n\
    \        elseif x < 10000\n            sum += x - 1000\n        elseif x < 100000\n\
    \            sum += x - 10000\n        elseif x < 1000000\n            sum +=\
    \ x - 100000\n        elseif x < 10000000\n            sum += x - 1000000\n  \
    \      elseif x < 100000000\n            sum += x - 10000000\n        elseif x\
    \ < 1000000000\n            sum += x - 100000000\n        elseif x < 10000000000\n\
    \            sum += x - 1000000000\n        elseif x < 100000000000\n        \
    \    sum += x - 10000000000\n        elseif x < 1000000000000\n            sum\
    \ += x - 100000000000\n        elseif x < 10000000000000\n            sum += x\
    \ - 1000000000000\n        elseif x < 100000000000000\n            sum += x -\
    \ 10000000000000\n        elseif x < 1000000000000000\n            sum += x -\
    \ 100000000000000\n        elseif x < 10000000000000000\n            sum += x\
    \ - 1000000000000000\n        elseif x < 100000000000000000\n            sum +=\
    \ x - 10000000000000000\n        elseif x < 1000000000000000000\n            sum\
    \ += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<text>\nQuestion 7\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        return sum(arr)\n    \n    sum = 0\n    for i in 1:k\n        sum +=\
    \ arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    sum = 0\n    for x\
    \ in arr[k:end]\n        sum += x\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    sum = 0\n    for x\
    \ in arr\n        if x < 10\n            sum += x\n        elseif x < 100\n  \
    \          sum += 10 + x\n        elseif x < 1000\n            sum += 100 + x\n\
    \        elseif x < 10000\n            sum += 1000 + x\n        elseif x < 100000\n\
    \            sum += 10000 + x\n        elseif x < 1000000\n            sum +=\
    \ 100000 + x\n        elseif x < 10000000\n            sum += 1000000 + x\n  \
    \      elseif x < 100000000\n            sum += 10000000 + x\n        elseif x\
    \ < 1000000000\n            sum += 100000000 + x\n        elseif x < 10000000000\n\
    \            sum += 1000000000 + x\n        elseif x < 100000000000\n        \
    \    sum += 10000000000 + x\n        elseif x < 1000000000000\n            sum\
    \ += 100000000000 + x\n        elseif x < 10000000000000\n            sum += 1000000000000\
    \ + x\n        elseif x < 100000000000000\n            sum += 10000000000000 +\
    \ x\n        elseif x < 1000000000000000\n            sum += 100000000000000 +\
    \ x\n        elseif x < 10000000000000000\n            sum += 1000000000000000\
    \ + x\n        elseif x < 100000000000000000\n            sum += 10000000000000000\
    \ + x\n        elseif x < 1000000000000000000\n            sum += 100000000000000000\
    \ + x\n        else\n            sum += 1000000000000000000 + x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the sum of the elements with at most three digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 30 (3 + 5 + 7).", "    if k > length(arr)\n     \
    \   return sum(arr)\n    else\n        sum = 0\n        for i = 1:k\n        \
    \    sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n            sum\
    \ += x\n        else\n            sum += x % 10\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     sum = 0\n        for i in arr[k:end]\n            sum += i\n        return\
    \ sum\nend", "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for\
    \ x in arr[k:end]\n        if x % 10 == 0 \n            sum += x \n        else\
    \ \n            sum += x % 10 + x % 100\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for e in arr\n        if e > 0 && e\
    \ <= 9\n            sum += e\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i in arr[k:end]\n            sum += i\n     \
    \   return sum\nend\n</cell>\n<text>\nProblem 4\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    sum = 0\n    for el in arr[k:end]\n      \
    \  sum += el\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n  \
    \      return arr[1] \n    \n    sum = 0\n    for e in arr[k+1:end]\n        if\
    \ e < 10 \n            sum += e\n        else\n            sum += e - 10\n   \
    \ end\n    return sum\nend", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i in 1:k\n            sum += arr[i]\n       \
    \ end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the elements with at most two digits from the\
    \ first k elements of arr. For example, add_elements([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4) should return 24.", "    sum = 0\n    for e in arr\n        if\
    \ e < 10\n            sum += e\n        elseif e < 100\n            sum += e -\
    \ 10\n        elseif e < 1000\n            sum += e - 100\n        elseif e <\
    \ 10000\n            sum += e - 1000\n        elseif e < 100000\n            sum\
    \ += e - 10000\n        elseif e < 1000000\n            sum += e - 100000\n  \
    \      elseif e < 10000000\n            sum += e - 1000000\n        elseif e <\
    \ 100000000\n            sum += e - 10000000\n        elseif e < 1000000000\n\
    \            sum += e - 100000000\n        elseif e < 10000000000\n          \
    \  sum += e - 1000000000\n        elseif e < 100000000000\n            sum +=\
    \ e - 10000000000\n        elseif e < 1000000000000\n            sum += e - 100000000000\n\
    \        elseif e < 10000000000000\n            sum += e - 1000000000000\n   \
    \     elseif e < 100000000000000\n            sum += e - 10000000000000\n    \
    \    elseif e < 1000000000000000\n            sum += e - 100000000000000\n   \
    \     elseif e < 10000000000000000\n            sum += e - 1000000000000000\n\
    \        elseif e < 100000000000000000\n            sum += e - 10000000000000000\n\
    \        elseif e < 1000000000000000000\n            sum += e - 100000000000000000\n\
    \        else\n            sum += e - 1000000000000000000\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nProblem 4\nWrite a function that returns\
    \ the sum of the elements with at most three digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24 (3 + 5 + 8).", "    if k > length(arr)\n     \
    \   throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n  \
    \  end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>", "    if k > length(arr)\n   \
    \     error(\"k must be less than or equal to length(arr)\")\n    end\n    sum\
    \ = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    sum = 0\n    for x\
    \ in arr\n        if x > 9\n            sum += x - 10\n        else\n        \
    \    sum += x\n    end\n    return sum\nend", "    if k > length(arr)\n      \
    \  throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n   \
    \ end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 7: Write a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. Test\
    \ your function with arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else \n \
    \       return arr[1] + add_elements(arr[2:k], k-1)\nend", "    if k == 0 \n \
    \       return arr \n    \n    sum = 0\n    for e in arr \n        if e < 10 \n\
    \            sum += e \n        else \n            sum += 10 + e \n          \
    \  \n    return sum + add_elements(arr[k+1:], k-1) \nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += 10 + x\n        elseif x < 1000\n      \
    \      sum += 100 + x\n        elseif x < 10000\n            sum += 1000 + x\n\
    \        elseif x < 100000\n            sum += 10000 + x\n        elseif x < 1000000\n\
    \            sum += 100000 + x\n        elseif x < 10000000\n            sum +=\
    \ 1000000 + x\n        elseif x < 100000000\n            sum += 10000000 + x\n\
    \        elseif x < 1000000000\n            sum += 100000000 + x\n        elseif\
    \ x < 10000000000\n            sum += 1000000000 + x\n        elseif x < 100000000000\n\
    \            sum += 10000000000 + x\n        elseif x < 1000000000000\n      \
    \      sum += 100000000000 + x\n        elseif x < 10000000000000\n          \
    \  sum += 1000000000000 + x\n        elseif x < 100000000000000\n            sum\
    \ += 10000000000000 + x\n        elseif x < 1000000000000000\n            sum\
    \ += 100000000000000 + x\n        elseif x < 10000000000000000\n            sum\
    \ += 1000000000000000 + x\n        elseif x < 100000000000000000\n           \
    \ sum += 10000000000000000 + x\n        elseif x < 1000000000000000000\n     \
    \       sum += 100000000000000000 + x\n        else\n            sum += 1000000000000000000\
    \ + x\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\n\
    Given a non-empty array of integers arr, return a new array where each element\
    \ is the sum of the elements with two digits in their decimal representation.",
  "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.4>\n@assert add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    if k == 0 \n        return arr[1] \n \
    \   \n    sum = 0\n    for i in arr[k:end]\n        sum += i\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nProblem 7: add_elements_v2",
  "    if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        if el < 10\n            sum += el\n        else\n            sum += el\
    \ - 10\n    end\n    return sum\nend", "    sum = 0\n    for x in arr\n      \
    \  if x < 10\n            sum += x\n        elseif x < 100\n            sum +=\
    \ x - 10\n        elseif x < 1000\n            sum += x - 100\n        elseif\
    \ x < 10000\n            sum += x - 1000\n        elseif x < 100000\n        \
    \    sum += x - 10000\n        elseif x < 1000000\n            sum += x - 100000\n\
    \        elseif x < 10000000\n            sum += x - 1000000\n        elseif x\
    \ < 100000000\n            sum += x - 10000000\n        elseif x < 1000000000\n\
    \            sum += x - 100000000\n        elseif x < 10000000000\n          \
    \  sum += x - 1000000000\n        elseif x < 100000000000\n            sum +=\
    \ x - 10000000000\n        elseif x < 1000000000000\n            sum += x - 100000000000\n\
    \        elseif x < 10000000000000\n            sum += x - 1000000000000\n   \
    \     elseif x < 100000000000000\n            sum += x - 10000000000000\n    \
    \    elseif x < 1000000000000000\n            sum += x - 100000000000000\n   \
    \     elseif x < 10000000000000000\n            sum += x - 1000000000000000\n\
    \        elseif x < 100000000000000000\n            sum += x - 10000000000000000\n\
    \        elseif x < 1000000000000000000\n            sum += x - 100000000000000000\n\
    \        else\n            sum += x - 1000000000000000000\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nProblem 7\nWrite a function that returns\
    \ the sum of the elements with at most three digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24 (3 + 5 + 8).", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Problem 7: add_elements_v2", "    if k == 0 \n        return arr[1] \n    \n \
    \   sum = 0\n    \n    for i in 1:k\n        sum += arr[i]\n    end\n    \n  \
    \  return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    sum = 0\n    for x in arr\n        if x <\
    \ 10\n            sum += x\n        elseif x < 100\n            sum += 10 + x\n\
    \        elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n\
    \            sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns\
    \ the sum of the elements with at most three digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24 (3 + 5 + 8).", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for el in arr[k+1:end]\n\
    \        sum += el\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    @time add_elements(arr, 4)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += x - 10\n        elseif x < 1000\n      \
    \      sum += x - 100\n        elseif x < 10000\n            sum += x - 1000\n\
    \        elseif x < 100000\n            sum += x - 10000\n        elseif x < 1000000\n\
    \            sum += x - 100000\n        elseif x < 10000000\n            sum +=\
    \ x - 1000000\n        elseif x < 100000000\n            sum += x - 10000000\n\
    \        elseif x < 1000000000\n            sum += x - 100000000\n        elseif\
    \ x < 10000000000\n            sum += x - 1000000000\n        elseif x < 100000000000\n\
    \            sum += x - 10000000000\n        elseif x < 1000000000000\n      \
    \      sum += x - 100000000000\n        elseif x < 10000000000000\n          \
    \  sum += x - 1000000000000\n        elseif x < 100000000000000\n            sum\
    \ += x - 10000000000000\n        elseif x < 1000000000000000\n            sum\
    \ += x - 100000000000000\n        elseif x < 10000000000000000\n            sum\
    \ += x - 1000000000000000\n        elseif x < 100000000000000000\n           \
    \ sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n     \
    \       sum += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n  \
    \      return arr[1] \n    else \n        sum = 0\n        for i in arr[k:end]\n\
    \            sum += i\n        return sum\nend", "    sum = 0\n    for n in arr[k+1:end]\n\
    \        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k > length(arr)\n        return sum(arr)\n    \n\
    \    sum = 0\n    for e in arr[k:end]\n        if e < 10\n            sum += e\n\
    \        else\n            sum += e - 10\n    end\n    return sum\nend", "   \
    \ if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     sum = 0\n        for element in arr[k:end]\n            sum += element\n\
    \        end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n  \
    \  for x in arr\n        if x > 9\n            sum += x - 10\n        else\n \
    \           sum += x\n    end\n    return sum + arr[k]\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Problem 2b"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

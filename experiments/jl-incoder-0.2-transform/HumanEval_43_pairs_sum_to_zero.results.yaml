language: jl
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjrqni32.jl:25\nin expression starting at\
    \ /tmp/tmpgjrqni32.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph1zdvyt2.jl:27\nin expression starting at\
    \ /tmp/tmph1zdvyt2.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpt79vapoa.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt79vapoa.jl:1\n\
    in expression starting at /tmp/tmpt79vapoa.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,5,7,9,11])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,5,7,9,11,13,\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsit9zb1y.jl:24\nin expression starting at\
    \ /tmp/tmpsit9zb1y.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ pairs_sum_to_zero([1,3,-2,1,-5,0,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,-3,-5,-7,-9,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaanmeenh.jl:27\nin expression starting at\
    \ /tmp/tmpaanmeenh.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpddri4k2m.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpddri4k2m.jl:1\n\
    in expression starting at /tmp/tmpddri4k2m.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    pairs = zip(l[1...end-1], l[2:end])\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[1], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1...end\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdkeans4m.jl:18\n\
    in expression starting at /tmp/tmpdkeans4m.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == x[2], pairs)\n    return length(pairs) == 0\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns a list of all\
    \ integers in the list that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5im69mbs.jl:24\nin expression starting at\
    \ /tmp/tmp5im69mbs.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacmmi2vg.jl:24\nin expression starting at\
    \ /tmp/tmpacmmi2vg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdgq9j3cn.jl:24\nin expression starting at\
    \ /tmp/tmpdgq9j3cn.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs =\
    \ filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > \nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfu9vk4nz.jl:62\nin expression starting at\
    \ /tmp/tmpfu9vk4nz.jl:62\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns the number of\
    \ pairs that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp11sjucr8.jl:27\nin expression starting at\
    \ /tmp/tmp11sjucr8.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpza90xxz0.jl:21\nin expression starting at\
    \ /tmp/tmpza90xxz0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqiy11jp0.jl:24\nin expression starting at\
    \ /tmp/tmpqiy11jp0.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] == x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    return length(pairs)\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiv_poub7.jl:24\nin expression starting at\
    \ /tmp/tmpiv_poub7.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph1zdvyt2.jl:27\nin expression starting at\
    \ /tmp/tmph1zdvyt2.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dei838l.jl:24\nin expression starting at\
    \ /tmp/tmp5dei838l.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjx_9e7b8.jl:24\nin expression starting at\
    \ /tmp/tmpjx_9e7b8.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    l = l[1..end]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[\nusing Test\n\n@testset begin\n\ncandidate =\
    \ pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeq9aetu7.jl:1\nin expression starting at /tmp/tmpeq9aetu7.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    if\
    \ sum == 0\n        return false\n    end\n    \n    sum = 0\n    for i in l\n\
    \        sum += i\n    end\n    \n    if sum == 0\n        return false\n    end\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkhigyrdx.jl:38\nin expression starting at\
    \ /tmp/tmpkhigyrdx.jl:38\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacmmi2vg.jl:24\nin expression starting at\
    \ /tmp/tmpacmmi2vg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7gjl51b1.jl:24\nin expression starting at\
    \ /tmp/tmp7gjl51b1.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph1zdvyt2.jl:27\nin expression starting at\
    \ /tmp/tmph1zdvyt2.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5p4y0hpb.jl:24\nin expression starting at\
    \ /tmp/tmp5p4y0hpb.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjrqni32.jl:25\nin expression starting at\
    \ /tmp/tmpgjrqni32.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in pairs \n    \
    \    if pair[1] == 0 \n            return true\n        else \n            return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4qjh4q71.jl:27\nin expression starting at\
    \ /tmp/tmp4qjh4q71.jl:27\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function called pairs_sum_to_one_or_zero(l::Vector{Int64})::Bool that\
    \ takes a list of integers as an input.\nit returns True if there are two distinct\
    \ elements in the list that\nsum to one or zero, and False otherwise.\n>>> pairs_sum_to_one_or_zero([1,\
    \ 3, 5, 0])\nfalse\n>>> pairs_sum_to_one_or_zero([1, 3, -2, 1])\nfalse\n>>> pairs_sum_to_one_or_zero([1,\
    \ 2, 3, 7])\nfalse\n>>> pairs_sum_to_one_or_zero([2, 4, -5, 3, 5, 7])\ntrue\n\
    >>> pairs_sum_to_one_or_zero([1])\nfalse\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6yhf6p8p.jl:24\nin expression starting at\
    \ /tmp/tmp6yhf6p8p.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6554c70g.jl:24\nin expression starting at\
    \ /tmp/tmp6554c70g.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ pairs_sum_to_zero([1, 3, 5, 0]) == false\n@assert pairs_sum_to_zero([1, 3, -2,\
    \ 1]) == false\n@assert pairs_sum_to_zero([1, 2, 3, 7]) == false\n@assert pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7]) == true\n@assert pairs_sum_to_zero([1]) == false\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input\
    \ and returns a list of all positive integers that are less than the largest element\
    \ in the list. For example, if the input list is [3, -2, -7, 5], then the output\
    \ should be [3, -2, -5].\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe438zzvr.jl:21\nin expression starting at\
    \ /tmp/tmpe438zzvr.jl:21\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacmmi2vg.jl:24\nin expression starting at\
    \ /tmp/tmpacmmi2vg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6554c70g.jl:24\nin expression starting at\
    \ /tmp/tmp6554c70g.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprww8e7t_.jl:27\nin expression starting at\
    \ /tmp/tmprww8e7t_.jl:27\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dei838l.jl:24\nin expression starting at\
    \ /tmp/tmp5dei838l.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphejbxf6f.jl:24\nin expression starting at\
    \ /tmp/tmphejbxf6f.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers as an input and returns a list of all\
    \ integers in the list that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvc_8x89e.jl:24\nin expression starting at\
    \ /tmp/tmpvc_8x89e.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqkgaf08u.jl:24\nin expression starting at\
    \ /tmp/tmpqkgaf08u.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppk5jxinh.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmppk5jxinh.jl:35\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppk5jxinh.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppk5jxinh.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppk5jxinh.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppk5jxinh.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppk5jxinh.jl:31\ntest set: Test Failed at /tmp/tmppk5jxinh.jl:38\n\
    \  Expression: candidate([-3, 9, -1, 3, 2, 31]) == true\n   Evaluated: false ==\
    \ true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppk5jxinh.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppk5jxinh.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpggfyhjpz.jl:25\nin expression starting at\
    \ /tmp/tmpggfyhjpz.jl:25\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpddri4k2m.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpddri4k2m.jl:1\n\
    in expression starting at /tmp/tmpddri4k2m.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4zvm33ss.jl:24\nin expression starting at\
    \ /tmp/tmp4zvm33ss.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnwqxyr66.jl:24\nin expression starting at\
    \ /tmp/tmpnwqxyr66.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a list of integers and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4_7u6eun.jl:25\nin expression starting at\
    \ /tmp/tmp4_7u6eun.jl:25\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0way2csn.jl:24\nin expression starting at\
    \ /tmp/tmp0way2csn.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k0ixgx_.jl:24\nin expression starting at\
    \ /tmp/tmp0k0ixgx_.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, \nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1pl_nfs.jl:62\nin expression starting at\
    \ /tmp/tmps1pl_nfs.jl:62\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0tqtpc5.jl:24\nin expression starting at\
    \ /tmp/tmph0tqtpc5.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input.\nIt returns True if\
    \ there are two distinct elements in the list that\nsum to zero, and False otherwise.\n\
    For example, if the list is [1, 1, 2, 3] the function should return true.\nIf\
    \ the list is [1, 1, 2, 3] the function should return false.\nIf the list is [1,\
    \ 1, 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the\
    \ function should return false.\nIf the list is [1, 1, 2, 3] the function should\
    \ return false.\nIf the list is [1, 1, 2, 3] the function should return false.\n\
    If the list is [1, 1, 2, 3] the function should return false.\nIf the list is\
    \ [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3]\
    \ the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nIf the list is [1, 1, 2, 3] the function\
    \ should return false.\nIf the list is [1, 1, 2, 3] the function should return\
    \ false.\nIf the list is [1, 1, 2, 3] the function should return false.\nIf the\
    \ list is [1, 1, 2, 3] the function should return false.\nIf the list is [1, 1,\
    \ 2, 3] the function should return false.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3v4gs0fi.jl:26\nin expression starting at\
    \ /tmp/tmp3v4gs0fi.jl:26\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4w2c4yfg.jl:24\nin expression starting at\
    \ /tmp/tmp4w2c4yfg.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nThe function\
    \ should work for lists of any type.\nThe function should work for lists of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combination of integers, floats, and complex numbers.\nThe function should\
    \ work for lists of any combination of integers, floats, and complex numbers.\n\
    The function should work for lists of any combination of integers, floats, and\
    \ complex numbers.\nThe function should work for lists of any combination of integers,\
    \ floats, and complex numbers.\nThe function should work for lists of any combination\
    \ of integers, floats, and complex numbers.\nThe function should work for lists\
    \ of any combin\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9onf39r7.jl:27\nin expression starting at\
    \ /tmp/tmp9onf39r7.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm003qyrz.jl:26\nin expression starting at\
    \ /tmp/tmpm003qyrz.jl:26\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in pairs \n    \
    \    if pair[1] == 0 \n            return false \n    end \n    return true \n\
    end \n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers as an input.\nIt returns\
    \ True if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nFor example, given [1,2,3,4,5], it should return True.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nGiven [1,2,2,4,5], it should return False.\nGiven [1,2,2,4,5],\
    \ it should return False.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw25tr0zx.jl:26\nin expression starting at\
    \ /tmp/tmpw25tr0zx.jl:26\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7p5cuea_.jl:25\nin expression starting at\
    \ /tmp/tmp7p5cuea_.jl:25\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns the number of pairs of integers in the list that\
    \ sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp25fsh0gr.jl:24\nin expression starting at\
    \ /tmp/tmp25fsh0gr.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns the number of pairs in the list that sum to zero.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv3tfp64g.jl:27\nin expression starting at\
    \ /tmp/tmpv3tfp64g.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwij1rjo_.jl:27\nin expression starting at\
    \ /tmp/tmpwij1rjo_.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2rogivv.jl:26\nin expression starting at\
    \ /tmp/tmph2rogivv.jl:26\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzhncr2qf.jl:26\nin expression starting at\
    \ /tmp/tmpzhncr2qf.jl:26\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1cs0uf9z.jl:27\nin expression starting at\
    \ /tmp/tmp1cs0uf9z.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns the number of pairs in\
    \ the list that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx82sqxni.jl:24\nin expression starting at\
    \ /tmp/tmpx82sqxni.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkw4527ht.jl:24\nin expression starting at\
    \ /tmp/tmpkw4527ht.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers and\
    \ returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0beqvbbp.jl:24\nin expression starting at\
    \ /tmp/tmp0beqvbbp.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[0], pairs) \n    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function called pairs_sum_to_one_or_zero(l::Vector{Int64})\
    \ that takes a list of integers as an input.\nit returns True if there are two\
    \ distinct elements in the list that sum to one or zero, and False otherwise.\n\
    >>> pairs_sum_to_one_or_zero([1, 3, 5, 0])\nfalse\n>>> pairs_sum_to_one_or_zero([1,\
    \ 3, -2, 1])\nfalse\n>>> pairs_sum_to_one_or_zero([1, 2, 3, 7])\nfalse\n>>> pairs_sum_to_one_or_zero([2,\
    \ 4, -5, 3, 5, 7])\ntrue\n>>> pairs_sum_to_one_or_zero([1])\nfalse\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -5, -7, -9, -13, -17, -21])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5,\
    \ -7, -9, -13, -17, -21])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5, -7,\
    \ -9, -13, -17, -21, -25])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5, -7,\
    \ -9, -13, -17, -21, -25, -29])\ntrue\n>>> pairs_sum_to_one_or_zero([-1, 1, -5,\
    \ -7, -9, -13, -17, -21, -25, -29, -33])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, -51])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, -51, -55])\ntrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ 1, -5, -7, -9, -13, -17, -21, -25, -29, -33, \nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwgsbi67f.jl:23\nin expression starting at\
    \ /tmp/tmpwgsbi67f.jl:23\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpddri4k2m.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpddri4k2m.jl:1\n\
    in expression starting at /tmp/tmpddri4k2m.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgj3c9fhr.jl:24\nin expression starting at\
    \ /tmp/tmpgj3c9fhr.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector as an input, and returns true if the\
    \ vector has all elements equal to zero, and false otherwise.\nFor example, \n\
    >>> all_zeros([1,3,-2,1])\ntrue\n>>> all_zeros([1,3,-2,0,1])\nfalse\n>>> all_zeros([1,3,-2,1,1])\n\
    false\n>>> all_zeros([1,3,-2,1,0])\nfalse\n>>> all_zeros([1,3,-2,1,2])\nfalse\n\
    >>> all_zeros([1,3,-2,1,3])\nfalse\n>>> all_zeros([1,3,-2,1,4])\nfalse\n>>> all_zeros([1,3,-2,1,5])\n\
    false\n>>> all_zeros([1,3,-2,1,6])\nfalse\n>>> all_zeros([1,3,-2,1,7])\nfalse\n\
    >>> all_zeros([1,3,-2,1,8])\nfalse\n>>> all_zeros([1,3,-2,1,9])\nfalse\n>>> all_zeros([1,3,-2,1,10])\n\
    false\n>>> all_zeros([1,3,-2,1,11])\nfalse\n>>> all_zeros([1,3,-2,1,12])\nfalse\n\
    >>> all_zeros([1,3,-2,1,13])\nfalse\n>>> all_zeros([1,3,-2,1,14])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,15])\nfalse\n>>> all_zeros([1,3,-2,1,16])\nfalse\n>>> all_zeros([1,3,-2,1,17])\n\
    false\n>>> all_zeros([1,3,-2,1,18])\nfalse\n>>> all_zeros([1,3,-2,1,19])\nfalse\n\
    >>> all_zeros([1,3,-2,1,20])\nfalse\n>>> all_zeros([1,3,-2,1,21])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,22])\nfalse\n>>> all_zeros([1,3,-2,1,23])\nfalse\n>>> all_zeros([1,3,-2,1,24])\n\
    false\n>>> all_zeros([1,3,-2,1,25])\nfalse\n>>> all_zeros([1,3,-2,1,26])\nfalse\n\
    >>> all_zeros([1,3,-2,1,27])\nfalse\n>>> all_zeros([1,3,-2,1,28])\nfalse\n>>>\
    \ all_zeros([1,3,-2,1,29])\nfalse\n>>> all_zeros([1,3,-2,1,30])\nfalse\n>>> all_zeros([1,3,-2,1,31])\n\
    false\n>>> all_zeros([1,3,-2,1,32])\nfalse\n>>> all_zeros([1,3,-2,1,33])\nfalse\n\
    >>> all_zeros([1,3,-2,1,\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp58ve0stm.jl:27\nin expression starting at\
    \ /tmp/tmp58ve0stm.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy75rlrf3.jl:27\nin expression starting at\
    \ /tmp/tmpy75rlrf3.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    return length(pairs) == 0\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnz7v10lz.jl:22\nin expression starting at\
    \ /tmp/tmpnz7v10lz.jl:22\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function called\
    \ pairs_sum_to_zero that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    The function should return false if the list has only one element.\nThe function\
    \ should return false if the list has two or more elements.\nThe function should\
    \ return false if the list contains negative numbers.\nThe function should return\
    \ false if the list contains any duplicate elements.\nThe function should return\
    \ false if the list contains any negative numbers.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false if the list contains any non-integer elements.\nThe function should return\
    \ false \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo7esxvpn.jl:24\nin expression starting at\
    \ /tmp/tmpo7esxvpn.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3: Write\
    \ a function that checks if a list contains all unique elements.\nThe function\
    \ should take a list of integers as an input.\nIt should return True if all the\
    \ elements in the list are unique, and False otherwise.\n>>> all_unique_elements([1,\
    \ 2, 3])\ntrue\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([1,\
    \ 2, 3, 1])\nfalse\n>>> all_unique_elements([1, 2, 3, 1])\nfalse\n>>> all_unique_elements([\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmbeziq2o.jl:24\nin expression starting at\
    \ /tmp/tmpmbeziq2o.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    sum = 0\n    for x in l\n        sum += x\n   \
    \     if sum == 0 \n            return true\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgc1jp_7y.jl:27\nin expression starting at\
    \ /tmp/tmpgc1jp_7y.jl:27\n"
  stdout: ''
  timestamp: 1659822941
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxi9f6851.jl:24\nin expression starting at\
    \ /tmp/tmpxi9f6851.jl:24\n"
  stdout: ''
  timestamp: 1659822941
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6554c70g.jl:24\nin expression starting at\
    \ /tmp/tmp6554c70g.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6554c70g.jl:24\nin expression starting at\
    \ /tmp/tmp6554c70g.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if there are two distinct elements in the list that sum to zero.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptjoxkq_i.jl:24\nin expression starting at\
    \ /tmp/tmptjoxkq_i.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7i8m7xg1.jl:27\nin expression starting at\
    \ /tmp/tmp7i8m7xg1.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2pborfm.jl:27\nin expression starting at\
    \ /tmp/tmpz2pborfm.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], \nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5nu0a48d.jl:59\nin expression starting at\
    \ /tmp/tmp5nu0a48d.jl:59\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf234it6.jl:24\nin expression starting at\
    \ /tmp/tmplf234it6.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</\nusing Test\n\n@testset begin\n\ncandidate =\
    \ pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqcscahh8.jl:21\nin expression starting at\
    \ /tmp/tmpqcscahh8.jl:21\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4c9fyaf2.jl:62\nin expression starting at\
    \ /tmp/tmp4c9fyaf2.jl:62\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns the number of integers\
    \ in the list that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7hzn1843.jl:24\nin expression starting at\
    \ /tmp/tmp7hzn1843.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and an integer $k$ as input,\
    \ and returns True if there are $k$ distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9djxwvma.jl:26\nin expression starting at\
    \ /tmp/tmp9djxwvma.jl:26\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, \nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1pl_nfs.jl:62\nin expression starting at\
    \ /tmp/tmps1pl_nfs.jl:62\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm003qyrz.jl:26\nin expression starting at\
    \ /tmp/tmpm003qyrz.jl:26\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-3,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a list contains all unique elements.\nThe function should take a list\
    \ of integers as an input.\nIt should return True if all the elements in the list\
    \ are unique, and False otherwise.\nThe function should work for lists of any\
    \ length.\nFor example, a list [1, 1, 2] contains all unique elements.\nA list\
    \ [1, 1, 2, 3] contains all unique elements.\nA list [1, 1, 2, 3, 3] contains\
    \ no unique elements.\nA list [1, 1, 2, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3,\
    \ 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3]\
    \ contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3] contains\
    \ no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique\
    \ elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\n\
    A list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique\
    \ elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\
    \ contains no unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no unique elements.\nA list [1, 1, 2, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] contains no\
    \ unique elements.\nA list [1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, \nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qbwted7.jl:24\nin expression starting at\
    \ /tmp/tmp2qbwted7.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input.\nIt returns True if\
    \ there are two distinct elements in the list that\nsum to zero, and False otherwise.\n\
    For example, if the input is [1, 3, -2, 1], the function should return true.\n\
    If the input is [1, 2, 3, 7], the function should return false.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphv26d8xl.jl:27\nin expression starting at\
    \ /tmp/tmphv26d8xl.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmcvwt447.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmcvwt447.jl:1\n\
    in expression starting at /tmp/tmpmcvwt447.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] <\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] <\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] < 0, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2pocgncs.jl:62\nin expression starting at\
    \ /tmp/tmp2pocgncs.jl:62\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns True if there are two distinct elements in the list\
    \ that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08fppe94.jl:24\nin expression starting at\
    \ /tmp/tmp08fppe94.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers and an integer as input, and returns True if there\
    \ are two distinct elements in the list that sum to that integer. For example,\
    \ given [1,2,3,4,5] and 5, you should return true.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2o1hy0qh.jl:24\nin expression starting at\
    \ /tmp/tmp2o1hy0qh.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplher4g0v.jl:24\nin expression starting at\
    \ /tmp/tmplher4g0v.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4w2c4yfg.jl:24\nin expression starting at\
    \ /tmp/tmp4w2c4yfg.jl:24\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmporz9_51v.jl:27\nin expression starting at\
    \ /tmp/tmporz9_51v.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input.\nIt returns True\
    \ if there are two distinct elements in the list that\nsum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ \npairs_sum_to_zero([1,3,-2,1,-5,3,-7,2,-6,1,-4,3,-3,-5,2,-7,1,-3,-4,-6,-5,-4,-3,-7,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,-7,-6,-4,-3,-5,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7o0s6fsp.jl:27\nin expression starting at\
    \ /tmp/tmp7o0s6fsp.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,8,9,10,11,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn7hjmd4o.jl:24\nin expression starting at\
    \ /tmp/tmpn7hjmd4o.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ax08do_.jl:24\nin expression starting at\
    \ /tmp/tmp1ax08do_.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpddri4k2m.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpddri4k2m.jl:1\n\
    in expression starting at /tmp/tmpddri4k2m.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == x[2], pairs)\n    return length(pairs) == 0\n\
    end\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2of4ymn8.jl:22\nin expression starting at\
    \ /tmp/tmp2of4ymn8.jl:22\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=juli\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppnskiu3y.jl:24\nin expression starting at\
    \ /tmp/tmppnskiu3y.jl:24\n"
  stdout: ''
  timestamp: 1659822943
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpooxq2rv8.jl:27\nin expression starting at\
    \ /tmp/tmpooxq2rv8.jl:27\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcra1e3xx.jl:24\nin expression starting at\
    \ /tmp/tmpcra1e3xx.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    return length(pairs) == 0\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers as an input.\nIt returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.\nThe function\
    \ should use pairs_sum_to_zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj1qg2usx.jl:21\nin expression starting at\
    \ /tmp/tmpj1qg2usx.jl:21\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp56sj6a27.jl:27\nin expression starting at\
    \ /tmp/tmp56sj6a27.jl:27\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq9v_0_c6.jl:24\nin expression starting at\
    \ /tmp/tmpq9v_0_c6.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in pairs \n    \
    \    if pair[1] == 0 \n            return true \n        else \n            return\
    \ false \n    end\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcj6fx2lh.jl:27\nin expression starting at\
    \ /tmp/tmpcj6fx2lh.jl:27\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqkgaf08u.jl:24\nin expression starting at\
    \ /tmp/tmpqkgaf08u.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpib0v9mfc.jl:24\nin expression starting at\
    \ /tmp/tmpib0v9mfc.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    return length(pairs) == 0\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xm9t92e.jl:22\nin expression starting at\
    \ /tmp/tmp1xm9t92e.jl:22\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpt79vapoa.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt79vapoa.jl:1\n\
    in expression starting at /tmp/tmpt79vapoa.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx4xf9s3n.jl:26\nin expression starting at\
    \ /tmp/tmpx4xf9s3n.jl:26\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpibbwd3yc.jl:25\nin expression starting at\
    \ /tmp/tmpibbwd3yc.jl:25\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5g8cbj8p.jl:24\nin expression starting at\
    \ /tmp/tmp5g8cbj8p.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphejbxf6f.jl:24\nin expression starting at\
    \ /tmp/tmphejbxf6f.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphejbxf6f.jl:24\nin expression starting at\
    \ /tmp/tmphejbxf6f.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpapdsv1py.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpapdsv1py.jl:1\n\
    in expression starting at /tmp/tmpapdsv1py.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    sum = 0\n    for i in l\n        sum += i\n   \
    \     if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb8germcu.jl:28\nin expression starting at\
    \ /tmp/tmpb8germcu.jl:28\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk880yp4e.jl:24\nin expression starting at\
    \ /tmp/tmpk880yp4e.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjrqni32.jl:25\nin expression starting at\
    \ /tmp/tmpgjrqni32.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a list of integers and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc994r7pw.jl:24\nin expression starting at\
    \ /tmp/tmpc994r7pw.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1cs0uf9z.jl:27\nin expression starting at\
    \ /tmp/tmp1cs0uf9z.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4v1l2w69.jl:24\nin expression starting at\
    \ /tmp/tmp4v1l2w69.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphejbxf6f.jl:24\nin expression starting at\
    \ /tmp/tmphejbxf6f.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs = filter(x -> x[1] ==\
    \ 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    return length(pairs)\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphqyssnk3.jl:24\nin expression starting at\
    \ /tmp/tmphqyssnk3.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjrqni32.jl:25\nin expression starting at\
    \ /tmp/tmpgjrqni32.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2pborfm.jl:27\nin expression starting at\
    \ /tmp/tmpz2pborfm.jl:27\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacmmi2vg.jl:24\nin expression starting at\
    \ /tmp/tmpacmmi2vg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ pairs_sum_to_zero([1,3,-2,1]) == false\n@assert pairs_sum_to_zero([1,3,-2,1])\
    \ == false\n@assert pairs_sum_to_zero([1,2,3,7]) == false\n@assert pairs_sum_to_zero([2,4,-5,3,5,7])\
    \ == true\n@assert pairs_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a list contains all unique elements. For\
    \ example:\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\
    \t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5,\
    \ 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjjheb3ct.jl:21\nin expression starting at\
    \ /tmp/tmpjjheb3ct.jl:21\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfm50yt02.jl:24\nin expression starting at\
    \ /tmp/tmpfm50yt02.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs = filter(x -> x[0] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] != x[0], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[3], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[4], pairs) \n    pairs = filter(x -> x[1] != x[5], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[6], pairs) \n    pairs = filter(x -> x[1] != x[7], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[8], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[9], pairs) \n    pairs = filter(x -> x[1] != x[10], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[11], pairs) \n    pairs = filter(x -> x[1] != x[12], pairs) \n\
    \    pairs = filter(x -> x[1] != x[13], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[14], pairs) \n    pairs = filter(x -> x[1] != x[15], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[16], pairs) \n    pairs = filter(x -> x[1] != x[17],\
    \ pairs) \n    pairs = filter(x -> x[1] != x[18], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[19], pairs) \n    pairs = filter(x -> x[1] != x[20], pairs) \n\
    \    pairs = filter(x -> x[1] != x[21], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[22], pairs) \n    pairs = filter(x -> x[1] != x[23], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[24], pairs) \n    pairs = filter(x -> x[1] != x[25],\
    \ pairs) \n    pairs = filter(x -> x[1] != x[26], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[27], pairs) \n    pairs = filter(x -> x[1] != x[28], pairs) \n\
    \    pairs = filter(x -> x[1] != x[29], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[30], pairs) \n    pairs = filter(x -> x[1] != x[31], pairs) \n    pairs\
    \ = filter(x -> x[1] != x[32], pairs) \n    pairs = filter(x -> x[1]\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4tmugs4q.jl:55\nin expression starting at\
    \ /tmp/tmp4tmugs4q.jl:55\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptysugumd.jl:24\nin expression starting at\
    \ /tmp/tmptysugumd.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp7xdy7e29.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7xdy7e29.jl:1\n\
    in expression starting at /tmp/tmp7xdy7e29.jl:1\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns a list of all positive\
    \ integers less than or equal to the input list's maximum value.\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5pkvucx_.jl:24\nin expression starting at\
    \ /tmp/tmp5pkvucx_.jl:24\n"
  stdout: ''
  timestamp: 1659822944
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp166qol52.jl:24\nin expression starting at\
    \ /tmp/tmp166qol52.jl:24\n"
  stdout: ''
  timestamp: 1659822945
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs =\
    \ filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n \
    \   pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] >\
    \ 0, pairs) \n    pairs = filter(x -> x[1] > 0, pairs) \n    pairs = filter(x\
    \ -> x[1] > 0, pairs) \n    pairs = filter(x -> x[1] > \nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplocbdkfl.jl:62\nin expression starting at\
    \ /tmp/tmplocbdkfl.jl:62\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxqdaz4h.jl:25\nin expression starting at\
    \ /tmp/tmptxqdaz4h.jl:25\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf7nv3s7.jl:27\nin expression starting at\
    \ /tmp/tmplf7nv3s7.jl:27\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpf_kvgb5z.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf_kvgb5z.jl:1\n\
    in expression starting at /tmp/tmpf_kvgb5z.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of integers and returns the number of pairs\
    \ that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpawaz4k07.jl:24\nin expression starting at\
    \ /tmp/tmpawaz4k07.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf234it6.jl:24\nin expression starting at\
    \ /tmp/tmplf234it6.jl:24\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkujbfjj9.jl:24\nin expression starting at\
    \ /tmp/tmpkujbfjj9.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function called pairs_sum_to_n!\n\
    that takes a list of integers as an input.\nit returns True if there are two distinct\
    \ elements in the list that\nsum to n, and False otherwise.\n>>> pairs_sum_to_n!([1,\
    \ 3, 5, 0])\nfalse\n>>> pairs_sum_to_n!([1, 3, -2, 1])\nfalse\n>>> pairs_sum_to_n!([1,\
    \ 2, 3, 7])\nfalse\n>>> pairs_sum_to_n!([2, 4, -5, 3, 5, 7])\ntrue\n>>> pairs_sum_to_n!([1])\n\
    false\n>>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>> pairs_sum_to_n!([1,3,-2,1])\n\
    true\n>>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\n\
    true\n>>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>>\
    \ pairs_sum_to_n!([1,3,-2,1])\ntrue\n>>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>>\
    \ pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n>>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,5,0])\n\
    true\n>>> pairs_sum_to_n!([1,3,-2,1])\ntrue\n>>> pairs_sum_to_n!([1,2,3,7])\n\
    true\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n>>> pairs_sum_to_n!([1])\ntrue\n\
    >>> pairs_sum_to_n!([1,3,5,0])\ntrue\n>>> pairs_sum_to_n!([1,3,-2,1])\ntrue\n\
    >>> pairs_sum_to_n!([1,2,3,7])\ntrue\n>>> pairs_sum_to_n!([2,4,-5,3,5,7])\ntrue\n\
    >>> pairs_sum_to_n!([1])\ntrue\n>>> pairs_sum_to_n!([1,3,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr9z596rb.jl:24\nin expression starting at\
    \ /tmp/tmpr9z596rb.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwij1rjo_.jl:27\nin expression starting at\
    \ /tmp/tmpwij1rjo_.jl:27\n"
  stdout: ''
  timestamp: 1659822940
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6554c70g.jl:24\nin expression starting at\
    \ /tmp/tmp6554c70g.jl:24\n"
  stdout: ''
  timestamp: 1659822938
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns true if the vector contains any negative\
    \ integers, and false otherwise.\nThe function should work for vectors of any\
    \ length.\nFor example, \n[1,2,-3,-4,5] should return true.\n[1,2,3,4,5] should\
    \ return false.\n[1,2,-3,-4,-5,-6,7] should return true.\n[1,2,-3,-4,-5,-6,7]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9] should return true.\n[1,2,-3,-4,-5,-6,7,8,9]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10] should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11] should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12] should return true.\n\
    [1,2,-3,-4,-5,-6,7,8,9,10,11,12] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13] should return false.\n\
    [1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14] should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14]\
    \ should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15] should return\
    \ true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15] should return false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16]\
    \ should return true.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16] should return\
    \ false.\n[1,2,-3,-4,-5,-6,7,8,9,10,11,12,13,14,15,16,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwb7xdk0q.jl:24\nin expression starting at\
    \ /tmp/tmpwb7xdk0q.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    pairs = zip(l, l[1:end-1]) \n    pairs_sum_to_zero = all((pairs[1, 1]\
    \ == 0) & (pairs[2, 1] == 0))\n    return pairs_sum_to_zero\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuo2zh77x.jl:21\nin expression starting at\
    \ /tmp/tmpuo2zh77x.jl:21\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpymavx7i_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpymavx7i_.jl:1\n\
    in expression starting at /tmp/tmpymavx7i_.jl:1\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb5r8p9j4.jl:25\nin expression starting at\
    \ /tmp/tmpb5r8p9j4.jl:25\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input and returns the number of pairs in the\
    \ list that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxbunqihn.jl:24\nin expression starting at\
    \ /tmp/tmpxbunqihn.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoelqensy.jl:27\nin expression starting at\
    \ /tmp/tmpoelqensy.jl:27\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphejbxf6f.jl:24\nin expression starting at\
    \ /tmp/tmphejbxf6f.jl:24\n"
  stdout: ''
  timestamp: 1659822939
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplmgt22w7.jl:24\nin expression starting at\
    \ /tmp/tmplmgt22w7.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90_my_8v.jl:24\nin expression starting at\
    \ /tmp/tmp90_my_8v.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmlo42dg.jl:24\nin expression starting at\
    \ /tmp/tmpcmlo42dg.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes a list of integers as an input, and returns a list of\
    \ all integers in the list that sum to zero.\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpslx6ollv.jl:24\nin expression starting at\
    \ /tmp/tmpslx6ollv.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l[1:end-1], l[2:end])\n    \n    sum = 0\n    for pair\
    \ in pairs\n        sum += pair[1]\n        if sum == 0\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 4\nWrite a function that checks if a number is even.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6zad_0bd.jl:28\nin expression starting at\
    \ /tmp/tmp6zad_0bd.jl:28\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqtdgwzo6.jl:24\nin expression starting at\
    \ /tmp/tmpqtdgwzo6.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmcvwt447.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmcvwt447.jl:1\n\
    in expression starting at /tmp/tmpmcvwt447.jl:1\n"
  stdout: ''
  timestamp: 1659822942
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi1jak4gu.jl:24\nin expression starting at\
    \ /tmp/tmpi1jak4gu.jl:24\n"
  stdout: ''
  timestamp: 1659822946
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkf1q75z0.jl:25\nin expression starting at\
    \ /tmp/tmpkf1q75z0.jl:25\n"
  stdout: ''
  timestamp: 1659822946

language: jl
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0\n        true\n    else\n        if n%2==0\n            false\n       \
    \ else\n            if n%3==0\n                false\n            else\n     \
    \           if n%4==0\n                    true\n                else\n      \
    \              false\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_e7lf8i4.jl:27\nin expression starting at\
    \ /tmp/tmp_e7lf8i4.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_even(n) == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7x1vu5ky.jl:15\nin expression starting at\
    \ /tmp/tmp7x1vu5ky.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_of_4_even(n) == true\n    else \n        return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph1r_jgdo.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph1r_jgdo.jl:1\n\
    in expression starting at /tmp/tmph1r_jgdo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_of_even(n) == true\n    else false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15) ==\
    \ true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == true\n@assert is_equal_to_sum_even(120) == true\n@assert is_equal_to_sum_even(121)\
    \ == true\n@assert is_equal_to_sum_even(122) == true\n@assert is_equal_to_sum_even(123)\
    \ == true\n@assert \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82dw7bfu.jl:14\nin expression starting at\
    \ /tmp/tmp82dw7bfu.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n <= 0\n        error(\"n must be positive\")\n    else if n < 4\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the given number n is a power of two, false otherwise.\
    \ Hint: use the bitwise operator &.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb2p8j5l5.jl:13\nin expression starting at\
    \ /tmp/tmpb2p8j5l5.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0 \n        return true\n    else if n==1 \n        return true\n    else\
    \ if n==2 \n        return true\n    else if n==3 \n        return true\n    else\
    \ if n==4 \n        return true\n    else if n==5 \n        return true\n    else\
    \ if n==6 \n        return true\n    else if n==7 \n        return true\n    else\
    \ if n==8 \n        return true\n    else if n==9 \n        return true\n    else\
    \ if n==10 \n        return true\n    else if n==11 \n        return true\n  \
    \  else if n==12 \n        return true\n    else if n==13 \n        return true\n\
    \    else if n==14 \n        return true\n    else if n==15 \n        return true\n\
    \    else if n==16 \n        return true\n    else if n==17 \n        return true\n\
    \    else if n==18 \n        return true\n    else if n==19 \n        return true\n\
    \    else if n==20 \n        return true\n    else if n==21 \n        return true\n\
    \    else if n==22 \n        return true\n    else if n==23 \n        return true\n\
    \    else if n==24 \n        return true\n    else if n==25 \n        return true\n\
    \    else if n==26 \n        return true\n    else if n==27 \n        return true\n\
    \    else if n==28 \n        return true\n    else if n==29 \n        return true\n\
    \    else if n==30 \n        return true\n    else if n==31 \n        return true\n\
    \    else if n==32 \n        return true\n    else if n==33 \n        return true\n\
    \    else if n==34 \n        return true\n    else if n==35 \n        return true\n\
    \    else if n==36 \n        return true\n    else if n==37 \n        return true\n\
    \    else if n==38 \n        return true\n    else if n==39 \n        return true\n\
    \    else if n==40 \n        return true\n    else if n==41 \n        return true\n\
    \    else if n==42 \n        return true\n    else if n==43 \n        return true\n\
    \    else if n==44 \n        return true\n    else if n==45 \n        return true\n\
    \    else if n==46 \n        return true\n    else if n==47 \n        return true\n\
    \    else if n==48 \n        return true\n    else if n==49 \n        return true\n\
    \    else if n\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp7v1umkk.jl:13\nin expression starting at\
    \ /tmp/tmpp7v1umkk.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_equal_to_sum_even(n-1) == true \n    then return false \n    else return\
    \ true \n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj01tb6gy.jl:12\nin expression starting at /tmp/tmpj01tb6gy.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0\n    then return true\n    else if n==1\n    then return true\n    else\
    \ if n==2\n    then return true\n    else if n==3\n    then return true\n    else\
    \ if n==4\n    then return true\n    else if n==5\n    then return true\n    else\
    \ if n==6\n    then return true\n    else if n==7\n    then return true\n    else\
    \ if n==8\n    then return true\n    else if n==9\n    then return true\n    else\
    \ if n==10\n    then return true\n    else if n==11\n    then return true\n  \
    \  else if n==12\n    then return true\n    else if n==13\n    then return true\n\
    \    else if n==14\n    then return true\n    else if n==15\n    then return true\n\
    \    else if n==16\n    then return true\n    else if n==17\n    then return true\n\
    \    else if n==18\n    then return true\n    else if n==19\n    then return true\n\
    \    else if n==20\n    then return true\n    else if n==21\n    then return true\n\
    \    else if n==22\n    then return true\n    else if n==23\n    then return true\n\
    \    else if n==24\n    then return true\n    else if n==25\n    then return true\n\
    \    else if n==26\n    then return true\n    else if n==27\n    then return true\n\
    \    else if n==28\n    then return true\n    else if n==29\n    then return true\n\
    \    else if n==30\n    then return true\n    else if n==31\n    then return true\n\
    \    else if n==32\n    then return true\n    else if n==33\n    then return true\n\
    \    else if n==34\n    then return true\n    else if n==35\n    then return true\n\
    \    else if n==36\n    then return true\n    else if n==37\n    then return true\n\
    \    else if n==38\n    then return true\n    else if n==39\n    then return true\n\
    \    else if n==40\n    then return true\n    else if n==41\n    then return true\n\
    \    else if n==42\n    then return \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmsc3fx32.jl:12\nin expression starting at /tmp/tmpmsc3fx32.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n<4\n        return false\n    else if n%2==0\n        return false\n    else\
    \ if n%3==0\n        return false\n    else if n%4==0\n        return true\n \
    \   else\n        return is_equal_to_sum_even(ceil(n/4))\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3g2hk9e.jl:13\nin expression starting at\
    \ /tmp/tmpb3g2hk9e.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_equal_to_sum_even(n-1)\n        return true\n    else \n        return false\n\
    end\n</cell>\n<code language=julia-1.4>\n@assert is_equal_to_sum_even(2) == false\n\
    @assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5) == true\n\
    @assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpza8puuen.jl:16\nin expression starting at\
    \ /tmp/tmpza8puuen.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0\n        true\n    else\n        if n%2==0\n            false\n       \
    \ else\n            if n%3==0\n                false\n            else\n     \
    \           if n%4==0\n                    true\n                else\n      \
    \              false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 2\nWrite a function that evaluates\
    \ whether a given number n is equal to the sum of exactly 4 positive odd numbers\n\
    Example\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\ntrue\n\
    >>> is_equal_to_sum_odd(8)\ntrue\n>>> is_equal_to_sum_odd(10)\nfalse\n>>> is_equal_to_sum_odd(12)\n\
    true\n>>> is_equal_to_sum_odd(14)\nfalse\n>>> is_equal_to_sum_odd(16)\ntrue\n\
    >>> is_equal_to_sum_odd(18)\nfalse\n>>> is_equal_to_sum_odd(20)\ntrue\n>>> is_equal_to_sum_odd(22)\n\
    false\n>>> is_equal_to_sum_odd(24)\ntrue\n>>> is_equal_to_sum_odd(26)\nfalse\n\
    >>> is_equal_to_sum_odd(28)\ntrue\n>>> is_equal_to_sum_odd(30)\nfalse\n>>> is_equal_to_sum_odd(32)\n\
    true\n>>> is_equal_to_sum_odd(34)\nfalse\n>>> is_equal_to_sum_odd(36)\ntrue\n\
    >>> is_equal_to_sum_odd(38)\nfalse\n>>> is_equal_to_sum_odd(40)\ntrue\n>>> is_equal_to_sum_odd(42)\n\
    false\n>>> is_equal_to_sum_odd(44)\ntrue\n>>> is_equal_to_sum_odd(46)\nfalse\n\
    >>> is_equal_to_sum_odd(48)\ntrue\n>>> is_equal_to_sum_odd(50)\nfalse\n>>> is_equal_to_sum_odd(52)\n\
    true\n>>> is_equal_to_sum_odd(54)\nfalse\n>>> is_equal_to_sum_odd(56)\ntrue\n\
    >>> is_equal_to_sum_odd(58)\nfalse\n>>> is_equal_to_sum_odd(60)\ntrue\n>>> is_equal_to_sum_odd(62)\n\
    false\n>>> is_equal_to_sum_odd(64)\ntrue\n>>> is_equal_to_sum_odd(66)\nfalse\n\
    >>> is_equal_to_sum_odd(68)\ntrue\n>>> is_equal_to_sum_odd(70)\nfalse\n>>> is_equal_to_sum_odd(72)\n\
    true\n>>> is_equal_to_sum_odd(\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoatq0kap.jl:27\nin expression starting at\
    \ /tmp/tmpoatq0kap.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n == 0 \n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuf4ce85v.jl:16\nin expression starting at\
    \ /tmp/tmpuf4ce85v.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_equal_to_sum_even_helper(n,4)\n    else \n        false\n    end\nend\n\"\
    \"\"\n    Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n\
    \    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n \
    \   true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpfq_vxg2x.jl:16\nin expression starting at /tmp/tmpfq_vxg2x.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_equal_to_sum_even_helper(n) == true\n    else \n        false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5j5s4oxc.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp5j5s4oxc.jl:21\n  Test threw exception\n\
    \  Expression: candidate(4) == false\n  UndefVarError: is_equal_to_sum_even_helper\
    \ not defined\n  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main\
    \ /tmp/tmp5j5s4oxc.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j5s4oxc.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j5s4oxc.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5j5s4oxc.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(6) == false\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp5j5s4oxc.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j5s4oxc.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j5s4oxc.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5j5s4oxc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp5j5s4oxc.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j5s4oxc.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j5s4oxc.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5j5s4oxc.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(10) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp5j5s4ox"
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0\n    then return true\n    else if n==1\n    then return true\n    else\
    \ if n==2\n    then return true\n    else if n==3\n    then return true\n    else\
    \ if n==4\n    then return true\n    else if n==5\n    then return true\n    else\
    \ if n==6\n    then return true\n    else if n==7\n    then return true\n    else\
    \ if n==8\n    then return true\n    else if n==9\n    then return true\n    else\
    \ if n==10\n    then return true\n    else if n==11\n    then return true\n  \
    \  else if n==12\n    then return true\n    else if n==13\n    then return true\n\
    \    else if n==14\n    then return true\n    else if n==15\n    then return true\n\
    \    else if n==16\n    then return true\n    else if n==17\n    then return true\n\
    \    else if n==18\n    then return true\n    else if n==19\n    then return true\n\
    \    else if n==20\n    then return true\n    else if n==21\n    then return true\n\
    \    else if n==22\n    then return true\n    else if n==23\n    then return true\n\
    \    else if n==24\n    then return true\n    else if n==25\n    then return true\n\
    \    else if n==26\n    then return true\n    else if n==27\n    then return true\n\
    \    else if n==28\n    then return true\n    else if n==29\n    then return true\n\
    \    else if n==30\n    then return true\n    else if n==31\n    then return true\n\
    \    else if n==32\n    then return true\n    else if n==33\n    then return true\n\
    \    else if n==34\n    then return true\n    else if n==35\n    then return true\n\
    \    else if n==36\n    then return true\n    else if n==37\n    then return true\n\
    \    else if n==38\n    then return true\n    else if n==39\n    then return true\n\
    \    else if n==40\n    then return true\n    else if n==41\n    then return true\n\
    \    else if n==42\n    then return \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmsc3fx32.jl:12\nin expression starting at /tmp/tmpmsc3fx32.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_even(n) == true\n    else false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\n\
    true\n>>> is_equal_to_sum_odd(8)\nfalse\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7yf84cl6.jl:14\nin expression starting at\
    \ /tmp/tmp7yf84cl6.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n == 0 \n        true\n    else if n % 2 == 0 \n        false\n    else if n\
    \ % 4 == 0 \n        true\n    else \n        is_equal_to_sum_even(n - 1)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks whether a given number\
    \ n is a multiple of another number m. \nExample\n>>> is_multiple_of(5, 3)\ntrue\n\
    >>> is_multiple_of(5, 4)\nfalse\n>>> is_multiple_of(5, 5)\ntrue\n>>> is_multiple_of(5,\
    \ 6)\nfalse\n>>> is_multiple_of(5, 7)\nfalse\n>>> is_multiple_of(5, 8)\nfalse\n\
    >>> is_multiple_of(5, 9)\nfalse\n>>> is_multiple_of(5, 10)\nfalse\n>>> is_multiple_of(5,\
    \ 11)\nfalse\n>>> is_multiple_of(5, 12)\nfalse\n>>> is_multiple_of(5, 13)\nfalse\n\
    >>> is_multiple_of(5, 14)\nfalse\n>>> is_multiple_of(5, 15)\nfalse\n>>> is_multiple_of(5,\
    \ 16)\nfalse\n>>> is_multiple_of(5, 17)\nfalse\n>>> is_multiple_of(5, 18)\nfalse\n\
    >>> is_multiple_of(5, 19)\nfalse\n>>> is_multiple_of(5, 20)\nfalse\n>>> is_multiple_of(5,\
    \ 21)\nfalse\n>>> is_multiple_of(5, 22)\nfalse\n>>> is_multiple_of(5, 23)\nfalse\n\
    >>> is_multiple_of(5, 24)\nfalse\n>>> is_multiple_of(5, 25)\nfalse\n>>> is_multiple_of(5,\
    \ 26)\nfalse\n>>> is_multiple_of(5, 27)\nfalse\n>>> is_multiple_of(5, 28)\nfalse\n\
    >>> is_multiple_of(5, 29)\nfalse\n>>> is_multiple_of(5, 30)\nfalse\n>>> is_multiple_of(5,\
    \ 31)\nfalse\n>>> is_multiple_of(5, 32)\nfalse\n>>> is_multiple_of(5, 33)\nfalse\n\
    >>> is_multiple_of(5, 34)\nfalse\n>>> is_multiple_of(5, 35)\nfalse\n>>> is_multiple_of(5,\
    \ 36)\nfalse\n>>> is_multiple_of(5, 37)\nfalse\n>>> is_multiple_of(5, 38)\nfalse\n\
    >>> is_multiple_of(5, 39)\nfalse\n>>> is_multiple_of(5, 40)\nfalse\n>>> is_multiple_of(5,\
    \ 41)\nfalse\n>>> is_multiple_of(5, 42)\nfalse\n>>> is_multiple_of(5, 43)\nfalse\n\
    >>> is_multiple_of(5, 44)\nfalse\n>>> is_multiple_of(5, 45\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprqcpfj4_.jl:13\nin expression starting at\
    \ /tmp/tmprqcpfj4_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_even(n) == true\n    else \n        return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == true\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == false\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == false\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert is_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpszq3n02q.jl:15\nin expression starting at\
    \ /tmp/tmpszq3n02q.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ n==0\n        true\n    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))||((n%2!=0)&&(n%4==0))\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxd4vfny.jl:17\nin expression starting at\
    \ /tmp/tmpnxd4vfny.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n\
    \    false\n    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n\
    \    true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if\
    \ is_sum_of_even(n) == true\n    else \n        false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk8lw3b66.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk8lw3b66.jl:1\n\
    in expression starting at /tmp/tmpk8lw3b66.jl:1\n"
  stdout: ''

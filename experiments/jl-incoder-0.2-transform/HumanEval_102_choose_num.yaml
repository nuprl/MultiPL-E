name: HumanEval_102_choose_num
language: jl
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\
  \"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    if x < y \n        then return choose_num(y, x)\n    else if x\
    \ == y \n        then return x\n    else \n        then return choose_num(x +\
    \ 1, y)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion |>\n<code>",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 && choose_num(x\
    \ / 2, y / 2)\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\n\
    This doesn't work. `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/ c |>\n\
    <| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work either. `choose_num(12, 15)` returns `-1` instead of\
    \ `14`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code\
    \ now.\n<|/ c |>\n<| c |>\nThis doesn't work either. `choose_num(12, 15)` returns\
    \ `-1` instead of `14`.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y\n        then return\
    \ x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else\
    \ return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x <= y \n        then return x \n        else return y\n\
    \    else \n        choose_num(y,x)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work when `x` is greater than `y`\n<|/ c |>\n<| c |>\nI didn't see that\
    \ requirement in the question, but I added it now. Thanks.\n<|/ c |>\n<| a tags=recursion,julia,algorithm\
    \ |>\n<code>", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return choose_num(y, x)\n    else return x \nend \n</code>\n<|/ a\
    \ dscore=0 |>\n<| a |>\n<code>", "    if x > y \n        then return -1\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x - 2, y -\
    \ 1)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer n and returns n raised\
    \ to the power of 2. \nFor example, choose_num(12) should return 24 and choose_num(13)\
    \ should return 9. \nWrite a function that takes a positive integer n and returns\
    \ the largest number \nthat is divisible by n. For example, choose_num(12) should\
    \ return 12 and \nchoose_num(13) should return 3.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        then return choose_num(y - 1, x)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't answer the question, which is about finding the largest\
    \ even number in a given range. Your code doesn't do that.\n<|/ c |>\n<| c |>\n\
    The question was \"How to find the largest even number in a given range?\" The\
    \ code above does exactly that. Did you try it?\n<|/ c |>\n<| c |>\nYes, I did.\
    \ But it returns `-1` for the range `[12, 15]`. That's not what the question asked\
    \ for. Your code returns `14` for the range `[12, 15]`.\n<|/ c |>\n<| c |>\nThe\
    \ code returns 14 for [12, 15]. Did you try it?\n<|/ c |>\n<| c |>\nYes, I did.\
    \ But it returns `-1` for the range `[12, 15]`. That's not what the question asked\
    \ for. Your code returns `14` for the range `[12, 15]`.\n<|/ c |>\n<| a tags=julia,range,function\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    else if x == y \n        then return x\n        \n    else if x % 2 == 0\
    \ \n        then return choose_num(x / 2, y)\n        \n    else if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    else return -1\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\
    \ \n    number, then the function should return -1.", "    if x > y \n       \
    \ then return choose_num(y, x)\n        \n    if x == y \n        then return\
    \ x\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ - y, y)\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>", " \
    \   if x > y \n        then return -1\n    else if x < y\n        then return\
    \ choose_num(y, x)\n    else if x == y\n        then return x\n    else if x %\
    \ 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer number x and returns\
    \ the number that \n    is the sum of all positive integers less than or equal\
    \ to x.", "    if x < y \n        then return choose_num(y, x)\n        \n   \
    \ if x == y \n        then return x\n        \n    if x % 2 == 0 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x > y \n        then return choose_num(y,\
    \ x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers \nsmaller than $n$. For example, 6! = 6 \xD7\
    \ 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 720.", "    if x > y \n        then return -1\n\
    \    else \n        x <- x\n        y <- y\n        if x % 2 == 0 \n         \
    \   then return y\n        else \n            x <- x - 1\n            y <- y +\
    \ 1\n            if x % 2 == 0 \n                then return y\n            else\
    \ \n                x <- x - 1\n                y <- y - 1\n                if\
    \ x % 2 == 0 \n                    then return y\n                else \n    \
    \                x <- x - 1\n                    y <- y + 1\n                \
    \    if x % 2 == 0 \n                        then return y\n                 \
    \   else \n                        x <- x - 1\n                        y <- y\
    \ - 1\n                        if x % 2 == 0 \n                            then\
    \ return y\n                        else \n                            x <- x\
    \ - 1\n                            y <- y + 1\n                            if\
    \ x % 2 == 0 \n                                then return y\n               \
    \             else \n                                return -1\n    end\nend\n\
    </code>\n<|/ a tags=julia,function,if-statement |>\n<| c |>\nThis doesn't work.\
    \ `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out.\n<|/ c |>\n<| a tags=julia,function,if-statement\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. `choose_num(12, 15)`\
    \ returns `12` instead of `14`.\n<|/ c |>\n<| c |>\nI fixed the typo. Thanks for\
    \ pointing it out\n<|/ c |>\n<| c |>\nThis doesn't work. `choose_num(12, 15)`\
    \ returns `12` instead of `14`.\n<|/ c |>\n<| c |>\nI fixed the typo. Thanks for\
    \ pointing it out\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    if x < y \n     \
    \   then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer and returns\
    \ the sum of its digits. \nFor example, choose_num(12) should return 1 + 2 = 3.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else return x \nend\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n    else if x == y \n     \
    \   then return x\n    else if x % 2 == 0 \n        then return choose_num(x /\
    \ 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer, I forgot to add the `else` statement in the\
    \ `if` statement. Now it should work.\n<|/ c |>\n<| c |>\nThis doesn't work. Try\
    \ it with `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI edited my answer, I forgot\
    \ to add the `else` statement in the `if` statement. Now it should work.\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else if x % 2 == 0 \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    else \n  \
    \      then return choose_num(x / 2, y)\n    else \n        then return cho",
  "    if x < y \n        then return choose_num(y, x)\n        \n    if x == y\n\
    \        then return x\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number x and returns the sum of its digits. \nFor example,\
    \ if the input is 123, the function should return 1 + 2 + 3 = 6.", "    if x >\
    \ y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : choose_num(x / 2, y /\
    \ 2)\nend\n</code>\n<|/ a |>\n<| c |>\nI believe this answer should be the accepted\
    \ one. While the other answers give a more detailed explanation on how to solve\
    \ the problem, this one actually explains how to solve the problem and also gives\
    \ a solution that is more efficient than other solutions.\n<|/ c |>\n<| a |>\n\
    <code>", "    if x > y \n        then return -1\n    else if x == y \n       \
    \ then return x\n    else \n        choose_num(x - 2, y + 1)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its factorial. \n\
    For example, factorial(4) == 24. \nThe function should work for any positive integer\
    \ number.", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y \n        then return x\n    else \n        then return choose_num(x\
    \ div 2, y div 2)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,performance\
    \ |>\n<| c |>\nThanks for the answer. Your code works, but it takes too much time\
    \ for large numbers. I tested it on Julia 1.5.1 and it took about 2 minutes for\
    \ choose_num(10^6, 10^6). Do you know any way to make it faster?\n<|/ c |>\n<|\
    \ c |>\nI tested it on Julia 1.5.1 and it took about 2 minutes for choose_num(10^6,\
    \ 10^6). Do you know any way to make it faster?\n<|/ c |>\n<| c |>\nI tested it\
    \ on Julia 1.5.1 and it took about 2 minutes for choose_num(10^6, 10^6). Do you\
    \ know any way to make it faster?\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1\
    \ and it took about 2 minutes for choose_num(10^6, 10^6). Do you know any way\
    \ to make it faster?\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 and it took\
    \ about 2 minutes for choose_num(10^6, 10^6). Do you know any way to make it faster?\n\
    <|/ c |>\n<| a tags=julia,recursion,performance |>\nI believe that your algorithm\
    \ is correct, but your implementation is not. \nThe algorithm is correct, but\
    \ your implementation is not. \nThe algorithm is correct because you only need\
    \ to check whether x is less than or equal to y, and if so, return x. \nThe implementation\
    \ is incorrect because you only need to check whether x is less than or equal\
    \ to y, and if so, return y. You also need to check whether x is greater than\
    \ or equal to y, and if so, return x. \nThe implementation is incorrect because\
    \ you only need to check whether x is less than or equal to y, and if so, return\
    \ y. You also need to check whether x is greater than or equal to y, and if so,\
    \ return y. You also need to check whether x is less than or equal to y, and if\
    \ so, return x. You also need to check whether x is greater than or equal to y,\
    \ and if so, return y. You also need to check whether x is less than or equal\
    \ to y, and if so, return x. You also need to check whether x is greater than\
    \ or equal to y, and if so, return y. You also need to check whether x is less\
    \ than ", "    if x < y \n        then return choose_num(y, x)\n        \n   \
    \ if x == y \n        then return x\n        \n    if x % 2 == 0 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n", "    if x < y \n\
    \        then return choose_num(y, x)\n        else return x\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis does not answer the question. OP asked for a function that\
    \ returns -1 if there is no even number in the range. Your function returns 0\
    \ when there is no even number in the range.\n<|/ c |>\n<| c |>\nI see what you\
    \ mean. I've edited my answer to reflect that.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y\n     \
    \   then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the sum of all \nthe even numbers up to and including\
    \ n.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        then return choose_num(y - 1,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number and\
    \ returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n     \
    \   else return x\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ x > y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    \    if x == y \n        then return x\n    end\n    if x % 2 == 0 \n        then\
    \ return choose_num(x / 2, y)\n    end\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n    end\n    if x == y / 2 \n        then return x\n \
    \   end\n    if y / 2 == x \n        then return y\n    end\n    if y / 2 == x\
    \ / 2 \n        then return y\n    end\n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer $n$ and returns the number of digits\nof $n$ that are divisible by $3$.\
    \ For example, if the input is $n = 12$, then\nthe function should return $2$.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(x - y, y)\n    end\n\
    end\n</cell>\n<code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.1>\nchoose_num(12, 12)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(12, 14)\n</cell>\n<code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.1>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.1>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(15, 13)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.1>\nchoose_num(15, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(16, 15)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(17, 15)\n</cell>\n<code language=julia-1.1>\nchoose_num(18, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(19, 15)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(20, 15)\n</cell>\n<code language=julia-1.1>\nchoose_num(21, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(22, 15)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(23, 15)\n</cell>\n<code language=julia-1.1>\nchoose_num(24, 15)\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(25, 15)\n</cell>\n<code language=julia-1.1>\n\
    choose_num(26, 15)\n</cell>\n<code language=julia-1.1>\nchoose_num(27, 15)\n</cell>\n\
    <code language=julia-1.1>\ncho", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 && choose_num(x / 2, y / 2)\n\
    \    end\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| a tags=julia,recursion,function\
    \ |>\n<code>", "    if x > y \n        then return -1\n    else \n        if x\
    \ % 2 == 0 \n            then return x\n        else \n            if y % 2 ==\
    \ 0 \n                then return y\n            else \n                if x %\
    \ 2 == y % 2 \n                    then return x\n                else \n    \
    \                if x % 2 == y % 2 \n                        then return y\n \
    \                   else \n                        if x % 2 == y % 2 \n      \
    \                      then return x\n                        else \n        \
    \                    if x % 2 == y % 2 \n                                then\
    \ return y\n                            else \n                              \
    \  if x % 2 == y % 2 \n                                    then return x\n   \
    \                             else \n                                    if x\
    \ % 2 == y % 2 \n                                        then return y\n     \
    \                               else \n                                      \
    \  if x % 2 == y % 2 \n                                            then return\
    \ x\n                                        else \n                         \
    \                   if x % 2 == y % 2 \n                                     \
    \           then return y\n                                            else \n\
    \                                                if x % 2 == y % 2 \n        \
    \                                            then return x\n                 \
    \                               else \n                                      \
    \              if x % 2 == y % 2 \n                                          \
    \              then return y\n                                               \
    \     else \n                                                        if x % 2\
    \ == y % 2 \n                                                            then\
    \ return x\n                                                        else \n  \
    \                                                          if x % 2 == y % 2 \n\
    \                                                                then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return y\n\
    \                                                            else \n         \
    \                                                       if x % 2 == y % 2 \n \
    \                                                                   then return\
    \ x\n                                                                    else\
    \ \n                                                        if x % 2 == ", " \
    \   if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - 2, y - 1)\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nI appreciate your answer, but this doesn't really answer the question.\
    \ As I understand it, the question is asking how to implement the recursive function\
    \ `choose_num` without using an explicit `if` statement. Your answer doesn't do\
    \ that, and it also doesn't explain why you chose to use recursion in the first\
    \ place.\n<|/ c |>\n<| c |>\nI agree with you. I just wanted to show a way to\
    \ implement the function without an explicit `if` statement. My answer was based\
    \ on the fact that OP wanted to implement it using recursion.\n<|/ c |>\n<| c\
    \ |>\nI appreciate your answer, but this doesn't really answer the question. As\
    \ I understand it, the question is asking how to implement the recursive function\
    \ `choose_num` without using an explicit `if` statement. Your answer doesn't do\
    \ that, and it also doesn't explain why you chose to use recursion in the first\
    \ place.\n<|/ c |>\n<| a dscore=1 |>\nThe answer by is correct, but I thought\
    \ I'd add some explanation as to why it works.\nThe function choose_num is defined\
    \ as follows:\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion\
    \ |>\nI wrote a Julia package that does this called \"choose_num\". It works by\
    \ finding the smallest number in the range [x, y] that divides evenly into n.\
    \ \n<code>\njulia> choose_num(12, 15)\n14", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      choose_num(y - 1, x)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ n and returns the number of \ndigits in the number n. For example, choose_num(12)\
    \ should return 3.", "    if x < y \n        then return choose_num(y, x)\n  \
    \      \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x > y \n        then return\
    \ choose_num(y, x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \   else \n        if x == y \n            then return x\n        else \n    \
    \        if x % 2 == 0 \n                then return choose_num(x / 2, y)\n  \
    \          else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(x / 2, y)\n                  \
    \  else \n                        if x < y \n                            then\
    \ return choose_num(x, y / 2)\n                        else return -1\n</code>\n\
    <|/ a tags=recursion,math,haskell |>\n<| a dscore=0 |>\n<code>\nimport Data.List",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 && choose_num(x\
    \ / 2, y / 2) * choose_num(x / 2, y / 2) >= x && choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2) <= y\n        then return choose_num(x / 2, y / 2) * choose_num(x\
    \ / 2, y / 2)\n        else return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n</code>\n<|/ a dscore=0 |>\n<| a tags=recursion,julia\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x) \n       \
    \ else return x \n    else return y \nend \n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers and returns the number of positive numbers in the array.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y\n     \
    \   then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the biggest odd number that is in the range\
    \ [x, y] inclusive. If there's no such number, then the function should return\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n        else return\
    \ x\n    end\n    if x == y \n        then return x\n    end\n    if x % 2 ==\
    \ 0 \n        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0 \n\
    \        then return choose_num(x, y / 2)\n    end\n    if x > y \n        then\
    \ return choose_num(y, x)\n    end\n    return -1\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\nbiggest odd number that is in the\
    \ range [x, y] inclusive. If there's no such \nnumber, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(x\
    \ - y, y)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,function,if-statement\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd number that is\
    \ in the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \   else \n        if x == y\n            then return x\n        else if x % 2\
    \ == 0\n            then return choose_num(x / 2, y)\n        else return choose_num(x\
    \ / 2, y)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI see no reason to downvote this\
    \ answer. Maybe because you didn't explain what was wrong with OP's code? I see\
    \ no reason to downvote this answer either. Maybe because you didn't explain what\
    \ was wrong with OP's code? I see no reason to downvote this answer either. Maybe\
    \ because you didn't explain what was wrong with OP's code? I see no reason to\
    \ downvote this answer either. Maybe because you didn't explain what was wrong\
    \ with OP's code? I see no reason to downvote this answer either. Maybe because\
    \ you didn't explain what was wrong with OP's code? I see no reason to downvote\
    \ this answer either. Maybe because you didn't explain what was wrong with OP's\
    \ code? I see no reason to downvote this answer either. Maybe because you didn't\
    \ explain what was wrong with OP's code? I see no reason to downvote this answer\
    \ either. Maybe because you didn't explain what was wrong with OP's code? I see\
    \ no reason to downvote this answer either. Maybe because you didn't explain what\
    \ was wrong with OP's code? I see no reason to downvote this answer either. Maybe\
    \ because you didn't explain what was wrong with OP's code? I see no reason to\
    \ downvote this answer either. Maybe because you didn't explain what was wrong\
    \ with OP's code? I see no reason to downvote this answer either. Maybe because\
    \ you didn't explain what was wrong with OP's code? I see no reason to downvote\
    \ this answer either. Maybe because you didn't explain what was wrong with OP's\
    \ code? I see no reason to downvote this answer either. Maybe because you didn't\
    \ explain what was wrong with OP's code? I see no reason to downvote this answer\
    \ either. Maybe because you didn't explain what was wrong with OP's code? I see\
    \ no reason to downvote this answer either. Maybe because you didn't explain what\
    \ was wrong with OP's code? I see no reason to downvote this answer either. Maybe\
    \ because you didn't explain what was wrong with OP's code? I see no ", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    if x == y \n   \
    \     then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n", "    if x < y \n        then return\
    \ choose_num(y, x)\n        \n    else if x == y \n        then return x\n   \
    \     \n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n  \
    \      \n    else if y % 2 == 0 \n        then return choose_num(x, y / 2)\n \
    \       \n    else if x % 2 == y % 2 \n        then return x\n        \n    else\
    \ if x % 2 == y % 2 \n        then return y\n        \n    else return -1\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer number x and returns the number of\
    \ times it appears in the list [x, x + 1, ..., x + 10] inclusive.", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a positive number x and returns the smallest number \nthat is greater\
    \ than or equal to x. If there's no such number, then the function should \nreturn\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        choose_num(y - 1, x)\n    end\n\
    end\n</code>\n<|/ a |>\n<| c |>\nThis code doesn't work. Try it with `choose_num(12,\
    \ 15)`.\n<|/ c |>\n<| c |>\nIt works fine for me. Try it yourself.\n<|/ c |>\n\
    <| c |>\nIt doesn't work for me either. Try it with `choose_num(12, 15)`.\n<|/\
    \ c |>\n<| c |>\nIt works for me too. Try it yourself.\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work for me either. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \        else return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a positive integer number and returns its factorial. \nThe factorial\
    \ of a number $n$ is defined as the product of all the integers \nsmaller than\
    \ $n$. For example, 5! = 5 x 4 x 3 x 2 x 1 = 120.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        choose_num(x - y, x + y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(y - 1, x)\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\n\
    This is not the correct answer. Try `choose_num(12, 15)` which returns `14` instead\
    \ of `-1`.\n<|/ c |>\n<| c |>\nThe function returns -1 when there is no even number\
    \ in the range. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it returns `-1` when\
    \ there is no even number in the range. Try it yourself. `choose_num(12, 15)`\
    \ returns `14` instead of `-1`.\n<|/ c |>\n<| c |>\nYes, it returns -1 when there\
    \ is no even number in the range. Try it yourself. `choose_num(12, 15)` returns\
    \ `14` instead of `-1`.\n<|/ c |>\n<| c |>\nYes, it returns -1 when there is no\
    \ even number in the range. Try it yourself. `choose_num(12, 15)` returns `14`\
    \ instead of `-1`.\n<|/ c |>\n<| a tags=julia |>\n<code>", "    if x > y \n  \
    \      then return -1\n    else if x < y\n        then return choose_num(y, x)\n\
    \    else if x == y\n        then return x\n    else if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an integer x and returns its factorial. \nFor example,\
    \ factorial(5) == 120.", "    if x > y \n        then return -1\n    else \n \
    \       if x == y \n            then return x\n        else \n            if x\
    \ % 2 == 0 \n                then return choose_num(x / 2, y)\n            else\
    \ \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x % 2 == y % 2 \n    \
    \                    then return x\n                    else \n              \
    \          if x % 2 == y % 2 \n                            then return y\n   \
    \                     else \n                            if x % 2 != y % 2 \n\
    \                                then return -1\n                            else\
    \ \n                                return choose_num(x / 2, y / 2)\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(22, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(24, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y \n        then return x\n    else \n        choose_num(x - y, x + y)\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nFor example, factorial(5) = 5 x 4 x 3 x\
    \ 2 x 1 = 120", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an integer number and returns its factorial. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120", "    if x < y \n      \
    \  then return choose_num(y, x)\n    else if x == y \n        then return x\n\
    \    else \n        then return choose_num(y - 1, x)\nend\n</cell>\n<code language=julia-1.0>",
  "    if x > y \n        then return choose_num(y, x)\n        else return x\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| c |>\nThis doesn't answer the question. OP\
    \ wants to know how to write an `if` statement that returns `-1` when `x` is greater\
    \ than `y`.\n<|/ c |>\n<| c |>\nI added a solution that does exactly that\n<|/\
    \ c |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to write\
    \ an `if` statement that returns `-1` when `x` is greater than `y`.\n<|/ c |>\n\
    <| c |>\nI added a solution that does exactly that\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to know how to write an `if` statement that returns\
    \ `-1` when `x` is greater than `y`.\n<|/ c |>\n<| a tags=julia,if-statement |>\n\
    <code>", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer number x and returns the number\
    \ of \ntimes it appears in the list [x, x + 1, ..., x + 100] inclusive.", "  \
    \  if x > y \n        then return choose_num(y, x)\n    else if x < y \n     \
    \   then return choose_num(x, y)\n    else if x == y \n        then return x\n\
    \    else return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ x and returns the sum of its digits. \nIf the number is negative, return -1.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(y - 1, x)\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number x and returns the sum of its digits. \nFor example, if the number is\
    \ 123, then the function should return 1 + 2 + 3 = 6.", "    if x < y \n     \
    \   then return choose_num(y, x)\n    else if x == y \n        then return x\n\
    \    else \n        then return choose_num(x div 2, y div 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer and returns\
    \ the factorial of \nthat number. For example, factorial(5) = 5 x 4 x 3 x 2 x\
    \ 1 = 120.", "    if x > y \n        then return -1\n    else if x < y \n    \
    \    then return choose_num(y, x)\n    else return x \nend \n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,if-statement |>\n<code>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        \n    if x == y \n        then return x\n        \n\
    \    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if x >\
    \ y \n        then return choose_num(y, x)\n        \n    return -1\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nProblem 4\nWrite\
    \ a function that takes a positive integer $n$ and returns the number of \ndigits\
    \ in the number $n$. For example, if the number is 123, then your function should\
    \ return 3.", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(x div 2, y div 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if x < y \n        then\
    \ return choose_num(y, x) \n        else return x \n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>", "    if x < y \n        then return choose_num(y, x)\n\
    \        \n    if x == y \n        then return x\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else \n        choose_num(y -\
    \ 1, x)\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if x is greater than\
    \ y\n<|/ c |>\n<| c |>\nThis doesn't work if x is greater than y\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if x is greater than y\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if x is greater than y\n<|/ c |>\n<| c |>\nThis doesn't work if x is greater\
    \ than y\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    if x > y \n        then return\
    \ -1\n    else if x < y\n        then return choose_num(y, x)\n    else if x ==\
    \ y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \    else return -1\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers and returns the number of even\nnumbers in the array.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else return x \nend \n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \        else return x\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThis\
    \ doesn't answer the question, which is about how to write an `if` statement in\
    \ Julia.\n<|/ c |>\n<| c |>\nI thought this was the answer to the question. He\
    \ was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking how to write\
    \ an if statement in Julia. He was asking how to write an if statement in Julia.\
    \ He was asking how to write an if statement in Julia. He was asking ", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    if x == y \n   \
    \     then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2\n        then return x\n        \n    return\
    \ -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such \n    number, then the function should return -1.", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \nfactorial.\
    \ For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\n</cell>\n<code language=julia-0.6>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        \n    if x == y\n        then return x\n        \n\
    \    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2\
    \ == 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y % 2 ==\
    \ 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n \
    \       then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n  \
    \      then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n       \
    \ then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y\
    \ / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n \
    \       \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n       \
    \ \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n   \
    \ if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y %\
    \ 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then ",
  "    if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x > y \n        then return choose_num(y, x)\n        \n\
    \    return -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ x and returns the sum of its digits. \nFor example, if the number is 123, then\
    \ the function should return 1 + 2 + 3 = 6.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y\n        then return x\n    else \n   \
    \     then return choose_num(x div 2, y div 2)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    if x > y \n        then return choose_num(y, x)\n\
    \    else if x < y \n        then return choose_num(x, y)\n    else return x\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the biggest odd integer number that is in the range [x, y] inclusive. If there's\
    \ no such number, then the function should return -1.", "    if x < y \n     \
    \   then return choose_num(y, x)\n        \n    else if x == y \n        then\
    \ return x\n        \n    else \n        choose_num(x - y, x + y)\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer $n$ and returns the number of digits\
    \ in $n$. \nFor example, choose_num(12) should return 2, and choose_num(123) should\
    \ return 3.", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\n    if x == y \n        then return x\n    end\n    if x\
    \ % 2 == 0 \n        then return choose_num(x / 2, y)\n    end\n    if y % 2 ==\
    \ 0 \n        then return choose_num(x, y / 2)\n    end\n    return -1\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer $n$\
    \ and returns the number of digits\nof $n$ that are greater than or equal to $10$.",
  "    if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number x and returns the sum of its digits. \nFor example, if the number is\
    \ 123, then the function should return 1 + 2 + 3 = 6.", "    if x <= y \n    \
    \    then return x\n        else return y\n    end\n    if x == y \n        then\
    \ return x\n        else return y\n    end\n    if x == 0\n        then return\
    \ -1\n    end\n    if y == 0\n        then return -1\n    end\n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n  \
    \      then return choose_num(x, y / 2)\n    end\n    if x > y\n        then return\
    \ choose_num(x / 2, y)\n    end\n    if y > x\n        then return choose_num(x,\
    \ y / 2)\n    end\n    if x == y\n        then return x\n    end\n    if x > y\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y > x\n        then\
    \ return choose_num(x, y / 2)\n    end\n    if x == 0\n        then return -1\n\
    \    end\n    if y == 0\n        then return -1\n    end\n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n    end\n    if x > y\n        then return\
    \ choose_num(x / 2, y)\n    end\n    if y > x\n        then return choose_num(x,\
    \ y / 2)\n    end\n    if x == y\n        then return x\n    end\n    if x > y\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y > x\n        then\
    \ return choose_num(x, y / 2)\n    end\n    if x == 0\n        then return -1\n\
    \    end\n    if y == 0\n        then return -1\n    end\n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n    end\n    if x > y\n        then return\
    \ choose_num(x / 2, y)\n    end\n    if y > x\n        then return choose_num(x,\
    \ y / 2)\n    end\n    if x == y\n        then return x\n    end\n    if x > y\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y > x\n        then\
    \ return choose_num(x, y / 2)\n    end\n    if x == 0\n        then return -1\n\
    \    end\n    if y == 0\n        then return -1\n    end\n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n    end", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=0 |>\n<code>", "    if x > y \n        then return choose_num(y, x)\n\
    \        else return x\n    end\n    if x == y \n        then return x\n    end\n\
    \    if x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n    if\
    \ y % 2 == 0\n        then return choose_num(x, y / 2)\n    end\n    return -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number x and returns\
    \ the sum of its digits. \nFor example, choose_num(12) should return 1 + 2 = 3.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else return x\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes an integer $n$ and returns the factorial of $n$.", " \
    \   if x < y \n        then return choose_num(y, x)\n        \n    else if x ==\
    \ y \n        then return x\n        \n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    else if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    else if x % 2 == y % 2 \n        then return\
    \ x\n        \n    else return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such number, then the function should return -1.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      x % 2 == 0 ? x : x + 1\nend\n</cell>\n<code language=julia-1.1>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number x and returns the \nsmallest integer number that is in the range [x,\
    \ y] inclusive. If there's no such \nnumber, then the function should return -1.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.", "    if x > y \n        then return choose_num(y, x)\n \
    \       \n    if x == y \n        then return x\n    \n    if x % 2 == 0 \n  \
    \      then return choose_num(x / 2, y)\n    \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n    \n    if x % 2 == y % 2\n        then return\
    \ choose_num(x / 2, y / 2)\n    \n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x, y / 2)\n    \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\n    end\nend\n</cell>\n<code language=julia-0.6>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer x and\
    \ returns the number of times it appears in the list [1, 2, 3, ..., x].", "  \
    \  if x < y \n        then return choose_num(y, x)\n        else return x\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis doesn't work for `choose_num(12, 15)` which\
    \ should return `14`.\n<|/ c |>\n<| c |>\nIt should return 14. I've tested it\
    \ and it works.\n<|/ c |>\n<| c |>\nI tested it and it works. I guess you didn't\
    \ test it properly.\n<|/ c |>\n<| c |>\nI tested it and it works. I guess you\
    \ didn't test it properly.\n<|/ c |>\n<| c |>\nI tested it and it works. I guess\
    \ you didn't test it properly. `choose_num(12, 15)` should return `14`. `choose_num(13,\
    \ 12)` should return `-1`. `choose_num(12, 13)` should return `-1`. `choose_num(13,\
    \ 14)` should return `14`.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    if x < y\
    \ \n        then return choose_num(y, x)\n        else return x\n</code>\n<|/\
    \ a tags=julia,if-statement |>\n<| c |>\nThis doesn't work. `choose_num(12, 15)`\
    \ returns `-1` instead of `14`.\n<|/ c |>\n<| c |>\nYeah, I fixed it now. Thanks!\n\
    <|/ c |>\n<| c |>\nThis doesn't work. `choose_num(12, 15)` returns `-1` instead\
    \ of `14`.\n<|/ c |>\n<| c |>\nYeah, I fixed it now. Thanks!\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    if x > y \n        then return choose_num(y, x)\n    else\
    \ if x < y \n        then return choose_num(y, x)\n    else return x\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        choose_num(y - 1, x)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return -1\n    else if\
    \ x < y \n        then return choose_num(y, x)\n    else return x\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n        else return x\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer number and returns its factorial.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if x < y \n   \
    \     then return choose_num(y, x)\n        \n    else if x == y \n        then\
    \ return x\n        \n    else \n        then return choose_num(x div 2, y div\
    \ 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers and returns\
    \ the number of even numbers in the array.", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else return\
    \ x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive\
    \ numbers x and y and returns the\n    biggest odd number that is in the range\
    \ [x, y] inclusive. If there's no such\n    number, then the function should return\
    \ -1.", "    if x > y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        then return choose_num(x + 1,\
    \ y)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive\
    \ integer number and returns its factorial. \nFor example, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return choose_num(y,\
    \ x) \n        else return x \n    else \n        then return choose_num(y, x)\
    \ \n        else return -1 \nend \n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a positive integer number x and returns the \n    biggest odd integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x == y / 2 \n \
    \       then return x\n        \n    if y / 2 % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if y / 2 % 2 == 1 \n        then return choose_num(x /\
    \ 2, y)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n    else \n    \
    \    if x % 2 == 0 \n            then return x\n        else \n            if\
    \ y % 2 == 0 \n                then return y\n            else \n            \
    \    if x % 2 == y % 2 \n                    then return x\n                else\
    \ \n                    if x % 2 != y % 2 \n                        then return\
    \ -1\n                    else \n                        if x % 2 == y % 2 \n\
    \                            then return choose_num(x div 2, y div 2)\n      \
    \                  else \n                            if x % 2 != y % 2 \n   \
    \                             then return -1\n                               \
    \ else \n                                    return choose_num(x div 2, y div\
    \ 2)\n</code>\n<|/ a |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/27827824)\n<|/ c |>\n<| c |>\n\
    The question was \"how to find the biggest even number in range [x, y]\", and\
    \ I provided a solution that works. I didn't say it was the best solution, just\
    \ that it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say it is the best solution, just that\
    \ it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say it is the best solution, just that\
    \ it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say it is the best solution, just that\
    \ it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say it is the best solution, just that\
    \ it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say it is the best solution, just that\
    \ it works. I didn't say it is the best solution, just that it works. I didn't\
    \ say it is the best solution, just that it works. I didn't say it is the best\
    \ solution, just that it works. I didn't say ", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      then return choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0\n        then return choose_num(x / 2, y)\n        \n    return -1\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer number x and returns the \n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\
    \ \n    number, then the function should return -1.", "    if x < y \n       \
    \ then return choose_num(y, x)\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   if x > y \n                        then return choose_num(y,\
    \ x)\n                    else \n                        return -1\n</code>\n\
    <|/ a tags=recursion,big-o,time-complexity,big-theta,algorithm |>\n<| a tags=recursion,big-o,time-complexity,big-theta,algorithm\
    \ |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if x < y:\n        return\
    \ choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n\
    \        return choose_num(x / 2, y)\n    else:\n        return choose_num(x,\
    \ y / 2)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to\
    \ your answer such that others can learn from it\n<|/ c |>\n<| a tags=recursion,big-o,time-complexity,big-theta,algorithm\
    \ |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if x < y:\n        return\
    \ choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n\
    \        return choose_num(x / 2, y)\n    else:\n        return choose_num(x,\
    \ y / 2)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to\
    \ your answer such that others can learn from it\n<|/ c |>\n<| a tags=recursion,big-o,time-complexity,big-theta,algorithm\
    \ |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if x < y:\n        return\
    \ choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n\
    \        return choose_num(x / 2, y)\n    else:\n        return choose_num(x,\
    \ y / 2)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to\
    \ your answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\ndef choose_num(x: int, y: int) -> int:\n    if x < y:\n        return\
    \ choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n\
    \        return choose_num(x / 2, y)\n    else:\n        return choose_num(x,\
    \ y / 2)\n</code>\n<|/ a tags=recursion,big-o,time-complexity,big", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its factorial. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return\
    \ -1\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x % 2 ==\
    \ y % 2 \n                        then return choose_num(x / 2, y / 2)\n     \
    \               else \n                        if x % 2 == y % 2 \n          \
    \                  then return choose_num(x / 2, y / 2)\n                    \
    \    else \n                            if x % 2 == 0 \n                     \
    \           then return choose_num(x / 2, y)\n                            else\
    \ \n                                if y % 2 == 0 \n                         \
    \           then return choose_num(x, y / 2)\n                               \
    \ else \n                                    return -1\n</code>\n<|/ a tags=haskell,recursion\
    \ |>\n<| c |>\nThis doesn't work. Try it with `choose_num(13, 12)`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug, thank you!\n<|/ c |>\n<| c |>\nI fixed the bug, thank\
    \ you!\n<|/ c |>\n<| c |>\nI fixed the bug, thank you!\n<|/ c |>\n<| a |>\n<code>\n\
    choose_num :: Int -> Int -> Int\nchoose_num x y = if x > y then -1 else if x ==\
    \ y then x else if x `mod` 2 == 0 then choose_num (x/2) y else if y `mod` 2 ==\
    \ 0 then choose_num (x,y/2) else if x `mod` 2 == y `mod` 2 then choose_num (x/2)\
    \ (y/2) else -1\n</code>\n<|/ a tags=haskell,recursion dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it with `choose_num(13, 12)`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug, thank you!\n<|/ c |>\n<| a |>\n<code>\nchoose_num :: Int -> Int ->\
    \ Int\nchoose_num x y = if x > y then -1 else if x == y then x else if x `mod`\
    \ 2 == 0 then choose_num (x/2) y else if y `mod` 2 == 0 then choose_num (x,y/2)\
    \ else if x `mod` 2 == y `mod` 2 then choose_num (x/2) (y/2) else -1\n</code>\n\
    <|/ a tags=haskell,recursion dscore=0 |>\n<|", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else \n  \
    \      x % 2 == 0 && y % 2 == 0 \n            ? if x == y \n                then\
    \ return x \n                else return -1\n            : \n                x\
    \ % 2 == 0 && y % 2 == 1 \n                    ? if x == y \n                \
    \        then return x \n                        else return -1\n            \
    \        : \n                        x % 2 == 1 && y % 2 == 0 \n             \
    \               ? if x == y \n                                then return x \n\
    \                                else return -1\n                            :\
    \ \n                                x % 2 == 1 && y % 2 == 1 \n              \
    \                      ? if x == y \n                                        then\
    \ return x \n                                        else return -1\n        \
    \                            : \n                                        x % 2\
    \ == 0 && y % 2 == 1 \n                                            ? if x == y\
    \ \n                                                then return x \n         \
    \                                       else return -1\n                     \
    \                       : \n                                                x\
    \ % 2 == 1 && y % 2 == 0 \n                                                  \
    \  ? if x == y \n                                                        then\
    \ return x \n                                                        else return\
    \ -1\n                                                    : \n               \
    \                                         x % 2 == 0 && y % 2 == 1 \n        \
    \                                                    ? if x == y \n          \
    \                                                      then return x \n      \
    \                                                          else return -1\n  \
    \                                                          : \n              \
    \                                                  x % 2 == 1 && y % 2 == 1 \n\
    \                                                                    ? if x ==\
    \ y \n                                                                       \
    \ then return x \n                                                           \
    \             else return -1\n                                               \
    \                     : \n                                                   \
    \                     x % 2 == 0 && y % 2 == 0 \n                            \
    \                                                ? if x == y \n              \
    \                                                                  then return\
    \ x \n                                                                       \
    \         else return -1\n                                                   \
    \                         : \n                                               \
    \                                 x % 2 == 1 && y % 2 == 1 \n                \
    \                                                                    ? if x ==\
    \ y \n                                                                       \
    \                 then return x \n                                           \
    \                                             else return -1\n               \
    \                                                                     : \n   \
    \                                                                            \
    \         x % 2 == 0 && y % 2 == 0 \n                                        \
    \                                                    ? if x == y \n          \
    \                                                                            \
    \          then return x \n                                                  \
    \                                              else return -1\n              \
    \                                                                            \
    \  : \n                                                                      \
    \                          x % 2 == 1 && y % 2 == 0 \n                       \
    \                                                                            \
    \ ? if x == y \n                                                             \
    \                                           then return x \n                 \
    \                                                                            \
    \           else return -1\n                                                 \
    \                                                   : \n                     \
    \                                                                            \
    \       x % 2 == 0 && y % 2 == 1 \n                                          \
    \                                                                  ? if x == y\
    \ \n                                                                         \
    \                                       then return x \n                     \
    \                                                                            \
    \               else return -1\n                                             \
    \                                                               : \n         \
    \                                                                            \
    \                           x % 2 == 1 && y % 2 == 1 \n                      \
    \                                                                            \
    \                  ? if x == y \n                                            \
    \                                                                            then\
    \ return x \n                                                                \
    \                                                        else return -1\n    \
    \                                                                            \
    \                                    : \n                                    \
    \                                                                            \
    \        x % 2 == 0 && y % 2 == 0 \n                                         \
    \                                                                            \
    \       ? if x == y \n                                                       \
    \                                                                         then\
    \ return x \n                                                                \
    \                                                                else return -1\n\
    \                                                                            \
    \                                                : \n                        \
    \                                                                            \
    \                            x % 2 == 1 && y % 2 == 0 \n                     \
    \                                                                           ",
  "    if x > y \n        then return choose_num(y, x)\n        else return x\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=julia,if-statement |>\n<code>", "    if x > y \n\
    \        then return -1\n    else \n        if x == 0 \n            then return\
    \ y\n        else \n            if y % x == 0 \n                then return y\n\
    \            else \n                if x % y == 0 \n                    then return\
    \ y\n                else \n                    return choose_num(x - 1, y)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 13)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 16)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 18)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 19)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 21)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 22)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 24)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 25)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 26)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 27)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 28)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 29)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 30)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 31)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 32)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 33)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 34)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 35)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, ", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      then return choose_num(y - 1, x)\nend\n</code>\n<|/ a |>\n<| a tags=julia,if-statement\
    \ |>\nThe answer by is correct, but I wanted to add that you can also use ifelse,\
    \ which is a bit more concise and readable than if/else.\n<code>\njulia> ifelse(x\
    \ < y, choose_num(y, x), choose_num(x, y))\n14\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=1 |>\nI came across this question while trying to solve a similar problem.\
    \ My solution was to create a function which returned the biggest even number\
    \ between x and y inclusive. \n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else \n        then return\
    \ choose_num(x div 2, y div 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x > y \n        then return -1\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2, y)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer $n$ and returns\
    \ $n$ if it is even, otherwise returns $n + 1$.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        then return choose_num(x + 1, y)\nend\n</code>\n<|/ a tags=julia,recursion,function\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(y, x)\n                    else\
    \ \n                        return -1\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis\
    \ code doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine. Can you give me an example where it fails?\n<|/ c |>\n\
    <| c |>\nThe code you posted doesn't work. Try it with `choose_num(12, 15)`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine. Can you give me an example where\
    \ it fails?\n<|/ c |>\n<| c |>\nThe code you posted doesn't work. Try it with\
    \ `choose_num(12, 15)`.\n<|/ c |>\n<| a tags=algorithm,math,big-o |>\nThe algorithm\
    \ is as follows:\n<code>", "    if x > y \n        then return -1\n    else if\
    \ x < y \n        then return choose_num(y, x)\n    else \n        then return\
    \ x\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer and returns the sum\
    \ of its digits. \nFor example, choose_num(12) should return 1 + 2 = 3. \nThe\
    \ function should work for negative numbers as well. \nFor example, choose_num(-12)\
    \ should return -1 + 2 = -2.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0 ? x : choose_num(x / 2, y / 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its factorial. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return x\n            else \n\
    \                if y % 2 == 0 \n                    then return y\n         \
    \       else \n                    if x % 2 == y % 2 \n                      \
    \  then return x\n                    else \n                        if x % 2\
    \ == y % 2 \n                            then return y\n                     \
    \   else \n                            if x % 2 == y % 2 \n                  \
    \              then return x\n                            else \n            \
    \                    if x % 2 == y % 2 \n                                    then\
    \ return y\n                                else \n                          \
    \          return -1\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with\
    \ `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can\
    \ you give me an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works fine. Can you give me an example where it doesn't work?\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine. Can you give me an example where\
    \ it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you\
    \ give me an example where it doesn't work?\n<|/ c |>\n<| a tags=math,algorithm,language-agnostic\
    \ |>\n<code>\ndef choose_num(x::Int64, y::Int64)::Int64 \n    if x < y \n    \
    \    then return choose_num(y, x)\n    else \n        if x == y \n           \
    \ then return x\n        else \n            if x % 2 == 0 \n                then\
    \ return x\n            else \n                if y % 2 == 0 \n              \
    \      then return y\n                else \n                    if x % 2 == y\
    \ % 2 \n                        then return x\n                    else \n   \
    \                     if x % 2 == y % 2 \n                            then return\
    \ y\n                        else \n                            if x % 2 == y\
    \ % 2 \n                                then return x\n                      \
    \      else \n                                if x % 2 == y % 2 \n           \
    \                         then return y\n                                else\
    \ \n                                    return -1\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works fine. Can you give me an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you give me an\
    \ example where it doesn't work?\n<|/ c |>\n<| ", "    if x > y \n        then\
    \ return -1\n    else \n        if x == y \n            then return x\n      \
    \  else \n            if x % 2 == 0 \n                then return choose_num(x\
    \ / 2, y)\n            else \n                if y % 2 == 0 \n               \
    \     then return choose_num(x, y / 2)\n                else \n              \
    \      if x % 2 == y % 2 \n                        then return choose_num(x /\
    \ 2, y / 2)\n                    else \n                        if x % 2 == y\
    \ % 2 \n                            then return choose_num(x / 2, y)\n       \
    \                 else \n                            if x % 2 == 0 \n        \
    \                        then return choose_num(x, y / 2)\n                  \
    \          else \n                                if y % 2 == 0 \n           \
    \                         then return choose_num(x / 2, y)\n                 \
    \               else \n                                    return -1\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x < y \n        then return choose_num(y, x) \n\
    \        else return x \n    else return y \nend \n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2, y)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \n    factorial. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7\
    \ 2 \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n   \
    \     \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\n     \
    \   then return x\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return\
    \ choose_num(y, x)\n    else if x < y \n        then return choose_num(x, y)\n\
    \    else if x == y \n        then return x\n    else if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2,\
    \ y)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number x and\
    \ returns the \n    number of digits in the number x.", "    if x < y \n     \
    \   then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer and returns the sum\
    \ of its digits. \nFor example, choose_num(12) should return 1 + 2 = 3.", "  \
    \  if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return x\n        \n    if\
    \ x % 2 == y % 2 \n        then return y\n        \n    return -1\nend\n</cell>\n\
    <code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x > y \n        then return -1\n    else\
    \ \n        if x == 0\n            then return y\n        else \n            if\
    \ y == 0\n                then return x\n            else \n                if\
    \ x % 2 == 0\n                    then return choose_num(x / 2, y)\n         \
    \       else \n                    if y % 2 == 0\n                        then\
    \ return choose_num(x, y / 2)\n                    else \n                   \
    \     if x % 2 == 0\n                            then return choose_num(x / 2,\
    \ y)\n                        else \n                            if y % 2 == 0\n\
    \                                then return choose_num(x, y / 2)\n          \
    \                  else \n                                if x % 2 == 0\n    \
    \                                then return choose_num(x / 2, y)\n          \
    \                      else \n                                    if y % 2 ==\
    \ 0\n                                        then return choose_num(x, y / 2)\n\
    \                                    else \n                                 \
    \       if x % 2 == 0\n                                            then return\
    \ choose_num(x / 2, y)\n                                        else \n      \
    \                                      if y % 2 == 0\n                       \
    \                         then return choose_num(x, y / 2)\n                 \
    \                           else \n                                          \
    \      if x % 2 == 0\n                                                    then\
    \ return choose_num(x / 2, y)\n                                              \
    \  else \n                                                    if y % 2 == 0\n\
    \                                                        then return choose_num(x,\
    \ y / 2)\n                                                    else \n        \
    \                                                if x % 2 == 0\n             \
    \                                               then return choose_num(x / 2,\
    \ y)\n                                                        else \n        \
    \                                                    if y % 2 == 0\n         \
    \                                                       then return choose_num(x,\
    \ y / 2)\n                                                            else \n\
    \                                                                if x % 2 == 0\n\
    \                                                                    then return\
    \ choose_num(x / 2, y)\n                                                     \
    \               else \n                                                      \
    \  if x % 2 == 0\n                                                           \
    \ then return choose_num(x / 2, y)\n                                         \
    \               else \n                                                      \
    \      if y % 2 == 0\n                                                       \
    \         then return choose_num(x, y / 2)\n                                 \
    \                           else \n                                          \
    \                      if x % 2 == 0\n                                       \
    \                             then return choose_num(x / 2, y)\n             \
    \                                                       else \n              \
    \                                          if x % 2 == 0\n                   \
    \                                         then return choose_num(x / 2, y)\n \
    \                                                       else \n              \
    \                                              if y % 2 == 0\n               \
    \                                                 then return choose_num(x, y\
    \ / 2)\n                                                            else \n  \
    \                                                              if x % 2 == 0\n\
    \                                                                    then return\
    \ choose_num(x / 2, y)\n                                                     \
    \               else \n                                                      \
    \  if x % 2 == 0\n                                                           \
    \ then return choose_num(x / 2, y)\n                                         \
    \               else \n                                                      \
    \      if y % 2 == 0\n                                                       \
    \         then return choose_num(x, y / 2)\n                                 \
    \                           else \n                                          \
    \                      if x % 2 == 0\n                                       \
    \                             then return choose_num(x / 2, y)\n             \
    \                                                       else \n              \
    \                                          if x % 2 == 0\n                   \
    \                                         then return choose_num(", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ integer and returns the factorial of that number. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y\n        then return x\n    else if x %\
    \ 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd number that is in the range [x, y] inclusive. If\
    \ there's no such\n    number, then the function should return -1.", "    if x\
    \ > y \n        then return -1\n    else \n        if x == 0\n            then\
    \ return y\n        else \n            if y % 2 == 0\n                then return\
    \ choose_num(x / 2, y)\n                else return choose_num(x / 2, y + 1)\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Problem 7: Choosing Numbers\nWrite a function called choose_num that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such number, then the\n    function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \       \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n    \
    \    then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n\
    \        then return choose_num(x, y / 2)\n        \n    return -1\nend\n</cell>\n\
    <code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that takes a positive integer number and returns its \n    factorial.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if x < y \n    \
    \    then return choose_num(y, x)\n        \n    if x == y \n        then return\
    \ x\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 1 \n        then return choose_num(x / 2, y)\n        \n    if y %\
    \ 2 == 1 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ 1 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 1 \n\
    \        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n    \
    \    then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 1 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 1 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2,\
    \ y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 1 \n        then return choose_num(x / 2, y)\n    \
    \    \n    if y % 2 == 1 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if x %\
    \ 2 == 1 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 ==\
    \ 1 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == 1 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 1 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if x > y \n\
    \        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ \n        x % 2 == 0 && y % 2 == 0\n            then return choose_num(x / 2,\
    \ y / 2)\n            \n        else return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \       \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n    \
    \    then return x\n        \n    if x % 2 == y % 2 \n        then return y\n\
    \        \n    if x % 2 != y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 != y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes a positive integer\
    \ number and returns its \n    factorial. Factorial of a number is defined as\
    \ the product of its \n    individual digits. For example, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return -1\n   \
    \ else if x < y \n        then return choose_num(y, x)\n    else return x \nend\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.", "    if x >\
    \ y \n        then return -1\n    else if x < y\n        then return choose_num(y,\
    \ x)\n    else return x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.", "    if x > y \n        then return choose_num(y,\
    \ x)\n        \n    else if x < y \n        then return choose_num(x, y)\n   \
    \     \n    else if x == y \n        then return x\n        \n    else \n    \
    \    then return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer number\
    \ and returns its \n    factorial. For example, factorial(5) = 5 * 4 * 3 * 2 *\
    \ 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y\n        then return x\n    else \n        choose_num(y - 1, x)\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 36)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 37)\n</cell>",
  "    if x < y \n        then return choose_num(y, x)\n        else return x\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| c |>\nThis doesn't answer the question. `choose_num(12,\
    \ 15)` should return `14`, not `-1`.\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a solution that does return 14\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\n<code>", "    if x > y \n        then return -1\n    else if x == y \n \
    \       then return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ and returns its \nfactorial. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 =\
    \ 120.", "    if x < y \n        then return choose_num(y, x)\n    else \n   \
    \     if x == y \n            then return x\n        else \n            if x %\
    \ 2 == 0 \n                then return x\n            else \n                if\
    \ y % 2 == 0 \n                    then return y\n                else \n    \
    \                if x > y \n                        then return choose_num(y,\
    \ x)\n                    else return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return\
    \ -1\n    else if x == y \n        then return x\n    else if x % 2 == 0 \n  \
    \      then return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer x and returns the number of\
    \ digits in x. \nFor example, choose_num(12) should return 2.", "    if x < y\
    \ \n        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return\
    \ choose_num(y, x)\n        \n    if x == y\n        then return x\n        \n\
    \    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    return -1\n\
    end\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such\n    number, then the function should return -1.", "    if x < y \n\
    \        then return choose_num(y, x)\n        \n    if x == y \n        then\
    \ return x\n        \n    if x % 2 == 0\n        then return choose_num(x / 2,\
    \ y)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number x and returns the sum of its digits. \nFor example, choose_num(12) should\
    \ return 1 + 2 = 3.", "    if x < y \n        then return choose_num(y, x)\n \
    \   else \n        if x == y \n            then return x\n        else \n    \
    \        if x % 2 == 0 \n                then return choose_num(x / 2, y)\n  \
    \          else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(x / 2, y / 2)\n              \
    \      else \n                        return -1\n</code>\n<|/ a tags=algorithm,math,python,recursion\
    \ |>\n<| a tags=algorithm,math,python,recursion |>\n<code>\ndef choose_num(x:\
    \ int, y: int) -> int:\n    if x < y:\n        return choose_num(y, x)\n    elif\
    \ x == y:\n        return x\n    elif x % 2 == 0:\n        return choose_num(x\
    \ / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x, y / 2)\n    else:\n\
    \        return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only\
    \ code as an answer, but also provide an explanation what your code does and how\
    \ it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| a tags=algorithm,math,python,recursion |>\n<code>\ndef choose_num(x:\
    \ int, y: int) -> int:\n    if x < y:\n        return choose_num(y, x)\n    elif\
    \ x == y:\n        return x\n    elif x % 2 == 0:\n        return choose_num(x\
    \ / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x, y / 2)\n    else:\n\
    \        return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only\
    \ code as an answer, but also provide an explanation what your code does and how\
    \ it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n \
    \   if x < y:\n        return choose_num(y, x)\n    elif x == y:\n        return\
    \ x\n    elif x % 2 == 0:\n        return choose_num(x / 2, y)\n    elif y % 2\
    \ == 0:\n        return choose_num(x, y / 2)\n    else:\n        return -1\n</code>\n\
    <|/ a tags=algorithm,math,python,recursion |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x:\
    \ int, y: int) -> int:\n    if x < ", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_", "    if x < y\
    \ \n        then return choose_num(y, x)\n        else return x\n</code>\n<|/\
    \ a tags=julia,if-statement |>\n<| c |>\nThis doesn't work. `choose_num(12, 15)`\
    \ returns `-1`, not `14`.\n<|/ c |>\n<| c |>\nI fixed the code. Thanks for pointing\
    \ out.\n<|/ c |>\n<| a tags=julia,if-statement |>\n<code>", "    if x < y \n \
    \       then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the number of \ntimes each number appears in the array. For example:", "   \
    \ if x < y \n        then return choose_num(y, x)\n    else if x == y\n      \
    \  then return x\n    else if x % 2 == 0\n        then return choose_num(x / 2,\
    \ y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 != y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 !=\
    \ y ", "    if x > y \n        then return -1\n    else if x < y \n        then\
    \ return choose_num(y, x)\n    else return x\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes two positive numbers x and y and returns the\n   \
    \ biggest odd integer number that is in the range [x, y] inclusive. If \n    there's\
    \ no such number, then the function should return -1.", "    if x > y \n     \
    \   then return choose_num(y, x)\n        else return x\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question at all. You're just rewriting\
    \ `choose_num` without explaining what it does.\n<|/ c |>\n<| c |>\nI added a\
    \ description of what it does. I hope it helps.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question at all. You're just rewriting `choose_num` without explaining\
    \ what it does.\n<|/ c |>\n<| c |>\nI added a description of what it does. I hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThis doesn't answer the question at all. You're\
    \ just rewriting `choose_num` without explaining what it does.\n<|/ c |>\n<| a\
    \ |>\n<code>", "    if x > y \n        then return -1\n    else if x == y\n  \
    \      then return x\n    else if x < y\n        then return choose_num(x + 2,\
    \ y)\n    else return choose_num(x, y - 1)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x div 2, y div 2)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \nfactorial.\
    \ For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if x > y \n    \
    \    then return -1\n    else \n        if x == y \n            then return x\n\
    \        else \n            if x % 2 == 0 \n                then return choose_num(x\
    \ / 2, y)\n            else \n                if y % 2 == 0 \n               \
    \     then return choose_num(x, y / 2)\n                else \n              \
    \      if x % 2 == y % 2 \n                        then return choose_num(x /\
    \ 2, y / 2)\n                    else \n                        if x % 2 == y\
    \ % 2 \n                            then return choose_num(x / 2, y / 2)\n   \
    \                     else \n                            if x % 2 == 0 \n    \
    \                            then return choose_num(x / 2, y)\n              \
    \              else \n                                if y % 2 == 0 \n       \
    \                             then return choose_num(x, y / 2)\n             \
    \                   else \n                                    if x % 2 == y %\
    \ 2 \n                                        then return choose_num(x / 2, y\
    \ / 2)\n                                    else \n                          \
    \              if x % 2 == 0 \n                                            then\
    \ return choose_num(x / 2, y)\n                                        else \n\
    \                                            if y % 2 == 0 \n                \
    \                                then return choose_num(x, y / 2)\n          \
    \                                  else \n                                   \
    \             if x % 2 == y % 2 \n                                           \
    \         then return choose_num(x / 2, y / 2)\n                             \
    \                   else \n                                                  \
    \  if x % 2 == 0 \n                                                        then\
    \ return choose_num(x / 2, y)\n                                              \
    \      else \n                                                        if y % 2\
    \ == 0 \n                                                            then return\
    \ choose_num(x, y / 2)\n                                                     \
    \   else \n                                                            if x %\
    \ 2 == y % 2 \n                                                              \
    \  then return choose_num(x / 2, y / 2)\n                                    \
    \                        else \n                                             \
    \                   if x % 2 == 0 \n                                         \
    \                           then return choose_num(x / 2, y)\n               \
    \                                                     else \n                \
    \                                        if y % 2 == 0 \n                    \
    \                                        then return choose_num(x, y / 2)\n  \
    \                                                                  else \n   \
    \                                                     if x % 2 == y % 2 \n   \
    \                                                         then return choose_num(x\
    \ / 2, y / 2)\n                                                              \
    \      else \n                                                        if x % 2\
    \ == 0 \n                                                            then return\
    \ choose_num(x / 2, y)\n                                                     \
    \               else \n                                                      \
    \  if y % 2 == 0 \n                                                          \
    \  then return choose_num(x, y / 2)\n                                        \
    \                            else \n                                         \
    \               if x % 2 == y % 2 \n                                         \
    \                   then return choose_num(x / 2, y / 2)\n                   \
    \                                                 else \n                    \
    \                                    if x % 2 == 0 \n                        \
    \                                    then return choose_num(x / 2, y)\n      \
    \                                                              else \n       \
    \                                                 if y % 2 == 0 \n           \
    \                                                 then return choose_num(x, y\
    \ / 2)\n                                                                    else\
    \ \n                                                        if x % 2 == y % 2\
    \ \n                                                            then return choose_num(x\
    \ / 2, y ", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of \ntimes $n$ is divisible by $3$.\
    \ For example, \n$$\n3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times\
    \ 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\\
    times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3\\times 3", "   \
    \ if x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x\nend\n</cell>\n<code language=julia-1.1>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.",
  "    if x <= y \n        then return x \n        else return y\n    end\n    if\
    \ x == y \n        then return x \n        else return y\n    end\n    if x ==\
    \ 0\n        then return -1\n    end\n    if y == 0\n        then return -1\n\
    \    end\n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n    end\n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    end\n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \    end\n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n    end\n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n    end\n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    end\n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \    end\n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n    end\n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n    end\n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n    end\n    if x % 2 == ",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 \n           \
    \ ? return choose_num(x / 2, y / 2)\n            : return  x + choose_num(y -\
    \ 1, y - 1)\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c |>\nThis\
    \ doesn't work. Try `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it before posting it. What error are you getting?\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI tested it again and it\
    \ works. I edited my post to include a link to the code I tested it with.\n<|/\
    \ c |>\n<| c |>\nI tested it again and it works. I edited my post to include a\
    \ link to the code I tested it with.\n<|/ c |>\n<| a tags=julia,recursion,function\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive\
    \ integer number x and returns the \nsmallest odd number that is in the range\
    \ [x, x] inclusive.", "    if x < y \n        then return choose_num(y, x)\n \
    \   else if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>", "    if x > y \n\
    \        then return choose_num(y, x)\n    else if x < y \n        then return\
    \ choose_num(x, y)\n    else return x\nend\n</cell>\n<code language=julia-1.5>",
  "    if x < y \n        then return choose_num(y, x)\n        else return x\n  \
    \  end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number x and\
    \ returns the number of digits in x. \nFor example, choose_num(12) should return\
    \ 2.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        then return choose_num(y - 1,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n     \
    \   else return x\n</code>\n<|/ a tags=recursion,julia |>\n<| c |>\nThis doesn't\
    \ seem to work. `choose_num(12, 15)` returns `-1` instead of `14`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited the answer to include a link to the\
    \ documentation where you can see that `choose_num(12, 15)` returns `14`.\n<|/\
    \ c |>\n<| c |>\nI see that now. Thanks for your help.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y\n        then return x\n    else\
    \ if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given number appears in a given\
    \ array.", "    if x < y \n        then return choose_num(y, x)\n    else if x\
    \ == y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y\n        then return x\n        \n    else\
    \ if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    else\
    \ return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number and returns its \nfactorial. For example: factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1", "    if x < y \n        then return choose_num(y, x)\n   \
    \ else if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>",
  "    if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x < y \n        then return choose_num(x + 1, y)\n    else return\
    \ choose_num(x, y - 1)\nend\n</cell>\n<code language=julia-1.5>", "    if x <\
    \ y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nI like the idea of using recursion\
    \ to solve this problem. I'm going to try this out and see how it works.\n<|/\
    \ c |>\n<| c |>\nI added a solution that uses recursion.\n<|/ c |>\n<| a dscore=2\
    \ |>\nThis problem can be solved using recursion. \n<code>", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x > y \n        then\
    \ return -1\n    else if x < y\n        then return choose_num(y, x)\n    else\
    \ return x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number x and\
    \ returns the number of digits in x. \nFor example, choose_num(12) should return\
    \ 2.", "    if x < y \n        then return choose_num(y, x)\n        else return\
    \ x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive\
    \ integer number and returns its factorial. \nThe factorial of a number $n$ is\
    \ defined as:", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer $n$ and returns the\
    \ number of digits\nof $n$. For example, choose_num(12) should return 2.", " \
    \   if x < y \n        then return choose_num(y, x)\n    else if x == y\n    \
    \    then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.", "    if x <\
    \ y \n        then return choose_num(y, x)\n        \n    else if x == y \n  \
    \      then return x\n        \n    else if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        \n    else \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        \n    else \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        \n    else \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        \n    else \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        \n    else \n        then return choose_num(x\
    \ / 2, y)\n        \n    else \n        then return choose_num(x / 2, y)\n   \
    \     \n    else \n        then return choose_num(x / 2, y)\n        \n    else\
    \ \n        then return choose_num(x / 2, y)\n        \n    else \n        then\
    \ return choose_num(x / 2, y)\n        ", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else return\
    \ x \nend \n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(22, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(24, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(25, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(26, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(27, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(28, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(29, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(30, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(31, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(32, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(33, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(34, 15)\n</cell>\n\
    <code language=", "    if x < y \n        then return choose_num(y, x)\n     \
    \   \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n  \
    \      then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n      \
    \  then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n  \
    \      then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n      \
    \  then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2,\
    \ y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n    \
    \    \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x, ", "    if x < y \n \
    \       then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer and returns\
    \ the sum of its digits. \nFor example, choose_num(12) should return 1 + 2 + 3\
    \ = 6.", "    if x > y \n        then return choose_num(y, x)\n    else if x <\
    \ y \n        then return choose_num(x, y)\n    else if x == y \n        then\
    \ return x\n    else \n        then return -1\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2,\
    \ y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2, y)\n\
    \    end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe code you posted is incorrect.\
    \ `choose_num(12, 15)` returns `14` instead of `-1`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the code now. Thanks for pointing out.\n<|/ c |>\n<| a |>\n<code>", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    if x == y \n   \
    \     then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x == y / 2 \n        then return x\n        \n    if y\
    \ / 2 == x \n        then return y\n        \n    if y / 2 == x / 2 \n       \
    \ then return y\n        \n    if y / 2 == x / 2 + 1 \n        then return y\n\
    \        \n    if y / 2 == x / 2 + 2 \n        then return y\n        \n    if\
    \ y / 2 == x / 2 + 3 \n        then return y\n        \n    if y / 2 == x / 2\
    \ + 4 \n        then return y\n        \n    if y / 2 == x / 2 + 5 \n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 6 \n        then return y\n    \
    \    \n    if y / 2 == x / 2 + 7 \n        then return y\n        \n    if y /\
    \ 2 == x / 2 + 8 \n        then return y\n        \n    if y / 2 == x / 2 + 9\
    \ \n        then return y\n        \n    if y / 2 == x / 2 + 10 \n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 11 \n        then return y\n   \
    \     \n    if y / 2 == x / 2 + 12 \n        then return y\n        \n    if y\
    \ / 2 == x / 2 + 13 \n        then return y\n        \n    if y / 2 == x / 2 +\
    \ 14 \n        then return y\n        \n    if y / 2 == x / 2 + 15 \n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 16 \n        then return y\n   \
    \     \n    if y / 2 == x / 2 + 17 \n        then return y\n        \n    if y\
    \ / 2 == x / 2 + 18 \n        then return y\n        \n    if y / 2 == x / 2 +\
    \ 19 \n        then return y\n        \n    if y / 2 == x / 2 + 20 \n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 21 \n        then return y\n   \
    \     \n    if y / 2 == x / 2 + 22 \n        then return y\n        \n    if y\
    \ / 2 == x / 2 + 23 \n        then return y\n        \n    if y / 2 == x / 2 +\
    \ 24 \n        then return y\n        \n    if y / 2 == x / 2 + 25 \n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 26 \n        then return y\n   \
    \     \n    if y / 2 == x / 2 + 27 \n        then return y\n        \n    if y\
    \ / ", "    if x < y \n        then return choose_num(y, x)\n        \n    else\
    \ if x == y\n        then return x\n        \n    else if x % 2 == 0\n       \
    \ then return choose_num(x / 2, y)\n        \n    else return choose_num(x / 2,\
    \ y)\nend\n</cell>\n<code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer number x and returns the number\
    \ that is\nthe sum of all even numbers from 1 to x.", "    if x > y \n       \
    \ then return choose_num(y, x)\n        \n    if x == y \n        then return\
    \ x\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(y - 1, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns the \nbiggest odd number\
    \ that is in the range [x, y] inclusive. If there's no such number, \nthen the\
    \ function should return -1.", "    if x > y \n        then return -1\n    else\
    \ if x < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive\
    \ numbers x and y and returns the \nbiggest odd number that is in the range [x,\
    \ y] inclusive. If there's no such \nnumber, then the function should return -1."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

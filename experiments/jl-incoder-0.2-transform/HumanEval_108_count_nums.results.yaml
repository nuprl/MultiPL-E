language: jl
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpowixfk6h.jl:22\nin expression starting at\
    \ /tmp/tmpowixfk6h.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_rdqjqup.jl:22\nin expression starting at\
    \ /tmp/tmp_rdqjqup.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpck_0m1nu.jl:22\nin expression starting at\
    \ /tmp/tmpck_0m1nu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4])\n2\n>>> count_nums([-1, -1, 1, 2, -3, 4, 5])\n3\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -9])\n5\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10])\n\
    6\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11])\n7\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12])\n8\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n\
    9\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14])\n10\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15])\n11\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16])\n12\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n13\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18])\n14\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppg6t8aid.jl:22\nin expression starting at\
    \ /tmp/tmppg6t8aid.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd0tlfc82.jl:23\nin expression starting at\
    \ /tmp/tmpd0tlfc82.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc_83n9fq.jl:22\nin expression starting at\
    \ /tmp/tmpc_83n9fq.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(digits(-1234))\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2y6i8ykj.jl:23\nin expression starting at\
    \ /tmp/tmp2y6i8ykj.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogv9jf1j.jl:22\nin expression starting at\
    \ /tmp/tmpogv9jf1j.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptsalkxsh.jl:22\nin expression starting at\
    \ /tmp/tmptsalkxsh.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -32, -34, -36, -38,\
    \ -40, -42, -44, -46])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp67rku45.jl:22\nin expression starting at\
    \ /tmp/tmpp67rku45.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40,\
    \ -42, -44, -46])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -4, -6, -10,\
    \ -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32,\
    \ -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12,\
    \ -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32,\
    \ -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12,\
    \ -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32,\
    \ -34, -36, -38, -40, -42, -44, -46])\n2\n>>> count_nums([-1, -4, -6, -10, -12,\
    \ -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    2\n>>> count_nums([-1, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32,\
    \ -34, -36, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6kqydvgu.jl:22\nin expression starting at\
    \ /tmp/tmp6kqydvgu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp62ek8w9u.jl:22\nin expression starting at\
    \ /tmp/tmp62ek8w9u.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9_qu_4nj.jl:23\nin expression starting at\
    \ /tmp/tmp9_qu_4nj.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppf8ljhe5.jl:23\nin expression starting at\
    \ /tmp/tmppf8ljhe5.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfh6_ifue.jl:22\nin expression starting at\
    \ /tmp/tmpfh6_ifue.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0soi2as.jl:22\nin expression starting at\
    \ /tmp/tmpe0soi2as.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ikiniyk.jl:22\nin expression starting at\
    \ /tmp/tmp3ikiniyk.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n   \
    \ 1\n    >>> count_nums([1, 1, 2])\n    2\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdbf0fbvt.jl:22\nin expression starting at\
    \ /tmp/tmpdbf0fbvt.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5e5lqnkk.jl:22\nin expression starting at\
    \ /tmp/tmp5e5lqnkk.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0c44quh9.jl:22\nin expression starting at\
    \ /tmp/tmp0c44quh9.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2,\
    \ -1, 0, 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2,\
    \ -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2,\
    \ -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0, 1, -2, -1, 0,\
    \ 1, -2, -1, 0, 1, -2, -1, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2tv3e5qu.jl:22\nin expression starting at\
    \ /tmp/tmp2tv3e5qu.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -10, -20, -30])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 2, -10, -20, -30])\n2\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb53dkiy9.jl:22\nin expression starting at\
    \ /tmp/tmpb53dkiy9.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, 10])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj37etvml.jl:22\nin expression starting at\
    \ /tmp/tmpj37etvml.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no number has a sum of digits\
    \ > 0, then return 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7,\
    \ 8, -8, 9, -9] has 1 element with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3,\
    \ -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has no elements with a sum of\
    \ digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9,\
    \ -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4,\
    \ -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits >\
    \ 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has\
    \ 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5,\
    \ 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits > 0.\ne.g. [-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with\
    \ a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7,\
    \ 8, -8, 9, -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2,\
    \ 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of\
    \ digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9,\
    \ -9] has 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4,\
    \ -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has 0 elements with a sum of digits >\
    \ 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9] has\
    \ 0 elements with a sum of digits > 0.\ne.g. [-1, 1, -2, 2, 3, -3, 4, -4, 5, -5,\
    \ 6, -6, 7, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt2wdad7m.jl:22\nin expression starting at\
    \ /tmp/tmpt2wdad7m.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -22, -24])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplrt0_ya.jl:22\nin expression starting at\
    \ /tmp/tmpplrt0_ya.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiqg31eb5.jl:22\nin expression starting at\
    \ /tmp/tmpiqg31eb5.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8gm94_v3.jl:22\nin expression starting at\
    \ /tmp/tmp8gm94_v3.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy50b_7mf.jl:22\nin expression starting at\
    \ /tmp/tmpy50b_7mf.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no such elements exist, return\
    \ 0.\nIf no such elements exist, return 1.\nIf no such elements exist, return\
    \ 2.\nIf no such elements exist, return 3.\nIf no such elements exist, return\
    \ 4.\nIf no such elements exist, return 5.\nIf no such elements exist, return\
    \ 6.\nIf no such elements exist, return 7.\nIf no such elements exist, return\
    \ 8.\nIf no such elements exist, return 9.\nIf no such elements exist, return\
    \ 10.\nIf no such elements exist, return 11.\nIf no such elements exist, return\
    \ 12.\nIf no such elements exist, return 13.\nIf no such elements exist, return\
    \ 14.\nIf no such elements exist, return 15.\nIf no such elements exist, return\
    \ 16.\nIf no such elements exist, return 17.\nIf no such elements exist, return\
    \ 18.\nIf no such elements exist, return 19.\nIf no such elements exist, return\
    \ 20.\nIf no such elements exist, return 21.\nIf no such elements exist, return\
    \ 22.\nIf no such elements exist, return 23.\nIf no such elements exist, return\
    \ 24.\nIf no such elements exist, return 25.\nIf no such elements exist, return\
    \ 26.\nIf no such elements exist, return 27.\nIf no such elements exist, return\
    \ 28.\nIf no such elements exist, return 29.\nIf no such elements exist, return\
    \ 30.\nIf no such elements exist, return 31.\nIf no such elements exist, return\
    \ 32.\nIf no such elements exist, return 33.\nIf no such elements exist, return\
    \ 34.\nIf no such elements exist, return 35.\nIf no such elements exist, return\
    \ 36.\nIf no such elements exist, return 37.\nIf no such elements exist, return\
    \ 38.\nIf no such elements exist, return 39.\nIf no such elements exist, return\
    \ 40.\nIf no such elements exist, return 41.\nIf no such elements exist, return\
    \ 42.\nIf no such elements exist, return 43.\nIf no such elements exist, return\
    \ 44.\nIf no such elements exist, return 45.\nIf no such elements exist, return\
    \ 46.\nIf no such elements exist, return 47.\nIf no such elements exist, return\
    \ 48.\nIf no such elements exist, return 49.\nIf no \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpehl3eu6a.jl:16\nin expression starting at\
    \ /tmp/tmpehl3eu6a.jl:16\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpep8ihp7j.jl:22\nin expression starting at\
    \ /tmp/tmpep8ihp7j.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7bvhrqni.jl:22\nin expression starting at\
    \ /tmp/tmp7bvhrqni.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a tags=julia,arrays |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo0nzi4iq.jl:16\nin expression starting at\
    \ /tmp/tmpo0nzi4iq.jl:16\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += 1\n        elseif x\
    \ == 0\n            count += 1\n        else\n            count += count_nums(digits(x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkqmvlgit.jl:25\nin expression starting at\
    \ /tmp/tmpkqmvlgit.jl:25\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcnom_7x0.jl:22\nin expression starting at\
    \ /tmp/tmpcnom_7x0.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf any number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, -1, 1, -1, 1, -1])\n2\n>>> count_nums([-1, -1,\
    \ 1, -1, 1, -1, -1, 1, -1])\n4\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n8\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n16\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1])\n32\n>>> count_nums([-1, -1, 1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6sjxiff3.jl:23\nin expression starting at\
    \ /tmp/tmp6sjxiff3.jl:23\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo34k59kt.jl:22\nin expression starting at\
    \ /tmp/tmpo34k59kt.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw67pogrp.jl:22\nin expression starting at\
    \ /tmp/tmpw67pogrp.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30,\
    \ -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_y2xuiks.jl:23\nin expression starting at\
    \ /tmp/tmp_y2xuiks.jl:23\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzt6028h0.jl:22\nin expression starting at\
    \ /tmp/tmpzt6028h0.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpugsr9s3q.jl:22\nin expression starting at\
    \ /tmp/tmpugsr9s3q.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.4>\ncount_nums([-1, 11, -11])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf any number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -4, -5, -6, -7, -8])\n2\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9])\n\
    3\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([1, 2,\
    \ -4, -5, -6, -7, -8, 9, 10, 11])\n5\n>>> count_nums([1, 2, -4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12])\n6\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13])\n7\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14])\n\
    8\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15])\n9\n\
    >>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16])\n10\n\
    >>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n\
    11\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18])\n12\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19])\n13\n>>> count_nums([1, 2, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20])\n14\n>>> count_nums([1, 2, -4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\n15\n>>> count_\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtzbkazy.jl:22\nin expression starting at\
    \ /tmp/tmpgtzbkazy.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(abs(x))\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpludin6q0.jl:23\nin expression starting at\
    \ /tmp/tmpludin6q0.jl:23\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprpe4q37p.jl:22\nin expression starting at\
    \ /tmp/tmprpe4q37p.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5wovnrd.jl:22\nin expression starting at\
    \ /tmp/tmpe5wovnrd.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_myvo7y9.jl:22\nin expression starting at\
    \ /tmp/tmp_myvo7y9.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiqg31eb5.jl:22\nin expression starting at\
    \ /tmp/tmpiqg31eb5.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm9w_a1wn.jl:22\nin expression starting at\
    \ /tmp/tmpm9w_a1wn.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += count_nums(x::Vector{Int64}) + 1\n       \
    \ end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbyrz2k76.jl:24\nin expression starting at\
    \ /tmp/tmpbyrz2k76.jl:24\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -2, -4, -6, -7, -8, -9])\n2\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvpzmuyqp.jl:22\nin expression starting at\
    \ /tmp/tmpvpzmuyqp.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp616gunm1.jl:22\nin expression starting at\
    \ /tmp/tmp616gunm1.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf no number is negative,\
    \ then the function should return 0.\ne.g. [1, 2, 3] has signed digits 1, 2, and\
    \ 3.\n>>> count_nums([1, 2, 3])\n3\n>>> count_nums([-1, 1, -2, 2, 3, -3, 4, -4,\
    \ 5])\n0\n>>> count_nums([])\n0\n</text>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3hv8gj_a.jl:23\nin expression starting at\
    \ /tmp/tmp3hv8gj_a.jl:23\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x)) + 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppxd9wdqc.jl:24\nin expression starting at\
    \ /tmp/tmppxd9wdqc.jl:24\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_zz67q9.jl:22\nin expression starting at\
    \ /tmp/tmpy_zz67q9.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise: Write a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz8ns23yh.jl:22\nin expression starting at\
    \ /tmp/tmpz8ns23yh.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n4\n\"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ig4vcjr.jl:23\nin expression starting at\
    \ /tmp/tmp8ig4vcjr.jl:23\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp616gunm1.jl:22\nin expression starting at\
    \ /tmp/tmp616gunm1.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprpe4q37p.jl:22\nin expression starting at\
    \ /tmp/tmprpe4q37p.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7i7xof6m.jl:22\nin expression starting at\
    \ /tmp/tmp7i7xof6m.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000000])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4d9zl4jd.jl:23\nin expression starting at\
    \ /tmp/tmp4d9zl4jd.jl:23\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -44,\
    \ -48, -54, -58, -62, -64, -66, -68, -72, -74, -76, -78, -84, -88, -92, -96])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6y0mqjzh.jl:22\nin expression starting at\
    \ /tmp/tmp6y0mqjzh.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,11,-11])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([1,1,2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi4m_6elb.jl:22\nin expression starting at\
    \ /tmp/tmpi4m_6elb.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp393uwt0s.jl:22\nin expression starting at\
    \ /tmp/tmp393uwt0s.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -14, -15, -16, -17, -18, -19, -20, -21])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpisy6il_f.jl:22\nin expression starting at\
    \ /tmp/tmpisy6il_f.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpul1lnnjf.jl:22\nin expression starting at\
    \ /tmp/tmpul1lnnjf.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3f9wef34.jl:22\nin expression starting at\
    \ /tmp/tmp3f9wef34.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, 10])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzo6gnx_o.jl:22\nin expression starting at\
    \ /tmp/tmpzo6gnx_o.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1])\n4\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1])\n\
    5\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1])\n6\n>>>\
    \ count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n\
    7\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1])\n8\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1,\
    \ 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n9\n>>> count_nums([-1, -1, 1, -1,\
    \ 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1])\n10\n>>> count_nums([-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n11\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n12\n>>> count_nums([-1, -1, 1, -1, 1,\
    \ -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n13\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppnsbbkqq.jl:22\nin expression starting at\
    \ /tmp/tmppnsbbkqq.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If no number is positive, then the function should return 0.\ne.g. [1, 1, 2] has\
    \ positive sums 1, 2, and 3.\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([-1, 11, -12, -13, -14, -15,\
    \ -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,\
    \ -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47,\
    \ -48, -49, -50, -51, -52, -53, -54, -55, -56])\n1\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,\
    \ -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53,\
    \ -54, -55, -56])\n1\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43,\
    \ -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56])\n1\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4ab5by29.jl:22\nin expression starting at\
    \ /tmp/tmp4ab5by29.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz54v2c_h.jl:22\nin expression starting at\
    \ /tmp/tmpz54v2c_h.jl:22\n"
  stdout: ''
  timestamp: 1659822232
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -15, -17, -21])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdf9ub8iq.jl:22\nin expression starting at\
    \ /tmp/tmpdf9ub8iq.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9])\n5\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10])\n6\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11])\n7\n>>> count_nums([-1, 2, -3, 4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12])\n8\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12, 13])\n9\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12, 13, 14])\n10\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15])\n11\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16])\n12\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17])\n13\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n14\n>>> count_nums([-1, 2, -3,\
    \ 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n15\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n\
    16\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21])\n17\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuojywz87.jl:22\nin expression starting at\
    \ /tmp/tmpuojywz87.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo2_06lo8.jl:22\nin expression starting at\
    \ /tmp/tmpo2_06lo8.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, 0, 3])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1, -1, 1, -2, 2,\
    \ -3, 3, -4, 4])\n4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7,\
    \ -8, -9])\n8\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9,\
    \ -10])\n10\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -11])\n12\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12])\n14\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13])\n16\n>>> count_nums([-1, -1, 1, -2, 2, -3,\
    \ 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n18\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n\
    20\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16])\n22\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n24\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18])\n26\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpou8qcx0m.jl:22\nin expression starting at\
    \ /tmp/tmpou8qcx0m.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\nIf no number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, 3])\n0\n>>>\
    \ count_nums([1, 2, -3, 4])\n1\n>>> count_nums([1, 2, -3, 4, 5])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8])\n4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9])\n5\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10])\n6\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11])\n7\n>>>\
    \ count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12])\n8\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13])\n9\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14])\n10\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15])\n11\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16])\n12\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16, -17])\n13\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16, -17, -18])\n14\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, 14, -15, 16,\
    \ -17, -18, -19])\n15\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11,\
    \ 12, -13, 14, -15, 16, -17, -18, -19, -20])\n16\n>>> count_nums([1, 2, -3, 4,\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76x6kie5.jl:22\nin expression starting at\
    \ /tmp/tmp76x6kie5.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_xo9mir2.jl:22\nin expression starting at\
    \ /tmp/tmp_xo9mir2.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7sphz2w6.jl:22\nin expression starting at\
    \ /tmp/tmp7sphz2w6.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x)) + 1 \n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -22, -24, -23, -25, -26, -27, -28, -29, -32,\
    \ -33, -34, -35, -36, -37, -38, -39, -44, -45, -47, -48, -49, -50, -51, -52, -53,\
    \ -54, -55, -57, -58, -59, -62, -63, -64, -66, -67, -68, -69, -71, -72, -73, -74,\
    \ -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88, -89, -91, -92,\
    \ -93, -94, -95, -96, -99])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptbylge53.jl:24\nin expression starting at\
    \ /tmp/tmptbylge53.jl:24\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprsz_mg8k.jl:22\nin expression starting at\
    \ /tmp/tmprsz_mg8k.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8jf95ys_.jl:22\nin expression starting at\
    \ /tmp/tmp8jf95ys_.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprpe4q37p.jl:22\nin expression starting at\
    \ /tmp/tmprpe4q37p.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf any number is negative, then its first signed digit\
    \ will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, 1])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1,\
    \ 1])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2])\n\
    4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1,\
    \ 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2,\
    \ -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -1, -1, 1, 2, -\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbso7nxy0.jl:22\nin expression starting at\
    \ /tmp/tmpbso7nxy0.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x)) + 1\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-1234))\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgw6mff7x.jl:23\nin expression starting at\
    \ /tmp/tmpgw6mff7x.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<code language=julia-1.4>\ncount_nums([1, 1, 2])\n</cell>\n\
    <text>\nExercise: Write a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7cy7ow9m.jl:22\nin expression starting at\
    \ /tmp/tmp7cy7ow9m.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd3eov2uh.jl:23\nin expression starting at\
    \ /tmp/tmpd3eov2uh.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise: Write a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5t2dmesq.jl:23\nin expression starting at\
    \ /tmp/tmp5t2dmesq.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp616gunm1.jl:22\nin expression starting at\
    \ /tmp/tmp616gunm1.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm5y2r7jm.jl:22\nin expression starting at\
    \ /tmp/tmpm5y2r7jm.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcbjohf93.jl:23\nin expression starting at\
    \ /tmp/tmpcbjohf93.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvaocmhbm.jl:22\nin expression starting at\
    \ /tmp/tmpvaocmhbm.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzgu2nddh.jl:23\nin expression starting at\
    \ /tmp/tmpzgu2nddh.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcvhyq17g.jl:22\nin expression starting at\
    \ /tmp/tmpcvhyq17g.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo34k59kt.jl:22\nin expression starting at\
    \ /tmp/tmpo34k59kt.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplym6rxzp.jl:22\nin expression starting at\
    \ /tmp/tmplym6rxzp.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpklfvaew3.jl:23\nin expression starting at\
    \ /tmp/tmpklfvaew3.jl:23\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbtakypch.jl:22\nin expression starting at\
    \ /tmp/tmpbtakypch.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu1gnu18j.jl:24\nin expression starting at\
    \ /tmp/tmpu1gnu18j.jl:24\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcf7aw3mi.jl:22\nin expression starting at\
    \ /tmp/tmpcf7aw3mi.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp489l533k.jl:22\nin expression starting at\
    \ /tmp/tmp489l533k.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjyrhhpc6.jl:24\nin expression starting at\
    \ /tmp/tmpjyrhhpc6.jl:24\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, -1, 1, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogxzznn5.jl:22\nin expression starting at\
    \ /tmp/tmpogxzznn5.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x)) + 1\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4,\
    \ -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, 3, -4, -5,\
    \ -6, -7, -8])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7,\
    \ -8, -1, 0, 1])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2])\n\
    4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4])\n4\n>>> count_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5])\n4\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6])\n4\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7])\n4\n>>> count_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8, -1])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8, -1, 0])\n4\n>>>\
    \ count_nums([1, 2, 3, -4, -5, -6, -7, -8, -1, 0, 1, 2, 3, -4, -5, -6, -7, -8,\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ul9xng2.jl:23\nin expression starting at\
    \ /tmp/tmp6ul9xng2.jl:23\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ sum(x -> x > 0, arr)\n    return count_nums\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61bz3y0m.jl:17\nin expression starting at\
    \ /tmp/tmp61bz3y0m.jl:17\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, 5])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([1, 2, -3, 4, 5])\n4\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, 7])\n4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, 8])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8])\n\
    4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9])\n4\n>>> count_nums([1, 2,\
    \ -3, 4, -5, -6, -7, -8, -9, 10])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10, 11])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -10, 12])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10,\
    \ 13])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10, -10,\
    \ 14])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10, -10,\
    \ -10, 15])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -10, -10,\
    \ -10, -10, -10, 16])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -10, -10, -10, -10, -10, 17])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -10, -10, -10, -10, -10, 18])\n4\n>>> count_nums([1, 2, -3, 4, -5,\
    \ -6, -7, -8, -9, -10, -10, -10, -10, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfxueo632.jl:23\nin expression starting at\
    \ /tmp/tmpfxueo632.jl:23\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp616gunm1.jl:22\nin expression starting at\
    \ /tmp/tmp616gunm1.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw4kac0eb.jl:24\nin expression starting at\
    \ /tmp/tmpw4kac0eb.jl:24\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -1, 1, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24,\
    \ -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40,\
    \ -41, -42, -43, -44, -45])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpen35yr8j.jl:23\nin expression starting at\
    \ /tmp/tmpen35yr8j.jl:23\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\ne.g. [1,\
    \ 1, 2] has signed digits 1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits\
    \ -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g.\
    \ [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has\
    \ signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2,\
    \ and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1,\
    \ 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2,\
    \ -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed\
    \ digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\n\
    e.g. [-2, -1, 0, 1, 2] has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2]\
    \ has signed digits -1, 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1,\
    \ 2, and 3.\ne.g. [-2, -1, 0, 1, 2] has signed digits -1, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpke42f0vx.jl:22\nin expression starting at\
    \ /tmp/tmpke42f0vx.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_6w8_x_h.jl:22\nin expression starting at\
    \ /tmp/tmp_6w8_x_h.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplym6rxzp.jl:22\nin expression starting at\
    \ /tmp/tmplym6rxzp.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsrxdwc3.jl:23\nin expression starting at\
    \ /tmp/tmpvsrxdwc3.jl:23\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36,\
    \ -38, -40, -42, -44, -46])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz5rkcr6k.jl:22\nin expression starting at\
    \ /tmp/tmpz5rkcr6k.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of elements in a vector that have a sum greater than 0.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp67ri5p37.jl:22\nin expression starting at\
    \ /tmp/tmp67ri5p37.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1])\n2\n>>> count_nums([-1, -1, 1, -1, 1, -1, 1])\n4\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, 2, 1])\n5\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2,\
    \ 1])\n6\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1])\n7\n>>> count_nums([-1,\
    \ -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1])\n8\n>>> count_nums([-1, -1, 1, -1,\
    \ 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n9\n>>> count_nums([-1, -1, 1, -1, 1,\
    \ -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n10\n>>> count_nums([-1, -1, 1, -1,\
    \ 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n11\n>>> count_nums([-1, -1,\
    \ 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n12\n>>>\
    \ count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1])\n13\n>>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1])\n14\n\
    >>> count_nums([-1, -1, 1, -1, 1, -1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq5mcuqct.jl:22\nin expression starting at\
    \ /tmp/tmpq5mcuqct.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo34k59kt.jl:22\nin expression starting at\
    \ /tmp/tmpo34k59kt.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo2_06lo8.jl:22\nin expression starting at\
    \ /tmp/tmpo2_06lo8.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,1,2])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,2,3])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,3])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,-2,-3,1])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,-2,-3,1])\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqqbtsrq9.jl:22\nin expression starting at\
    \ /tmp/tmpqqbtsrq9.jl:22\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyb6we49r.jl:22\nin expression starting at\
    \ /tmp/tmpyb6we49r.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74i9liwk.jl:23\nin expression starting at\
    \ /tmp/tmp74i9liwk.jl:23\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ds7mai_.jl:22\nin expression starting at\
    \ /tmp/tmp7ds7mai_.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n >= 0\n            count += n\n        else\n \
    \           count += n%10\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7lvlgxw_.jl:24\nin expression starting at\
    \ /tmp/tmp7lvlgxw_.jl:24\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjoi2eqhk.jl:23\nin expression starting at\
    \ /tmp/tmpjoi2eqhk.jl:23\n"
  stdout: ''
  timestamp: 1659822235
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000, -10000, -100000])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000, -10000,\
    \ -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000, -10000,\
    \ -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, -10, -100, -1000, -1000000000, -10000, -100000, -100001])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000,\
    \ -10000, -100000, -100001])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -100000000\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwm01wf48.jl:22\nin expression starting at\
    \ /tmp/tmpwm01wf48.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp31_wx11p.jl:22\nin expression starting at\
    \ /tmp/tmp31_wx11p.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ 0\n    for x in arr\n        if x > 0 \n            count_nums += 1\n      \
    \  else\n            count_nums -= 1\n    end\n    return count_nums\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiwbgl974.jl:23\nin expression starting at\
    \ /tmp/tmpiwbgl974.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcrsehhuf.jl:22\nin expression starting at\
    \ /tmp/tmpcrsehhuf.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18])\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa6ivzw8f.jl:23\nin expression starting at\
    \ /tmp/tmpa6ivzw8f.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8, 9])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4])\n2\n>>> count_nums([1, 2, -3, 4, 5])\n4\n>>> count_nums([1, 2, -3,\
    \ 4, 5, 6])\n5\n>>> count_nums([1, 2, -3, 4, 5, 6, 7])\n6\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8])\n7\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9])\n8\n\
    >>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10])\n9\n>>> count_nums([1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11])\n10\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12])\n11\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n\
    12\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n13\n>>>\
    \ count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n14\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n15\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n16\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n17\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n18\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n19\n\
    >>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n20\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22])\n21\n>>> count_nums([1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23])\n22\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfyf241_n.jl:22\nin expression starting at\
    \ /tmp/tmpfyf241_n.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprpe4q37p.jl:22\nin expression starting at\
    \ /tmp/tmprpe4q37p.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo34k59kt.jl:22\nin expression starting at\
    \ /tmp/tmpo34k59kt.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp19ougscg.jl:22\nin expression starting at\
    \ /tmp/tmp19ougscg.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2,\
    \ -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0,\
    \ 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1,\
    \ 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2,\
    \ 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1,\
    \ -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1,\
    \ 1, -2, 1, 0, 2, -1, 1, -2, 1, 0, 2, -1, 1, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdlfctw9e.jl:22\nin expression starting at\
    \ /tmp/tmpdlfctw9e.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm131mglo.jl:22\nin expression starting at\
    \ /tmp/tmpm131mglo.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwzb5ld2i.jl:22\nin expression starting at\
    \ /tmp/tmpwzb5ld2i.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7bvhrqni.jl:22\nin expression starting at\
    \ /tmp/tmp7bvhrqni.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph262eibc.jl:23\nin expression starting at\
    \ /tmp/tmph262eibc.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -5, -10, -15, -20, -25, -27, -29, -30, -32, -33])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7s0t7xna.jl:22\nin expression starting at\
    \ /tmp/tmp7s0t7xna.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -15, -17, -21])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -15, -17, -21])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmj4yl4r.jl:22\nin expression starting at\
    \ /tmp/tmpcmj4yl4r.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9])\n4\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11])\n4\n>>> count_nums([-1, -1, 1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12])\n4\n>>> count_nums([-1, -1, 1, 2,\
    \ -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13])\n4\n>>> count_nums([-1, -1, 1, 2,\
    \ -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14])\n4\n>>> count_nums([-1, -1, 1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16])\n4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n4\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19])\n4\n>>> count_nums([-1, -1, 1, 2, -3, 4,\
    \ -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjl8s_dgk.jl:23\nin expression starting at\
    \ /tmp/tmpjl8s_dgk.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -1, 1, 2, -3, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9])\n4\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10])\n5\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11])\n\
    6\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12])\n7\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n8\n>>> count_nums([-1, 2,\
    \ -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n9\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n10\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16])\n11\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n12\n\
    >>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,\
    \ -16, -17, -18])\n13\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17, -18, -19])\n14\n>>> count_nums([-1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20])\n\
    15\n>>> count_\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpijzq_0lv.jl:22\nin expression starting at\
    \ /tmp/tmpijzq_0lv.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppabbpqty.jl:23\nin expression starting at\
    \ /tmp/tmppabbpqty.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k4jz89q.jl:22\nin expression starting at\
    \ /tmp/tmp0k4jz89q.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, -10, -12, -15, -20, -25])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -9, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74sb426f.jl:23\nin expression starting at\
    \ /tmp/tmp74sb426f.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -7, -9, -10, -12, -14, -16, -17, -19, -20, -22, -24, -26,\
    \ -27, -29, -32, -34, -36, -39, -42, -44, -47, -49, -54, -56, -58, -61, -64, -66,\
    \ -69, -72, -74, -77, -79, -82, -84, -87, -89, -92, -94])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp6xi3xnz.jl:23\nin expression starting at\
    \ /tmp/tmpp6xi3xnz.jl:23\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf no number is positive, then the\
    \ function should return 0.\nIf a number is negative, then its first signed digit\
    \ will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3])\n0\n>>> count_nums([-1, 2, -3])\n0\n>>> count_nums([-1, 2, -3, 4])\n\
    0\n>>> count_nums([-1, 2, -3, 4, 5])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6])\n\
    0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7])\n0\n>>> count_nums([-1, 2, -3, 4, 5,\
    \ 6, 7, 8])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9])\n0\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10])\n0\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n\
    1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n1\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n1\n>>> count_nums([-1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n1\n>>> count_nums([-1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n1\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n1\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n1\n>>>\
    \ count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22])\n1\n>>> count_nums([-1, 2, -3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0cfxshf0.jl:23\nin expression starting at\
    \ /tmp/tmp0cfxshf0.jl:23\n"
  stdout: ''
  timestamp: 1659822237
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf all elements in the array are negative, then the function\
    \ should return 0.\ne.g. [-2, -1, 1, 2, -3, 4, -5, 6] has signed digits -1, 2,\
    \ and 3.\n>>> count_nums([-1, 11, -11])\n0\n>>> count_nums([1, 1, 2])\n3\n>>>\
    \ count_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n3\n\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvgodqhi0.jl:22\nin expression starting at\
    \ /tmp/tmpvgodqhi0.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>>\
    \ count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvwfmhiyh.jl:22\nin expression starting at\
    \ /tmp/tmpvwfmhiyh.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -10, -15, -20, -25])\n</cell>\n<text>\nExercise\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxam8p4z8.jl:22\nin expression starting at\
    \ /tmp/tmpxam8p4z8.jl:22\n"
  stdout: ''
  timestamp: 1659822237
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += x\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of positive integers less\
    \ than or equal to a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjo0evh8j.jl:27\nin expression starting at\
    \ /tmp/tmpjo0evh8j.jl:27\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdiuny9ie.jl:22\nin expression starting at\
    \ /tmp/tmpdiuny9ie.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy7937zn5.jl:23\nin expression starting at\
    \ /tmp/tmpy7937zn5.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ zeros(Int64, length(arr))\n    for num in arr\n        if num < 0\n        \
    \    count_nums[num < 0 ? -num : num] += 1\n        else\n            count_nums[num]\
    \ += 1\n        end\n    end\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([-1, -1, 1, 1])\n2\n>>> count_nums([-1, -1, 1, -1,\
    \ 1])\n2\n>>> count_nums([-1, -1, 1, -1, -1])\n2\n>>> count_nums([-1, -1, 1, -1,\
    \ -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -1])\n2\n\
    >>> count_nums([-1, -1, 1, -1, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1,\
    \ -1, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, 1])\n\
    2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2,\
    \ -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2,\
    \ 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2, -1])\n2\n>>>\
    \ count_nums([-1, -1, 1, -1, -2, -2, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1,\
    \ -1, 1, -1, -2, -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1,\
    \ -2, -2, -2, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2,\
    \ -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2,\
    \ -2, -2, -2, -2, -2, -2, -2, 1])\n2\n>>> count_nums([-1, -1, 1, -1, -2, -2, -2,\
    \ -2, -2, -2, -2, -2, -2, -2, -1])\n2\n>>> count_num\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiodnjyt1.jl:24\nin expression starting at\
    \ /tmp/tmpiodnjyt1.jl:24\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7i7xof6m.jl:22\nin expression starting at\
    \ /tmp/tmp7i7xof6m.jl:22\n"
  stdout: ''
  timestamp: 1659822231
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq47w4kj4.jl:22\nin expression starting at\
    \ /tmp/tmpq47w4kj4.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,\
    \ -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwhqwm0g6.jl:23\nin expression starting at\
    \ /tmp/tmpwhqwm0g6.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe1ym9dmf.jl:22\nin expression starting at\
    \ /tmp/tmpe1ym9dmf.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx9bwm8sv.jl:22\nin expression starting at\
    \ /tmp/tmpx9bwm8sv.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo34k59kt.jl:22\nin expression starting at\
    \ /tmp/tmpo34k59kt.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ds7mai_.jl:22\nin expression starting at\
    \ /tmp/tmp7ds7mai_.jl:22\n"
  stdout: ''
  timestamp: 1659822234
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -2])\n2\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21])\n\
    4\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23])\n5\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24])\n6\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26])\n\
    7\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26,\
    \ -28])\n8\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23,\
    \ -24, -26, -28, -30])\n9\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16,\
    \ -18, -21, -23, -24, -26, -28, -30, -32])\n10\n>>> count_nums([1, 2, -2, -4,\
    \ -6, -10, -12, -14, -16, -18, -21, -23, -24, -26, -28, -30, -32, -34])\n11\n\
    >>> count_nums([1, 2, -2, -4, -6, -10, -12, -14, -16, -18, -21, -23, -24, -26,\
    \ -28, -30, -32, -34, -36])\n12\n>>> count_nums([1, 2, -2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21, -23, -24, -26, -28, -30, -32, -34, -36, -38])\n13\n>>> count_nums([1,\
    \ 2, -2, -4, -6, -10, -12, -14, -16, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn4jgfakj.jl:22\nin expression starting at\
    \ /tmp/tmpn4jgfakj.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy1fktw0k.jl:22\nin expression starting at\
    \ /tmp/tmpy1fktw0k.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8toou5gl.jl:22\nin expression starting at\
    \ /tmp/tmp8toou5gl.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplym6rxzp.jl:22\nin expression starting at\
    \ /tmp/tmplym6rxzp.jl:22\n"
  stdout: ''
  timestamp: 1659822233
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8])\n2\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9])\n2\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10])\n2\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11])\n3\n>>> count_nums([-1, 2, -3, 4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12, 13])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12, 13, 14])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n3\n>>> count_nums([-1, 2, -3, 4, -5,\
    \ -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n\
    3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21])\n3\n>>> count_nums([-1, 2, -3, 4, -5, -6, -7, \nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppzw04xoz.jl:22\nin expression starting at\
    \ /tmp/tmppzw04xoz.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo7au1k2y.jl:22\nin expression starting at\
    \ /tmp/tmpo7au1k2y.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp_ajoan.jl:22\nin expression starting at\
    \ /tmp/tmpnp_ajoan.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe84rlnoz.jl:23\nin expression starting at\
    \ /tmp/tmpe84rlnoz.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7bvhrqni.jl:22\nin expression starting at\
    \ /tmp/tmp7bvhrqni.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwik4dgl.jl:23\nin expression starting at\
    \ /tmp/tmpdwik4dgl.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn30qrv98.jl:22\nin expression starting at\
    \ /tmp/tmpn30qrv98.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        else\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuysvpszo.jl:26\nin expression starting at\
    \ /tmp/tmpuysvpszo.jl:26\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmd2cq7dj.jl:24\nin expression starting at\
    \ /tmp/tmpmd2cq7dj.jl:24\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ys5zifz.jl:22\nin expression starting at\
    \ /tmp/tmp9ys5zifz.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpos4wr8b9.jl:23\nin expression starting at\
    \ /tmp/tmpos4wr8b9.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe84rlnoz.jl:23\nin expression starting at\
    \ /tmp/tmpe84rlnoz.jl:23\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k4jz89q.jl:22\nin expression starting at\
    \ /tmp/tmp0k4jz89q.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 1, 3, -4, 1])\n</cell>\n<text>\nExercise: Write a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb1ht0_cr.jl:22\nin expression starting at\
    \ /tmp/tmpb1ht0_cr.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k4jz89q.jl:22\nin expression starting at\
    \ /tmp/tmp0k4jz89q.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphh0rt9og.jl:22\nin expression starting at\
    \ /tmp/tmphh0rt9og.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4,\
    \ 5])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9,\
    \ 10])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7,\
    \ 8, -9, 10, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4,\
    \ -5, 6, -7, 8, -9, 10, -11, -12])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11,\
    \ -12, -13, -14, -15])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2,\
    \ 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12,\
    \ -13, -14, -15, -16, -17])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6, -7, 8, -9, 10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18, -19, -20\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq0ut2brk.jl:22\nin expression starting at\
    \ /tmp/tmpq0ut2brk.jl:22\n"
  stdout: ''
  timestamp: 1659822238
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,\
    \ -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwl15ckhm.jl:22\nin expression starting at\
    \ /tmp/tmpwl15ckhm.jl:22\n"
  stdout: ''
  timestamp: 1659822239
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5l3pq8s_.jl:23\nin expression starting at\
    \ /tmp/tmp5l3pq8s_.jl:23\n"
  stdout: ''
  timestamp: 1659822239
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_i68edog.jl:22\nin expression starting at\
    \ /tmp/tmp_i68edog.jl:22\n"
  stdout: ''
  timestamp: 1659822239
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp77kmw535.jl:22\nin expression starting at\
    \ /tmp/tmp77kmw535.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of elements in a vector which has \na sum of digits > 0.\nIf an element\
    \ in the vector is negative, then its first signed digit will be negative:\ne.g.\
    \ -123 has signed digits -1, 2, and 3.\n>>> count_nums([-2, -1, 0, 1, 2])\n1\n\
    >>> count_nums([-1, 11, -11])\n2\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3])\n3\n>>> count_nums([1, 2, -3, 4])\n2\n>>> count_nums([1, 2, -3, 4, 5])\n\
    3\n>>> count_nums([1, 2, -3, 4, -5, 6])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6,\
    \ 7])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8])\n3\n>>> count_nums([1, 2,\
    \ -3, 4, -5, 6, -7, 8, 9])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9,\
    \ 10])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12])\n3\n>>> count_nums([1, 2, -3, 4, -5,\
    \ 6, -7, 8, -9, 10, 11, 12, 13])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10, 11, 12, 13, 14])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9,\
    \ 10, 11, 12, 13, 14, 15])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9,\
    \ 10, 11, 12, 13, 14, 15, 16])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10, 11, 12, 13, 14, 15, 16, 17])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6,\
    \ -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n3\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n3\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9195l2ke.jl:22\nin expression starting at\
    \ /tmp/tmp9195l2ke.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc_83n9fq.jl:22\nin expression starting at\
    \ /tmp/tmpc_83n9fq.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += x\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20,\
    \ -22, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([1, 2, 3])\n3\n>>> count_nums([-1, -2, -3])\n3\n>>>\
    \ count_nums([1, 2, -3, 4])\n2\n>>> count_nums([1, 2, -3, 4, 5])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9])\n2\n\
    >>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10])\n2\n>>> count_nums([1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n\
    2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n2\n>>> count_nums([1, 2,\
    \ -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n2\n>>> count_nums([1, 2,\
    \ -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n2\n>>>\
    \ count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n2\n>>> count_nums([1, 2, -3, 4, 5, 6, 7, 8, 9, \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pt82q4r.jl:27\nin expression starting at\
    \ /tmp/tmp3pt82q4r.jl:27\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 1, 3, -4, 1])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcs78gx6a.jl:22\nin expression starting at\
    \ /tmp/tmpcs78gx6a.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2g430z9x.jl:22\nin expression starting at\
    \ /tmp/tmp2g430z9x.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcrsehhuf.jl:22\nin expression starting at\
    \ /tmp/tmpcrsehhuf.jl:22\n"
  stdout: ''
  timestamp: 1659822236
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 3, -4, 4])\n2\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pma0kqz.jl:22\nin expression starting at\
    \ /tmp/tmp0pma0kqz.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11,\
    \ -12, -13])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16, -17])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19])\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20])\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -4, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,\
    \ -19, -20, -21, -22])\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4bd956js.jl:22\nin expression starting at\
    \ /tmp/tmp4bd956js.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj0o3y8cm.jl:22\nin expression starting at\
    \ /tmp/tmpj0o3y8cm.jl:22\n"
  stdout: ''
  timestamp: 1659822240
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8gm94_v3.jl:22\nin expression starting at\
    \ /tmp/tmp8gm94_v3.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcnom_7x0.jl:22\nin expression starting at\
    \ /tmp/tmpcnom_7x0.jl:22\n"
  stdout: ''
  timestamp: 1659822229
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz54v2c_h.jl:22\nin expression starting at\
    \ /tmp/tmpz54v2c_h.jl:22\n"
  stdout: ''
  timestamp: 1659822232

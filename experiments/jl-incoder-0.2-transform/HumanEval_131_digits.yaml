name: HumanEval_131_digits
language: jl
prompt: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
  \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n   \
  \ 1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
  \ digits(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
  \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
  \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
  \t@test(candidate(2468) == 0)\nend\n"
completions: ["    if n<0 \n        error(\"n must be positive\")\n    else if n==0\
    \ \n        1\n    else if n==1 \n        1\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        error(\"n must be positive\")\n    else if n==1\
    \ \n        1\n    else \n        digits(n-1)*(n % 2)*digits(n//2)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the digits of an\
    \ integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: Look at the function\
    \ digits(n) and think about what it does.", "    if n == 0 \n        0\n    else\n\
    \        if n % 2 == 0 \n            digits(n / 2)\n        else\n           \
    \ digits(n / 2) * 3\n        end\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 then return 0\n    if n<0 then return\
    \ 0\n    if n<10 then return n\n    digits(n/10)\n    return n*(n%10*2)\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the sum of all the digits in an integer.",
  "    if n==0 \n        return 0 \n    else \n        return digits(n//10)*10 + n\
    \ % 10\nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.", "    if n==0 \n       \
    \ 0\n    else\n        digits(n/10)*10+n%10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235235)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(235235235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235235235235)\n</cell>\n<code language=julia-1.3>\ndigits(235235235235235)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235235235235235235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the factorial of a given number. \nFor\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n    \
    \    0\n    else\n        digits(n-1)*(n%2)*(n%2)\n    end\nend\n</code>\n<|/\
    \ a |>\n<| a tags=recursion,julia,algorithm |>\n<code>", "    if n==0 \n     \
    \   0\n    else\n        digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n<10 then return n\n    else return digits(n/10)\
    \ * 10 + n % 10\nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n\
    <code language=julia-1.1>\ndigits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to solve this exercise.", "    if n<10 then return n\n \
    \   else return digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this exercise.", "    if n<0 \n   \
    \     error(\"n must be positive\")\n    else if n==0 \n        error(\"n must\
    \ be positive\")\n    else if n==1 \n        return 1\n    else if n==2 \n   \
    \     return 2\n    else if n==3 \n        return 3\n    else if n==4 \n     \
    \   return 6\n    else if n==5 \n        return 10\n    else if n==6 \n      \
    \  return 15\n    else if n==7 \n        return 21\n    else if n==8 \n      \
    \  return 28\n    else if n==9 \n        return 36\n    else if n==10 \n     \
    \   return 45\n    else if n==11 \n        return 55\n    else if n==12 \n   \
    \     return 66\n    else if n==13 \n        return 78\n    else if n==14 \n \
    \       return 90\n    else if n==15 \n        return 110\n    else if n==16 \n\
    \        return 130\n    else if n==17 \n        return 150\n    else if n==18\
    \ \n        return 170\n    else if n==19 \n        return 190\n    else if n==20\
    \ \n        return 200\n    else if n==21 \n        return 220\n    else if n==22\
    \ \n        return 240\n    else if n==23 \n        return 260\n    else if n==24\
    \ \n        return 280\n    else if n==25 \n        return 300\n    else if n==26\
    \ \n        return 320\n    else if n==27 \n        return 340\n    else if n==28\
    \ \n        return 360\n    else if n==29 \n        return 380\n    else if n==30\
    \ \n        return 400\n    else if n==31 \n        return 420\n    else if n==32\
    \ \n        return 440\n    else if n==33 \n        return 460\n    else if n==34\
    \ \n        return 480\n    else if n==35 \n        return 500\n    else if n==36\
    \ \n        return 520\n    else if n==37 \n        return 540\n    else if n==38\
    \ \n        return 560\n    else if n==39 \n        return 580\n    else if n==40\
    \ \n        return 600\n    else if n==41 \n        return 620\n    else if n==42\
    \ \n        return 640\n    else if n==43 \n        return 660\n    else if n==44\
    \ \n        return 680\n    else if n==45 \n        return 700\n    else if n==46\
    \ \n        return 720\n    else if n==47 \n        return 740\n    else ", " \
    \   if n<10 then return n\n    digits(n/10)\n    digits(n%10)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of its argument. For example:\n\
    >>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12\n>>> digits(-12345)\n-12\n>>> digits(0)\n0\n>>> digits(-0)\n\
    -0\n>>> digits(12345)\n12", "    if n==0 \n        0\n    elseif n==1 \n     \
    \   1\n    elseif n%2==0 \n        digits(n/2)\n    else\n        digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function called digits_sum that takes a positive integer n and\
    \ returns the sum of the odd digits of n. For example:\n>>> digits_sum(1234)\n\
    12\n>>> digits_sum(12345)\n13\n>>> digits_sum(1234567)\n14\n>>> digits_sum(123456789)\n\
    15\n>>> digits_sum(1234567890)\n16\n>>> digits_sum(12345678901)\n17\n>>> digits_sum(123456789012)\n\
    18\n>>> digits_sum(1234567890123)\n19\n>>> digits_sum(12345678901234)\n20\n>>>\
    \ digits_sum(123456789012345)\n21\n>>> digits_sum(1234567890123456)\n22\n>>> digits_sum(12345678901234567)\n\
    23\n>>> digits_sum(123456789012345678)\n24\n>>> digits_sum(1234567890123456788)\n\
    25\n>>> digits_sum(12345678901234567889)\n26\n>>> digits_sum(123456789012345678899)\n\
    27\n>>> digits_sum(1234567890123456788999)\n28\n>>> digits_sum(12345678901234567889999)\n\
    29\n>>> digits_sum(123456789012345678899999)\n30\n>>> digits_sum(1234567890123456788999999)\n\
    31\n>>> digits_sum(12345678901234567889999999)\n32\n>>> digits_sum(1234567890123456788999999999)\n\
    33\n>>> digits_sum(123456789012345678899999999999)\n34\n>>> digits_sum(12345678901234567889999999999999)\n\
    35\n>>> digits_sum(123456789012345678899999999999998)\n36\n>>> digits_sum(1234567890123456788999999999999987)\n\
    37\n>>> digits_sum(12345678901234567889999999999999876)\n38\n>>> digits_sum(123456789012345678899999999999998765)\n\
    39\n>>> digits_sum(1234567890123456788999999999999987654)\n40\n>>> digits_sum(12345678901234567889999999999999876543)\n\
    41\n>>> digits_sum(123456789012345", "    if n == 0 \n        0\n    elseif n\
    \ % 2 == 0 \n        digits(n / 2)\n    else\n        digits(n / 2) * 3\nend\n\
    </cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 = 10.", "    if n<0 \n        return\
    \ 0 \n    else if n==0 \n        return 1 \n    else if n%2==0 \n        return\
    \ digits(n/2) \n    else \n        return digits(n/2)*3\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(123456789)\n</cell>\n\
    <text>\nExercise 3\nWrite a function digits_sum(n) that returns the sum of the\
    \ digits of the number n.\nFor example, digits_sum(1234) should return 0 + 1 +\
    \ 2 + 3 + 4 = 10.\nWrite a second function digits_product(n) that returns the\
    \ product of the digits of the number n.\nFor example, digits_product(1234) should\
    \ return 1 * 2 * 3 * 4 = 24.\nWrite a third function digits_quotient(n) that returns\
    \ the quotient of the digits of the number n.\nFor example, digits_quotient(1234)\
    \ should return 12 / 3 = 3.\nWrite a fourth function digits_remainder(n) that\
    \ returns the remainder of the digits of the number n.\nFor example, digits_remainder(1234)\
    \ should return 12 % 3 = 2.\nWrite a fifth function digits_quotient_remainder(n)\
    \ that returns the quotient and remainder of the digits of the number n.\nFor\
    \ example, digits_quotient_remainder(1234) should return (12, 3) % 3 = ((12, 3),\
    \ 2).\nWrite a sixth function digits_quotient_quotient(n) that returns the quotient\
    \ and quotient of the digits of the number n.\nFor example, digits_quotient_quotient(1234)\
    \ should return ((12, 3), 2) % (3, 2) = ((3, 2), 1).\nWrite a seventh function\
    \ digits_quotient_quotient_remainder(n) that returns the quotient and quotient\
    \ and remainder of the digits of the number n.\nFor example, digits_quotient_quotient_remainder(1234)\
    \ should return ((12, 3), 2, 1) % (3, 2, 1) = ((3, 2), 1, 1).\nWrite a eight function\
    \ digits_quotient_quotient_quotient(n) that returns the quotient and quotient\
    \ and quotient of the digits of the number n.\nFor example, digits_quotient_quotient_quotient(1234)\
    \ should return ((12, 3), 2, 1, 1) % (3, 2, 1) = ((3, 2), 1, 1, 1).\nWrite a ninth\
    \ function digits_quotient_quotient_quotient_remainder(n) that returns the quotient\
    \ and quotient and quotient and remainder of the digits of the number n.\nFor\
    \ example, digits_quotient_quotient_quotient_remainder(1234) should return ((12,\
    \ 3), 2, 1, 1) % (3, 2, 1) = ((3, ", "    if n<10 then return n\n    if n%2==0\
    \ then return n*digits(n/2)\n    else return n*digits(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nHint: use the digits() function you wrote earlier.", "    if\
    \ n==0 \n        return 0 \n    else if n%2==0 \n        return digits(n/2) \n\
    \    else \n        return digits(n-1)*10 + n%2 \nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function called digits_sum that\
    \ returns the sum of all the odd digits in an integer.\nFor example, digits_sum(123)\
    \ = 1 + 3 + 5 = 9", "    if n==0 then return 0 \n    else if n%2==0 then return\
    \ n*digits(n/2) \n    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n<0 \n        error(\"n must\
    \ be positive\")\n    else if n==0 \n        0\n    else if n==1 \n        1\n\
    \    else if n==2 \n        2\n    else if n<10 \n        digits(n/10)*10+(n%10)\n\
    \    else if n<100 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100\n\
    \    else if n<1000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000\n\
    \    else if n<10000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000\n\
    \    else if n<100000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000+(n%1000000)/100000\n\
    \    else if n<1000000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000+(n%1000000)/100000+(n%10000000)/1000000\n\
    \    else if n<10000000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000+(n%1000000)/100000+(n%10000000)/1000000+(n%100000000)/10000000\n\
    \    else if n<1000000000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000+(n%1000000)/100000+(n%10000000)/1000000+(n%100000000)/10000000+(n%1000000000)/100000000\n\
    \    else if n<10000000000 \n        digits(n/10)*10+(n%10)*10+(n%100)/10+(n%1000)/100+(n%10000)/1000+(n%100000)/10000+(n%1000000)/100000+(n%10000000)/1000000+(n%100000000)/10000000+(n%100000000",
  "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2) : digits(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a recursive function.", " \
    \   if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n      \
    \  1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else if\
    \ n<10 \n        digits(n/10)*10\n    else \n        digits(n/10)*10+digits(n%10)\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a recursive function.", " \
    \   if n==0 \n        0\n    else\n        digits(n-1)*(n%10^(n-1))\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.", "    if n<10\
    \ then return n\n    else return digits(n/10)*10 + digits(n%10)\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(123456789)\n</cell>\n<code language=julia-1.3>\ndigits(12345678901)\n</cell>\n\
    <code language=julia-1.3>\ndigits(1234567890123)\n</cell>\n<code language=julia-1.3>\n\
    digits(12345678901234)\n</cell>\n<code language=julia-1.3>\ndigits(123456789012345678)\n\
    </cell>\n<code language=julia-1.3>\ndigits(1234567890123456788)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(12345678901234567889)\n</cell>\n<code language=julia-1.3>\n\
    digits(123456789012345678899)\n</cell>\n<code language=julia-1.3>\ndigits(1234567890123456788999)\n\
    </cell>\n<code language=julia-1.3>\ndigits(12345678901234567889999)\n</cell>\n\
    <code language=julia-1.3>\ndigits(123456789012345678899999)\n</cell>\n<code language=julia-1.3>\n\
    digits(1234567890123456788999999)\n</cell>\n<code language=julia-1.3>\ndigits(12345678901234567889999999)\n\
    </cell>\n<code language=julia-1.3>\ndigits(1234567890123456788999999999)\n</cell>\n\
    <code language=julia-1.3>\ndigits(123456789012345678899999999999)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1234567890123456788999999999999999)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(12345678901234567889999999999999999999)\n</cell>\n\
    <code language=julia-1.3>\ndigits(123456789012345678899999999999999999999999)\n\
    </cell>\n<code language=julia-1.3>\ndigits(1234567890123456788999999999999999999999999999)\n\
    </cell>\n<code language=julia-1.3>\ndigits(12345678901234567889999999999999999999999999999999)\n\
    </cell>\n<code language=julia-1.3>\ndigits(1234567890123456788999999999999999999999999999999999999999)\n\
    </cell>", "    if n==0 then return 0\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 9.", "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n\
    \ / 2) : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits()", "    if n<0 \n        return 0 \n    else if n==0 \n        return\
    \ 1 \n    else if n%2==0 \n        return digits(n/2) \n    else \n        return\
    \ digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function named digits_sum that returns the\
    \ sum of the odd digits of an integer.", "    if n==0 \n        0\n    else if\
    \ n%2==0 \n        digits(n/2)\n    else \n        digits(n-1)\nend\n</cell>\n\
    <code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\ndigits(4)\n\
    </cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the even digits in a number.", "    if\
    \ n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n       \
    \ 0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n\
    <code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the even digits\
    \ in a given number.", "    if n==0 \n        0\n    else\n        digits(n/10)\
    \ * 10 + n % 10\n    end\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n<10 then return n\n    else\
    \ return digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n==0 then return 0 \n    if n==1 then\
    \ return 1 \n    if n%2==0 then return n*digits(n/2) \n    else return n*digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5",
  "    if n < 0 \n        error(\"n must be positive\")\n    else if n < 10 \n   \
    \     return n\n    else if n < 100 \n        return n * 10\n    else if n < 1000\
    \ \n        return n * 100\n    else if n < 10000 \n        return n * 1000\n\
    \    else if n < 100000 \n        return n * 10000\n    else if n < 1000000 \n\
    \        return n * 100000\n    else if n < 10000000 \n        return n * 1000000\n\
    \    else if n < 100000000 \n        return n * 10000000\n    else if n < 1000000000\
    \ \n        return n * 100000000\n    else if n < 10000000000 \n        return\
    \ n * 1000000000\n    else if n < 100000000000 \n        return n * 10000000000\n\
    \    else if n < 1000000000000 \n        return n * 100000000000\n    else if\
    \ n < 10000000000000 \n        return n * 1000000000000\n    else if n < 100000000000000\
    \ \n        return n * 10000000000000\n    else if n < 1000000000000000 \n   \
    \     return n * 100000000000000\n    else if n < 10000000000000000 \n       \
    \ return n * 1000000000000000\n    else if n < 100000000000000000 \n        return\
    \ n * 10000000000000000\n    else if n < 1000000000000000000 \n        return\
    \ n * 100000000000000000\n    else \n        error(\"n too large\")\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n",
  "    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.",
  "    if n==0 \n        return 0 \n    else if n%2==0 \n        return digits(n/2)*2\
    \ \n    else \n        return digits(n/2)*3\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of all odd digits in a given number.", "    if n==0 \n        0\n    else if\
    \ n%2==1 \n        digits(n/2)\n    else\n        digits(n/2)*10\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the even digits in a given number.", "  \
    \  if n==0 \n        0\n    else\n        digits(n-1)*10 + n % 10\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits(n)\
    \ to get the digits of n.", "    if n == 0 \n        return 0 \n    else if n\
    \ % 2 == 1 \n        return n * digits(n / 2) \n    else \n        return digits(n\
    \ / 2) * digits(n / 2) \nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        0\n    else if n%2==0\
    \ \n        digits(n/2)\n    else \n        digits(n/2)*10\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits to solve\
    \ this problem!", "    if n<10 then return n\n    digits(n/10)\n    digits(n%10)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function named digits_sum that takes a positive integer n\
    \ and returns the sum of the odd digits of n.\nFor example, digits_sum(1) should\
    \ return 1, digits_sum(4) should return 0, and digits_sum(235) should return 15.",
  "    if n == 0 \n        0\n    else if n % 2 == 1 \n        digits(n / 2)\n   \
    \ else \n        digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits(n) to get the digits of an integer.", "    if\
    \ n<0 \n        return 0 \n    else if n==0 \n        return 1 \n    else if n%2==0\
    \ \n        return digits(n/2) \n    else \n        return digits(n-1)*10 + digits(n/2)\
    \ \nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to solve\
    \ this problem!", "    if n == 0 \n        0\n    else \n        if n % 2 == 0\
    \ \n            digits(n / 2)\n        else \n            digits(n / 2) * 3\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to solve this exercise.", "    if n==0 \n        0\n    else\n        digits(n/10)*10\
    \ + n % 10\n    end\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.", "    if n<0 \n        error(\"n must be positive\")\n    else\
    \ if n==0 \n        1\n    else if n==1 \n        1\n    else if n==2 \n     \
    \   2\n    else if n<10 \n        digits(n/2)\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n==0 \n        0\n    else\n     \
    \   digits(n-1)*(n%2)*(n%2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get\
    \ the digits of the integer.", "    if n==0 \n        0\n    else \n        if\
    \ n%2==0 \n            digits(n/2)\n        else \n            digits(n/2)*10\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a recursive function.", " \
    \   if n==0 \n        0\n    else\n        digits(n-1)*(n%10%2)+(n%10%2)\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6.", "    if n==0 \n        0\n    else\n\
    \        digits(n-1)*(n%2==1)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the product of the even digits in a given number.", "    if n ==\
    \ 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n    else\n   \
    \     digits(n / 2) * 3\n    end\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the even digits in a given number.", "    if n==0 then return 0\n    if n==1\
    \ then return 1\n    if n%2==0 then return n*digits(n/2)\n    return digits(n/2)*10+n%2\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.", "    if n<0 \n        error(\"\
    n must be positive\")\n    else if n==0 \n        1\n    else if n==1 \n     \
    \   1\n    else if n%2==0 \n        digits(n/2)\n    else \n        digits(n/2)*3\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the product of the even digits in a number.",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ 1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else if n<10\
    \ \n        digits(n/10)*10\n    else if n<100 \n        digits(n/10)*10+digits(n%10)\n\
    \    else if n<1000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)\n   \
    \ else if n<10000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)\n\
    \    else if n<100000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)\n\
    \    else if n<1000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)\n\
    \    else if n<10000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)\n\
    \    else if n<100000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)\n\
    \    else if n<1000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)\n\
    \    else if n<10000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)+digits(n%1000000000)\n\
    \    else if n<100000000000 \n        digits(n/10)*10+digits(n%10)+digits(", " \
    \   if n < 0 \n        error(\"n must be positive\")\n    else if n < 10 \n  \
    \      return n\n    else if n % 2 == 1 \n        return n * digits(n / 2)\n \
    \   else \n        return digits(n / 2) * digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 then return 1\n    if n<0 then return\
    \ 0\n    if n<10 then return n\n    if n<100 then return n*10\n    if n<1000 then\
    \ return n*100\n    if n<10000 then return n*1000\n    if n<100000 then return\
    \ n*10000\n    if n<1000000 then return n*100000\n    if n<10000000 then return\
    \ n*1000000\n    if n<100000000 then return n*10000000\n    if n<1000000000 then\
    \ return n*100000000\n    if n<10000000000 then return n*1000000000\n    if n<100000000000\
    \ then return n*10000000000\n    if n<1000000000000 then return n*100000000000\n\
    \    if n<10000000000000 then return n*1000000000000\n    if n<100000000000000\
    \ then return n*10000000000000\n    if n<1000000000000000 then return n*100000000000000\n\
    \    if n<10000000000000000 then return n*1000000000000000\n    if n<100000000000000000\
    \ then return n*10000000000000000\n    if n<1000000000000000000 then return n*100000000000000000\n\
    \    if n<10000000000000000000 then return n*1000000000000000000\n    if n<100000000000000000000\
    \ then return n*10000000000000000000\n    if n<1000000000000000000000 then return\
    \ n*100000000000000000000\n    if n<10000000000000000000000 then return n*1000000000000000000000\n\
    \    if n<100000000000000000000000 then return n*10000000000000000000000\n   \
    \ if n<1000000000000000000000000 then return n*100000000000000000000000\n    if\
    \ n<10000000000000000000000000 then return n*1000000000000000000000000\n    if\
    \ n<100000000000000000000000000 then return n*100000000000000000000000000\n  \
    \  if n<1000000000000000000000000000 then return n*1000000000000000000000000000\n\
    \    if n<10000000000000000000000000000 then return n*10000000000000000000000000000\n\
    \    if n<100000000000000000000000000000 then return n*100000000000000000000000000000\n\
    \    if n<1000000000000000000000000000000 then return n*1000000000000000000000000000000\n\
    \    if n<10000000000000000000000000000000 then return n*10000000000000000000000000000000\n\
    \    if n<100000000000000000000000000000000 then return n*100000000000000000000000000000000\n\
    \    if n<1000000000000000000000000000000000 then return n*1000000000000000000000000000000000\n\
    \    if n<10000000000000000000000000000000000 then return n*10000000000000000000000000000000000\n\
    \    if n<100000000000000000000000000000000000 then return n*100000000000000000000000000000000000\n\
    \    if n<1000000000000000000000000000000000000 then return n*1000000000000000000000000000000000000\n\
    \    if n<10000000000000000000000000000000000000 then return n*10000000000000000000000000000000000000\n\
    \    if n<100000000000000000000000000", "    if n==0 \n        0\n    else\n \
    \       digits(n/10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ Use a while loop to keep adding digits to the sum.", "    if n==0 \n       \
    \ 0\n    else if n==1 \n        1\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n == 0 \n        0\n    else if n % 2 == 1 \n        0\n    else\
    \ \n        digits(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n == 0 \n        0\n    else\
    \ if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n / 2) * 3\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get\
    \ the digits of an integer.", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        0\n    else if n==1 \n        1\n    else if n<10\
    \ \n        n\n    else if n<100 \n        digits(n/10)*10\n    else if n<1000\
    \ \n        digits(n/100)*100\n    else if n<10000 \n        digits(n/1000)*1000\n\
    \    else if n<100000 \n        digits(n/10000)*10000\n    else if n<1000000 \n\
    \        digits(n/100000)*100000\n    else if n<10000000 \n        digits(n/1000000)*1000000\n\
    \    else if n<100000000 \n        digits(n/10000000)*10000000\n    else if n<1000000000\
    \ \n        digits(n/100000000)*100000000\n    else if n<10000000000 \n      \
    \  digits(n/1000000000)*1000000000\n    else if n<100000000000 \n        digits(n/10000000000)*10000000000\n\
    \    else if n<1000000000000 \n        digits(n/100000000000)*100000000000\n \
    \   else if n<10000000000000 \n        digits(n/1000000000000)*1000000000000\n\
    \    else if n<100000000000000 \n        digits(n/10000000000000)*10000000000000\n\
    \    else if n<1000000000000000 \n        digits(n/100000000000000)*100000000000000\n\
    \    else if n<10000000000000000 \n        digits(n/1000000000000000)*1000000000000000\n\
    \    else if n<100000000000000000 \n        digits(n/10000000000000000)*10000000000000000\n\
    \    else if n<1000000000000000000 \n        digits(n/100000000000000000)*100000000000000000\n\
    \    else if n<10000000000000000000 \n        digits(n/1000000000000000000)*1000000000000000000\n\
    \    else if n<100000000000000000000 \n        digits(n/10000000000000000000)*10000000000000000000\n\
    \    else if n<1000000000000000000000 \n        digits(n/100000000000000000000)*100000000000000000000\n\
    \    else if n<10000000000000000000000 \n        digits(n/1000000000000000000000)*1000000000000000000000\n\
    \    else if n<100000000000000000000000 \n        digits(n/10000000000000000000000)*10000000000000000000000\n\
    \    else if n<1000000000000000000000000 \n        digits(n/100000000000000000000000)*100000000000000000000000\n\
    \    else if n<10000000000000000000000000 \n        digits(n/1000000000000000000000000)*",
  "    if n==0 \n        0\n    else\n        digits(n/10) * 10 + n % 10\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the sum of the digits of an integer.",
  "    if n==0 \n        return 0 \n    else \n        return digits(n//10) * 10 +\
    \ n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to get the individual digits of an integer.", "    if n < 0 \n        error(\"\
    n must be positive\")\n    else if n == 0 \n        0\n    else if n % 2 == 1\
    \ \n        digits(n / 2)\n    else \n        digits(n / 2) * digits(n / 2)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the even digits in a given\
    \ number.", "    if n==0 \n        0\n    else\n        digits(n/10)*10 + n %\
    \ 10\n    end\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code\
    \ language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.", "    if n==0 \n        0\n    else\n        digits(n/10)*10+n\
    \ % 10\n    end\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(1234) should return 0 + 1 + 2 + 3 + 4 =\
    \ 10.", "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n\
    \ / 2) : digits(n / 2)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n\
    <code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.", "   \
    \ if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ 1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else if n==3\
    \ \n        3\n    else if n==4 \n        4\n    else if n==5 \n        5\n  \
    \  else if n==6 \n        6\n    else if n==7 \n        7\n    else if n==8 \n\
    \        8\n    else if n==9 \n        9\n    else \n        digits(n-1)*n\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function digits_sum(n::Int64)::Int64 which returns the sum\
    \ of all digits in n.\nFor example:\n>>> digits_sum(123)\n6\n>>> digits_sum(1234)\n\
    10\n>>> digits_sum(12345)\n15\n>>> digits_sum(123456789)\n21\n>>> digits_sum(1234567890)\n\
    21\n>>> digits_sum(12345678901)\n21\n>>> digits_sum(123456789012)\n21\n>>> digits_sum(1234567890123)\n\
    21\n>>> digits_sum(12345678901234)\n21\n>>> digits_sum(123456789012345)\n21\n\
    >>> digits_sum(12345678901234567)\n21\n>>> digits_sum(123456789012345678)\n21\n\
    >>> digits_sum(1234567890123456788)\n21\n>>> digits_sum(12345678901234567889)\n\
    21\n>>> digits_sum(123456789012345678899)\n21\n>>> digits_sum(1234567890123456788999)\n\
    21\n>>> digits_sum(12345678901234567889999)\n21\n>>> digits_sum(123456789012345678899999)\n\
    21\n>>> digits_sum(1234567890123456788999999)\n21\n>>> digits_sum(12345678901234567889999999)\n\
    21\n>>> digits_sum(1234567890123456788999999999)\n21\n>>> digits_sum(12345678901234567889999999999)\n\
    21\n>>> digits_sum(12345678901234567889999999999999)\n21\n>>> digits_sum(123456789012345678899999999999998)\n\
    21\n>>> digits_sum(1234567890123456788999999999999987)\n21\n>>> digits_sum(",
  "    if n==0 then return 0 \n    else if n%2==1 then return n*digits(n/2) \n   \
    \ else return n*digits(n/2)+digits(n%2) \nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example:\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n</text>\n<code language=julia-1.5>", "    if n==0 then return 0 \n    else\
    \ if n%2==1 then return n*digits(n/2) \n    else return n*digits(n/2)+digits(n%2)\
    \ \nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nWrite a function that returns\
    \ the product of the digits of an integer.\nFor example, digits(12345) = 12 +\
    \ 34 + 45 = 155.\nWrite a function that returns the sum of the digits of an integer,\
    \ multiplied by 2.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nWrite\
    \ a function that returns the product of the digits of an integer, multiplied\
    \ by 2.\nFor example, digits(12345) = 12 + 34 + 45 = 155.\nWrite a function that\
    \ returns the sum of the digits of an integer, multiplied by 3.\nFor example,\
    \ digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nWrite a function that returns the product\
    \ of the digits of an integer, multiplied by 3.\nFor example, digits(12345) =\
    \ 12 + 34 + 45 = 155.\nWrite a function that returns the sum of the digits of\
    \ an integer, multiplied by 4.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 10.\nWrite a function that returns the product of the digits of an integer,\
    \ multiplied by 4.\nFor example, digits(12345) = 12 + 34 + 45 = 155.\nWrite a\
    \ function that returns the sum of the digits of an integer, multiplied by 5.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nWrite a function that returns\
    \ the product of the digits of an integer, multiplied by 5.\nFor example, digits(12345)\
    \ = 12 + 34 + 45 = 155.\nWrite a function that returns the sum of the digits of\
    \ an integer, multiplied by 6.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 10.\nWrite a function that returns the product of the digits of an integer,\
    \ multiplied by 6.\nFor example, digits(12345) = 12 + 34 + 45 = 155.\nWrite a\
    \ function that returns the sum of the digits of an integer, multiplied by 7.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nWrite a function that returns\
    \ the product of the digits of an integer, multiplied by 7.\nFor example, digits(12345)\
    \ = 12 + 34 + 45 = 155.\nWrite a function that returns the sum of the digits of\
    \ an integer, multiplied by 8.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 10.\nWrite a function that returns the product ", "    if n==0 \n        0\n\
    \    else\n        if n%2==0 \n            digits(n/2)\n        else\n       \
    \     digits(n-1)\nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n\
    <code language=julia-1.1>\ndigits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        1\n    else if n==1 \n        1\n    else if n==2\
    \ \n        2\n    else if n%3==0 \n        digits(n/3)*3\n    else \n       \
    \ digits(n/3)*3+digits(n%3)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2\
    \ \n        2\n    else if n<10 \n        digits(n/10)*10\n    else if n%2==0\
    \ \n        digits(n/2)*2\n    else \n        digits(n/2)*10\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise\nWrite\
    \ a function digits_sum(n::Int64)::Int64 which returns the sum of the digits of\
    \ the number n.", "    if n==0 \n        0\n    else\n        digits(n-1)*10 +\
    \ n % 10\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.", "    if n==0 \n       \
    \ return 0 \n    else \n        return digits(n//10)*10 + n % 10\nend\n</cell>\n\
    <code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of its input. For example:\n\
    >>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-1234", "    if n==0 \n        0\n    else\n        digits(n/10)*10\
    \ + n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a while\
    \ loop to keep dividing the number by 10 until the number is 0.", "    if n<0\
    \ \n        error(\"n must be positive\")\n    else if n==0 \n        0\n    else\
    \ if n==1 \n        1\n    else if n<10 \n        1\n    else if n<100 \n    \
    \    digits(n/10)*10\n    else if n<1000 \n        digits(n/100)*100\n    else\
    \ if n<10000 \n        digits(n/1000)*1000\n    else if n<100000 \n        digits(n/10000)*10000\n\
    \    else if n<1000000 \n        digits(n/100000)*100000\n    else if n<10000000\
    \ \n        digits(n/1000000)*1000000\n    else if n<100000000 \n        digits(n/10000000)*10000000\n\
    \    else if n<1000000000 \n        digits(n/100000000)*100000000\n    else if\
    \ n<10000000000 \n        digits(n/1000000000)*1000000000\n    else if n<100000000000\
    \ \n        digits(n/10000000000)*10000000000\n    else if n<1000000000000 \n\
    \        digits(n/100000000000)*100000000000\n    else if n<10000000000000 \n\
    \        digits(n/1000000000000)*1000000000000\n    else if n<100000000000000\
    \ \n        digits(n/10000000000000)*10000000000000\n    else if n<1000000000000000\
    \ \n        digits(n/100000000000000)*100000000000000\n    else if n<10000000000000000\
    \ \n        digits(n/1000000000000000)*1000000000000000\n    else if n<100000000000000000\
    \ \n        digits(n/10000000000000000)*10000000000000000\n    else if n<1000000000000000000\
    \ \n        digits(n/100000000000000000)*100000000000000000\n    else if n<10000000000000000000\
    \ \n        digits(n/1000000000000000000)*1000000000000000000\n    else if n<100000000000000000000\
    \ \n        digits(n/10000000000000000000)*10000000000000000000\n    else if n<1000000000000000000000\
    \ \n        digits(n/100000000000000000000)*100000000000000000000\n    else if\
    \ n<10000000000000000000000 \n        digits(n/1000000000000000000000)*1000000000000000000000\n\
    \    else if n<100000000000000000000000 \n        digits(n/10000000000000000000000)*10000000000000000000000\n\
    \    else if n<1000000000000000000000000 \n        digits(n/100000000000000000000000)*100000000000000000000000\n\
    \    else if n<10000000000000000000000000 \n        digits(n/1000000000000000000000000",
  "    if n==0 \n        0\n    else if n==1 \n        1\n    else if n%2==0 \n  \
    \      digits(n/2)\n    else \n        digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the product of the digits of an integer.\nFor example,\
    \ digits(123) = 123 = 1 * 2 * 3\nWrite a function that returns the sum of the\
    \ digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite a function\
    \ that returns the product of the digits of an integer.\nFor example, digits(123)\
    \ = 123 = 1 * 2 * 3\nWrite a function that returns the sum of the digits of an\
    \ integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns\
    \ the product of the digits of an integer.\nFor example, digits(123) = 123 = 1\
    \ * 2 * 3", "    if n<10 then return n\n    digits(n/10)\n    return n*(n%10 +\
    \ digits(n%10))\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the digits()\
    \ function you wrote earlier.", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n < 10 \n        return n\n    else if n % 2 == 0 \n        return\
    \ digits(n / 2)\n    else \n        return digits(n / 2) * 3 + 1\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.", "    if n==0\
    \ \n        0\n    else if n%2==1 \n        digits(n/2)\n    else \n        digits(n/2)*3\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the even digits in a given\
    \ number.", "    if n==0 \n        0\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise\nWrite a function digits_sum(n::Int64)::Int64\
    \ that returns the sum of the digits in the number n.", "    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n < 10 \n        return n\n   \
    \ else if n % 2 == 0 \n        return digits(n / 2) * digits(n / 2)\n    else\
    \ \n        return digits(n / 2) * digits(n / 2) + digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of the number n.", "    if n==0\
    \ then return 0\n    else if n<0 then return 0\n    else if n%2==1 then return\
    \ n*digits(n-1)\n    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of all the digits in the number n.", "    if n==0 then return 0\n    else if\
    \ n%2==1 then return n*digits(n/2)\n    else return n*digits(n/2)+1\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nAssume that the integer does not contain any leading\
    \ zeroes.\nAssume that the integer is positive.", "    if n<0 \n        error(\"\
    n must be positive\")\n    else if n==0 \n        error(\"n must be positive\"\
    )\n    else if n==1 \n        return 1 \n    else \n        return n*digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to solve this problem.", "    if n==0 \n        return 0 \n    else \n     \
    \   return digits(n-1)*(n%10%2)+(n%10%2)*digits(n%10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(1234) = 1 + 2 + 3 + 4 = 10.\n\
    Hint: Use a recursive function.", "    if n==0 \n        0\n    else if n%2==0\
    \ \n        digits(n/2)\n    else\n        digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the digits() function you defined above.", "    if n<0 \n        error(\"\
    n must be positive\")\n    else if n==0 \n        1\n    else if n==1 \n     \
    \   1\n    else if n%2==0 \n        digits(n/2)\n    else \n        digits(n/2)*10\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2\
    \ \\times ...\n$$\nFor example, \n$$\n5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120\n$$\nWrite a function that returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times\
    \ n-2 \\times ...\n$$\nFor example, \n$$\n5! = 5 \\times 4 \\times 3 \\times 2\
    \ \\times 1 = 120\n$$\nHint: use recursion.", "    if n==0 \n        0\n    else\n\
    \        digits(n/10)*10+(n%10)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this problem.", "    if n < 0 \n  \
    \      error(\"n must be positive\")\n    else if n < 10 \n        return n\n\
    \    else if n < 100\n        return n * 2\n    else if n < 1000\n        return\
    \ n * 3\n    else if n < 10000\n        return n * 4\n    else if n < 100000\n\
    \        return n * 5\n    else if n < 1000000\n        return n * 6\n    else\
    \ if n < 10000000\n        return n * 7\n    else if n < 100000000\n        return\
    \ n * 8\n    else if n < 1000000000\n        return n * 9\n    else if n < 10000000000\n\
    \        return n * 10\n    else if n < 100000000000\n        return n * 11\n\
    \    else if n < 1000000000000\n        return n * 12\n    else if n < 10000000000000\n\
    \        return n * 13\n    else if n < 100000000000000\n        return n * 14\n\
    \    else if n < 1000000000000000\n        return n * 15\n    else if n < 10000000000000000\n\
    \        return n * 16\n    else if n < 100000000000000000\n        return n *\
    \ 17\n    else if n < 1000000000000000000\n        return n * 18\n    else if\
    \ n < 10000000000000000000\n        return n * 19\n    else if n < 100000000000000000000\n\
    \        return n * 20\n    else if n < 1000000000000000000000\n        return\
    \ n * 21\n    else if n < 10000000000000000000000\n        return n * 22\n   \
    \ else if n < 100000000000000000000000\n        return n * 23\n    else if n <\
    \ 1000000000000000000000000\n        return n * 24\n    else if n < 10000000000000000000000000\n\
    \        return n * 25\n    else if n < 100000000000000000000000000\n        return\
    \ n * 26\n    else if n < 1000000000000000000000000000\n        return n * 27\n\
    \    else if n < 10000000000000000000000000000\n        return n * 28\n    else\
    \ if n < 100000000000000000000000000000\n        return n * 29\n    else if n\
    \ < 1000000000000000000000000000000\n        return n * 30\n    else if n < 10000000000000000000000000000000\n\
    \        return n * 31\n    else if n < 100000000000000000000000000000000\n  \
    \      return n * 32\n    else if n < 1000000000000000000000000000000000\n   \
    \     return n * 33\n    else if n < 10000000000000000000000000000000000\n   \
    \     return n * 34\n    else if n < 100000000000000000000000000000000000\n  \
    \      return n * 35\n    else if n < 1000000000000000000000000000000000000\n\
    \        return n * 36\n    else if n < 10000000000000000000000000000000000000\n\
    \        return n * 37\n    else if n < 100000000000000000000000000000000000000\n\
    \        return n * 38\n    else if n < 1000000000000000000000000000000000000000\n\
    \        return n * 39\n    else if n < 10000000000000000000000000000000000000000\n\
    \        return n * 40\n    else if n < 100000000000000000000000000000000000000000\n\
    \        return n * 41\n    else if n < 100", "    if n==0 then return 0\n   \
    \ else if n%2==0 then return n*digits(n/2)\n    else return n*digits(n-1)\nend\n\
    </cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the product of the digits of an integer.",
  "    if n<10 then return n\n    else return digits(n/10) * 10 + n % 10\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the even digits in a number.", "    if\
    \ n<10 then return n\n    else return digits(n/10) * 10 + n % 10\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits()", "    if n < 0\
    \ \n        error(\"n must be positive\")\n    else if n < 10 \n        return\
    \ n\n    else if n % 2 == 0 \n        return digits(n / 2)\n    else \n      \
    \  return digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function called digits_sum that\
    \ returns the sum of all the odd digits in a given number.", "    if n==0 \n \
    \       return 0 \n    else \n        return n % 10 * digits(n // 10)\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the even digits in a number.", "    if\
    \ n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n       \
    \ 0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 =\
    \ 6\nHint: You can use the function digits to solve this exercise.", "    if n<0\
    \ \n        error(\"n must be positive\")\n    else if n==0 \n        1\n    else\
    \ if n==1 \n        1\n    else if n==2 \n        2\n    else if n<10 \n     \
    \   digits(n/10)*10\n    else if n<100 \n        digits(n/10)*10+digits(n%10)\n\
    \    else if n<1000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)\n   \
    \ else if n<10000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)\n\
    \    else if n<100000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)\n\
    \    else if n<1000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)\n\
    \    else if n<10000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)\n\
    \    else if n<100000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)\n\
    \    else if n<1000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)\n\
    \    else if n<10000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)+digits(n%1000000000)\n\
    \    else if n<100000000000 \n        digits(n/10)*10+digits(n%10)+digits(", " \
    \   if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n      \
    \  error(\"n must be positive\")\n    else if n==1 \n        1\n    else if n==2\
    \ \n        2\n    else if n<10 \n        digits(n/10)*10+n/10\n    else if n%2==0\
    \ \n        digits(n/2)*10+n/2\n    else \n        digits(n/2)*10+n/2\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the factorial of a given positive integer n.\nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n == 0 \n        0\n\
    \    else \n        digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n == 0 \n        0\n    else \n     \
    \   digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of all even digits in a given number.", "    if n < 0 \n        error(\"n must\
    \ be positive\")\n    else if n < 10 \n        return n\n    else if n % 2 ==\
    \ 0 \n        return digits(n / 2)\n    else \n        return digits(n / 2) *\
    \ 3 + 1\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of all integers up to and including\
    \ n.\nFor example, sumupto(10) should return 55.", "    if n==0 \n        0\n\
    \    else if n%2==0 \n        digits(n/2)\n    else\n        digits(n/2)*10\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(1234) should return 0 + 1 + 2 + 3 + 4 = 10.", "    if n==0\
    \ \n        0\n    else if n%2==0 \n        digits(n/2)\n    else \n        digits(n/2)*3\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of all the numbers from 1 to\
    \ n.\nFor example, sum_of_numbers(10) = 55.", "    if n==0 \n        0\n    else\n\
    \        digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 then return 0\n    if n<0 then return\
    \ 0\n    if n<10 then return n\n    digits(n//10)\n    return n*digits(n%10)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example:\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n\
    >>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n\
    0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n\
    15\n>>> digits(-12345)\n-5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n\
    -5\n>>> digits(0)\n0\n>>> digits(12345)\n15\n>>> digits(-12345)\n-5\n>>> digits(0)",
  "    if n < 10 \n        return n\n    else \n        return digits(n / 10) * 10\
    \ + n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the digits()\
    \ function you wrote earlier.", "    if n==0 \n        return 0 \n    else if\
    \ n%2==0 \n        return n*digits(n/2) \n    else \n        return digits(n/2)*10\
    \ \nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the even digits in a given\
    \ number. For example:\n>>> digits(1)\n1\n>>> digits(4)\n0\n>>> digits(235)\n\
    15\n>>> digits(123)\n6\n>>> digits(-2)\n-2\n>>> digits(0)\n0\n>>> digits(-0)\n\
    0\n>>> digits(-4)\n-4\n>>> digits(-5)\n-5\n>>> digits(-6)\n-6\n>>> digits(-7)\n\
    -7\n>>> digits(-8)\n-8\n>>> digits(-9)\n-9\n>>> digits(-10)\n-10\n>>> digits(-11)\n\
    -11\n>>> digits(-12)\n-12\n>>> digits(-13)\n-13\n>>> digits(-14)\n-14\n>>> digits(-15)\n\
    -15\n>>> digits(-16)\n-16\n>>> digits(-17)\n-17\n>>> digits(-18)\n-18\n>>> digits(-19)\n\
    -19\n>>> digits(-20)\n-20\n>>> digits(-21)\n-21\n>>> digits(-22)\n-22\n>>> digits(-23)\n\
    -23\n>>> digits(-24)\n-24\n>>> digits(-25)\n-25\n>>> digits(-26)\n-26\n>>> digits(-27)\n\
    -27\n>>> digits(-28)\n-28\n>>> digits(-29)\n-29\n>>> digits(-30)\n-30\n>>> digits(-31)\n\
    -31\n>>> digits(-32)\n-32\n>>> digits(-33)\n-33\n>>> digits(-34)\n-34\n>>> digits(-35)\n\
    -35\n>>> digits(-36)\n-36\n>>> digits(-37)\n-37\n>>> digits(-38)\n-38\n>>> digits(-39)\n\
    -39\n>>> digits(-40)\n-40\n>>> digits(-41)\n-41\n>>> digits(-42)\n-42\n>>> digits(-43)\n\
    -43\n>>> digit", "    if n < 0 \n        error(\"n must be positive\")\n    else\
    \ if n < 10 \n        return n\n    else if n % 2 == 0 \n        return digits(n\
    \ / 2)\n    else \n        return digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ Use a while loop to keep adding digits to the sum.", "    if n==0 \n       \
    \ return 0 \n    else \n        return n % 10 * digits(n / 10) \nend\n</cell>\n\
    <code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the even digits in a given number.",
  "    if n==0 \n        0\n    else if n%2==0 \n        digits(n/2)\n    else\n \
    \       digits(n/2)*3\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.", "    if n==0 then return 0\n    else if n%2==1 then return\
    \ n*digits(n/2)\n    else return n*digits(n/2)+1\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of all the numbers from 1 to n.\nFor example, sum_of_numbers(10) = 55.", " \
    \   if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n  \
    \      0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.", "    if n==0 \n        return 0 \n    else if n%2==0 \n   \
    \     return digits(n/2) \n    else \n        return digits(n/2)*3\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of all the even digits in a given number.",
  "    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function named digits that returns the product of the even\
    \ digits in a given number.", "    if n==0 \n        0\n    else if n%2==0 \n\
    \        digits(n/2)\n    else\n        digits(n-1)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<code language=julia-1.0>\ndigits(235000)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(235) returns 3 + 5 = 8, and digits(23500) returns 3 + 5 +\
    \ 0 = 8.", "    if n<0 \n        error(\"n must be positive\")\n    else if n==0\
    \ \n        1\n    else if n==1 \n        1\n    else if n==2 \n        2\n  \
    \  else if n==3 \n        3\n    else if n==4 \n        4\n    else if n==5 \n\
    \        5\n    else if n==6 \n        6\n    else if n==7 \n        7\n    else\
    \ if n==8 \n        8\n    else if n==9 \n        9\n    else if n==10 \n    \
    \    10\n    else if n==11 \n        11\n    else if n==12 \n        12\n    else\
    \ if n==13 \n        13\n    else if n==14 \n        14\n    else if n==15 \n\
    \        15\n    else if n==16 \n        16\n    else if n==17 \n        17\n\
    \    else if n==18 \n        18\n    else if n==19 \n        19\n    else if n==20\
    \ \n        20\n    else if n==21 \n        21\n    else if n==22 \n        22\n\
    \    else if n==23 \n        23\n    else if n==24 \n        24\n    else if n==25\
    \ \n        25\n    else if n==26 \n        26\n    else if n==27 \n        27\n\
    \    else if n==28 \n        28\n    else if n==29 \n        29\n    else if n==30\
    \ \n        30\n    else if n==31 \n        31\n    else if n==32 \n        32\n\
    \    else if n==33 \n        33\n    else if n==34 \n        34\n    else if n==35\
    \ \n        35\n    else if n==36 \n        36\n    else if n==37 \n        37\n\
    \    else if n==38 \n        38\n    else if n==39 \n        39\n    else if n==40\
    \ \n        40\n    else if n==41 \n        41\n    else if n==42 \n        42\n\
    \    else if n==43 \n        43\n    else if n==44 \n        44\n    else if n==45\
    \ \n        45\n    else if n==46 \n        46\n    else if n==47 \n        47\n\
    \    else if n==48 \n        48\n    else ", "    if n<10 then return n\n    else\
    \ return digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of all the numbers from 1 to n.\nFor example, sum1to4(10) should return 55.",
  "    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n    else\
    \ if n%2==0 \n        return digits(n/2) \n    else \n        return digits(n/2)*3\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to do this.", "    if n<10 then return n\n    if n%2==0 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\n    For example:\n    >>> digits(1234)\n    10\n\
    \    >>> digits(-1234)\n    -10\n    \"\"\"", "    if n < 0 \n        error(\"\
    n must be positive\")\n    else if n == 0 \n        0\n    else if n % 2 == 0\
    \ \n        digits(n / 2)\n    else \n        digits(n / 2) * 3 + 1\nend\n</cell>\n\
    <code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\ndigits(4)\n\
    </cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.", "    if n<0\
    \ \n        return 0 \n    else if n==0 \n        return 1 \n    else if n%2==0\
    \ \n        return digits(n/2) \n    else \n        return digits(n-1)*3+1\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ 1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else if n%3==0\
    \ \n        digits(n/3)*3\n    else if n%5==0 \n        digits(n/5)*5\n    else\
    \ \n        digits(n/5)*5\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        0\n    else if n==1 \n\
    \        1\n    else if n%2==0 \n        digits(n/2)\n    else \n        digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function called digits_sum that returns the sum of the digits\
    \ of the number n.", "    if n<0 \n        error(\"n must be positive\")\n   \
    \ else if n==0 \n        1\n    else if n==1 \n        1\n    else if n%2==0 \n\
    \        digits(n/2)\n    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<code language=julia-1.0>\ndigits(235000)\n</cell>\n<code\
    \ language=julia-1.0>\ndigits(235001)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the sum of all the digits in an integer.\nFor example, digits(235)\
    \ returns 15, and digits(235000) returns 50.", "    if n==0 then return 0 \n \
    \   else if n%2==0 then return n*digits(n/2)\n    else return n*digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of all the numbers from 1 to\
    \ n.\nFor example, sum_of_numbers(10) = 55.", "    if n<0 \n        return 0 \n\
    \    else if n==0 \n        return 1 \n    else if n%2==0 \n        return digits(n/2)\
    \ \n    else \n        return digits(n/2)*3\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n == 0 \n        0\n    else if n % 2\
    \ == 1 \n        digits(n/2)\n    else\n        digits(n/2)*10\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.",
  "    if n==0 \n        0\n    else \n        digits(n/10) * 10 + n % 10\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function digits_sum(n::Int64)::Int64 that returns the sum of all the odd\
    \ digits of n.", "    if n<0 \n        error(\"n must be positive\")\n    else\
    \ if n==0 \n        1\n    else if n==1 \n        1\n    else if n%2==0 \n   \
    \     digits(n/2)\n    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nWrite a function that returns the ",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ error(\"n must be positive\")\n    else if n==1 \n        return 1 \n    else\
    \ \n        return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number. For example, digits(235) should return\
    \ 15 (3 * 5).", "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n *\
    \ digits(n / 2) : digits(n / 2)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to get the individual digits of a number.",
  "    if n<10 \n        return n\n    else if n<100 \n        return digits(n/10)*10\
    \ + digits(n%10)\n    else if n<1000 \n        return digits(n/100)*100 + digits(n%100)\n\
    \    else if n<10000 \n        return digits(n/1000)*1000 + digits(n%1000)\n \
    \   else if n<100000 \n        return digits(n/10000)*10000 + digits(n%10000)\n\
    \    else if n<1000000 \n        return digits(n/100000)*100000 + digits(n%100000)\n\
    \    else if n<10000000 \n        return digits(n/1000000)*1000000 + digits(n%1000000)\n\
    \    else if n<100000000 \n        return digits(n/10000000)*10000000 + digits(n%10000000)\n\
    \    else if n<1000000000 \n        return digits(n/100000000)*100000000 + digits(n%100000000)\n\
    \    else if n<10000000000 \n        return digits(n/1000000000)*1000000000 +\
    \ digits(n%1000000000)\n    else if n<100000000000 \n        return digits(n/10000000000)*10000000000\
    \ + digits(n%10000000000)\n    else if n<1000000000000 \n        return digits(n/100000000000)*100000000000\
    \ + digits(n%100000000000)\n    else if n<10000000000000 \n        return digits(n/1000000000000)*1000000000000\
    \ + digits(n%1000000000000)\n    else if n<100000000000000 \n        return digits(n/10000000000000)*10000000000000\
    \ + digits(n%10000000000000)\n    else if n<1000000000000000 \n        return\
    \ digits(n/100000000000000)*100000000000000 + digits(n%100000000000000)\n    else\
    \ if n<10000000000000000 \n        return digits(n/1000000000000000)*10000000000000000\
    \ + digits(n%1000000000000000)\n    else if n<100000000000000000 \n        return\
    \ digits(n/10000000000000000)*100000000000000000 + digits(n%10000000000000000)\n\
    \    else if n<1000000000000000000 \n        return digits(n/100000000000000000)*100000000000000000\
    \ + digits(n%100000000000000000)\n    else if n<10000000000000000000 \n      \
    \  return digits(n/1000000000000000000)*1000000000000000000 + digits(n%1000000000000000000)\n\
    \    else if n<100000000000000000000 \n        return digits(n/10000000000000000000)*10000000000000000000\
    \ + digits(n%", "    if n<10 \n        return n\n    else \n        return digits(n/10)\
    \ * 10 + n % 10\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the digits() function you wrote earlier.", "    if n<0 \n        error(\"n must\
    \ be positive\")\n    else if n==0 \n        1\n    else if n==1 \n        1\n\
    \    else if n==2 \n        2\n    else if n<10 \n        digits(n/10)*10+digits(n%10)\n\
    \    else \n        digits(n/10)*10+digits(n%10)*10\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n<10 then return n\n    else return digits(n/10)\
    \ * 10 + n % 10\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n\
    <code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the even digits\
    \ in a number.", "    if n==0 \n        0\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the even digits in a given number.", "    if n<0 \n        return 0 \n  \
    \  else if n==0 \n        return 1 \n    else if n%2==0 \n        return digits(n/2)\
    \ \n    else \n        return digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the even digits in a number.", "    if n < 0 \n        error(\"n must be\
    \ positive\")\n    else if n == 0 \n        0\n    else if n % 2 == 0 \n     \
    \   digits(n / 2)\n    else \n        digits(n / 2) * digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.", "    if n<0 \n\
    \        error(\"n must be positive\")\n    else if n==0 \n        1\n    else\
    \ if n==1 \n        1\n    else if n%2==0 \n        digits(n/2)\n    else \n \
    \       digits(n/2)*3\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ returns the product of the digits of an integer.\nFor example, digits(123) =\
    \ 123, and digits(-4) = 4.", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n < 10 \n        return n\n    else if n % 2 == 0 \n        return\
    \ digits(n / 2)\n    else \n        return digits(n / 2) * 3\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum of the\
    \ digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n    Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    Write a function that returns the sum", " \
    \   if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n  \
    \      0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function digits(n::Int64) which returns the\
    \ product of the digits of the number n.", "    if n==0 \n        0\n    else\n\
    \        digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()", "    if n<10 then return n\n    else return digits(n/10)*10\
    \ + digits(n%10)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a given\
    \ number.", "    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.", "    if n<10\
    \ then return n\n    if n<100 then return n*10\n    if n<1000 then return n*100\n\
    \    if n<10000 then return n*1000\n    if n<100000 then return n*10000\n    if\
    \ n<1000000 then return n*100000\n    if n<10000000 then return n*1000000\n  \
    \  if n<100000000 then return n*10000000\n    if n<1000000000 then return n*100000000\n\
    \    if n<10000000000 then return n*1000000000\n    if n<100000000000 then return\
    \ n*10000000000\n    if n<1000000000000 then return n*100000000000\n    if n<10000000000000\
    \ then return n*1000000000000\n    if n<100000000000000 then return n*10000000000000\n\
    \    if n<1000000000000000 then return n*100000000000000\n    if n<10000000000000000\
    \ then return n*1000000000000000\n    if n<100000000000000000 then return n*10000000000000000\n\
    \    if n<1000000000000000000 then return n*100000000000000000\n    if n<10000000000000000000\
    \ then return n*1000000000000000000\n    if n<100000000000000000000 then return\
    \ n*10000000000000000000\n    if n<1000000000000000000000 then return n*100000000000000000000\n\
    \    if n<10000000000000000000000 then return n*1000000000000000000000\n    if\
    \ n<100000000000000000000000 then return n*10000000000000000000000\n    if n<1000000000000000000000000\
    \ then return n*100000000000000000000000\n    if n<10000000000000000000000000\
    \ then return n*1000000000000000000000000\n    if n<100000000000000000000000000\
    \ then return n*100000000000000000000000000\n    if n<1000000000000000000000000000\
    \ then return n*1000000000000000000000000000\n    if n<10000000000000000000000000000\
    \ then return n*10000000000000000000000000000\n    if n<100000000000000000000000000000\
    \ then return n*100000000000000000000000000000\n    if n<1000000000000000000000000000000\
    \ then return n*1000000000000000000000000000000\n    if n<10000000000000000000000000000000\
    \ then return n*10000000000000000000000000000000\n    if n<100000000000000000000000000000000\
    \ then return n*100000000000000000000000000000000\n    if n<1000000000000000000000000000000000\
    \ then return n*1000000000000000000000000000000000\n    if n<10000000000000000000000000000000000\
    \ then return n*10000000000000000000000000000000000\n    if n<100000000000000000000000000000000000\
    \ then return n*100000000000000000000000000000000000\n    if n<1000000000000000000000000000000000000\
    \ then return n*1000000000000000000000000000000000000\n    if n<10000000000000000000000000000000000000\
    \ then return n*10000000000000000000000000000000000000\n    if n<100000000000000000000000000000000000000\
    \ then return n*100000000000000000000000000000000000000\n    if n<1000000000000000000",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ error(\"n must be positive\")\n    else if n==1 \n        1\n    else \n   \
    \     digits(n-1)*(n%2==1?1:0)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n==0 then return 0 \n    if\
    \ n<0 then return 0 \n    if n==1 then return 1 \n    if n%2==0 then return digits(n/2)\
    \ \n    else return digits(n-1)*digits(n//2) \nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the even digits in a given number.", "    if n < 10 \n        return n\n\
    \    else \n        return digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        return 0 \n    else \n\
    \        return n % 10 * digits(n / 10) \nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n == 0 \n        0\n    else \n     \
    \   digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this problem.", "    if n < 0 \n  \
    \      error(\"n must be positive\")\n    else if n == 0 \n        0\n    else\
    \ if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n / 2) * 3\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the digits of an integer.",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ 1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else if n==3\
    \ \n        3\n    else if n==4 \n        6\n    else if n==5 \n        12\n \
    \   else if n==6 \n        18\n    else if n==7 \n        24\n    else if n==8\
    \ \n        36\n    else if n==9 \n        48\n    else if n==10 \n        60\n\
    \    else if n==11 \n        72\n    else if n==12 \n        84\n    else if n==13\
    \ \n        96\n    else if n==14 \n        108\n    else if n==15 \n        120\n\
    \    else if n==16 \n        132\n    else if n==17 \n        144\n    else if\
    \ n==18 \n        156\n    else if n==19 \n        168\n    else if n==20 \n \
    \       180\n    else if n==21 \n        192\n    else if n==22 \n        204\n\
    \    else if n==23 \n        206\n    else if n==24 \n        208\n    else if\
    \ n==25 \n        210\n    else if n==26 \n        212\n    else if n==27 \n \
    \       214\n    else if n==28 \n        216\n    else if n==29 \n        218\n\
    \    else if n==30 \n        220\n    else if n==31 \n        222\n    else if\
    \ n==32 \n        224\n    else if n==33 \n        226\n    else if n==34 \n \
    \       228\n    else if n==35 \n        230\n    else if n==36 \n        232\n\
    \    else if n==37 \n        234\n    else if n==38 \n        236\n    else if\
    \ n==39 \n        238\n    else if n==40 \n        240\n    else if n==41 \n \
    \       242\n    else if n==42 \n        244\n    else if n==43 \n        246\n\
    \    else if n==44 \n        248\n    else if n==45 \n        250\n    else if\
    \ n==46 \n        252\n    else if n==47 \n        254\n    else if n==48 \n \
    \       256", "    if n < 0 \n        error(\"n must be positive\")\n    else\
    \ if n < 10 \n        return n\n    else if n < 100 \n        return n * 10\n\
    \    else if n < 1000 \n        return n * 100\n    else if n < 10000 \n     \
    \   return n * 1000\n    else if n < 100000 \n        return n * 10000\n    else\
    \ if n < 1000000 \n        return n * 100000\n    else if n < 10000000 \n    \
    \    return n * 1000000\n    else if n < 100000000 \n        return n * 10000000\n\
    \    else if n < 1000000000 \n        return n * 100000000\n    else if n < 10000000000\
    \ \n        return n * 1000000000\n    else if n < 100000000000 \n        return\
    \ n * 10000000000\n    else if n < 1000000000000 \n        return n * 100000000000\n\
    \    else if n < 10000000000000 \n        return n * 1000000000000\n    else if\
    \ n < 100000000000000 \n        return n * 10000000000000\n    else if n < 1000000000000000\
    \ \n        return n * 100000000000000\n    else if n < 10000000000000000 \n \
    \       return n * 1000000000000000\n    else if n < 100000000000000000 \n   \
    \     return n * 10000000000000000\n    else if n < 1000000000000000000 \n   \
    \     return n * 100000000000000000\n    else \n        return n * 1000000000000000000\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(23500)\n</cell>\n<code language=julia-1.5>\ndigits(235000)\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(235000)\n</cell>\n<code language=julia-1.5>\ndigits(235000)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235000)\n</cell>\n<code language=julia-1.5>\n\
    digits(235000)\n</cell>\n<code language=julia-1.5>\ndigits(235000)\n</cell>\n\
    <code language=julia-1.5>\ndigits(235000)\n</cell>\n<code language=julia-1.5>\n\
    digits(235000)\n</cell>\n<code language=julia-1.5>\ndigits(235000)\n</cell>\n\
    <code language=julia-1.5>\ndigits(235000)\n</cell>\n<code language=julia-1.5>\n\
    digits(235000)\n</cell>\n<code language=julia-1.5>\ndigits(235000)\n</cell>\n\
    <code language=julia-1.5>\ndigits(235000)", "    if n==0 \n        0\n    else\n\
    \        digits(n-1)*(n%2)*(n%2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(12345)\
    \ = 1 + 2 + 3 + 4 + 5 = 15.", "    if n == 0 \n        0\n    else\n        n\
    \ % 2 == 0 ? n * digits(n / 2) : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        error(\"n must be positive\")\n    else if n==1\
    \ \n        return n\n    else if n<10 \n        return n\n    else if n<100 \n\
    \        return n*10\n    else if n<1000 \n        return n*100\n    else if n<10000\
    \ \n        return n*1000\n    else if n<100000 \n        return n*10000\n   \
    \ else if n<1000000 \n        return n*100000\n    else if n<10000000 \n     \
    \   return n*1000000\n    else if n<100000000 \n        return n*10000000\n  \
    \  else if n<1000000000 \n        return n*100000000\n    else if n<10000000000\
    \ \n        return n*1000000000\n    else if n<100000000000 \n        return n*10000000000\n\
    \    else if n<1000000000000 \n        return n*100000000000\n    else if n<10000000000000\
    \ \n        return n*1000000000000\n    else if n<100000000000000 \n        return\
    \ n*10000000000000\n    else if n<1000000000000000 \n        return n*100000000000000\n\
    \    else if n<10000000000000000 \n        return n*1000000000000000\n    else\
    \ if n<100000000000000000 \n        return n*10000000000000000\n    else if n<1000000000000000000\
    \ \n        return n*100000000000000000\n    else if n<10000000000000000000 \n\
    \        return n*1000000000000000000\n    else if n<100000000000000000000 \n\
    \        return n*10000000000000000000\n    else if n<1000000000000000000000 \n\
    \        return n*100000000000000000000\n    else if n<10000000000000000000000\
    \ \n        return n*1000000000000000000000\n    else if n<100000000000000000000000\
    \ \n        return n*10000000000000000000000\n    else if n<1000000000000000000000000\
    \ \n        return n*100000000000000000000000\n    else if n<10000000000000000000000000\
    \ \n        return n*1000000000000000000000000\n    else if n<100000000000000000000000000\
    \ \n        return n*100000000000000000000000000\n    else if n<1000000000000000000000000000\
    \ \n        return n*1000000000000000000000000000\n    else if n<10000000000000000000000000000\
    \ \n        return n*10000000000000000000000000000\n    else if n<100000000000000000000000000000\
    \ \n        return n*100000000000000000000000000000\n    else if n<1000000000000000000000000000000\
    \ \n        return n*1000000000000000000000000000000\n    else if n<10000000000000000000000000000000\
    \ \n        return n*10000000000000000000000000000000\n    else if n<100000000000000000000000000000000\
    \ \n        return n*100000000000000000000000000000000\n    else if n<", "   \
    \ if n<10 \n        return n\n    else if n%2 == 0 \n        return digits(n/2)\n\
    \    else \n        return digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to get the digits of an integer.", "    if n==0\
    \ \n        return 0 \n    else \n        return digits(n//10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.",
  "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2) : digits(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given positive integer\
    \ n.\nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.\nHint:\
    \ use the factorial function defined above.", "    if n == 0 \n        return\
    \ 0 \n    else \n        return n % 10 * digits(n / 10) \nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nHint: Use a recursive function.", "    if n==0 \n        0\n\
    \    else\n        digits(n/10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\n    For example:\n    >>> digitsum(1)\n    1\n\
    \    >>> digitsum(4)\n    4\n    >>> digitsum(235)\n    10\n    \"\"\"", "   \
    \ if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2) : digits(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a recursive function.", " \
    \   if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n  \
    \      1\n    else if n % 2 == 1 \n        0\n    else \n        digits(n / 2)\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with `digits(0)`.\n<|/ c\
    \ |>\n<| c |>\nThanks for pointing that out. I've updated the answer.\n<|/ c |>\n\
    <| a tags=recursion,haskell |>\n<code>\nimport Data.List", "    if n<10 then return\
    \ n\n    else return digits(n/10)*10 + digits(n%10)\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        return 0 \n    else if\
    \ n%2==0 \n        return digits(n/2) \n    else \n        return digits(n/2)*10\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given positive integer\
    \ n.\nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.\nHint:\
    \ use factorial function.", "    if n<0 \n        error(\"n must be positive\"\
    )\n    else if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2\
    \ \n        2\n    else if n<10 \n        digits(n/2)\n    else if n<100 \n  \
    \      digits(n/10)\n    else if n<1000 \n        digits(n/100)\n    else if n<10000\
    \ \n        digits(n/1000)\n    else if n<100000 \n        digits(n/10000)\n \
    \   else if n<1000000 \n        digits(n/100000)\n    else if n<10000000 \n  \
    \      digits(n/1000000)\n    else if n<100000000 \n        digits(n/10000000)\n\
    \    else if n<1000000000 \n        digits(n/100000000)\n    else if n<10000000000\
    \ \n        digits(n/1000000000)\n    else if n<100000000000 \n        digits(n/10000000000)\n\
    \    else if n<1000000000000 \n        digits(n/100000000000)\n    else if n<10000000000000\
    \ \n        digits(n/1000000000000)\n    else if n<100000000000000 \n        digits(n/10000000000000)\n\
    \    else if n<1000000000000000 \n        digits(n/100000000000000)\n    else\
    \ if n<10000000000000000 \n        digits(n/1000000000000000)\n    else if n<100000000000000000\
    \ \n        digits(n/10000000000000000)\n    else if n<1000000000000000000 \n\
    \        digits(n/100000000000000000)\n    else if n<10000000000000000000 \n \
    \       digits(n/1000000000000000000)\n    else if n<100000000000000000000 \n\
    \        digits(n/10000000000000000000)\n    else if n<1000000000000000000000\
    \ \n        digits(n/100000000000000000000)\n    else if n<10000000000000000000000\
    \ \n        digits(n/1000000000000000000000)\n    else if n<100000000000000000000000\
    \ \n        digits(n/10000000000000000000000)\n    else if n<1000000000000000000000000\
    \ \n        digits(n/100000000000000000000000)\n    else if n<10000000000000000000000000\
    \ \n        digits(n/1000000000000000000000000)\n    else if n<100000000000000000000000000\
    \ \n        digits(n/10000000000000000000000000)\n    else if n<1000000000000000000000000000\
    \ \n        digits(n/100000000000000000000000000)\n    else if n<10000000000000000000000000000\
    \ \n        digits(n/1000000000000000000", "    if n==0 \n        0\n    else\
    \ if n%2==0 \n        digits(n/2)\n    else \n        digits(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to get the digits\
    \ of n.", "    if n<0 \n        error(\"n must be positive\")\n    else if n==0\
    \ \n        1\n    else if n==1 \n        1\n    else if n==2 \n        2\n  \
    \  else if n%3==0 \n        digits(n/3)*3\n    else \n        digits(n/3)*3+digits(n%3)\n\
    end\n</cell>\n<code language=julia-1.1>\ndigits(-4)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the product of the even digits in a number.",
  "    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n   \
    \     0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the digits of an integer.\nFor example, digits(1234) = 4 + 3 + 2\
    \ + 1 = 10.\nHint: Use digits(n) to get the digits of n.", "    if n < 0 \n  \
    \      error(\"n must be positive\")\n    else if n == 0 \n        0\n    else\
    \ if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n / 2) * 3\
    \ + 1\nend\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of all the odd digits in a given\
    \ number.", "    if n < 0 \n        error(\"n must be positive\")\n    else if\
    \ n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nThe factorial of a number is the product of all the numbers from 1 to that\
    \ number. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a recursive\
    \ function factorial(n) that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if n==0 \n        0\n    elseif\
    \ n==1 \n        1\n    elseif n%2==0 \n        digits(n/2)\n    else\n      \
    \  digits(n/2)*3\n    end\nend\n</cell>\n<code language=julia-1.4>\ndigits(1)\n\
    </cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the digits of an integer.\nFor example, digits(1234) should return 1 * 2\
    \ * 3 * 4.", "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0\
    \ then return n*digits(n/2)\n    return n*digits(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n==0 then return 0\n    if n<0\
    \ then return 0\n    if n==1 then return 1\n    if n<10 then return n\n    digits(n//10)*10\
    \ + digits(n%10)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n\
    <code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a number.", "    if n==0 \n        0\n    else if n%2==0 \n      \
    \  digits(n/2)\n    else \n        digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        return 0 \n    else \n\
    \        return digits(n//10)*10 + n % 10\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.", "    if n==0 \n        return 0 \n    else if\
    \ n%2==0 \n        return n*digits(n/2) \n    else \n        return n*digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(1234) = 1 + 2 + 3 + 4 = 10.\nAssume that the integer does\
    \ not contain any leading zeros, except the number 0 itself.\nAssume that the\
    \ integer is positive.", "    if n<0 \n        error(\"n must be positive\")\n\
    \    else if n==0 \n        error(\"n must be positive\")\n    else if n==1 \n\
    \        return 1\n    else if n%2==0 \n        return n*digits(n-1)\n    else\
    \ \n        return digits(n-1)*n\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of all the numbers from 1 to n.", "    if n<0 \n        return 0 \n    else\
    \ if n==0 \n        return 1 \n    else if n%2==0 \n        return digits(n/2)\
    \ \n    else \n        return digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n < 0 \n        error(\"n must\
    \ be positive\")\n    else if n < 10 \n        return n\n    else if n % 2 ==\
    \ 0 \n        return digits(n / 2)\n    else \n        return digits(n / 2) *\
    \ 3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.",
  "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n       \
    \ error(\"n must be positive\")\n    else if n==1 \n        return 1\n    else\
    \ \n        return digits(n//2)*(n % 2)*digits(n//2)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of the number n.", "    if n<0 \n        return 0 \n    else \n\
    \        return n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n < 0 \n        error(\"n must\
    \ be positive\")\n    else if n < 10 \n        return n\n    else if n % 2 ==\
    \ 0 \n        return digits(n / 2)\n    else \n        return digits(n / 2) *\
    \ 10 + n % 2\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.", "    if n==0 \n        return 0 \n    else if n==1\
    \ \n        return 1 \n    else if n%2==0 \n        return n*digits(n/2) \n  \
    \  else \n        return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n==0 \n        0\n    else \n    \
    \    digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 15.", "    if n == 0 \n        0\n    else if n % 2 == 1 \n        digits(n\
    \ / 2)\n    else \n        digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example:\n>>> digits(123)\n6\n>>> digits(-4)\n\
    4\n>>> digits(0)\n0\n>>> digits(-0)\n0\n>>> digits(-10)\n10\n>>> digits(-100)\n\
    100\n>>> digits(1234567890)\n1234567890\n>>> digits(-1234567890)\n1234567890\n\
    >>> digits(123456789012345)\n123456789012345\n>>> digits(-123456789012345)\n-123456789012345\n\
    >>> digits(1234567890123456789)\n1234567890123456789\n>>> digits(-1234567890123456789)\n\
    -1234567890123456789\n>>> digits(12345678901234567890)\n12345678901234567890\n\
    >>> digits(-12345678901234567890)\n-12345678901234567890\n>>> digits(1234567890123456789012345)\n\
    1234567890123456789012345\n>>> digits(-1234567890123456789012345)\n-1234567890123456789012345\n\
    >>> digits(12345678901234567890123456789)\n12345678901234567890123456789\n>>>\
    \ digits(-12345678901234567890123456789)\n-12345678901234567890123456789\n>>>\
    \ digits(123456789012345678901234567890)\n123456789012345678901234567890\n>>>\
    \ digits(-123456789012345678901234567890)\n-123456789012345678901234567890\n>>>\
    \ digits(12345678901234567890123456789012345)\n12345678901234567890123456789012345\n\
    >>> digits(-12345678901234567890123456789012345)\n-12345678901234567890123456789012345\n\
    >>> digits(123456789012345678901234567890123456789)\n123456789012345678901234567890123456789\n\
    >>> digits(-123456789012345678901234567890123456789)\n-123456789012345678901234567890123456789\n\
    >>> digits(1234567890123456789012345678901234567890)\n1234567890123456789012345678901234567890\n\
    >>> digits(-1234567890123456789012345678901234567890)\n-1234567890123456789012345678901234567890\n\
    >>> digits(123456789012345678901234567890123456789012345)\n123456789012345678901234567890123456789012345\n\
    >>> digits(-123456789012345678901234567890123456789012345)\n-123456789012345678901234567890123456789012345\n\
    >>> digits(1234567890123456789012345678901234567890123456789)\n1234567890123456789012345678901234567890123456789\n\
    >>> digits(-1234567890123456789012345678901234567890123456789)\n-1234567890123456789012345678901234567890123456789",
  "    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.",
  "    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2) : digits(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to get the digits of a number.", "    if n==0 \n        0\n    else if n%2==0\
    \ \n        digits(n/2)\n    else \n        digits(n/2)*3\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to get the digits\
    \ of n.", "    if n == 0 \n        0\n    else if n % 2 == 1 \n        digits(n\
    \ / 2)\n    else \n        digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of all the digits in an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4\
    \ + 5 = 15", "    if n < 0 \n        error(\"n must be positive\")\n    else if\
    \ n < 10 \n        return n\n    else if n % 2 == 0 \n        return digits(n\
    \ / 2)\n    else \n        return digits(n / 2) * 10 + n % 2\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nHint: Use a recursive function.", "    if n<10 then return\
    \ n\n    else return digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to get the individual digits of a number.",
  "    if n==0 then return 0\n    if n<0 then return 0\n    if n==1 then return 1\n\
    \    if n%2==0 then return n*digits(n/2)\n    return n*digits(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the even digits in a given number.",
  "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n*digits(n/2)\n    return digits(n/2)*10+n%2\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.", "    if n==0 then return 0\n    if n==1\
    \ then return 1\n    if n%2==0 then return n*digits(n/2)\n    return digits(n/2)*10+n%2\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of all integers up to and including\
    \ n.\nFor example, sum_upto(5) should return 15, and sum_upto(9) should return\
    \ 45.", "    if n < 10 then return n\n    digits(n / 10)\n    return n % 10 *\
    \ digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.", "    if n < 0 \n        error(\"n must be positive\")\n   \
    \ else if n < 10 \n        return n\n    else if n % 2 == 0 \n        return digits(n\
    \ / 2) * digits(n / 2)\n    else \n        return digits(n / 2) * digits(n / 2)\
    \ + digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits(n) to get the digits of an integer.", "    if n < 0 \n        error(\"\
    n must be positive\")\n    else if n == 0 \n        0\n    else if n % 2 == 1\
    \ \n        digits(n / 2)\n    else \n        digits(n / 2) * digits(n / 2)\n\
    end\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the sum of the digits of an integer.",
  "    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n   \
    \     0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n        digits(n\
    \ / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the even digits\
    \ in a given number. For example, digits(235) returns 15, and digits(3) returns\
    \ 3.", "    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n\
    \        1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        3\n    else if n==4 \n        4\n    else if n==5 \n     \
    \   5\n    else if n==6 \n        6\n    else if n==7 \n        7\n    else if\
    \ n==8 \n        8\n    else if n==9 \n        9\n    else if n==10 \n       \
    \ 10\n    else if n==11 \n        11\n    else if n==12 \n        12\n    else\
    \ if n==13 \n        13\n    else if n==14 \n        14\n    else if n==15 \n\
    \        15\n    else if n==16 \n        16\n    else if n==17 \n        17\n\
    \    else if n==18 \n        18\n    else if n==19 \n        19\n    else if n==20\
    \ \n        20\n    else if n==21 \n        21\n    else if n==22 \n        22\n\
    \    else if n==23 \n        23\n    else if n==24 \n        24\n    else if n==25\
    \ \n        25\n    else if n==26 \n        26\n    else if n==27 \n        27\n\
    \    else if n==28 \n        28\n    else if n==29 \n        29\n    else if n==30\
    \ \n        30\n    else if n==31 \n        31\n    else if n==32 \n        32\n\
    \    else if n==33 \n        33\n    else if n==34 \n        34\n    else if n==35\
    \ \n        35\n    else if n==36 \n        36\n    else if n==37 \n        37\n\
    \    else if n==38 \n        38\n    else if n==39 \n        39\n    else if n==40\
    \ \n        40\n    else if n==41 \n        41\n    else if n==42 \n        42\n\
    \    else if n==43 \n        43\n    else if n==44 \n        44\n    else if n==45\
    \ \n        45\n    else if n==46 \n        46\n    else if n==47 \n        47\n\
    \    else if n==48 \n        48\n    else "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7uubp5uc.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7uubp5uc.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            +,\n            map(\n                count_distinct_character,\n\
    \                filter(\n                    is_character(string),\n        \
    \            string\n                )\n            )\n        )\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp97_4kc8z.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp97_4kc8z.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: is_character not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmp97_4kc8z.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_4kc8z.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_4kc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp97_4kc8z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: is_character not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp97_4kc8z.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_4kc8z.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_4kc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp97_4kc8z.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: is_character not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmp97_4kc8z.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_4kc8z.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_4kc8z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp97_4kc8z.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: is_character not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmp97_4kc8"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=haskell,string,functional-programming |>\n<| c |>\n`if c.isUpper()`\
    \ can be replaced with `if c.isUppercase()`\n<|/ c |>\n<| c |>\n`if c.isUpper()`\
    \ can be replaced with `if c.isUppercase()`\n<|/ c |>\n<| a tags=haskell,string,functional-programming\
    \ |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1lhb36ed.jl:11\nin expression starting at\
    \ /tmp/tmp1lhb36ed.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptnrpsqav.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmptnrpsqav.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmptnrpsqav.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnrpsqav.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnrpsqav.jl:14\ntest set:\
    \ Error During Test at /tmp/tmptnrpsqav.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmptnrpsqav.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnrpsqav.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnrpsqav.jl:14\ntest set:\
    \ Error During Test at /tmp/tmptnrpsqav.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmptnrpsqav.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnrpsqav.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnrpsqav.jl:14\ntest set:\
    \ Error During Test at /tmp/tmptnrpsqav.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. For example, count_characters(\"\
    abracadabra\") should return {\"a\" => 2, \"b\" => 1, \"c\" => 1, \"d\" => 1,\
    \ \"r\" => 1, \"A\" => 1, \"B\" => 1, \"C\" => 1, \"D\" => 1, \"R\" => 1}.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl28j4ksv.jl:13\nin expression starting at\
    \ /tmp/tmpl28j4ksv.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. For example, if the\
    \ input string is \"Jerry\" the function should return {\"J\" = 1, \"y\" = 1,\
    \ \"r\" = 1, \"e\" = 2}.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnccrz_5t.jl:10\nin expression starting at\
    \ /tmp/tmpnccrz_5t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.len()\n    for character in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - 1\n    return count_distinct_characters\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpasxl5_qf.jl:12\nin expression starting at\
    \ /tmp/tmpasxl5_qf.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.\n        map(\n            x -> \n                if\n \
    \                   x != \"\" \n                    then\n                   \
    \     if\n                            x != \" \" \n                          \
    \  then\n                                if\n                                \
    \    x != \".\" \n                                    then\n                 \
    \                       if\n                                            x != \"\
    !\" \n                                            then\n                     \
    \                           if\n                                             \
    \       x != \"?\" \n                                                    then\n\
    \                                                        if\n                \
    \                                            x != \"-\" \n                   \
    \                                         then\n                             \
    \                                   if\n                                     \
    \                               x != \"_\" \n                                \
    \                                    then\n                                  \
    \                                      if\n                                  \
    \                                          x != \"&\" \n                     \
    \                                                       then\n               \
    \                                                                 if\n       \
    \                                                                            \
    \ x != \"|\" \n                                                              \
    \                      then\n                                                \
    \                                        if\n                                \
    \                                                            x != \"(\" \n   \
    \                                                                            \
    \             then\n                                                         \
    \                                       if\n                                 \
    \                                                                   x != \")\"\
    \ \n                                                                         \
    \                           then\n                                           \
    \                                                             if\n           \
    \                                                                            \
    \                     x != \"[\" \n                                          \
    \                                                                  then\n    \
    \                                                                            \
    \                                if\n                                        \
    \                                                                            x\
    \ != \"]\" \n                                                                \
    \                                                    then\n                  \
    \                                                                            \
    \                          if\n                                              \
    \                                                                            \
    \  x != \"{\" \n                                                             \
    \                                                               then\n       \
    \                                                                            \
    \                                             if\n                           \
    \                                                                            \
    \                             x != \"}\" \n                                  \
    \                                                                            \
    \                      then\n                                                \
    \                                                                            \
    \            if\n                                                            \
    \                                                                            \
    \    x != \"|\" \n                                                           \
    \                                                                            \
    \     then\n                                                                 \
    \                                                                            \
    \   if\n                                                                     \
    \                                                                            \
    \   x != \"&\" \n                                                            \
    \                                                                            \
    \            then\n                                                          \
    \                                                                            \
    \                  if\n                                                      \
    \                                                                            \
    \                          x != \"!\" \n                                     \
    \                                                                            \
    \                                           then\n                           \
    \                                                                            \
    \                                                         if\n               \
    \                                                                            \
    \                                                                         x !=\
    \ \"?\" \n                                                                   \
    \                                                                            \
    \                     then\n                                                 \
    \                                                                            \
    \                                           if\n                             \
    \                                                                            \
    \                                                                   x != \"-\"\
    \ \n                                                                         \
    \                                                                            \
    \                       then\n                                               \
    \                                                                            \
    \                                                     if\n                   \
    \                                                                            \
    \                                                                            \
    \         x != \"_\" \n                                                      \
    \                                                                            \
    \                                                  then\n                    \
    \                                                                            \
    \                                                                            \
    \            if\n                                                            \
    \                                                                            \
    \                                                    x != \"(\" \n           \
    \                                                                            \
    \                                                                            \
    \                         then\n                                             \
    \                                                                            \
    \                                                                       if\n \
    \                                                                            \
    \                                                                            \
    \                                           x != \")\" \n                    \
    \                                                                            \
    \                                                                            \
    \                        then\n                                              \
    \                                                                            \
    \                                                                            \
    \  if\n                                                                      \
    \                                                                            \
    \                                                          x != \"[\" \n     \
    \                                                                            \
    \                                                                            \
    \                                               then\n                       \
    \                                                                            \
    \                                                                            \
    \                                 if\n                                       \
    \                                                                            \
    \                                                                            \
    \                     x != \"]\" \n                                          \
    \                                                                            \
    \                                                                            \
    \                  then\n                                                    \
    \                                                                            \
    \                                                                            \
    \            if\n                                                            \
    \                                                                            \
    \                                                                            \
    \        x != \"{\" \n                                                       \
    \                                                                            \
    \                                                                            \
    \             then\n                                                         \
    \                                                                            \
    \                                                                            \
    \               if\n                                                         \
    \                                                                            \
    \                                                                            \
    \                   x != \"}\" \n                                            \
    \                                                                            \
    \                                                                            \
    \                                then\n                                      \
    \                                                                            \
    \                                                                            \
    \                                          if\n                              \
    \                                                                            \
    \                                                                            \
    \                                                      x != \"|\" \n         \
    \                                                                            \
    \                                                                            \
    \                                                                           then\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            if\n                                                            \
    \                                                                            \
    \                                                                            \
    \                                x != \"&\" \n                               \
    \                                                                            \
    \                                                                            \
    \                                                             then\n         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \           if\n                                                             \
    \                                                                            \
    \                                                                            \
    \                                       x != \"!\" \n                        \
    \                                        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmpfsh9fjow.jl:13\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpfsh9fjow.jl:14\nin expression\
    \ starting at /tmp/tmpfsh9fjow.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxuf69_55.jl:13\nin expression starting at\
    \ /tmp/tmpxuf69_55.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nWrite a function that takes a string and returns the number of\
    \ distinct characters in that string in alphabetical order.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwv5zd1l.jl:10\nin expression starting at\
    \ /tmp/tmpbwv5zd1l.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,count |>\n<| c |>\n`countDistinctChars = foldl\
    \ (\\acc c -> if c.isUpper() then acc + 1 else acc) 0` - this can be written more\
    \ concisely as `countDistinctChars = foldl (\\acc c -> if c.isUpper then acc +\
    \ 1 else acc) 0`.\n<|/ c |>\n<| c |>\n`foldl` is also known as `foldl'`\n<|/ c\
    \ |>\n<| c |>\n`foldl` is also known as `foldl'`\n<|/ c |>\n<| a dscore=4 |>\n\
    A simple solution:\n<code>\ncountDistinctChars :: String -> Int\ncountDistinctChars\
    \ s = length $ filter (\\c -> isUpper c) s\n</code>\n<|/ a tags=string,haskell,count\
    \ |>\n<| c |>\n`filter (\\c -> isUpper c) s` is equivalent to `filter (isUpper)\
    \ s`.\n<|/ c |>\n<| c |>\n`filter (isUpper) s` is equivalent to `filter (\\c ->\
    \ isUpper c) s`.\n<|/ c |>\n<| c |>\n`filter (isUpper) s` is equivalent to `filter\
    \ (\\c -> isUpper c) s`.\n<|/ c |>\n<| a tags=string,haskell,count |>\n<code>\n\
    countDistinctChars :: String -> Int\ncountDistinctChars s = length $ filter (\\\
    c -> isUpper c) s\n</code>\n<|/ a dscore=4 |>\n<| a tags=string,haskell,count\
    \ |>\n<code>\ncountDistinctChars :: String -> Int\ncountDistinctChars s = length\
    \ $ filter (\\c -> isUpper c) s\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n\
    <code>\ncountDistinctChars :: String -> Int\ncountDistinctChars s = length $ filter\
    \ (\\c -> isUpper c) s\n</code>\n<|/ a tags=string,haskell,count |>\n<| a d\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppdx6z3xr.jl:11\nin expression starting at\
    \ /tmp/tmppdx6z3xr.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7uubp5uc.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7uubp5uc.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7uubp5uc.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7uubp5uc.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7uubp5uc.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7uubp5uc.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7uubp5uc.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7uubp5uc.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7uubp5uc.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1q11nmrf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp1q11nmrf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1q11nmrf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp1q11nmrf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp1q11nmrf.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp1q11nmrf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1q11nmrf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"

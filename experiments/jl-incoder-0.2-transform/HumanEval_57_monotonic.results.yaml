language: jl
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-l.<0]\n \
    \   l = l[end-l.>0]\n    l = l[end-l.==0]\n    l = l[end-l.>0]\n    l = l[end-l.<0]\n\
    \    return length(l) == 0 || all(l[end-l.==0] == 0)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp35ftfcsg.jl:18\nin expression starting at\
    \ /tmp/tmp35ftfcsg.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprzwt_8hj.jl:1\nin expression starting at /tmp/tmprzwt_8hj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n \
    \       return false\n    \n    if l[1] > l[2] \n        return false\n    \n\
    \    if l[1] > l[2] \n        return true\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwkp6dci0.jl:27\nin expression starting at\
    \ /tmp/tmpwkp6dci0.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplddpdllh.jl:1\nin expression starting at /tmp/tmplddpdllh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1mi0lng7.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp1mi0lng7.jl:39\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp1mi0lng7.jl:42\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp1mi0lng7.jl:44\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0ybynbwj.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0ybynbwj.jl:1\n\
    in expression starting at /tmp/tmp0ybynbwj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppukyr0ce.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppukyr0ce.jl:1\n\
    in expression starting at /tmp/tmppukyr0ce.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    return all(l[1:end-1] < l[2:end])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1s9xv_cn.jl:11\n\
    in expression starting at /tmp/tmp1s9xv_cn.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzn39r042.jl:19\nin expression starting at\
    \ /tmp/tmpzn39r042.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1pwldl1f.jl:1\nin expression starting at /tmp/tmp1pwldl1f.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4pl7nuh8.jl:23\nin expression starting at\
    \ /tmp/tmp4pl7nuh8.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] > l[5] \n        return true\n    end\n    \n    if l[1] < l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] > l[7] \n        return true\n    end\n    \n    if l[1] < l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] > l[9] \n        return true\n    end\n    \n    if l[1] < l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] > l[11] \n        return true\n    end\n    \n    if l[1] < l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] > l[13] \n        return true\n    end\n    \n    if l[1] < l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] > l[15] \n        return true\n    end\n    \n    if l[1] < l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] > l[17] \n        return true\n    end\n    \n    if l[1] < l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp966au7va.jl:1\nin expression starting at /tmp/tmp966au7va.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    if l[1] > l[3] \n        return true\n\
    \    end\n    \n    if l[2] < l[3] \n        return false\n    end\n    \n   \
    \ if l[2] > l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n \
    \       return false\n    end\n    \n    if l[3] > l[4] \n        return true\n\
    \    end\n    \n    if l[4] < l[5] \n        return false\n    end\n    \n   \
    \ if l[4] > l[5] \n        return true\n    end\n    \n    if l[5] < l[6] \n \
    \       return false\n    end\n    \n    if l[5] > l[6] \n        return true\n\
    \    end\n    \n    if l[6] < l[7] \n        return false\n    end\n    \n   \
    \ if l[6] > l[7] \n        return true\n    end\n    \n    if l[7] < l[8] \n \
    \       return false\n    end\n    \n    if l[7] > l[8] \n        return true\n\
    \    end\n    \n    if l[8] < l[9] \n        return false\n    end\n    \n   \
    \ if l[8] > l[9] \n        return true\n    end\n    \n    if l[9] < l[10] \n\
    \        return false\n    end\n    \n    if l[9] > l[10] \n        return true\n\
    \    end\n    \n    if l[10] < l[11] \n        return false\n    end\n    \n \
    \   if l[10] > l[11] \n        return true\n    end\n    \n    if l[11] < l[12]\
    \ \n        return false\n    end\n    \n    if l[11] > l[12] \n        return\
    \ true\n    end\n    \n    if l[12] < l[13] \n        return false\n    end\n\
    \    \n    if l[12] > l[13] \n        return true\n    end\n    \n    if l[13]\
    \ < l[14] \n        return false\n    end\n    \n    if l[13] > l[14] \n     \
    \   return true\n    end\n    \n    if l[14] < l[15] \n        return false\n\
    \    end\n    \n    if l[14] > l[15] \n        return true\n    end\n    \n  \
    \  if l[15] < l[16] \n        return false\n    end\n    \n    if l[15] > l[16]\
    \ \n        return true\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7sz1f8s.jl:1\nin expression starting at /tmp/tmph7sz1f8s.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[-1] \n\
    \        return false\n    \n    return monotonic(tail(l))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hbhgwz8.jl:1\nin expression starting at /tmp/tmp6hbhgwz8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-l.>0]\n \
    \   l = l[end-l.<0]\n    l = l[end-l.==0]\n    l = l[end-l.==1]\n    return length(l)\
    \ == 0 || all(l[1:end-1].>l[2:end])\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpycz6n9nq.jl:17\nin expression starting at\
    \ /tmp/tmpycz6n9nq.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      true\n    elseif l[2] < l[1]\n        false\n    else\n        monotonic(l[2:end-1])\
    \ || monotonic(l[1:end-1])\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ tags=julia |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=1 |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp71ivzwud.jl:19\nin expression starting at\
    \ /tmp/tmp71ivzwud.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcyqt0xqo.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcyqt0xqo.jl:1\n\
    in expression starting at /tmp/tmpcyqt0xqo.jl:1\n"
  stdout: ''

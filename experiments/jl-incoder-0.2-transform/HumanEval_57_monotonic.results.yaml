language: jl
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-l.<0]\n \
    \   l = l[end-l.>0]\n    l = l[end-l.==0]\n    l = l[end-l.>0]\n    l = l[end-l.<0]\n\
    \    return length(l) == 0 || all(l[end-l.==0] == 0)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp35ftfcsg.jl:18\nin expression starting at\
    \ /tmp/tmp35ftfcsg.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprzwt_8hj.jl:1\nin expression starting at /tmp/tmprzwt_8hj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n \
    \       return false\n    \n    if l[1] > l[2] \n        return false\n    \n\
    \    if l[1] > l[2] \n        return true\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwkp6dci0.jl:27\nin expression starting at\
    \ /tmp/tmpwkp6dci0.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplddpdllh.jl:1\nin expression starting at /tmp/tmplddpdllh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1mi0lng7.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp1mi0lng7.jl:39\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp1mi0lng7.jl:42\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp1mi0lng7.jl:44\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mi0lng7.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mi0lng7.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0ybynbwj.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0ybynbwj.jl:1\n\
    in expression starting at /tmp/tmp0ybynbwj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppukyr0ce.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppukyr0ce.jl:1\n\
    in expression starting at /tmp/tmppukyr0ce.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    return all(l[1:end-1] < l[2:end])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1s9xv_cn.jl:11\n\
    in expression starting at /tmp/tmp1s9xv_cn.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzn39r042.jl:19\nin expression starting at\
    \ /tmp/tmpzn39r042.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    return monotonic(l[2:end-1]) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1pwldl1f.jl:1\nin expression starting at /tmp/tmp1pwldl1f.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4pl7nuh8.jl:23\nin expression starting at\
    \ /tmp/tmp4pl7nuh8.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] > l[5] \n        return true\n    end\n    \n    if l[1] < l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] > l[7] \n        return true\n    end\n    \n    if l[1] < l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] > l[9] \n        return true\n    end\n    \n    if l[1] < l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] > l[11] \n        return true\n    end\n    \n    if l[1] < l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] > l[13] \n        return true\n    end\n    \n    if l[1] < l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] > l[15] \n        return true\n    end\n    \n    if l[1] < l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] > l[17] \n        return true\n    end\n    \n    if l[1] < l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp966au7va.jl:1\nin expression starting at /tmp/tmp966au7va.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    if l[1] > l[3] \n        return true\n\
    \    end\n    \n    if l[2] < l[3] \n        return false\n    end\n    \n   \
    \ if l[2] > l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n \
    \       return false\n    end\n    \n    if l[3] > l[4] \n        return true\n\
    \    end\n    \n    if l[4] < l[5] \n        return false\n    end\n    \n   \
    \ if l[4] > l[5] \n        return true\n    end\n    \n    if l[5] < l[6] \n \
    \       return false\n    end\n    \n    if l[5] > l[6] \n        return true\n\
    \    end\n    \n    if l[6] < l[7] \n        return false\n    end\n    \n   \
    \ if l[6] > l[7] \n        return true\n    end\n    \n    if l[7] < l[8] \n \
    \       return false\n    end\n    \n    if l[7] > l[8] \n        return true\n\
    \    end\n    \n    if l[8] < l[9] \n        return false\n    end\n    \n   \
    \ if l[8] > l[9] \n        return true\n    end\n    \n    if l[9] < l[10] \n\
    \        return false\n    end\n    \n    if l[9] > l[10] \n        return true\n\
    \    end\n    \n    if l[10] < l[11] \n        return false\n    end\n    \n \
    \   if l[10] > l[11] \n        return true\n    end\n    \n    if l[11] < l[12]\
    \ \n        return false\n    end\n    \n    if l[11] > l[12] \n        return\
    \ true\n    end\n    \n    if l[12] < l[13] \n        return false\n    end\n\
    \    \n    if l[12] > l[13] \n        return true\n    end\n    \n    if l[13]\
    \ < l[14] \n        return false\n    end\n    \n    if l[13] > l[14] \n     \
    \   return true\n    end\n    \n    if l[14] < l[15] \n        return false\n\
    \    end\n    \n    if l[14] > l[15] \n        return true\n    end\n    \n  \
    \  if l[15] < l[16] \n        return false\n    end\n    \n    if l[15] > l[16]\
    \ \n        return true\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7sz1f8s.jl:1\nin expression starting at /tmp/tmph7sz1f8s.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[-1] \n\
    \        return false\n    \n    return monotonic(tail(l))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hbhgwz8.jl:1\nin expression starting at /tmp/tmp6hbhgwz8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-l.>0]\n \
    \   l = l[end-l.<0]\n    l = l[end-l.==0]\n    l = l[end-l.==1]\n    return length(l)\
    \ == 0 || all(l[1:end-1].>l[2:end])\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpycz6n9nq.jl:17\nin expression starting at\
    \ /tmp/tmpycz6n9nq.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      true\n    elseif l[2] < l[1]\n        false\n    else\n        monotonic(l[2:end-1])\
    \ || monotonic(l[1:end-1])\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ tags=julia |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\ntrue\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=1 |>\nI wrote a package that does this for you:\nhttps://github.com/kazuya/monotonic\n\
    <code>\nusing Monotonic\nismonotonic([1,2,3,4,5])\ntrue\nismonotonic([1,2,3,4,5,6])\n\
    false\nismonotonic([1,2,3,4,5,6,7])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp71ivzwud.jl:19\nin expression starting at\
    \ /tmp/tmp71ivzwud.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcyqt0xqo.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcyqt0xqo.jl:1\n\
    in expression starting at /tmp/tmpcyqt0xqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg44ta4_t.jl:1\nin expression starting at /tmp/tmpg44ta4_t.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    end\n\
    \    if l[1] > l[2] \n        return false\n    end\n    if l[1] < l[3] \n   \
    \     return true\n    end\n    if l[1] > l[3] \n        return false\n    end\n\
    \    if l[1] < l[4] \n        return true\n    end\n    if l[1] > l[4] \n    \
    \    return false\n    end\n    if l[1] < l[5] \n        return true\n    end\n\
    \    if l[1] > l[5] \n        return false\n    end\n    if l[1] < l[6] \n   \
    \     return true\n    end\n    if l[1] > l[6] \n        return false\n    end\n\
    \    if l[1] < l[7] \n        return true\n    end\n    if l[1] > l[7] \n    \
    \    return false\n    end\n    if l[1] < l[8] \n        return true\n    end\n\
    \    if l[1] > l[8] \n        return false\n    end\n    if l[1] < l[9] \n   \
    \     return true\n    end\n    if l[1] > l[9] \n        return false\n    end\n\
    \    if l[1] < l[10] \n        return true\n    end\n    if l[1] > l[10] \n  \
    \      return false\n    end\n    if l[1] < l[11] \n        return true\n    end\n\
    \    if l[1] > l[11] \n        return false\n    end\n    if l[1] < l[12] \n \
    \       return true\n    end\n    if l[1] > l[12] \n        return false\n   \
    \ end\n    if l[1] < l[13] \n        return true\n    end\n    if l[1] > l[13]\
    \ \n        return false\n    end\n    if l[1] < l[14] \n        return true\n\
    \    end\n    if l[1] > l[14] \n        return false\n    end\n    if l[1] < l[15]\
    \ \n        return true\n    end\n    if l[1] > l[15] \n        return false\n\
    \    end\n    if l[1] < l[16] \n        return true\n    end\n    if l[1] > l[16]\
    \ \n        return false\n    end\n    if l[1] < l[17] \n        return true\n\
    \    end\n    if l[1] > l[17] \n        return false\n    end\n    if l[1] < l[18]\
    \ \n        return true\n    end\n    if l[1] > l[18] \n        return false\n\
    \    end\n    if l[1] < l[19] \n        return true\n    end\n    if l[1] > l[19]\
    \ \n        return false\n    end\n    if l[1] < l[20] \n        return true\n\
    \    end\n    if l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpze65xon9.jl:1\nin expression starting at /tmp/tmpze65xon9.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmwx4r8uu.jl:1\nin expression starting at /tmp/tmpmwx4r8uu.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpikbwesmn.jl:1\nin expression starting at /tmp/tmpikbwesmn.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   if l[1] < l[2] \n        return true\n    else \n        return false\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp35j_82uv.jl:18\nin expression starting at\
    \ /tmp/tmp35j_82uv.jl:18\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] == l[2]\
    \ \n        true\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[1] > l[2]\
    \ \n        false\n    elseif l[1] < l[2] \n        true\n    elseif \nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing condition in \"elseif\" at /tmp/tmp_ux1o0i1.jl:103\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp_ux1o0i1.jl:104\nin expression\
    \ starting at /tmp/tmp_ux1o0i1.jl:104\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[1] < l[end-1]\
    \ \n        return false\n    end\n    \n    if l[1] > l[end-1] \n        return\
    \ true\n    end\n    \n    return monotonic(l[end-1:end])\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1,\
    \ 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgnftm2dg.jl:32\nin expression starting at\
    \ /tmp/tmpgnftm2dg.jl:32\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] < l[2:end])\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1,\
    \ 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8p16a__2.jl:15\nin expression starting at\
    \ /tmp/tmp8p16a__2.jl:15\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if l[1] < l[2] \n        return true\n\
    \    else if l[2] < l[1] \n        return false\n    else \n        return monotonic(l[2:end-1])\
    \ \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdr_yanmh.jl:12\nin expression starting at\
    \ /tmp/tmpdr_yanmh.jl:12\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpve24mqvq.jl:1\nin expression starting at /tmp/tmpve24mqvq.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[2] < l[1] \n\
    \        return false\n    end\n    \n    if l[2] > l[end] \n        return true\n\
    \    end\n    \n    if l[3] < l[2] \n        return false\n    end\n    \n   \
    \ if l[3] > l[end] \n        return true\n    end\n    \n    if l[4] < l[3] \n\
    \        return false\n    end\n    \n    if l[4] > l[end] \n        return true\n\
    \    end\n    \n    if l[5] < l[4] \n        return false\n    end\n    \n   \
    \ if l[5] > l[end] \n        return true\n    end\n    \n    if l[6] < l[5] \n\
    \        return false\n    end\n    \n    if l[6] > l[end] \n        return true\n\
    \    end\n    \n    if l[7] < l[6] \n        return false\n    end\n    \n   \
    \ if l[7] > l[end] \n        return true\n    end\n    \n    if l[8] < l[7] \n\
    \        return false\n    end\n    \n    if l[8] > l[end] \n        return true\n\
    \    end\n    \n    if l[9] < l[8] \n        return false\n    end\n    \n   \
    \ if l[9] > l[end] \n        return true\n    end\n    \n    if l[10] < l[9] \n\
    \        return false\n    end\n    \n    if l[10] > l[end] \n        return true\n\
    \    end\n    \n    if l[11] < l[10] \n        return false\n    end\n    \n \
    \   if l[11] > l[end] \n        return true\n    end\n    \n    if l[12] < l[11]\
    \ \n        return false\n    end\n    \n    if l[12] > l[end] \n        return\
    \ true\n    end\n    \n    if l[13] < l[12] \n        return false\n    end\n\
    \    \n    if l[13] > l[end] \n        return true\n    end\n    \n    if l[14]\
    \ < l[13] \n        return false\n    end\n    \n    if l[14] > l[end] \n    \
    \    return true\n    end\n    \n    if l[15] < l[14] \n        return false\n\
    \    end\n    \n    if l[15] > l[end] \n        return true\n    end\n    \n \
    \   if l[16] < l[15] \n        return false\n    end\n    \n    if l[16] > l[end]\
    \ \n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3vsm2cl7.jl:1\nin expression starting at /tmp/tmp3vsm2cl7.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmg2_rh83.jl:1\nin expression starting at /tmp/tmpmg2_rh83.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsag9g4n0.jl:16\nin expression starting at\
    \ /tmp/tmpsag9g4n0.jl:16\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    if l[1] == l[2] \n        return true\n \
    \   end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n    return\
    \ true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return True if list elements\
    \ are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6m56__f2.jl:25\nin expression starting at\
    \ /tmp/tmp6m56__f2.jl:25\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       return true\n    else \n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_rn47o1m.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp_rn47o1m.jl:24\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_rn47o1m.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_rn47o1m.jl:21\ntest set: Test Failed at /tmp/tmp_rn47o1m.jl:27\n\
    \  Expression: candidate([1, 2, 3, 2, 5, 60]) == false\n   Evaluated: true ==\
    \ false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rn47o1m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rn47o1m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp_rn47o1m.jl:29\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rn47o1m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rn47o1m.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659823002
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmwx4r8uu.jl:1\nin expression starting at /tmp/tmpmwx4r8uu.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] || l[2]\
    \ < l[1]\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpifujonrj.jl:17\nin expression starting at\
    \ /tmp/tmpifujonrj.jl:17\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppukyr0ce.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppukyr0ce.jl:1\n\
    in expression starting at /tmp/tmppukyr0ce.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end]]\n    l = l[l .< l[end-1]]\n    l = l[l\
    \ .> l[end-2]]\n    l = l[l .< l[end-1]]\n    l = l[l .> l[end-2]]\n    l = l[l\
    \ .< l[end-3]]\n    l = l[l .> l[end-2]]\n    l = l[l .< l[end-1]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l\
    \ .< l[end-2]]\n    l = l[l .> l[end-3]]\n    l = l[l .< l[end-2]]\n    l = l[l\
    \ .> l[end-3]]\n    l = l[l .< l[end-4]]\n    l = l[l .> l[end-3]]\n    l = l[l\
    \ .< l[end-2]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l\
    \ .< l[end-2]]\n    l = l[l .> l[end-3]]\n    l = l[l .< l[end-4]]\n    l = l[l\
    \ .> l[end-3]]\n    l = l[l .< l[end-4]]\n    l = l[l .> l[end-5]]\n    l = l[l\
    \ .< l[end-4]]\n    l = l[l .> l[end-5]]\n    l = l[l .< l[end-6]]\n    l = l[l\
    \ .> l[end-5]]\n    l = l[l .< l[end-6]]\n    l = l[l .> l[end-7]]\n    l = \n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2z8hfavn.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2z8hfavn.jl:1\n\
    in expression starting at /tmp/tmp2z8hfavn.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoahvbm1k.jl:1\nin expression starting at /tmp/tmpoahvbm1k.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9hd85yis.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp9hd85yis.jl:37\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9hd85yis.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9hd85yis.jl:34\ntest set: Test Failed at /tmp/tmp9hd85yis.jl:40\n\
    \  Expression: candidate([1, 2, 3, 2, 5, 60]) == false\n   Evaluated: true ==\
    \ false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hd85yis.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hd85yis.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9hd85yis.jl:42\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hd85yis.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hd85yis.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659823002
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[1:end-1] < l[2:end])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphxxlhth2.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmphxxlhth2.jl:22\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphxxlhth2.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphxxlhth2.jl:19\ntest set: Test Failed at /tmp/tmphxxlhth2.jl:25\n\
    \  Expression: candidate([1, 2, 3, 2, 5, 60]) == false\n   Evaluated: true ==\
    \ false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxxlhth2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphxxlhth2.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphxxlhth2.jl:27\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxxlhth2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphxxlhth2.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659823002
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0]\n        return false\n    \n    i = 2\n    while i\
    \ < length(l) \n        if l[i] < l[i-1] \n            return false\n        i\
    \ += 1\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbu7hs0ca.jl:1\nin expression starting at /tmp/tmpbu7hs0ca.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[2] \n   \
    \     return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplddpdllh.jl:1\nin expression starting at /tmp/tmplddpdllh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp95be_pox.jl:1\nin expression starting at /tmp/tmp95be_pox.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: -1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    return l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmpo9mqknlp.jl:25\n  Expression: candidate([1,
    20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n
    [2] macro expansion\n   @ /tmp/tmpo9mqknlp.jl:25 [inlined]\n [3] macro expansion\n   @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n
    [4] top-level scope\n   @ /tmp/tmpo9mqknlp.jl:22\ntest set: Test Failed at /tmp/tmpo9mqknlp.jl:28\n  Expression:
    candidate([1, 2, 3, 2, 5, 60]) == false\n   Evaluated: true == false\nStacktrace:\n
    [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9mqknlp.jl:28 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9mqknlp.jl:22\n'''
  timestamp: 1659823002
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0]\n        return false\n    \n    if l[1] > l[end]\n\
    \        return false\n    \n    i = 2\n    \n    while i < length(l)\n      \
    \  if l[i] < l[i-1]\n            return false\n        \n        if l[i] > l[end]\n\
    \            return false\n        \n        i = i + 1\n    end\n    \n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmp9k98fbz_.jl:21\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9k98fbz_.jl:1\n\
    in expression starting at /tmp/tmp9k98fbz_.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5zxp374m.jl:62\nin expression starting at\
    \ /tmp/tmp5zxp374m.jl:62\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[end(l)]\n        return true\n    \n \
    \   return false\nend\n</cell>\n<code language=julia-1.5>\n@test monotonic([4,\
    \ 1, 0, -10])\n</cell>\n<text>\nExercise: Write a function that returns true if\
    \ all elements of a list are unique.\nHint: Use a set and check the length of\
    \ the set\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp47a654sw.jl:19\nin expression starting at\
    \ /tmp/tmp47a654sw.jl:19\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      return true\n    elseif l[1] > l[2]\n        return false\n    else\n \
    \       return true\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt7frys8_.jl:19\nin expression starting at\
    \ /tmp/tmpt7frys8_.jl:19\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[0] \n\
    \        return true\n    \n    if l[1] > l[2] \n        return false\n    \n\
    \    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[3] \n       \
    \ return false\n    \n    if l[1] < l[3] \n        return true\n    \n    if l[1]\
    \ > l[4] \n        return false\n    \n    if l[1] < l[4] \n        return true\n\
    \    \n    if l[1] > l[5] \n        return false\n    \n    if l[1] < l[5] \n\
    \        return true\n    \n    if l[1] > l[6] \n        return false\n    \n\
    \    if l[1] < l[6] \n        return true\n    \n    if l[1] > l[7] \n       \
    \ return false\n    \n    if l[1] < l[7] \n        return true\n    \n    if l[1]\
    \ > l[8] \n        return false\n    \n    if l[1] < l[8] \n        return true\n\
    \    \n    if l[1] > l[9] \n        return false\n    \n    if l[1] < l[9] \n\
    \        return true\n    \n    if l[1] > l[10] \n        return false\n    \n\
    \    if l[1] < l[10] \n        return true\n    \n    if l[1] > l[11] \n     \
    \   return false\n    \n    if l[1] < l[11] \n        return true\n    \n    if\
    \ l[1] > l[12] \n        return false\n    \n    if l[1] < l[12] \n        return\
    \ true\n    \n    if l[1] > l[13] \n        return false\n    \n    if l[1] <\
    \ l[13] \n        return true\n    \n    if l[1] > l[14] \n        return false\n\
    \    \n    if l[1] < l[14] \n        return true\n    \n    if l[1] > l[15] \n\
    \        return false\n    \n    if l[1] < l[15] \n        return true\n    \n\
    \    if l[1] > l[16] \n        return false\n    \n    if l[1] < l[16] \n    \
    \    return true\n    \n    if l[1] > l[17] \n        return false\n    \n   \
    \ if l[1] < l[17] \n        return true\n    \n    if l[1] > l[18] \n        return\
    \ false\n    \n    if l[1] < l[18] \n        return true\n    \n    if l[1] >\
    \ l[19] \n        return false\n    \n    if l[1] < l[19] \n        return true\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgha52we5.jl:1\nin expression starting at /tmp/tmpgha52we5.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaep0y994.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaep0y994.jl:1\n\
    in expression starting at /tmp/tmpaep0y994.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n   \
    \     return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[2] < l[3] \n        return true\n    end\n    \n    if\
    \ l[2] > l[3] \n        return false\n    end\n    \n    if l[3] < l[4] \n   \
    \     return true\n    end\n    \n    if l[3] > l[4] \n        return false\n\
    \    end\n    \n    if l[4] < l[5] \n        return true\n    end\n    \n    if\
    \ l[4] > l[5] \n        return false\n    end\n    \n    if l[5] < l[6] \n   \
    \     return true\n    end\n    \n    if l[5] > l[6] \n        return false\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[6] > l[7] \n        return false\n    end\n    \n    if l[7] < l[8] \n   \
    \     return true\n    end\n    \n    if l[7] > l[8] \n        return false\n\
    \    end\n    \n    if l[8] < l[9] \n        return true\n    end\n    \n    if\
    \ l[8] > l[9] \n        return false\n    end\n    \n    if l[9] < l[10] \n  \
    \      return true\n    end\n    \n    if l[9] > l[10] \n        return false\n\
    \    end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n  \
    \  if l[10] > l[11] \n        return false\n    end\n    \n    if l[11] < l[12]\
    \ \n        return true\n    end\n    \n    if l[11] > l[12] \n        return\
    \ false\n    end\n    \n    if l[12] < l[13] \n        return true\n    end\n\
    \    \n    if l[12] > l[13] \n        return false\n    end\n    \n    if l[13]\
    \ < l[14] \n        return true\n    end\n    \n    if l[13] > l[14] \n      \
    \  return false\n    end\n    \n    if l[14] < l[15] \n        return true\n \
    \   end\n    \n    if l[14] > l[15] \n        return false\n    end\n    \n  \
    \  if l[15] < l[16] \n        return true\n    end\n    \n    if l[15] > l[16]\
    \ \n        return false\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9c956mhc.jl:1\nin expression starting at /tmp/tmp9c956mhc.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzizanlnl.jl:23\nin expression starting at\
    \ /tmp/tmpzizanlnl.jl:23\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wss34jj.jl:1\nin expression starting at /tmp/tmp4wss34jj.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmwx4r8uu.jl:1\nin expression starting at /tmp/tmpmwx4r8uu.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wss34jj.jl:1\nin expression starting at /tmp/tmp4wss34jj.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    i = l[1]\n    j = l[2]\n    \n    if i == j \n        return\
    \ true\n    end\n    \n    if i > j \n        return false\n    end\n    \n  \
    \  if i == l[1] \n        return true\n    end\n    \n    if j == l[2] \n    \
    \    return true\n    end\n    \n    if l[1] < l[2] \n        return false\n \
    \   end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl2btyj0s.jl:41

    '
  stdout: "test set: Test Failed at /tmp/tmpl2btyj0s.jl:46\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl2btyj0s.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl2btyj0s.jl:43\ntest set: Test Failed at /tmp/tmpl2btyj0s.jl:47\n\
    \  Expression: candidate([4, 1, 0, -10]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2btyj0s.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2btyj0s.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpl2btyj0s.jl:48\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2btyj0s.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2btyj0s.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpl2btyj0s.jl:49\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl2btyj0s.jl:49 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl2btyj0s.jl:43\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     4      8\n"
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfx3k26s_.jl:1\nin expression starting at /tmp/tmpfx3k26s_.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end-1])\
    \ \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp70iy6p7c.jl:23\nin expression starting at\
    \ /tmp/tmp70iy6p7c.jl:23\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmg2_rh83.jl:1\nin expression starting at /tmp/tmpmg2_rh83.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return false\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    if l[end] < l[1]\n  \
    \      return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcii9qcj2.jl:28\nin expression starting at\
    \ /tmp/tmpcii9qcj2.jl:28\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoahvbm1k.jl:1\nin expression starting at /tmp/tmpoahvbm1k.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaep0y994.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaep0y994.jl:1\n\
    in expression starting at /tmp/tmpaep0y994.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ol0km69.jl:30\nin expression starting at\
    \ /tmp/tmp_ol0km69.jl:30\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    return\
    \ all(l[i] <= l[i+1] for i in 2:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert monotonic([4, 1, 0, -10]) == true\n@assert monotonic([1, 20, 4, 10]) ==\
    \ false\n@assert monotonic([1, 2, 4, 20]) == true\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of unique elements in a list. For example,\
    \ given [1, 1, 2, 3] return 3.\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpshf50i8_.jl:11\n\
    in expression starting at /tmp/tmpshf50i8_.jl:11\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2]\n  \
    \      return true\n    elseif l[1] > l[2]\n        return false\n    else\n \
    \       return true\n    end\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia\
    \ |>\nI wrote a package called \"monotonic\" that does this for you:\n<code>\n\
    julia> using Monotonic\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm_xhoo4v.jl:19\nin expression starting at\
    \ /tmp/tmpm_xhoo4v.jl:19\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfx3k26s_.jl:1\nin expression starting at /tmp/tmpfx3k26s_.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    i = 2\n    \n    while\
    \ i < length(l)\n        if l[i] < l[i-1] \n            return false\n       \
    \ \n        i += 1\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb5qjhl3e.jl:27\nin expression starting at\
    \ /tmp/tmpb5qjhl3e.jl:27\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   if l[1] < l[2] || l[2] < l[1]\n        return false\n    else\n        return\
    \ true\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc6g5wj_0.jl:18\nin expression starting at\
    \ /tmp/tmpc6g5wj_0.jl:18\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn7vnk78m.jl:1\nin expression starting at /tmp/tmpn7vnk78m.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 1]\n    l = l[l .<\
    \ end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l\
    \ .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l =\
    \ l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n   \
    \ l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp8rwvhqy.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp8rwvhqy.jl:1\n\
    in expression starting at /tmp/tmpp8rwvhqy.jl:1\n"
  stdout: ''
  timestamp: 1659823004
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        elseif\
    \ l[i] < l[i-1]\n            return true\n        else\n            i += 1\n \
    \       end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvoe4rv3j.jl:23\nin expression starting at\
    \ /tmp/tmpvoe4rv3j.jl:23\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n \
    \       return false\n    \n    i = 2\n    while i < length(l) \n        if l[i]\
    \ < l[i-1] \n            return true\n        \n        if l[i] > l[i-1] \n  \
    \          return false\n        \n        i = i + 1\n    end\n    \n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpntqc4_s6.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpntqc4_s6.jl:1\n\
    in expression starting at /tmp/tmpntqc4_s6.jl:1\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[3] \n        return true\n    end\n    \n    if l[1] < l[3] \n \
    \       return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @test monotonic([4, 1, 0, -10])\n</cell>\n<text>\nExercise\nWrite a function that\
    \ returns true if the list contains any negative numbers and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp776mne9w.jl:34\nin expression starting at\
    \ /tmp/tmp776mne9w.jl:34\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[2] < l[3] \n        return true\n\
    \    end\n    \n    if l[2] > l[3] \n        return false\n    end\n    \n   \
    \ if l[3] < l[4] \n        return true\n    end\n    \n    if l[3] > l[4] \n \
    \       return false\n    end\n    \n    if l[4] < l[5] \n        return true\n\
    \    end\n    \n    if l[4] > l[5] \n        return false\n    end\n    \n   \
    \ if l[5] < l[6] \n        return true\n    end\n    \n    if l[5] > l[6] \n \
    \       return false\n    end\n    \n    if l[6] < l[7] \n        return true\n\
    \    end\n    \n    if l[6] > l[7] \n        return false\n    end\n    \n   \
    \ if l[7] < l[8] \n        return true\n    end\n    \n    if l[7] > l[8] \n \
    \       return false\n    end\n    \n    if l[8] < l[9] \n        return true\n\
    \    end\n    \n    if l[8] > l[9] \n        return false\n    end\n    \n   \
    \ if l[9] < l[10] \n        return true\n    end\n    \n    if l[9] > l[10] \n\
    \        return false\n    end\n    \n    if l[10] < l[11] \n        return true\n\
    \    end\n    \n    if l[10] > l[11] \n        return false\n    end\n    \n \
    \   if l[11] < l[12] \n        return true\n    end\n    \n    if l[11] > l[12]\
    \ \n        return false\n    end\n    \n    if l[12] < l[13] \n        return\
    \ true\n    end\n    \n    if l[12] > l[13] \n        return false\n    end\n\
    \    \n    if l[13] < l[14] \n        return true\n    end\n    \n    if l[13]\
    \ > l[14] \n        return false\n    end\n    \n    if l[14] < l[15] \n     \
    \   return true\n    end\n    \n    if l[14] > l[15] \n        return false\n\
    \    end\n    \n    if l[15] < l[16] \n        return true\n    end\n    \n  \
    \  if l[15] > l[16] \n        return false\n    end\n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0xpcac_6.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0xpcac_6.jl:1\n\
    in expression starting at /tmp/tmp0xpcac_6.jl:1\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaw1hd8ze.jl:1\nin expression starting at /tmp/tmpaw1hd8ze.jl:1\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n   \
    \     return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[2] < l[3] \n        return true\n    end\n    \n    if\
    \ l[2] > l[3] \n        return false\n    end\n    \n    if l[3] < l[4] \n   \
    \     return true\n    end\n    \n    if l[3] > l[4] \n        return false\n\
    \    end\n    \n    if l[4] < l[5] \n        return true\n    end\n    \n    if\
    \ l[4] > l[5] \n        return false\n    end\n    \n    if l[5] < l[6] \n   \
    \     return true\n    end\n    \n    if l[5] > l[6] \n        return false\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[6] > l[7] \n        return false\n    end\n    \n    if l[7] < l[8] \n   \
    \     return true\n    end\n    \n    if l[7] > l[8] \n        return false\n\
    \    end\n    \n    if l[8] < l[9] \n        return true\n    end\n    \n    if\
    \ l[8] > l[9] \n        return false\n    end\n    \n    if l[9] < l[10] \n  \
    \      return true\n    end\n    \n    if l[9] > l[10] \n        return false\n\
    \    end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n  \
    \  if l[10] > l[11] \n        return false\n    end\n    \n    if l[11] < l[12]\
    \ \n        return true\n    end\n    \n    if l[11] > l[12] \n        return\
    \ false\n    end\n    \n    if l[12] < l[13] \n        return true\n    end\n\
    \    \n    if l[12] > l[13] \n        return false\n    end\n    \n    if l[13]\
    \ < l[14] \n        return true\n    end\n    \n    if l[13] > l[14] \n      \
    \  return false\n    end\n    \n    if l[14] < l[15] \n        return true\n \
    \   end\n    \n    if l[14] > l[15] \n        return false\n    end\n    \n  \
    \  if l[15] < l[16] \n        return true\n    end\n    \n    if l[15] > l[16]\
    \ \n        return false\n    end\n    \n    if l[16] < l[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9c956mhc.jl:1\nin expression starting at /tmp/tmp9c956mhc.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    return l == l\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt5nap7kw.jl:16\nin expression starting at\
    \ /tmp/tmpt5nap7kw.jl:16\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppukyr0ce.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppukyr0ce.jl:1\n\
    in expression starting at /tmp/tmppukyr0ce.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   if l[1] < l[2] || l[2] < l[1]\n        return false\n    else\n        return\
    \ true\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5tqjs4ph.jl:18\nin expression starting at\
    \ /tmp/tmp5tqjs4ph.jl:18\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i-1] < l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps9p0qyks.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps9p0qyks.jl:1\n\
    in expression starting at /tmp/tmps9p0qyks.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    i = 2\n    while i < length(l)\n        if l[i]\
    \ > l[i-1]\n            return false\n        i += 1\n    \n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmpyd_u9yjj.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyd_u9yjj.jl:1\n\
    in expression starting at /tmp/tmpyd_u9yjj.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfx3k26s_.jl:1\nin expression starting at /tmp/tmpfx3k26s_.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = l[end]\n    \n    if l<l[1] \n        return false\n \
    \   end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]<l[3]\
    \ \n        return true\n    end\n    \n    if l[3]<l[4] \n        return true\n\
    \    end\n    \n    if l[4]<l[5] \n        return true\n    end\n    \n    if\
    \ l[5]<l[6] \n        return true\n    end\n    \n    if l[6]<l[7] \n        return\
    \ true\n    end\n    \n    if l[7]<l[8] \n        return true\n    end\n    \n\
    \    if l[8]<l[9] \n        return true\n    end\n    \n    if l[9]<l[10] \n \
    \       return true\n    end\n    \n    if l[10]<l[11] \n        return true\n\
    \    end\n    \n    if l[11]<l[12] \n        return true\n    end\n    \n    if\
    \ l[12]<l[13] \n        return true\n    end\n    \n    if l[13]<l[14] \n    \
    \    return true\n    end\n    \n    if l[14]<l[15] \n        return true\n  \
    \  end\n    \n    if l[15]<l[16] \n        return true\n    end\n    \n    if\
    \ l[16]<l[17] \n        return true\n    end\n    \n    if l[17]<l[18] \n    \
    \    return true\n    end\n    \n    if l[18]<l[19] \n        return true\n  \
    \  end\n    \n    if l[19]<l[20] \n        return true\n    end\n    \n    if\
    \ l[20]<l[21] \n        return true\n    end\n    \n    if l[21]<l[22] \n    \
    \    return true\n    end\n    \n    if l[22]<l[23] \n        return true\n  \
    \  end\n    \n    if l[23]<l[24] \n        return true\n    end\n    \n    if\
    \ l[24]<l[25] \n        return true\n    end\n    \n    if l[25]<l[26] \n    \
    \    return true\n    end\n    \n    if l[26]<l[27] \n        return true\n  \
    \  end\n    \n    if l[27]<l[28] \n        return true\n    end\n    \n    if\
    \ l[28]<l[29] \n        return true\n    end\n    \n    if l[29\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq2ske1os.jl:1\nin expression starting at /tmp/tmpq2ske1os.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    return monotonic(l[2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa1l8a44b.jl:1\nin expression starting at /tmp/tmpa1l8a44b.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    end\n\
    \    if l[1] > l[2] \n        return false\n    end\n    return monotonic(l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    true\n    >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7ai7qw9.jl:22\nin expression starting at\
    \ /tmp/tmp_7ai7qw9.jl:22\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    \n    i = l[1]\n    j = l[2]\n    \n    if i > j\n        return false\n\
    \    \n    if i == j\n        return true\n    \n    if l[1] < l[2]\n        return\
    \ true\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrjtamm3.jl:1\nin expression starting at /tmp/tmpyrjtamm3.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2 \n        return true\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[1] > l[2] \n        return false\n    \n    l = l[2:end]\n    \n   \
    \ if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    return monotonic(l)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66l0_ezz.jl:1\nin expression starting at /tmp/tmp66l0_ezz.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-length(l):end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n\
    \    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    l =\
    \ l[end:-1:end]\n    l = l[end:-1:end]\n    l = l[end:-1:end]\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnl_ikrss.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnl_ikrss.jl:1\n\
    in expression starting at /tmp/tmpnl_ikrss.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 1]\n    l = l[l\
    \ .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l =\
    \ l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n   \
    \ l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l \nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vl0x4tb.jl:1\nin expression starting at /tmp/tmp8vl0x4tb.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        i +=\
    \ 1\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmppp487rrz.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppp487rrz.jl:1\n\
    in expression starting at /tmp/tmppp487rrz.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    if l[1] > l[0] \n\
    \        return true\n    \n    if l[1] == l[0] \n        return true\n    \n\
    \    if l[1] < l[2] \n        return false\n    \n    if l[1] > l[2] \n      \
    \  return true\n    \n    if l[1] < l[3] \n        return false\n    \n    if\
    \ l[1] > l[3] \n        return true\n    \n    if l[1] < l[4] \n        return\
    \ false\n    \n    if l[1] > l[4] \n        return true\n    \n    if l[1] < l[5]\
    \ \n        return false\n    \n    if l[1] > l[5] \n        return true\n   \
    \ \n    if l[1] < l[6] \n        return false\n    \n    if l[1] > l[6] \n   \
    \     return true\n    \n    if l[1] < l[7] \n        return false\n    \n   \
    \ if l[1] > l[7] \n        return true\n    \n    if l[1] < l[8] \n        return\
    \ false\n    \n    if l[1] > l[8] \n        return true\n    \n    if l[1] < l[9]\
    \ \n        return false\n    \n    if l[1] > l[9] \n        return true\n   \
    \ \n    if l[1] < l[10] \n        return false\n    \n    if l[1] > l[10] \n \
    \       return true\n    \n    if l[1] < l[11] \n        return false\n    \n\
    \    if l[1] > l[11] \n        return true\n    \n    if l[1] < l[12] \n     \
    \   return false\n    \n    if l[1] > l[12] \n        return true\n    \n    if\
    \ l[1] < l[13] \n        return false\n    \n    if l[1] > l[13] \n        return\
    \ true\n    \n    if l[1] < l[14] \n        return false\n    \n    if l[1] >\
    \ l[14] \n        return true\n    \n    if l[1] < l[15] \n        return false\n\
    \    \n    if l[1] > l[15] \n        return true\n    \n    if l[1] < l[16] \n\
    \        return false\n    \n    if l[1] > l[16] \n        return true\n    \n\
    \    if l[1] < l[17] \n        return false\n    \n    if l[1] > l[17] \n    \
    \    return true\n    \n    if l[1] < l[18] \n        return false\n    \n   \
    \ if l[1] > l[18] \n        return true\n    \n    if l[1] < l[19] \n        return\
    \ false\n    \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpezys_51n.jl:1\nin expression starting at /tmp/tmpezys_51n.jl:1\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[1] \n        return false\n    end\n    \n    if l[1] > l[2] \n   \
    \     return false\n    end\n    \n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1zq4ny8f.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp1zq4ny8f.jl:35\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1zq4ny8f.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1zq4ny8f.jl:32\ntest set: Test Failed at /tmp/tmp1zq4ny8f.jl:36\n\
    \  Expression: candidate([4, 1, 0, -10]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1zq4ny8f.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1zq4ny8f.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1zq4ny8f.jl:37\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1zq4ny8f.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1zq4ny8f.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1zq4ny8f.jl:38\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1zq4ny8f.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1zq4ny8f.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     4      8\n"
  timestamp: 1659823007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n   \
    \ l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .<\
    \ length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l)]\n    l = l[l .> 0]\n\
    \    l = l[l .< length(l)]\n    l = l[l .> 0]\n    l = l[l .< length(l\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5zxp374m.jl:62\nin expression starting at\
    \ /tmp/tmp5zxp374m.jl:62\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-l.<0]\n \
    \   l = l[end-l.>0]\n    l = l[end-l.==0]\n    return length(l) == 0 || all(l[end-l.<0]\
    \ == l[end-l.>0])\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi13egidy.jl:16\nin expression starting at\
    \ /tmp/tmpi13egidy.jl:16\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgfmh7zbt.jl:11\n\
    in expression starting at /tmp/tmpgfmh7zbt.jl:11\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < \nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaw1hd8ze.jl:1\nin expression starting at /tmp/tmpaw1hd8ze.jl:1\n"
  stdout: ''
  timestamp: 1659823005
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsv9ijf8p.jl:11\n\
    in expression starting at /tmp/tmpsv9ijf8p.jl:11\n"
  stdout: ''
  timestamp: 1659823007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    return all(l[i] > l[i+1] for i in 2:length(l)-1)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are monotonically\
    \ increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    true\n    >>>\
    \ monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n  \
    \  true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr023bkcl.jl:15\nin expression starting at\
    \ /tmp/tmpr023bkcl.jl:15\n"
  stdout: ''
  timestamp: 1659823007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\
    \"Return True is list elements are monotonically increasing or decreasing.\n \
    \   >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpop226rfo.jl:19\nin expression starting at\
    \ /tmp/tmpop226rfo.jl:19\n"
  stdout: ''
  timestamp: 1659823007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[findall(l[1:end-1] .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1] .!=\
    \ l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .!= l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66mz8zsa.jl:42\nin expression starting at\
    \ /tmp/tmp66mz8zsa.jl:42\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[2] < l[3] \n        return true\n\
    \    end\n    \n    if l[2] > l[3] \n        return false\n    end\n    \n   \
    \ if l[3] < l[4] \n        return true\n    end\n    \n    if l[3] > l[4] \n \
    \       return false\n    end\n    \n    if l[4] < l[5] \n        return true\n\
    \    end\n    \n    if l[4] > l[5] \n        return false\n    end\n    \n   \
    \ if l[5] < l[6] \n        return true\n    end\n    \n    if l[5] > l[6] \n \
    \       return false\n    end\n    \n    if l[6] < l[7] \n        return true\n\
    \    end\n    \n    if l[6] > l[7] \n        return false\n    end\n    \n   \
    \ if l[7] < l[8] \n        return true\n    end\n    \n    if l[7] > l[8] \n \
    \       return false\n    end\n    \n    if l[8] < l[9] \n        return true\n\
    \    end\n    \n    if l[8] > l[9] \n        return false\n    end\n    \n   \
    \ if l[9] < l[10] \n        return true\n    end\n    \n    if l[9] > l[10] \n\
    \        return false\n    end\n    \n    if l[10] < l[11] \n        return true\n\
    \    end\n    \n    if l[10] > l[11] \n        return false\n    end\n    \n \
    \   if l[11] < l[12] \n        return true\n    end\n    \n    if l[11] > l[12]\
    \ \n        return false\n    end\n    \n    if l[12] < l[13] \n        return\
    \ true\n    end\n    \n    if l[12] > l[13] \n        return false\n    end\n\
    \    \n    if l[13] < l[14] \n        return true\n    end\n    \n    if l[13]\
    \ > l[14] \n        return false\n    end\n    \n    if l[14] < l[15] \n     \
    \   return true\n    end\n    \n    if l[14] > l[15] \n        return false\n\
    \    end\n    \n    if l[15] < l[16] \n        return true\n    end\n    \n  \
    \  if l[15] > l[16] \n        return false\n    end\n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz_j697jw.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz_j697jw.jl:1\n\
    in expression starting at /tmp/tmpz_j697jw.jl:1\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n       \
    \ return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return false\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n       \
    \ return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return false\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n       \
    \ return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return false\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n       \
    \ return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return false\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\n    \n    if l[1] < l[2] \n        return true\n    \n \
    \   if l[1] > l[2] \n        return false\n    \n    if l[1] < l[2] \n       \
    \ return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if l[1]\
    \ < l[2] \n        return true\n    \n    if l[1] > l[2] \n        return false\n\
    \    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] > l[2] \n \
    \       return false\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuzj2m8_u.jl:1\nin expression starting at /tmp/tmpuzj2m8_u.jl:1\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[2] \n        return true\n    else \n\
    \        return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcnndsl7k.jl:1\nin expression starting at /tmp/tmpcnndsl7k.jl:1\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return false\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    i = 2\n    while i <\
    \ length(l)\n        if l[i] > l[i-1]\n            return false\n        end\n\
    \        i += 1\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph90p47hh.jl:32\nin expression starting at\
    \ /tmp/tmph90p47hh.jl:32\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l[1::-1]\n    l\
    \ = l[1:end-1]\n    l = l[1::-1]\n    l = l[1:end-1]\n    l = l\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgfmh7zbt.jl:11\n\
    in expression starting at /tmp/tmpgfmh7zbt.jl:11\n"
  stdout: ''
  timestamp: 1659823006
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n    l = l[end-length(l):end]\n\
    \    l = l[end-length(l):end]\n    l = l[end-length(l\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k6v33k6.jl:62\nin expression starting at\
    \ /tmp/tmp0k6v33k6.jl:62\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    if l[1] < l[2] \n        return true\n  \
    \  elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n     \
    \   return true\n    end\n    \n    l = sort(l)\n    if l[1] < l[2] \n       \
    \ return false\n    elseif l[1] > l[2] \n        return true\n    elseif l[1]\
    \ == l[2] \n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoqrpi21t.jl:32\nin expression starting at\
    \ /tmp/tmpoqrpi21t.jl:32\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif\
    \ l[2] < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif\
    \ l[2] > l[1] \n        false\n    elseif l[1] > l[2] \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpikbwesmn.jl:1\nin expression starting at /tmp/tmpikbwesmn.jl:1\n"
  stdout: ''
  timestamp: 1659823000
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wss34jj.jl:1\nin expression starting at /tmp/tmp4wss34jj.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppukyr0ce.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppukyr0ce.jl:1\n\
    in expression starting at /tmp/tmppukyr0ce.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .<\
    \ end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaep0y994.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaep0y994.jl:1\n\
    in expression starting at /tmp/tmpaep0y994.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n \
    \       return true\n    end\n    \n    if l[1] > l[2] \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\n  \
    \  end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[1] > l[2] \n        return true\n    end\n    \n    if l[1] < l[2] \n    \
    \    return true\n    end\n    \n    if l[1] > l[2] \n        return true\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiac_9ykq.jl:1\nin expression starting at /tmp/tmpiac_9ykq.jl:1\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = length(l)\n   \
    \ j = i-1\n    while j > 0\n        if l[j] < l[j-1]\n            return false\n\
    \        end\n        j -= 1\n    end\n    return true\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp258h04g.jl:21\nin expression starting at\
    \ /tmp/tmpp258h04g.jl:21\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    \n    if l[1] < l[0] \n        return false\n    \n    i = 2\n    while i\
    \ < length(l) \n        if l[i] < l[i-1] \n            return false\n        i\
    \ += 1\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp78bami3f.jl:24\nin expression starting at\
    \ /tmp/tmp78bami3f.jl:24\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = length(l)\n   \
    \ j = i-1\n    while j > 0 && l[j] < l[j-1]\n        j = j - 1\n    end\n    return\
    \ j == 0 || l[j] > l[j-1]\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpce16t7is.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpce16t7is.jl:25\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpce16t7is.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpce16t7is.jl:22\ntest set: Test Failed at /tmp/tmpce16t7is.jl:27\n\
    \  Expression: candidate([4, 1, 1, 0]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpce16t7is.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpce16t7is.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpce16t7is.jl:28\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpce16t7is.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpce16t7is.jl:22\ntest set: Test Failed at /tmp/tmpce16t7is.jl:30\n\
    \  Expression: candidate([9, 9, 9, 9]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpce16t7is.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpce16t7is.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1659823009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    i = 2\n    while i\
    \ < length(l)\n        if l[i] < l[i-1]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.4>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfmtfovvf.jl:19\nin expression starting at\
    \ /tmp/tmpfmtfovvf.jl:19\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[end] < l[1]\
    \ \n        return false\n    end\n    \n    if l[end] > l[end - 1] \n       \
    \ return true\n    end\n    \n    return monotonic(subset(l, 2, end - 1))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprfnge0fn.jl:30\nin expression starting at /tmp/tmprfnge0fn.jl:30\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1:end-1]\n  \
    \  l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfx3k26s_.jl:1\nin expression starting at /tmp/tmpfx3k26s_.jl:1\n"
  stdout: ''
  timestamp: 1659823003
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    if l[1] < l[2] \n \
    \       true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] == l[2]\
    \ \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n        true\n    elseif\
    \ l[1] > l[2] && l[2] > l[3] \n        false\n    elseif l[1] < l[2] && l[2] >\
    \ l[3] \n        true\n    elseif l[1] > l[2] && l[2] < l[3] \n        false\n\
    \    elseif l[1] < l[2] && l[2] > l[3] \n        false\n    elseif l[1] > l[2]\
    \ && l[2] < l[3] \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n    \
    \    false\n    elseif l[1] < l[2] && l[2] > l[3] \n        false\n    elseif\
    \ l[1] > l[2] && l[2] > l[3] \n        true\n    elseif l[1] < l[2] && l[2] <\
    \ l[3] \n        false\n    elseif l[1] < l[2] && l[2] > l[3] \n        false\n\
    \    elseif l[1] > l[2] && l[2] > l[3] \n        true\n    elseif l[1] < l[2]\
    \ && l[2] < l[3] \n        false\n    elseif l[1] < l[2] && l[2] > l[3] \n   \
    \     false\n    elseif l[1] > l[2] && l[2] > l[3] \n        true\n    elseif\
    \ l[1] < l[2] && l[2] < l[3] \n        false\n    elseif l[1] < l[2] && l[2] >\
    \ l[3] \n        false\n    elseif l[1] > l[2] && l[2] > l[3] \n        true\n\
    \    elseif l[1] < l[2] && l[2] < l[3] \n        false\n    elseif l[1] < l[2]\
    \ && l[2] > l[3] \n        false\n    elseif l[1] > l[2] && l[2] > l[3] \n   \
    \     true\n    elseif l[1] < l[2] && l[2] < l[3] \n        false\n    elseif\
    \ l[1] < l[2] && l[2] > l[3] \n        false\n    elseif l[1] > l[2] && l[2] >\
    \ l[3] \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n        false\n\
    \    elseif l[1] < l[2] && l[2] > l[3] \n        false\n    elseif l[1] > l[2]\
    \ && l[2] > l[3] \n        true\n    elseif l[1] < l[2] && l[2] < l[3] \n    \
    \    false\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvig2fo4j.jl:1\nin expression starting at /tmp/tmpvig2fo4j.jl:1\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end-1]\n \
    \   l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 1]\n    l = l[l .<\
    \ end]\n    return l == l\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplyxxywbh.jl:18\nin expression starting at\
    \ /tmp/tmplyxxywbh.jl:18\n"
  stdout: ''
  timestamp: 1659823008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpve85d_wf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpve85d_wf.jl:1\n\
    in expression starting at /tmp/tmpve85d_wf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    return all(l[1:end(l)] == l[2:end(l)]) \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3w782gfu.jl:15\nin expression starting at\
    \ /tmp/tmp3w782gfu.jl:15\n"
  stdout: ''
  timestamp: 1659823008

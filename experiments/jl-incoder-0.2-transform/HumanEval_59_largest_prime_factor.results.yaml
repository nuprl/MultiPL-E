language: jl
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^6)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^7)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^8)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^9)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^10)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^11)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^12)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^13)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^14)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^15)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^16)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^17)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^18)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^19)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^20)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^21)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^22)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^23)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^24)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^25)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^26)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^27)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^28)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vsdtut3.jl:14\nin expression starting at\
    \ /tmp/tmp2vsdtut3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk8pmivc_.jl:9\nin expression starting at /tmp/tmpk8pmivc_.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2bduatpz.jl:10\nin expression starting at\
    \ /tmp/tmp2bduatpz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx6kzbku.jl:14\nin expression starting at\
    \ /tmp/tmpzx6kzbku.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    \n    p := 2\n    while p*p <= n do\n        p := p*p\n    end\n\
    \    return p\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive and are not zero. Assume that both numbers\
    \ are relatively prime to each other.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpap623ywd.jl:11\nin expression starting at /tmp/tmpap623ywd.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 127 == 0 \n        then return 127\n\
    \    else if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0\
    \ \n        then return 137\n    else if n % 141 == 0 \n        then return 141\n\
    \    else if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0\
    \ \n        then return 151\n    else if n % 157 == 0 \n        then return 157\n\
    \    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaw2onusr.jl:9\nin expression starting at /tmp/tmpaw2onusr.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else if n==2 \n        return 2 \n    else if n%2==0\
    \ \n        return largest_prime_factor(n/2) \n    else \n        return largest_prime_factor(n/2)\
    \ + largest_prime_factor(n/3) \nend\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsw2mfbll.jl:10\nin expression starting at\
    \ /tmp/tmpsw2mfbll.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"Return the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    3\n    >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc564hytn.jl:14\nin expression starting at\
    \ /tmp/tmpc564hytn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx6kzbku.jl:14\nin expression starting at\
    \ /tmp/tmpzx6kzbku.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ (GCD) of two positive integers. Assume that both integers are positive.\nHint:\
    \ use the Euclidean algorithm.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4sf9gb1x.jl:14\nin expression starting at\
    \ /tmp/tmp4sf9gb1x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsq6mt8yv.jl:9\nin expression starting at /tmp/tmpsq6mt8yv.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume that n is a prime.\nHint: Use a while loop.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjz4uieft.jl:14\nin expression starting at\
    \ /tmp/tmpjz4uieft.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime factorization\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2l6wp76g.jl:14\nin expression starting at\
    \ /tmp/tmp2l6wp76g.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000001)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000002)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000003)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000004)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000005)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000006)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000007)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000008)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000009)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000010)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000011)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000012)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000013)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000014)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000015)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000016)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000017)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000018)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000019)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000020)\n</cell>\n\
    <code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuix814bq.jl:9\nin expression starting at /tmp/tmpuix814bq.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: use largest_prime_factor\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9l1ehj0e.jl:14\nin expression starting at\
    \ /tmp/tmp9l1ehj0e.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbskbj0xn.jl:9\nin expression starting at /tmp/tmpbskbj0xn.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n        return\
    \ n\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: use the function largest_prime_factor\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi5ktf8dp.jl:9\nin expression starting at /tmp/tmpi5ktf8dp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''

language: jl
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^6)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^7)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^8)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^9)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^10)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^11)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^12)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^13)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^14)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^15)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^16)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^17)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^18)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^19)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^20)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^21)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^22)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^23)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^24)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^25)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^26)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^27)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^28)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vsdtut3.jl:14\nin expression starting at\
    \ /tmp/tmp2vsdtut3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk8pmivc_.jl:9\nin expression starting at /tmp/tmpk8pmivc_.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2bduatpz.jl:10\nin expression starting at\
    \ /tmp/tmp2bduatpz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx6kzbku.jl:14\nin expression starting at\
    \ /tmp/tmpzx6kzbku.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    \n    p := 2\n    while p*p <= n do\n        p := p*p\n    end\n\
    \    return p\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive and are not zero. Assume that both numbers\
    \ are relatively prime to each other.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpap623ywd.jl:11\nin expression starting at /tmp/tmpap623ywd.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 127 == 0 \n        then return 127\n\
    \    else if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0\
    \ \n        then return 137\n    else if n % 141 == 0 \n        then return 141\n\
    \    else if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0\
    \ \n        then return 151\n    else if n % 157 == 0 \n        then return 157\n\
    \    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaw2onusr.jl:9\nin expression starting at /tmp/tmpaw2onusr.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else if n==2 \n        return 2 \n    else if n%2==0\
    \ \n        return largest_prime_factor(n/2) \n    else \n        return largest_prime_factor(n/2)\
    \ + largest_prime_factor(n/3) \nend\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsw2mfbll.jl:10\nin expression starting at\
    \ /tmp/tmpsw2mfbll.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"Return the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    3\n    >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc564hytn.jl:14\nin expression starting at\
    \ /tmp/tmpc564hytn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx6kzbku.jl:14\nin expression starting at\
    \ /tmp/tmpzx6kzbku.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ (GCD) of two positive integers. Assume that both integers are positive.\nHint:\
    \ use the Euclidean algorithm.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4sf9gb1x.jl:14\nin expression starting at\
    \ /tmp/tmp4sf9gb1x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsq6mt8yv.jl:9\nin expression starting at /tmp/tmpsq6mt8yv.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume that n is a prime.\nHint: Use a while loop.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjz4uieft.jl:14\nin expression starting at\
    \ /tmp/tmpjz4uieft.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime factorization\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2l6wp76g.jl:14\nin expression starting at\
    \ /tmp/tmp2l6wp76g.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000001)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000002)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000003)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000004)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000005)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000006)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000007)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000008)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000009)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000010)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000011)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000012)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000013)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000014)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000015)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000016)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000017)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000018)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000019)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000020)\n</cell>\n\
    <code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuix814bq.jl:9\nin expression starting at /tmp/tmpuix814bq.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: use largest_prime_factor\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9l1ehj0e.jl:14\nin expression starting at\
    \ /tmp/tmp9l1ehj0e.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbskbj0xn.jl:9\nin expression starting at /tmp/tmpbskbj0xn.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n        return\
    \ n\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: use the function largest_prime_factor\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi5ktf8dp.jl:9\nin expression starting at /tmp/tmpi5ktf8dp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyx8er31q.jl:9\nin expression starting at /tmp/tmpyx8er31q.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest = 2\n        for p in prime_factors(n) \n        \
    \    if p > largest \n                then largest = p\n        return largest\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\n\
    Write a function that returns the number of prime factors of a given number. Assume\
    \ n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4h5yt8s9.jl:9\nin expression starting at /tmp/tmp4h5yt8s9.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo88p7sxc.jl:9\nin expression starting at /tmp/tmpo88p7sxc.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.4>\n@time largest_prime_factor(20000000);\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to find the smallest\
    \ prime factor of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw3d3le01.jl:14\nin expression starting at\
    \ /tmp/tmpw3d3le01.jl:14\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob9_klla.jl:14\nin expression starting at\
    \ /tmp/tmpob9_klla.jl:14\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(sqrt(n)) * 3\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzqjl84_v.jl:9\nin expression starting at /tmp/tmpzqjl84_v.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        p := 3\n        while p < n \n            do if n %\
    \ p == 0 \n                then return p\n                p := p + 2\n       \
    \ end\n        return n\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjnn4312j.jl:9\nin expression starting at /tmp/tmpjnn4312j.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbpznw2r_.jl:9\nin expression starting at /tmp/tmpbpznw2r_.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnq30hnn5.jl:14\nin expression starting at\
    \ /tmp/tmpnq30hnn5.jl:14\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ if n % 3 == 0 \n        then return largest_prime_factor(n/3)\n    else if n\
    \ % 5 == 0 \n        then return largest_prime_factor(n/5)\n    else if n % 7\
    \ == 0 \n        then return largest_prime_factor(n/7)\n    else if n % 11 ==\
    \ 0 \n        then return largest_prime_factor(n/11)\n    else return largest_prime_factor(n*(n+1)/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyi1sh7r2.jl:9\nin expression starting at /tmp/tmpyi1sh7r2.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%3==0 \n        largest_prime_factor(n/3)\n\
    \    else \n        largest_prime_factor(n*3)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxa5ucxzs.jl:10\nin expression starting at\
    \ /tmp/tmpxa5ucxzs.jl:10\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfawhqwu7.jl:14\nin expression starting at\
    \ /tmp/tmpfawhqwu7.jl:14\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(7) == 3\n\
    @assert largest_prime_factor(11) == 5\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 11\n@assert largest_prime_factor(19) == 13\n\
    @assert largest_prime_factor(23) == 17\n@assert largest_prime_factor(29) == 19\n\
    @assert largest_prime_factor(31) == 23\n@assert largest_prime_factor(37) == 29\n\
    @assert largest_prime_factor(43) == 31\n@assert largest_prime_factor(47) == 37\n\
    @assert largest_prime_factor(53) == 43\n@assert largest_prime_factor(59) == 47\n\
    @assert largest_prime_factor(61) == 53\n@assert largest_prime_factor(67) == 59\n\
    @assert largest_prime_factor(71) \n</cell>\n<text>\nProblem 7: Prime Factors\n\
    A positive integer $n$ has $n$ prime factors. For example, $3$ has $3$ prime factors,\
    \ $5$ has $5$, and so on. Write a function that finds the prime factors of a given\
    \ positive integer $n$. For example, prime_factors(3) should return $[3,3]$. You\
    \ may wish to use the sieve of Eratosthenes to speed up the calculation.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wehabog.jl:14\nin expression starting at\
    \ /tmp/tmp0wehabog.jl:14\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8z5m6vgi.jl:9\nin expression starting at /tmp/tmp8z5m6vgi.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        p := largest_prime_factor(n/2) \n        while p*p <= n \n\
    \            do return p\n            p := p + 2\n        end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyzp8nd_1.jl:9\nin expression starting at /tmp/tmpyzp8nd_1.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(10) == 2 \n@assert\
    \ largest_prime_factor(11) == 3 \n@assert largest_prime_factor(12) == 5 \n@assert\
    \ largest_prime_factor(13) == 7 \n@assert largest_prime_factor(14) == 11 \n@assert\
    \ largest_prime_factor(15) == 13 \n@assert largest_prime_factor(16) == 17 \n@assert\
    \ largest_prime_factor(17) == 19 \n@assert largest_prime_factor(18) == 23 \n@assert\
    \ largest_prime_factor(19) == 29 \n@assert largest_prime_factor(20) == 29 \n@assert\
    \ largest_prime_factor(21) == 29 \n@assert largest_prime_factor(22) == 29 \n@assert\
    \ largest_prime_factor(23) == 29 \n@assert largest_prime_factor(24) == 29 \n@assert\
    \ largest_prime_factor(25) == 29 \n@assert largest_prime_factor(26) == 29 \n@assert\
    \ largest_prime_factor(27) == 29 \n@assert largest_prime_factor(28) == 29 \n@assert\
    \ largest_prime_factor(29) == 29 \n@assert largest_prime_factor(30) == 29 \n@assert\
    \ largest_prime_factor(31) == 29 \n@assert largest_prime_factor(32) == 29 \n@assert\
    \ largest_prime_factor(33) == 29 \n@assert largest_prime_factor(34) == 29 \n@assert\
    \ largest_prime_factor(35) == 29 \n@assert largest_prime_factor(36) == 29 \n@assert\
    \ largest_prime_factor(37) == 29 \n@assert largest_prime_factor(38) == 29 \n@assert\
    \ largest_prime_factor(39) == 29 \n@assert largest_prime_factor(40) == 29 \n@assert\
    \ largest_prime_factor(41) == 29 \n@assert largest_prime_factor(42) == 29 \n@assert\
    \ largest_prime_factor(43) == 29 \n@assert largest_prime_factor(44) == 29 \n@assert\
    \ largest_prime_factor(45) == 29 \n@assert largest_prime_factor(46) == 29 \n@assert\
    \ largest_prime_factor(47) == 29 \n@assert largest_prime_factor(48) == 29 \n@assert\
    \ largest_prime_factor(49) == 29 \n@assert largest_prime_factor(50) == 29 \n@assert\
    \ largest_prime_factor(51) == 29 \n@assert largest_prime_factor(52) == 29 \n@assert\
    \ largest_prime_factor(\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6y_u9zc0.jl:13\nin expression starting at\
    \ /tmp/tmp6y_u9zc0.jl:13\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjtasgm9e.jl:9\nin expression starting at /tmp/tmpjtasgm9e.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf_4bu1q.jl:13\nin expression starting at\
    \ /tmp/tmplf_4bu1q.jl:13\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv3x4wqsr.jl:10\nin expression starting at\
    \ /tmp/tmpv3x4wqsr.jl:10\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else \n        p := largest_prime_factor(n-1) \n  \
    \      if p*p==n \n            return p \n        else \n            return p\
    \ \nend \n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpys_zacrd.jl:17\nin expression starting at\
    \ /tmp/tmpys_zacrd.jl:17\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return 1 \n    else \n        return largest_prime_factor(n /\
    \ 2) \nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: use largest_prime_factor\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zmxmdz_.jl:13\nin expression starting at\
    \ /tmp/tmp0zmxmdz_.jl:13\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \n        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo9wp5hdx.jl:9\nin expression starting at /tmp/tmpo9wp5hdx.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphhucs69h.jl:9\nin expression starting at /tmp/tmphhucs69h.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxhxnpb54.jl:14\nin expression starting at\
    \ /tmp/tmpxhxnpb54.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwxp2vq5l.jl:14\nin expression starting at\
    \ /tmp/tmpwxp2vq5l.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return 1 \n    else if n == 2 \n        return 2 \n    else \n\
    \        p := largest_prime_factor(n/2) \n        if n % p == 0 \n           \
    \ return p \n        else \n            return p \nend \n</cell>\n<code language=julia-1.4>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4zgp8psw.jl:10\nin expression starting at\
    \ /tmp/tmp4zgp8psw.jl:10\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\nHint: Use a while loop and a conditional statement to\
    \ find the smallest prime factor of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1_hmk9x7.jl:14\nin expression starting at\
    \ /tmp/tmp1_hmk9x7.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8lsg03q.jl:9\nin expression starting at /tmp/tmpn8lsg03q.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n       \
    \ then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if n\
    \ % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0\
    \ \n        then return 157\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpddi1yphs.jl:9\nin expression starting at /tmp/tmpddi1yphs.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for m in 3:1:largest\n       \
    \     if n % m == 0 \n                then return largest\n            largest\
    \ = m\n        end\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx80n8dtv.jl:9\nin expression starting at /tmp/tmpx80n8dtv.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp109zptm4.jl:14\nin expression starting at\
    \ /tmp/tmp109zptm4.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000);\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_dvjsx8.jl:14\nin expression starting at\
    \ /tmp/tmpx_dvjsx8.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000);\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp73q8o9x4.jl:9\nin expression starting at /tmp/tmp73q8o9x4.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Hint: You may want to use the sieve of Eratosthenes or the Sieve of Atkin.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpci7e2v1o.jl:9\nin expression starting at /tmp/tmpci7e2v1o.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := largest_prime_factor(n / 2)\n        if n % p == 0 \n\
    \            then return p\n        else return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8_58wfio.jl:9\nin expression starting at /tmp/tmp8_58wfio.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbfwe12ju.jl:9\nin expression starting at /tmp/tmpbfwe12ju.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    else if n==2 then return 2\n    else if n%2==0 then return\
    \ largest_prime_factor(n/2)\n    else return largest_prime_factor(n/2) + largest_prime_factor(n/3)\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvqluvt8r.jl:8\nin expression starting at /tmp/tmpvqluvt8r.jl:8\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor of two positive integers. Assume that both integers are positive.\n\
    Hint: use Euclid's algorithm.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq1u8ynup.jl:14\nin expression starting at\
    \ /tmp/tmpq1u8ynup.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n   \
    \ >>> largest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2dpalhmd.jl:14\nin expression starting at\
    \ /tmp/tmp2dpalhmd.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoud9b2wd.jl:9\nin expression starting at /tmp/tmpoud9b2wd.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa_z8xkuf.jl:14\nin expression starting at\
    \ /tmp/tmpa_z8xkuf.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"Return the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n   \
    \ >>> largest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpulop91z3.jl:14\nin expression starting at\
    \ /tmp/tmpulop91z3.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%3==0 return n\n    \n    factors=[]\n\
    \    \n    for f in factors(n)\n        if f>n \n            factors.push(f)\n\
    \        else\n            break\n    \n    return factors[factors.length-1]\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq5791emi.jl:22\nin expression starting at\
    \ /tmp/tmpq5791emi.jl:22\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else if n % 3 == 0 \n        then return largest_prime_factor(n /\
    \ 3)\n    else if n % 5 == 0 \n        then return largest_prime_factor(n / 5)\n\
    \    else if n % 7 == 0 \n        then return largest_prime_factor(n / 7)\n  \
    \  else if n % 11 == 0 \n        then return largest_prime_factor(n / 11)\n  \
    \  else if n % 13 == 0 \n        then return largest_prime_factor(n / 13)\n  \
    \  else if n % 17 == 0 \n        then return largest_prime_factor(n / 17)\n  \
    \  else if n % 19 == 0 \n        then return largest_prime_factor(n / 19)\n  \
    \  else if n % 23 == 0 \n        then return largest_prime_factor(n / 23)\n  \
    \  else if n % 29 == 0 \n        then return largest_prime_factor(n / 29)\n  \
    \  else if n % 31 == 0 \n        then return largest_prime_factor(n / 31)\n  \
    \  else if n % 37 == 0 \n        then return largest_prime_factor(n / 37)\n  \
    \  else if n % 41 == 0 \n        then return largest_prime_factor(n / 41)\n  \
    \  else if n % 43 == 0 \n        then return largest_prime_factor(n / 43)\n  \
    \  else if n % 47 == 0 \n        then return largest_prime_factor(n / 47)\n  \
    \  else if n % 53 == 0 \n        then return largest_prime_factor(n / 53)\n  \
    \  else if n % 59 == 0 \n        then return largest_prime_factor(n / 59)\n  \
    \  else if n % 61 == 0 \n        then return largest_prime_factor(n / 61)\n  \
    \  else if n % 67 == 0 \n        then return largest_prime_factor(n / 67)\n  \
    \  else if n % 71 == 0 \n        then return largest_prime_factor(n / 71)\n  \
    \  else if n % 73 == 0 \n        then return largest_prime_factor(n / 73)\n  \
    \  else if n % 79 == 0 \n        then return largest_prime_factor(n / 79)\n  \
    \  else if n % 83 == 0 \n        then return largest_prime_factor(n / 83)\n  \
    \  else if n % 89 == 0 \n        then return largest_prime_factor(n / 89)\n  \
    \  else if n % 97 == 0 \n        \nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps3vg6c0o.jl:9\nin expression starting at /tmp/tmps3vg6c0o.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7yy5sezc.jl:14\nin expression starting at\
    \ /tmp/tmp7yy5sezc.jl:14\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%3==0 return n\n    if n%5==0 return\
    \ n\n    if n%7==0 return n\n    if n%11==0 return n\n    if n%13==0 return n\n\
    \    if n%17==0 return n\n    if n%19==0 return n\n    if n%23==0 return n\n \
    \   if n%29==0 return n\n    if n%31==0 return n\n    if n%37==0 return n\n  \
    \  if n%41==0 return n\n    if n%43==0 return n\n    if n%47==0 return n\n   \
    \ if n%53==0 return n\n    if n%59==0 return n\n    if n%61==0 return n\n    if\
    \ n%67==0 return n\n    if n%73==0 return n\n    if n%79==0 return n\n    if n%83==0\
    \ return n\n    if n%89==0 return n\n    if n%97==0 return n\n    if n%103==0\
    \ return n\n    if n%107==0 return n\n    if n%113==0 return n\n    if n%119==0\
    \ return n\n    if n%127==0 return n\n    if n%131==0 return n\n    if n%137==0\
    \ return n\n    if n%141==0 return n\n    if n%147==0 return n\n    if n%153==0\
    \ return n\n    if n%159==0 return n\n    if n%163==0 return n\n    if n%167==0\
    \ return n\n    if n%173==0 return n\n    if n%179==0 return n\n    if n%183==0\
    \ return n\n    if n%189==0 return n\n    if n%193==0 return n\n    if n%197==0\
    \ return n\n    if n%201==0 return n\n    if n%205==0 return n\n    if n%209==0\
    \ return n\n    if n%213==0 return n\n    if n%217==0 return n\n    if n%223==0\
    \ return n\n    if n%227==0 return n\n    if n%231==0 return n\n    if n%235==0\
    \ return n\n    if n%239==0 return n\n    if n%243==0 return n\n    if n%247==0\
    \ return n\n    if n%\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76cvk2_8.jl:1\nin expression starting at /tmp/tmp76cvk2_8.jl:1\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n            end\n\
    \        end\n        return n\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppbk2em_a.jl:9\nin expression starting at /tmp/tmppbk2em_a.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\n\
    \        error(\"n must be positive\")\n    end\n    if n==2\n        return n\n\
    \    \n    factor::Int64 = 1\n    \n    while n%factor==0\n        factor+=1\n\
    \    end\n    \n    return factor\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwiqqyaof.jl:22\nin expression starting at\
    \ /tmp/tmpwiqqyaof.jl:22\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplcboye5s.jl:10\nin expression starting at\
    \ /tmp/tmplcboye5s.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for m in 3:1:largest\n       \
    \     if n % m == 0 \n                then return largest\n            largest\
    \ = m\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi8i8yl4r.jl:9\nin expression starting at /tmp/tmpi8i8yl4r.jl:9\n"
  stdout: ''
  timestamp: 1659823122
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9dqnadj.jl:14\nin expression starting at\
    \ /tmp/tmpw9dqnadj.jl:14\n"
  stdout: ''
  timestamp: 1659823122
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n == 2 \n        then return 1\n  \
    \  else \n        p := 2\n        while p < n \n            do if n % p == 0 \n\
    \                then return p\n                p := p * 2\n            end\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(2)\
    \ == 2 \"largest_prime_factor(2) failed\"\n@assert largest_prime_factor(3) ==\
    \ 1 \"largest_prime_factor(3) failed\"\n@assert largest_prime_factor(5) == 2 \"\
    largest_prime_factor(5) failed\"\n@assert largest_prime_factor(7) == 3 \"largest_prime_factor(7)\
    \ failed\"\n@assert largest_prime_factor(11) == 5 \"largest_prime_factor(11) failed\"\
    \n@assert largest_prime_factor(13) == 7 \"largest_prime_factor(13) failed\"\n\
    @assert largest_prime_factor(17) == 11 \"largest_prime_factor(17) failed\"\n@assert\
    \ largest_prime_factor(29) == 13 \"largest_prime_factor(29) failed\"\n@assert\
    \ largest_prime_factor(31) == 17 \"largest_prime_factor(31) failed\"\n@assert\
    \ largest_prime_factor(41) == 29 \"largest_prime_factor(41) failed\"\n@assert\
    \ largest_prime_factor(43) == 31 \"largest_prime_factor(43) failed\"\n@assert\
    \ largest_prime_factor(47) == 41 \"largest_prime_factor(47) failed\"\n@assert\
    \ largest_prime_factor(59) == 43 \"largest_prime_factor(59) failed\"\n@assert\
    \ largest_prime_factor(61) == 47 \"largest_prime_factor(61) failed\"\n@assert\
    \ largest_prime_factor(73) == 59 \"largest_prime_factor(73) failed\"\n@assert\
    \ largest_prime_factor(79) == 61 \"largest_prime_factor(79) failed\"\n@assert\
    \ largest_prime_factor(89) == 73 \"largest_prime_factor(89) failed\"\n@assert\
    \ largest_prime_factor(97) == 79 \"largest_prime_factor(97) failed\"\n@assert\
    \ largest_prime_factor(101) == 89 \"largest_prime_factor(101) failed\"\n@assert\
    \ largest_prime_factor(103) == 97 \"largest_prime_factor(103) failed\"\n@assert\
    \ largest_prime_factor(107) == 101 \"largest_prime_factor(107) failed\"\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfk2si105.jl:9\nin expression starting at /tmp/tmpfk2si105.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa8mpf48h.jl:9\nin expression starting at /tmp/tmpa8mpf48h.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else if n % 3 == 0 \n        then return largest_prime_factor(n /\
    \ 3)\n    else if n % 5 == 0 \n        then return largest_prime_factor(n / 5)\n\
    \    else if n % 7 == 0 \n        then return largest_prime_factor(n / 7)\n  \
    \  else if n % 11 == 0 \n        then return largest_prime_factor(n / 11)\n  \
    \  else if n % 13 == 0 \n        then return largest_prime_factor(n / 13)\n  \
    \  else if n % 17 == 0 \n        then return largest_prime_factor(n / 17)\n  \
    \  else if n % 19 == 0 \n        then return largest_prime_factor(n / 19)\n  \
    \  else if n % 23 == 0 \n        then return largest_prime_factor(n / 23)\n  \
    \  else if n % 29 == 0 \n        then return largest_prime_factor(n / 29)\n  \
    \  else if n % 31 == 0 \n        then return largest_prime_factor(n / 31)\n  \
    \  else if n % 37 == 0 \n        then return largest_prime_factor(n / 37)\n  \
    \  else if n % 41 == 0 \n        then return largest_prime_factor(n / 41)\n  \
    \  else if n % 43 == 0 \n        then return largest_prime_factor(n / 43)\n  \
    \  else if n % 47 == 0 \n        then return largest_prime_factor(n / 47)\n  \
    \  else if n % 53 == 0 \n        then return largest_prime_factor(n / 53)\n  \
    \  else if n % 59 == 0 \n        then return largest_prime_factor(n / 59)\n  \
    \  else if n % 61 == 0 \n        then return largest_prime_factor(n / 61)\n  \
    \  else if n % 67 == 0 \n        then return largest_prime_factor(n / 67)\n  \
    \  else if n % 71 == 0 \n        then return largest_prime_factor(n / 71)\n  \
    \  else if n % 73 == 0 \n        then return largest_prime_factor(n / 73)\n  \
    \  else if n % 79 == 0 \n        then return largest_prime_factor(n / 79)\n  \
    \  else if n % 83 == 0 \n        then return largest_prime_factor(n / 83)\n  \
    \  else if n % 89 == 0 \n        then return largest_prime_factor(n / 89)\n  \
    \  else if n % 97 == 0 \n        \nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps3vg6c0o.jl:9\nin expression starting at /tmp/tmps3vg6c0o.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(7) == 3\n\
    @assert largest_prime_factor(12) == 3\n@assert largest_prime_factor(17) == 7\n\
    @assert largest_prime_factor(19) == 3\n@assert largest_prime_factor(25) == 5\n\
    @assert largest_prime_factor(29) == 3\n@assert largest_prime_factor(31) == 7\n\
    @assert largest_prime_factor(35) == 3\n@assert largest_prime_factor(39) == 5\n\
    @assert largest_prime_factor(41) == 3\n@assert largest_prime_factor(47) == 7\n\
    @assert largest_prime_factor(53) == 3\n@assert largest_prime_factor(59) == 7\n\
    @assert largest_prime_factor(61) == 3\n@assert largest_prime_factor(67) == 5\n\
    @assert largest_prime_factor(71) ==  3\n@assert largest_prime_factor(73) == 7\n\
    @assert largest_prime_factor(79) == 3\n@assert largest_prime_factor(83) == 11\n\
    @assert largest_prime_factor(89) == 3\n@assert largest_prime_factor(97) == 11\n\
    </cell>\n<text>\nProblem 7: Largest prime factor\nA palindromic number reads the\
    \ same both ways. The largest palindrome made from the product of two 2-digit\
    \ numbers is 9009 = 91 \xD7 99.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjwmf3dh.jl:14\nin expression starting at\
    \ /tmp/tmpwjwmf3dh.jl:14\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplg3hrh47.jl:13\nin expression starting at\
    \ /tmp/tmplg3hrh47.jl:13\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp74xd6awb.jl:9\nin expression starting at /tmp/tmp74xd6awb.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Hint: Use a sieve of Eratosthenes or Sieve of Atkin.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpol517r5n.jl:9\nin expression starting at /tmp/tmpol517r5n.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.1>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgm5l4kk3.jl:9\nin expression starting at /tmp/tmpgm5l4kk3.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpefb9f2to.jl:10\nin expression starting at\
    \ /tmp/tmpefb9f2to.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> smallest_prime_factor(13195)\n    3\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5zihlbi1.jl:10\nin expression starting at\
    \ /tmp/tmp5zihlbi1.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyx8er31q.jl:9\nin expression starting at /tmp/tmpyx8er31q.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else if n % 2 == 0 \n        largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(3*n+1) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime factorization\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5in6snge.jl:10\nin expression starting at\
    \ /tmp/tmp5in6snge.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for i = 3 to sqrt(n) \n      \
    \      largest = i if n % i == 0 \n            largest = largest if largest %\
    \ i == 0 \n        return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function prime_sum(n::Int64)::Int64 that returns the sum of\
    \ the prime factors of n. Assume n > 1 and is not a prime.\n    >>> prime_sum(13195)\n\
    \    29\n    >>> prime_sum(2048)\n    8\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkmqzujwx.jl:9\nin expression starting at /tmp/tmpkmqzujwx.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for p in prime_factors(n) \n \
    \           if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsqj6b3h2.jl:9\nin expression starting at /tmp/tmpsqj6b3h2.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwgqgbmw.jl:14\nin expression starting at\
    \ /tmp/tmptwgqgbmw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nHint: Use\
    \ a while loop and a prime factorization function.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc8goq2l7.jl:10\nin expression starting at\
    \ /tmp/tmpc8goq2l7.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend \n</cell>\n\
    <code language=julia-1.1>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5zoz09uq.jl:13\nin expression starting at\
    \ /tmp/tmp5zoz09uq.jl:13\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ if n % 3 == 0 \n        then return largest_prime_factor(n/3)\n    else if n\
    \ % 5 == 0 \n        then return largest_prime_factor(n/5)\n    else if n % 7\
    \ == 0 \n        then return largest_prime_factor(n/7)\n    else if n % 11 ==\
    \ 0 \n        then return largest_prime_factor(n/11)\n    else if n % 13 == 0\
    \ \n        then return largest_prime_factor(n/13)\n    else if n % 17 == 0 \n\
    \        then return largest_prime_factor(n/17)\n    else if n % 19 == 0 \n  \
    \      then return largest_prime_factor(n/19)\n    else if n % 23 == 0 \n    \
    \    then return largest_prime_factor(n/23)\n    else if n % 29 == 0 \n      \
    \  then return largest_prime_factor(n/29)\n    else if n % 31 == 0 \n        then\
    \ return largest_prime_factor(n/31)\n    else if n % 37 == 0 \n        then return\
    \ largest_prime_factor(n/37)\n    else if n % 41 == 0 \n        then return largest_prime_factor(n/41)\n\
    \    else if n % 43 == 0 \n        then return largest_prime_factor(n/43)\n  \
    \  else if n % 47 == 0 \n        then return largest_prime_factor(n/47)\n    else\
    \ if n % 53 == 0 \n        then return largest_prime_factor(n/53)\n    else if\
    \ n % 59 == 0 \n        then return largest_prime_factor(n/59)\n    else if n\
    \ % 61 == 0 \n        then return largest_prime_factor(n/61)\n    else if n %\
    \ 67 == 0 \n        then return largest_prime_factor(n/67)\n    else if n % 71\
    \ == 0 \n        then return largest_prime_factor(n/71)\n    else if n % 73 ==\
    \ 0 \n        then return largest_prime_factor(n/73)\n    else if n % 79 == 0\
    \ \n        then return largest_prime_factor(n/79)\n    else if n % 83 == 0 \n\
    \        then return largest_prime_factor(n/83)\n    else if n % 89 == 0 \n  \
    \      then return largest_prime_factor(n/89)\n    else if n % 97 == 0 \n    \
    \    then return largest_prime_factor(n/97)\n    else if n % 101 == \nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgwulb3_o.jl:9\nin expression starting at /tmp/tmpgwulb3_o.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := largest_prime_factor(n / 2)\n        if n % p == 0 \n\
    \            then return p\n        else return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbo8g42xt.jl:9\nin expression starting at /tmp/tmpbo8g42xt.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else if n==2 \n        return 2 \n    else if n%2==0\
    \ \n        return largest_prime_factor(n/2) \n    else \n        return largest_prime_factor(n/2)\
    \ + largest_prime_factor(n/2) \nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function prime_sum(n::Int64) which returns the sum of the\
    \ prime factors of n. Assume n > 1 and is not a prime.\nFor example, prime_sum(12)\
    \ should return 1 + 2 + 3 + 5 = 10.\nHint: Use a for loop to iterate over all\
    \ prime factors.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9q4hdew9.jl:10\nin expression starting at\
    \ /tmp/tmp9q4hdew9.jl:10\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n@time largest_prime_factor(2000000)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: use largest_prime_factor\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9j3rdru3.jl:9\nin expression starting at /tmp/tmp9j3rdru3.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest = 2\n        for p in prime_factors(n) \n        \
    \    if p > largest \n                then largest = p\n        return largest\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(13) == 13\n\
    @assert largest_prime_factor(14) == 14\n@assert largest_prime_factor(15) == 7\n\
    @assert largest_prime_factor(16) == 5\n@assert largest_prime_factor(17) == 17\n\
    @assert largest_prime_factor(18) == 3\n@assert largest_prime_factor(19) == 19\n\
    @assert largest_prime_factor(20) == 7\n@assert largest_prime_factor(21) == 2\n\
    @assert largest_prime_factor(22) == 7\n@assert largest_prime_factor(23) == 3\n\
    @assert largest_prime_factor(24) == 5\n@assert largest_prime_factor(25) == 5\n\
    @assert largest_prime_factor(26) == 7\n@assert largest_prime_factor(27) == 11\n\
    @assert largest_prime_factor(28) == 7\n@assert largest_prime_factor(29) == 29\n\
    @assert largest_prime_factor(30) == 5\n@assert largest_prime_factor(31) == 7\n\
    @assert largest_prime_factor(32) == 13\n@assert largest_prime_factor(33) == 11\n\
    @assert largest_prime_factor(34) == 13\n@assert largest_prime_factor(35) == 17\n\
    @assert largest_prime_factor(36) == 19\n@assert largest_prime_factor(37) == 23\n\
    @assert largest_prime_factor(38) == 29\n@assert largest_prime_factor(39) == 31\n\
    @assert largest_prime_factor(40) == 31\n@assert largest_prime_factor(41) == 33\n\
    @assert largest_prime_factor(42) == 39\n@assert largest_prime_factor(43) == 41\n\
    @assert largest_prime_factor(44) == 43\n@assert largest_prime_factor(45) == 47\n\
    @assert largest_prime_factor(46) == 23\n@assert largest_prime_factor(47) == 29\n\
    @assert largest_prime_factor(48) == 31\n@assert largest_prime_factor(49) == 37\n\
    @assert largest_prime_factor(50) == 41\n@assert largest_prime_factor(51) == 43\n\
    @assert largest_prime_factor(52) == 57\n@assert largest_\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1x3la8f1.jl:9\nin expression starting at /tmp/tmp1x3la8f1.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    if n==2 then return 2\n    if n%2==0 then return n//2\n \
    \   \n    largest=2\n    largest=n\n    while largest%2==0 do\n        largest=largest/2\n\
    \    end\n    while largest%3==0 do\n        largest=largest/3\n    end\n    while\
    \ largest%5==0 do\n        largest=largest/5\n    end\n    while largest%7==0\
    \ do\n        largest=largest/7\n    end\n    while largest%11==0 do\n       \
    \ largest=largest/11\n    end\n    while largest%13==0 do\n        largest=largest/13\n\
    \    end\n    while largest%17==0 do\n        largest=largest/17\n    end\n  \
    \  while largest%19==0 do\n        largest=largest/19\n    end\n    while largest%23==0\
    \ do\n        largest=largest/23\n    end\n    while largest%29==0 do\n      \
    \  largest=largest/29\n    end\n    while largest%31==0 do\n        largest=largest/31\n\
    \    end\n    while largest%37==0 do\n        largest=largest/37\n    end\n  \
    \  while largest%41==0 do\n        largest=largest/41\n    end\n    while largest%43==0\
    \ do\n        largest=largest/43\n    end\n    while largest%47==0 do\n      \
    \  largest=largest/47\n    end\n    while largest%53==0 do\n        largest=largest/53\n\
    \    end\n    while largest%59==0 do\n        largest=largest/59\n    end\n  \
    \  while largest%61==0 do\n        largest=largest/61\n    end\n    while largest%67==0\
    \ do\n        largest=largest/67\n    end\n    while largest%71==0 do\n      \
    \  largest=largest/71\n    end\n    while largest%73==0 do\n        largest=largest/73\n\
    \    end\n    while largest%79==0 do\n        largest=largest/79\n    end\n  \
    \  while largest%83==0 do\n        largest=largest/83\n    end\n    while largest%89==0\
    \ do\n        largest=lar\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5gjk5bnz.jl:8\nin expression starting at /tmp/tmp5gjk5bnz.jl:8\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return n\n    else if n % 5 == 0 \n        then return n\n    else if n\
    \ % 7 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n   \
    \ >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgp9hgse2.jl:9\nin expression starting at /tmp/tmpgp9hgse2.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        p := 3\n        while p < n \n            do if n %\
    \ p == 0 \n                then return p\n                p := p + 2\n       \
    \ end\n        return n\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of prime factors of n. Assume\
    \ n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3qq06xz4.jl:9\nin expression starting at /tmp/tmp3qq06xz4.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgko0h7xd.jl:9\nin expression starting at /tmp/tmpgko0h7xd.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp51mvhtal.jl:9\nin expression starting at /tmp/tmp51mvhtal.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor(n::Int64)::Int64\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzf3rm54b.jl:13\nin expression starting at\
    \ /tmp/tmpzf3rm54b.jl:13\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend \n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpstfqrh5_.jl:13\nin expression starting at\
    \ /tmp/tmpstfqrh5_.jl:13\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else \n        largest = 2\n\
    \        for factor in prime_factors(n) \n            if factor > largest \n \
    \               then largest = factor \n        return largest\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of prime factors of a given number. Assume\
    \ that n > 1.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe4dtg26x.jl:9\nin expression starting at /tmp/tmpe4dtg26x.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n-1) * n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    3\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp48211ax2.jl:13\nin expression starting at\
    \ /tmp/tmp48211ax2.jl:13\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the smallest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxv5hh3c5.jl:9\nin expression starting at /tmp/tmpxv5hh3c5.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp87hqhvak.jl:14\nin expression starting at\
    \ /tmp/tmp87hqhvak.jl:14\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the nth prime factor\
    \ of n. Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa9n942jv.jl:13\nin expression starting at\
    \ /tmp/tmpa9n942jv.jl:13\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n@time largest_prime_factor(20000000)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: use the largest_prime_factor function you wrote\
    \ earlier.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjwnf3464.jl:9\nin expression starting at /tmp/tmpjwnf3464.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ of two numbers. Assume that both numbers are positive.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4gd77eix.jl:9\nin expression starting at /tmp/tmp4gd77eix.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a while loop and a conditional statement.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwi1d050p.jl:14\nin expression starting at\
    \ /tmp/tmpwi1d050p.jl:14\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest = 2\n        for m in 3:1:largest\n            if\
    \ n % m == 0 \n                then return largest\n            largest = m\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkafc12yl.jl:9\nin expression starting at /tmp/tmpkafc12yl.jl:9\n"
  stdout: ''
  timestamp: 1659823124
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for m in 3:1:largest\n       \
    \     if n % m == 0 \n                then return largest\n            largest\
    \ = m\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5pe26i7k.jl:9\nin expression starting at /tmp/tmp5pe26i7k.jl:9\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return n\n    else if n % 5 == 0 \n        then return n\n    else if n\
    \ % 7 == 0 \n        then return n\n    else \n        largest_prime_factor(n/3)\
    \ + 1\nend\n</code>\n<|/ a tags=julia,primes |>\n<| c |>\nThe `if` statement can\
    \ be replaced with `return n if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5 ==\
    \ 0 || n % 7 == 0`. Also, `largest_prime_factor(n/3) + 1` can be replaced with\
    \ `largest_prime_factor(n/3) * 3`.\n<|/ c |>\n<| c |>\nThanks, I didn't know that\
    \ you can do that. I'll edit my answer.\n<|/ c |>\n<| c |>\nThe `if` statement\
    \ can be replaced with `return n if n < 2 || n % 2 == 0 || n % 3 == 0 || n % 5\
    \ == 0 || n % 7 == 0`. Also, `largest_prime_factor(n/3) * 3` can be replaced with\
    \ `largest_prime_factor(n/3) * 3`.\n<|/ c |>\n<| c |>\nThanks, I didn't know that\
    \ you can do that. I'll edit my answer.\n<|/ c |>\n<| a |>\nThe simplest way is\
    \ to use Julia's built-in function factor:\n<code>\njulia> factor(123)\n(123,1)\n\
    </code>\n<|/ a tags=julia,primes dscore=4 |>\n<| c |>\nThis doesn't work for large\
    \ numbers. factor(2^1000) returns nothing\n<|/ c |>\n<| c |>\nIt works for me\
    \ (Julia 0.4.0). Are you sure you used `factor` and not `factorint`?\n<|/ c |>\n\
    <| c |>\nYes, I used factor. My Julia version is 0.4.1\n<|/ c |>\n<| c |>\nI see.\
    \ `factorint` doesn't exist in Julia 0.4.1. I guess it has been removed from the\
    \ package. I'll edit my answer.\n<|/ c |>\n<| c |>\nI guess `factorint` was removed\
    \ from Julia 0.4.1 because it was too slow. `factor` should be faster.\n<|/ c\
    \ |>\n<| a tags=julia,primes |>\nThe fastest way is to use factorint\n<code>\n\
    julia> factorint(2^1000)\n(2^1000,1)\n</code>\n<|/ a dscore=4 |>\n<| \nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr1wkm3ga.jl:9\nin expression starting at /tmp/tmpr1wkm3ga.jl:9\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n        end\n \
    \   end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9_bqmkr2.jl:9\nin expression starting at /tmp/tmp9_bqmkr2.jl:9\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for i = 3 to sqrt(n) \n      \
    \      do if n % i == 0 \n                then largest = i\n                break\n\
    \        return largest\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz3z7c0rd.jl:9\nin expression starting at /tmp/tmpz3z7c0rd.jl:9\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyx8er31q.jl:9\nin expression starting at /tmp/tmpyx8er31q.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9j0s3_be.jl:14\nin expression starting at\
    \ /tmp/tmp9j0s3_be.jl:14\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if n\
    \ % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0\
    \ \n        then return 157\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx1alus5l.jl:9\nin expression starting at /tmp/tmpx1alus5l.jl:9\n"
  stdout: ''
  timestamp: 1659823125
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := largest_prime_factor(n / 2)\n        if n % p == 0 \n\
    \            then return p\n        else return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbo8g42xt.jl:9\nin expression starting at /tmp/tmpbo8g42xt.jl:9\n"
  stdout: ''
  timestamp: 1659823123
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 1\n    i :: Int64 = 2\n    \n\
    \    while i * i <= n \n        p :: Int64 = i\n        i :: Int64 = i + 2\n \
    \   \n    return p\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^8)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^9)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^10)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^11)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^12)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^13)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^14)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^15)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^16)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^17)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^18)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^19)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^20)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^21)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^22)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^23)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^24)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^25)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^26)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^27)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^28)\n\
    </cell>\n<code language=julia-1.5>\n@time \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3hwvhurk.jl:20\nin expression starting at\
    \ /tmp/tmp3hwvhurk.jl:20\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else if n==2 \n        2 \n    else if n%2==0 \n        largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(n-1) \nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5qgtx3tz.jl:10\nin expression starting at\
    \ /tmp/tmp5qgtx3tz.jl:10\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9_fb40y8.jl:9\nin expression starting at /tmp/tmp9_fb40y8.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n        return\
    \ n\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz8o_8z29.jl:9\nin expression starting at /tmp/tmpz8o_8z29.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(n/3) + 1\nend\n</cell>\n<code language=julia-1.1>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ve2jfij.jl:9\nin expression starting at /tmp/tmp4ve2jfij.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for p in prime_factors(n) \n \
    \           do if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of prime factors of a given\
    \ number. Assume n > 1 and is not a prime.\nHint: Use a for loop.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphe5t7t_q.jl:9\nin expression starting at /tmp/tmphe5t7t_q.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptol40pd4.jl:14\nin expression starting at\
    \ /tmp/tmptol40pd4.jl:14\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the smallest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu3mip1d8.jl:9\nin expression starting at /tmp/tmpu3mip1d8.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2) \n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000);\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl2l6p10v.jl:10\nin expression starting at\
    \ /tmp/tmpl2l6p10v.jl:10\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzp4cfs64.jl:13\nin expression starting at\
    \ /tmp/tmpzp4cfs64.jl:13\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the greatest common divisor of two positive integers. Assume that both\
    \ numbers are positive integers and greater than 1.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwsxmrpum.jl:13\nin expression starting at\
    \ /tmp/tmpwsxmrpum.jl:13\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for p in prime_factors(n) \n \
    \           if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8kns70ka.jl:9\nin expression starting at /tmp/tmp8kns70ka.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        p := largest_prime_factor(n\
    \ / 2)\n        if n % p == 0 \n            then return p\n        else return\
    \ n\nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1fcorw9c.jl:9\nin expression starting at /tmp/tmp1fcorw9c.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: use the function prime_factor(n).\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjcls5wph.jl:14\nin expression starting at\
    \ /tmp/tmpjcls5wph.jl:14\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(10) == 2 \"This\
    \ function does not work as intended\"\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Hint: use the function largest_prime_factor\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfs85d23a.jl:14\nin expression starting at\
    \ /tmp/tmpfs85d23a.jl:14\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8z8bzjj7.jl:13\nin expression starting at\
    \ /tmp/tmp8z8bzjj7.jl:13\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpov42jsza.jl:10\nin expression starting at\
    \ /tmp/tmpov42jsza.jl:10\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpje3x_trn.jl:9\nin expression starting at /tmp/tmpje3x_trn.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest = 2\n        for i = 3 to n \n            largest\
    \ = largest if largest % i == 0 \n        return largest\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    \    >>> num_prime_factors(13195)\n    2\n    >>> num_prime_factors(2048)\n  \
    \  3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmposzjt_fe.jl:9\nin expression starting at /tmp/tmposzjt_fe.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else \n        largest = 2\n\
    \        for i = 3 to n \n            largest = i\n            if n % i == 0 \n\
    \                then largest = i\n                break\n        return largest\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: Use a for loop and a prime number checker function.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo8jv673x.jl:9\nin expression starting at /tmp/tmpo8jv673x.jl:9\n"
  stdout: ''
  timestamp: 1659823127
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5zdy5lhd.jl:9\nin expression starting at /tmp/tmp5zdy5lhd.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := largest_prime_factor(n / 2)\n        if n % p == 0 \n\
    \            then return p\n        else return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nProblem 4\nThe four adjacent digits in the 1000-digit number\
    \ that have the greatest product are 9 \xD7 9 \xD7 8 \xD7 9 = 5832.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm8nzn0xm.jl:9\nin expression starting at /tmp/tmpm8nzn0xm.jl:9\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    3\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplqys_omb.jl:10\nin expression starting at\
    \ /tmp/tmplqys_omb.jl:10\n"
  stdout: ''
  timestamp: 1659823126
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<text>\nExercise 3\nWrite a function prime_divisors(n::Int64)\
    \ which returns a list of prime divisors of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp13hq2zrf.jl:9\nin expression starting at /tmp/tmp13hq2zrf.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\n\
    \        error(\"n must be greater than 1\")\n    end\n    \n    if n==2\n   \
    \     return 2\n    end\n    \n    factors=[]\n    \n    for f in prime_factors(n)\n\
    \        if f>n\n            error(\"n must be greater than 1\")\n        end\n\
    \        factors.push(f)\n    end\n    \n    factors=sort(factors)\n    \n   \
    \ return factors[end-1]\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2048)\n</cell>\n\
    <text>\nExercise: Write a function that returns the greatest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a for loop to iterate over all prime\
    \ factors.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpagoe6bto.jl:29\nin expression starting at\
    \ /tmp/tmpagoe6bto.jl:29\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return n\n    else \n        largest_prime_factor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsnoh8voi.jl:14\nin expression starting at\
    \ /tmp/tmpsnoh8voi.jl:14\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpytsh1z18.jl:9\nin expression starting at /tmp/tmpytsh1z18.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for m in prime_factors(n) \n \
    \           if m > largest \n                then largest = m\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a for loop.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiqn_jry6.jl:9\nin expression starting at /tmp/tmpiqn_jry6.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%2==0 return 2\n    \n    primes=prime_factors(n)\n\
    \    largest=primes[primes.len-1]\n    \n    for p in primes[2:]\n        if largest<p\
    \ return largest\n        largest=p\n    return largest\nend\n</cell>\n<code language=julia-1.3>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the nth Fibonacci number. Assume n is positive.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3qin1dkp.jl:15\nin expression\
    \ starting at /tmp/tmp3qin1dkp.jl:15\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm8yzmtyo.jl:14\nin expression starting at\
    \ /tmp/tmpm8yzmtyo.jl:14\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n    >>> smallest_prime_factor(2048)\n\
    \    7\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoanvj0se.jl:14\nin expression starting at\
    \ /tmp/tmpoanvj0se.jl:14\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfkid8404.jl:9\nin expression starting at /tmp/tmpfkid8404.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    if n==2 then return 2\n    if n%2==0 then return n//2\n \
    \   else return largest_prime_factor(n//2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpltqbi12v.jl:8\nin expression starting at /tmp/tmpltqbi12v.jl:8\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n@time largest_prime_factor(2000000)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hqcphup.jl:10\nin expression starting at\
    \ /tmp/tmp6hqcphup.jl:10\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: use the sieve of Eratosthenes\
    \ (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptmpq38q6.jl:13\nin expression starting at\
    \ /tmp/tmptmpq38q6.jl:13\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjtasgm9e.jl:9\nin expression starting at /tmp/tmpjtasgm9e.jl:9\n"
  stdout: ''
  timestamp: 1659823119
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert largest_prime_factor(7) == 3\n@assert largest_prime_factor(12)\
    \ == 3\n@assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(19)\
    \ == 3\n@assert largest_prime_factor(25) == 5\n@assert largest_prime_factor(29)\
    \ == 3\n@assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(35)\
    \ == 5\n@assert largest_prime_factor(39) == 3\n@assert largest_prime_factor(41)\
    \ == 7\n@assert largest_prime_factor(43) == 5\n@assert largest_prime_factor(47)\
    \ == 3\n@assert largest_prime_factor(53) == 7\n@assert largest_prime_factor(59)\
    \ == 3\n@assert largest_prime_factor(61) == 7\n@assert largest_prime_factor(67)\
    \ == 5\n@assert largest_prime_factor(71) is nothing\n@assert largest_prime_factor(73)\
    \ is nothing\n@assert largest_prime_factor(79) is nothing\n@assert largest_prime_factor(83)\
    \ is nothing\n@assert largest_prime_factor(89) is nothing\n@assert largest_prime_factor(97)\
    \ is nothing\n@assert largest_prime_factor(101) is nothing\n@assert largest_prime_factor(103)\
    \ is not nothing\n@assert largest_prime_factor(127) is nothing\n@assert largest_prime_factor(131)\
    \ is nothing\n@assert largest_prime_factor(137) is nothing\n@assert largest_prime_factor(139)\
    \ is nothing\n@assert largest_prime_factor(149) is nothing\n@assert largest_prime_factor(151)\
    \ is nothing\n@assert largest_prime_factor(157) is nothing\n@assert largest_prime_factor(163)\
    \ is not nothing\n@assert largest_prime_factor(173) is nothing\n@assert largest_prime_factor(179)\
    \ is nothing\n@assert largest_prime_factor(181) is nothing\n@assert largest_prime_factor(191)\
    \ is nothing\n@assert largest_prime_factor(193) is nothing\n@assert largest_prime_factor(197)\
    \ is nothing\n@assert largest_prime_factor(199) is nothing\n@assert largest_prime_factor(211)\
    \ is nothing\n@assert largest_prime_factor(\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvz_yd9xk.jl:9\nin expression starting at /tmp/tmpvz_yd9xk.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(1000000000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ (GCD) of two positive integers. Assume that both numbers are positive.\nHint:\
    \ use the Euclidean algorithm (https://en.wikipedia.org/wiki/Euclidean_algorithm).\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpghlku9wy.jl:14\nin expression starting at\
    \ /tmp/tmpghlku9wy.jl:14\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to keep\
    \ dividing n by 2 until you reach 1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm8dl18y1.jl:9\nin expression starting at /tmp/tmpm8dl18y1.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1 \n    else if n % 2 == 0 \n        then return n\
    \ \n    else \n        largest_prime_factor(n / 2) \nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzsv7pbdi.jl:9\nin expression starting at /tmp/tmpzsv7pbdi.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(5) == 5\n\
    @assert largest_prime_factor(7) == 7\n@assert largest_prime_factor(12) == 3\n\
    @assert largest_prime_factor(13) == 3\n@assert largest_prime_factor(17) == 5\n\
    @assert largest_prime_factor(19) == 7\n@assert largest_prime_factor(25) == 5\n\
    @assert largest_prime_factor(29) == 3\n@assert largest_prime_factor(31) == 7\n\
    @assert largest_prime_factor(37) == 5\n@assert largest_prime_factor(41) == 3\n\
    @assert largest_prime_factor(43) == 7\n@assert largest_prime_factor(47) == 5\n\
    @assert largest_prime_factor(53) == 3\n@assert largest_prime_factor(59) == 7\n\
    @assert largest_prime_factor(61) == 5\n@assert largest_prime_factor(67) == 3\n\
    @assert largest_prime_factor(71) == 7\n@assert largest_prime_factor(73) == 5\n\
    @assert largest_prime_factor(79) == 3\n@assert largest_prime_factor(83) == 7\n\
    @assert largest_prime_factor(89) == 5\n@assert largest_prime_factor(97) == 3\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) != 7\n@assert largest_prime_factor(101) != 7\n\
    @assert largest_prime_factor(101) \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbsldvdb5.jl:13\nin expression starting at\
    \ /tmp/tmpbsldvdb5.jl:13\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    else if n==2 then return 2\n    else if n%2==0 then return\
    \ largest_prime_factor(n/2)\n    else return largest_prime_factor(n/2) + largest_prime_factor(n/3)\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu50sju23.jl:8\nin expression starting at /tmp/tmpu50sju23.jl:8\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    if n==2 then return 2\n    if n%2==0 then return n//2\n \
    \   \n    largest=2\n    for d in range(3,n+1,2) do \n        if n%d==0 then \n\
    \            largest=d \n            break\n    return largest\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph7s1gg65.jl:8\nin expression starting at /tmp/tmph7s1gg65.jl:8\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest = 2\n        for p in prime_factors(n) do \n            if\
    \ p > largest \n                then largest = p\n        return largest\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazd74vvl.jl:9\nin expression starting at /tmp/tmpazd74vvl.jl:9\n"
  stdout: ''
  timestamp: 1659823129
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpprr1ert2.jl:9\nin expression starting at /tmp/tmpprr1ert2.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppaijj1hi.jl:9\nin expression starting at /tmp/tmppaijj1hi.jl:9\n"
  stdout: ''
  timestamp: 1659823128
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3oxuyu6m.jl:9\nin expression starting at /tmp/tmp3oxuyu6m.jl:9\n"
  stdout: ''
  timestamp: 1659823129
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu4ggmbfy.jl:14\nin expression starting at\
    \ /tmp/tmpu4ggmbfy.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n/2) \nend\n</cell>\n\
    <code language=julia-1.5>\n@assert largest_prime_factor(10) == 2 \n@assert largest_prime_factor(13)\
    \ == 5 \n@assert largest_prime_factor(17) == 7 \n@assert largest_prime_factor(19)\
    \ == 11 \n@assert largest_prime_factor(25) == 13 \n@assert largest_prime_factor(29)\
    \ == 29 \n@assert largest_prime_factor(31) == 31 \n@assert largest_prime_factor(37)\
    \ == 37 \n@assert largest_prime_factor(41) == 41 \n@assert largest_prime_factor(43)\
    \ == 43 \n@assert largest_prime_factor(47) == 47 \n@assert largest_prime_factor(53)\
    \ == 53 \n@assert largest_prime_factor(59) == 59 \n@assert largest_prime_factor(61)\
    \ == 61 \n@assert largest_prime_factor(67) == 67 \n@assert largest_prime_factor(71)\
    \ == 71 \n@assert largest_prime_factor(73) == 73 \n@assert largest_prime_factor(79)\
    \ == 79 \n@assert largest_prime_factor(83) == 83 \n@assert largest_prime_factor(89)\
    \ == 89 \n@assert largest_prime_factor(97) == 97 \n@assert largest_prime_factor(1031)\
    \ == 1031 \n@assert largest_prime_factor(1047) == 1047 \n@assert largest_prime_factor(1059)\
    \ == 1059 \n@assert largest_prime_factor(1063) == 1063 \n@assert largest_prime_factor(1069)\
    \ == 1069 \n@assert largest_prime_factor(1087) == 1087 \n@assert largest_prime_factor(1093)\
    \ == 1093 \n@assert largest_prime_factor(1099) == 1099 \n@assert largest_prime_factor(1111)\
    \ == 1111 \n@assert largest_prime_factor(1117) == 1117 \n@assert largest_prime_factor(1123)\
    \ == 1123 \n@assert largest_prime_factor(1129) == 1129 \n@assert largest_prime_factor(1135)\
    \ == 1135 \n@assert largest_prime_factor(1139) == 1139 \n@assert largest_prime_factor(1143)\
    \ == 1143 \n@assert largest_prime_factor(1149) == 1149 \n@assert largest_prime_factor(1153)\
    \ == 1153 \n@assert largest_prime_factor(1159) == 1159\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnwghke4c.jl:13\nin expression starting at\
    \ /tmp/tmpnwghke4c.jl:13\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoud9b2wd.jl:9\nin expression starting at /tmp/tmpoud9b2wd.jl:9\n"
  stdout: ''
  timestamp: 1659823121
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1 \n    else if n == 2 \n        then return 1 \n\
    \    else \n        p := largest_prime_factor(n/2) \n        while p*p <= n \n\
    \            do return p \n            p := p + 2 \nend \n</cell>\n<code language=julia-1.5>\n\
    @assert largest_prime_factor(7) == 3\n@assert largest_prime_factor(12) == 5\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(33) == 13\n\
    @assert largest_prime_factor(101) == 7\n@assert largest_prime_factor(13) == 7\n\
    @assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(29) == 11\n\
    @assert largest_prime_factor(\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzbg2s_k9.jl:9\nin expression starting at /tmp/tmpzbg2s_k9.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpor6utrtd.jl:9\nin expression starting at /tmp/tmpor6utrtd.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg97bo4kz.jl:9\nin expression starting at /tmp/tmpg97bo4kz.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for factor in prime_factors(n)\
    \ \n            largest = max {largest, factor}\n        return largest\nend\n\
    </cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8k_slq16.jl:9\nin expression starting at /tmp/tmp8k_slq16.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: You may want to use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk2i9a141.jl:9\nin expression starting at /tmp/tmpk2i9a141.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxklma0zr.jl:14\nin expression starting at\
    \ /tmp/tmpxklma0zr.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_g8e8y81.jl:14\nin expression starting at\
    \ /tmp/tmp_g8e8y81.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%2==0 return n\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2avo9zux.jl:1\nin expression starting at /tmp/tmp2avo9zux.jl:1\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    else if n % 2 == 0 \n        return largest_prime_factor(n/2)\n\
    \    else \n        return largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor of two numbers. Assume that both numbers are positive.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgb4hrkxb.jl:10\nin expression starting at\
    \ /tmp/tmpgb4hrkxb.jl:10\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc58oxu2f.jl:9\nin expression starting at /tmp/tmpc58oxu2f.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: You may want to use an\
    \ if statement to test whether n is prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpveylu1o1.jl:14\nin expression starting at\
    \ /tmp/tmpveylu1o1.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(n/3)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp93ca8hoz.jl:9\nin expression starting at /tmp/tmp93ca8hoz.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n/2) \n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype largest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor of two positive integers. Assume that both numbers are positive.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv90jgk__.jl:14\nin expression starting at\
    \ /tmp/tmpv90jgk__.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqnlbx9ry.jl:14\nin expression starting at\
    \ /tmp/tmpqnlbx9ry.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywrvvz50.jl:14\nin expression starting at\
    \ /tmp/tmpywrvvz50.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqui2h3di.jl:9\nin expression starting at /tmp/tmpqui2h3di.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n            end\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwurysocd.jl:9\nin expression starting at /tmp/tmpwurysocd.jl:9\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(5) == 5\n@assert\
    \ largest_prime_factor(7) == 3\n@assert largest_prime_factor(11) == 7\n@assert\
    \ largest_prime_factor(13) == 3\n@assert largest_prime_factor(17) == 7\n@assert\
    \ largest_prime_factor(19) == 5\n@assert largest_prime_factor(23) == 3\n@assert\
    \ largest_prime_factor(29) == 5\n@assert largest_prime_factor(31) == 7\n@assert\
    \ largest_prime_factor(37) == 3\n@assert largest_prime_factor(41) == 7\n@assert\
    \ largest_prime_factor(43) == 5\n@assert largest_prime_factor(47) == 3\n@assert\
    \ largest_prime_factor(53) == 7\n@assert largest_prime_factor(59) == 3\n@assert\
    \ largest_prime_factor(61) == 7\n@assert largest_prime_factor(67) == 5\n@assert\
    \ largest_prime_factor(71) ==3\n@assert largest_prime_factor(73) == 7\n@assert\
    \ largest_prime_factor(79) == 3\n@assert largest_prime_factor(83) == 7\n@assert\
    \ largest_prime_factor(89) == 5\n@assert largest_prime_factor(97) == 3\n@assert\
    \ largest_prime_factor(101) ==7\n@assert largest_prime_factor(103) == 5\n@assert\
    \ largest_prime_factor(107) == 3\n@assert largest_prime_factor(109) == 7\n@assert\
    \ largest_prime_factor(113) == 5\n@assert largest_prime_factor(127) == 3\n@assert\
    \ largest_prime_factor(131) == 7\n@assert largest_prime_factor(137) == 5\n@assert\
    \ largest_prime_factor(139) == 3\n@assert largest_prime_factor(141) ==7\n@assert\
    \ largest_prime_factor(147) == 5\n@assert largest_prime_factor(153) == 3\n@assert\
    \ largest_prime_factor(157) == 7\n@assert largest_prime_factor(163) == 5\n@assert\
    \ largest_prime_factor(167) == 3\n@assert largest_prime_factor(173) == 7\n@assert\
    \ largest_prime_factor(179) == 5\n@assert largest_prime_factor(181) == 3\n@assert\
    \ largest_prime_factor(191) == 7\n@assert largest_prime_factor(193) == 5\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpll971iyz.jl:14\nin expression starting at\
    \ /tmp/tmpll971iyz.jl:14\n"
  stdout: ''
  timestamp: 1659823130
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpex2isg5x.jl:14\nin expression starting at\
    \ /tmp/tmpex2isg5x.jl:14\n"
  stdout: ''
  timestamp: 1659823130

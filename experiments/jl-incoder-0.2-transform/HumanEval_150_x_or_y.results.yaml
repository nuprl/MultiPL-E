language: jl
name: HumanEval_150_x_or_y
results:
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given value appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxq2je2uy.jl:13\nin expression starting at /tmp/tmpxq2je2uy.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which\
    \ takes as input a number n and returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpql0gmu33.jl:13\nin expression starting at /tmp/tmpql0gmu33.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ vector of numbers and returns the number of even numbers in the vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyf08ndon.jl:17\nin expression starting at\
    \ /tmp/tmpyf08ndon.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that will return the factorial of a number.\
    \ \nThe factorial of a number is the product of all the numbers from 1 to that\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7_39p69p.jl:13\nin expression starting at /tmp/tmp7_39p69p.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n == 2 \n        then return y\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n       \
    \ then return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function which takes an array\
    \ of numbers and returns the sum of all even numbers in the array.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz2ah2puz.jl:13\nin expression starting at /tmp/tmpz2ah2puz.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given value appears in\
    \ a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6gq7kxoa.jl:13\nin expression starting at /tmp/tmp6gq7kxoa.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec7kc1cw.jl:13\nin expression starting at /tmp/tmpec7kc1cw.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8_s1ltvo.jl:17\nin expression starting at\
    \ /tmp/tmp8_s1ltvo.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which takes in three numbers and returns the product of\
    \ those numbers. \nThe function should return 0 if the product is 0.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd9pzon2g.jl:13\nin expression starting at /tmp/tmpd9pzon2g.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2,\
    \ x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as $n!$, where $n$ is an integer greater than or equal to 1.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3tzocp3v.jl:14\nin expression starting at\
    \ /tmp/tmp3tzocp3v.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp98csepqz.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp98csepqz.jl:1\n\
    in expression starting at /tmp/tmp98csepqz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeurfv772.jl:13\nin expression starting at /tmp/tmpeurfv772.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a number as an argument and returns\
    \ the square of that number. \nThe function should work for any number greater\
    \ than 0.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec4yg365.jl:13\nin expression starting at /tmp/tmpec4yg365.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is divisible\
    \ by 3 and \nreturns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ut0u20d.jl:17\nin expression starting at\
    \ /tmp/tmp6ut0u20d.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpph3fwde_.jl:13\nin expression starting at /tmp/tmpph3fwde_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a number as input and returns\
    \ the number of digits in that number. \nFor example if the input is 123, the\
    \ function should return 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwyu093mk.jl:18\nin expression starting at\
    \ /tmp/tmpwyu093mk.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program that prints the prime numbers between 1 and 100. \nThe program\
    \ should print each prime number on a new line.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd2rxby9h.jl:13\nin expression starting at /tmp/tmpd2rxby9h.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return y\n    else\n        return x\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbj9m77y_.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbj9m77y_.jl:1\n\
    in expression starting at /tmp/tmpbj9m77y_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. \n\
    The function should accept a number as an argument and should return the factorial\
    \ of that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp569h0g6o.jl:13\nin expression starting at /tmp/tmp569h0g6o.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of digits in an integer.\
    \ \nThe function should work for all integers except for negative integers.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpteurfg8j.jl:13\nin expression starting at /tmp/tmpteurfg8j.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvf7d3ma8.jl:13\nin expression starting at /tmp/tmpvf7d3ma8.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgg16ajix.jl:13\nin expression starting at /tmp/tmpgg16ajix.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcbrrixye.jl:13\nin expression starting at /tmp/tmpcbrrixye.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazi6r6pl.jl:13\nin expression starting at /tmp/tmpazi6r6pl.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x,\
    \ y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpncyanzr2.jl:14\nin expression starting at\
    \ /tmp/tmpncyanzr2.jl:14\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program that prints the\
    \ prime numbers up to a number entered by the user. \nThe program should stop\
    \ when the user enters a negative number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp76cua3p2.jl:13\nin expression starting at /tmp/tmp76cua3p2.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the value of x if n\
    \ is a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpob_narh3.jl:13\nin expression starting at /tmp/tmpob_narh3.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns True if n is prime and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq4b8dyfm.jl:13\nin expression starting at /tmp/tmpq4b8dyfm.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ value appears in a given array.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9xx79rni.jl:13\nin expression starting at /tmp/tmp9xx79rni.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphgxfmm5e.jl:13\nin expression starting at /tmp/tmphgxfmm5e.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which\
    \ prints the factorial of a number given by the user. \nThe factorial of a number\
    \ $n$ is defined as the product of all the integers \nless than or equal to $n$.\
    \ \nFor example, if the user enters $5$, the factorial of $5$ is $5*4*3*2*1$.\
    \ \nWrite a program which prints the factorial of a number given by the user.\
    \ \nThe factorial of a number $n$ is defined as the product of all the integers\
    \ \nless than or equal to $n$. \nFor example, if the user enters $5$, the factorial\
    \ of $5$ is $5*4*3*2*1$. \nWrite a program which prints the factorial of a number\
    \ given by the user. \nThe factorial of a number $n$ is defined as the product\
    \ of all the integers \nless than or equal to $n$. \nFor example, if the user\
    \ enters $5$, the factorial of $5$ is $5*4*3*2*1$. \nWrite a program which prints\
    \ the factorial of a number given by the user. \nThe factorial of a number $n$\
    \ is defined as the product of all the integers \nless than or equal to $n$. \n\
    For example, if the user enters $5$, the factorial of $5$ is $5*4*3*2*1$. \nWrite\
    \ a program which prints the factorial of a number given by the user. \nThe factorial\
    \ of a number $n$ is defined as the product of all the integers \nless than or\
    \ equal to $n$. \nFor example, if the user enters $5$, the factorial of $5$ is\
    \ $5*4*3*2*1$. \nWrite a program which prints the factorial of a number given\
    \ by the user. \nThe factorial of a number $n$ is defined as the product of all\
    \ the integers \nless than or equal to $n$. \nFor example, if the user enters\
    \ $5$, the factorial of $5$ is $5*4*3*2*1$. \nWrite a program which prints the\
    \ factorial of a number given by the user. \nThe factorial of a number $n$ is\
    \ defined as the product of all the integers \nless than or equal to $n$. \nFor\
    \ example, if the user enters $5$, the factorial of $5$ is $5*4*3*2*1$. \nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqew9eluj.jl:13\nin expression starting at /tmp/tmpqew9eluj.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program which prints the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as the product of all the integers \nless\
    \ than or equal to $n$. \nFor example, the factorial of $n$ is $n!$ if $n$ is\
    \ odd and $n(n+1)$ if $n$ is even. \nWrite a program which prints the factorial\
    \ of $n$. \nThe program should accept a number $n$ as an argument and should print\
    \ \nthe factorial of $n$. \nThe program should accept a number $n$ as an argument\
    \ and should print \nthe factorial of $n$. \nThe program should accept a number\
    \ $n$ as an argument and should print \nthe factorial of $n$. \nThe program should\
    \ accept a number $n$ as an argument and should print \nthe factorial of $n$.\
    \ \nThe program should accept a number $n$ as an argument and should print \n\
    the factorial of $n$. \nThe program should accept a number $n$ as an argument\
    \ and should print \nthe factorial of $n$. \nThe program should accept a number\
    \ $n$ as an argument and should print \nthe factorial of $n$. \nThe program should\
    \ accept a number $n$ as an argument and should print \nthe factorial of $n$.\
    \ \nThe program should accept a number $n$ as an argument and should print \n\
    the factorial of $n$. \nThe program should accept a number $n$ as an argument\
    \ and should print \nthe factorial of $n$. \nThe program should accept a number\
    \ $n$ as an argument and should print \nthe factorial of $n$. \nThe program should\
    \ accept a number $n$ as an argument and should print \nthe factorial of $n$.\
    \ \nThe program should accept a number $n$ as an argument and should print \n\
    the factorial of $n$. \nThe program should accept a number $n$ as an argument\
    \ and should print \nthe factorial of $n$. \nThe program should accept a number\
    \ $n$ as an argument and should print \nthe factorial of $n$. \n\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpunyu09tp.jl:13\nin expression starting at /tmp/tmpunyu09tp.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that takes a number as an argument and returns\
    \ the factorial of that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkehypouw.jl:13\nin expression starting at /tmp/tmpkehypouw.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the first n prime numbers.\
    \ \nThe function should take in n as an argument and should return a list of prime\
    \ numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_t58kyb5.jl:13\nin expression starting at /tmp/tmp_t58kyb5.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwwp_qbsp.jl:17\nin expression starting at\
    \ /tmp/tmpwwp_qbsp.jl:17\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as:\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgy5l2glv.jl:13\nin expression starting at /tmp/tmpgy5l2glv.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwkhlwkxz.jl:13\nin expression starting at /tmp/tmpwkhlwkxz.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ \n        then return x\n        else return y\n    end\n    if n%2==0\n   \
    \     then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y, x)\n \
    \   end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes a number\
    \ n and returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjzetnqds.jl:13\nin expression starting at /tmp/tmpjzetnqds.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 7\nWrite a program which returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1t1dx83x.jl:13\nin expression starting at /tmp/tmp1t1dx83x.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp80klamca.jl:13\nin expression starting at /tmp/tmp80klamca.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers and the sum of the squares of the\
    \ last two numbers. \nFor example: \n$$ f(3, 6, 9) = \\begin{bmatrix} 3 \\ 6 \\\
    \ 9 \\\\end{bmatrix}^T\\begin{bmatrix} 3 \\ 6 \\ 9 \\\\end{bmatrix} + \\begin{bmatrix}\
    \ 3 \\ 6 \\ 9 \\\\end{bmatrix}^T\\begin{bmatrix} 3 \\ 6 \\ 9 \\\\end{bmatrix}\
    \ = \\begin{bmatrix} 9 \\\\ 27 \\\\ 81 \\\\end{bmatrix}$$\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfh_gchkn.jl:13\nin expression starting at /tmp/tmpfh_gchkn.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazi6r6pl.jl:13\nin expression starting at /tmp/tmpazi6r6pl.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazi6r6pl.jl:13\nin expression starting at /tmp/tmpazi6r6pl.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ number appears in a list.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf2vvhnrx.jl:13\nin expression starting at /tmp/tmpf2vvhnrx.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplxygm3ob.jl:13\nin expression starting at /tmp/tmplxygm3ob.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which takes as\
    \ input a positive integer n and returns the number of digits in n. \nFor example,\
    \ if the input is 123, then the output should be 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp03tvyi4v.jl:13\nin expression starting at /tmp/tmp03tvyi4v.jl:13\n"
  stdout: ''
  timestamp: 1659822637
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ as input a number n and returns the number of digits in n. \nFor example, if\
    \ the input is 123, the function should return 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp216twua0.jl:13\nin expression starting at /tmp/tmp216twua0.jl:13\n"
  stdout: ''
  timestamp: 1659822637
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which should\
    \ return the value of x if n is a prime number and should return the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9djk03rl.jl:13\nin expression starting at /tmp/tmp9djk03rl.jl:13\n"
  stdout: ''
  timestamp: 1659822637
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3x8xb1w8.jl:18\nin expression starting at\
    \ /tmp/tmp3x8xb1w8.jl:18\n"
  stdout: ''
  timestamp: 1659822637
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the number of times a given\
    \ number appears in a given list.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb451re3r.jl:13\nin expression starting at /tmp/tmpb451re3r.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    \n    if n\
    \ % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. \nThe function should accept a single argument and should return\
    \ the factorial of that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgtvk0nzf.jl:13\nin expression starting at /tmp/tmpgtvk0nzf.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec7kc1cw.jl:13\nin expression starting at /tmp/tmpec7kc1cw.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes in three numbers and returns the product\
    \ of those numbers. \nThe function should raise an error if the numbers are less\
    \ than or equal to 0.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqknr6bca.jl:13\nin expression starting at /tmp/tmpqknr6bca.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program that returns True if n is a prime number and False\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu0w4s_9h.jl:13\nin expression starting at /tmp/tmpu0w4s_9h.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the number of prime numbers\
    \ less than a given number. \nThe function should take one argument - the number\
    \ to be tested.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiwn5a7tv.jl:18\nin expression starting at\
    \ /tmp/tmpiwn5a7tv.jl:18\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2\n        x \n    else\n        y\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes in three numbers and returns the sum of the squares of\
    \ the first two numbers and the sum of the squares of the last two numbers. \n\
    For example, \nx_and_y_sum_squared(7, 34, 12) should return (10 + 36 + 12) = 50.\
    \ \nx_and_y_sum_squared(15, 8, 5) should return (25 + 81 + 25) = 75.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxp0ceqni.jl:17\nin expression starting at\
    \ /tmp/tmpxp0ceqni.jl:17\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the number of times a given element appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzpbl7uqi.jl:13\nin expression starting at /tmp/tmpzpbl7uqi.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbvabd1kd.jl:13\nin expression starting at /tmp/tmpbvabd1kd.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ || n==3 || n==5 || n==7 || n==11 || n==13 || n==17 || n==19 || n==23 || n==29\
    \ || n==37 || n==43 || n==59 || n==67 || n==79 || n==91 \n        then y\n   \
    \ else x\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6rwlm4o4.jl:13\nin expression starting at /tmp/tmp6rwlm4o4.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in two numbers and returns the\
    \ sum of the squares of the first two numbers. \nFor example, if $x$ and $y$ are\
    \ both numbers, then\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3qzhbo2p.jl:13\nin expression starting at /tmp/tmp3qzhbo2p.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that will return the square of a number.\
    \ \nThe function should take one argument, x, and return the square of x.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc13p3kud.jl:13\nin expression starting at /tmp/tmpc13p3kud.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<text>\nExercise 3\nWrite a function which takes as input a number\
    \ n and returns the number of digits in n. \nFor example, if the input is 123,\
    \ the function should return 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu1t67wd5.jl:13\nin expression starting at /tmp/tmpu1t67wd5.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number. \n\
    The factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvj7wcsly.jl:13\nin expression starting at /tmp/tmpvj7wcsly.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function which takes\
    \ in three numbers and returns the sum of the squares of the first two numbers\
    \ and the sum of the squares of the last two numbers. \nThe function should return\
    \ nothing if none of the numbers is 1 or 2.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp631qj4hr.jl:13\nin expression starting at /tmp/tmp631qj4hr.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true \n        return x \n    else \n        return y \nend \n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ixp6c3i.jl:17\nin expression starting at\
    \ /tmp/tmp6ixp6c3i.jl:17\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2\n        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the factorial of a given number.\
    \ \nThe function should take one argument, x, and should return the factorial\
    \ of x.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx5rb7496.jl:17\nin expression starting at\
    \ /tmp/tmpx5rb7496.jl:17\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns $x^y$ if $x$ and $y$ are both\
    \ integers and $x$ and $y$ are both positive.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqk9brx33.jl:17\nin expression starting at\
    \ /tmp/tmpqk9brx33.jl:17\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which takes in\
    \ two vectors of length n and returns the dot product of the two vectors.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvu84_bz0.jl:13\nin expression starting at /tmp/tmpvu84_bz0.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbvabd1kd.jl:13\nin expression starting at /tmp/tmpbvabd1kd.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program that prints\
    \ the prime numbers between 1 and 100. \nThe program should print each prime number\
    \ on a separate line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm3s00pfp.jl:13\nin expression starting at /tmp/tmpm3s00pfp.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a given array. \nFor example, for the\
    \ array [1, 1, 2, 3, 4, 4, 5], the function should return 3 since 2 appears 3\
    \ times in the array. \nWrite a function that returns the number of times a given\
    \ value appears in a given array. \nFor example, for the array [1, 1, 2, 3, 4,\
    \ 4, 5], the function should return 3 since 2 appears 3 times in the array. \n\
    Write a function that returns the number of times a given value appears in a given\
    \ array. \nFor example, for the array [1, 1, 2, 3, 4, 4, 5], the function should\
    \ return 3 since 2 appears 3 times in the array. \nWrite a function that returns\
    \ the number of times a given value appears in a given array. \nFor example, for\
    \ the array [1, 1, 2, 3, 4, 4, 5], the function should return 3 since 2 appears\
    \ 3 times in the array. \nWrite a function that returns the number of times a\
    \ given value appears in a given array. \nFor example, for the array [1, 1, 2,\
    \ 3, 4, 4, 5], the function should return 3 since 2 appears 3 times in the array.\
    \ \nWrite a function that returns the number of times a given value appears in\
    \ a given array. \nFor example, for the array [1, 1, 2, 3, 4, 4, 5], the function\
    \ should return 3 since 2 appears 3 times in the array. \nWrite a function that\
    \ returns the number of times a given value appears in a given array. \nFor example,\
    \ for the array [1, 1, 2, 3, 4, 4, 5], the function should return 3 since 2 appears\
    \ 3 times in the array. \nWrite a function that returns the number of times a\
    \ given value appears in a given array. \nFor example, for the array [1, 1, 2,\
    \ 3, 4, 4, 5], the function should return 3 since 2 appears 3 times in the array.\
    \ \nWrite a function that returns the number of times a given value appears in\
    \ a given array. \nFor example, for the array [1, 1, 2, 3, 4, 4, 5], the function\
    \ should return 3 since 2 appears 3 times in the array. \nWrite a function that\
    \ returns the number of times a given value appears in a given array. \nFor example,\
    \ for the array [1, 1, 2, 3, 4, 4, 5], the function should return 3 since 2 appears\
    \ 3 times in the array. \nWrite a function that returns the number of times a\
    \ given value appears in a given array. \nFor example, for the array [1, 1, 2,\
    \ 3, 4, 4, 5], the function should return 3 since 2 appears 3 times in the array.\
    \ \nWrite a function that returns the number of times a given value appears in\
    \ a given array. \nFor example, for the array [1, 1, 2, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpik8vjsgi.jl:13\nin expression starting at /tmp/tmpik8vjsgi.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers and returns the sum of the\
    \ squares of the numbers in the vector. For example, if the input vector is [1,2,3,4,5],\
    \ the output should be 55.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_242ff2p.jl:13\nin expression starting at /tmp/tmp_242ff2p.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n == 2 \n        then return y\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n       \
    \ return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times a given number appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp90nbboz.jl:13\nin expression starting at /tmp/tmpp90nbboz.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazi6r6pl.jl:13\nin expression starting at /tmp/tmpazi6r6pl.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes in a list of numbers and returns the sum\
    \ of all the numbers in the list.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqhdehgml.jl:17\nin expression starting at\
    \ /tmp/tmpqhdehgml.jl:17\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the value of a variable x if\
    \ x is even, \notherwise prints the value of a variable y if y is even, and otherwise\
    \ prints \nthe value of a variable z if both x and y are even.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprh3se46f.jl:17\nin expression starting at\
    \ /tmp/tmprh3se46f.jl:17\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpas4dwpsz.jl:13\nin expression starting at /tmp/tmpas4dwpsz.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the Fibonacci sequence up to a certain number. \nThe Fibonacci sequence is defined\
    \ by the recurrence relation:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnn8q6_zh.jl:13\nin expression starting at /tmp/tmpnn8q6_zh.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which returns the value of x if n is a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjvtrrzmp.jl:13\nin expression starting at /tmp/tmpjvtrrzmp.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the square of x if x is odd and\
    \ prints the square of y if x is even.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf0d2qu02.jl:13\nin expression starting at /tmp/tmpf0d2qu02.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2ipmi84f.jl:13\nin expression starting at /tmp/tmp2ipmi84f.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3yzbwdc8.jl:13\nin expression starting at /tmp/tmp3yzbwdc8.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function which\
    \ takes in three numbers and returns the product of those numbers. \nThe function\
    \ should raise an error if the numbers are not of equal length.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp982vi4d0.jl:13\nin expression starting at /tmp/tmp982vi4d0.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu5koy_6b.jl:13\nin expression starting at /tmp/tmpu5koy_6b.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%x ==\
    \ 0 && n%y == 0 \n        then return n\n    else \n        then return y\n  \
    \  else \n        then return x\n    end\nend\n</cell>\n<text>\nExercise 9\nWrite\
    \ a program which takes as input a number n and returns the value of x if n is\
    \ a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp20xljl0m.jl:13\nin expression starting at /tmp/tmp20xljl0m.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the value of x if n is a prime number and should return\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjtrxl60v.jl:13\nin expression starting at /tmp/tmpjtrxl60v.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a program which should return the value of\
    \ x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphy090atb.jl:13\nin expression starting at /tmp/tmphy090atb.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the number of prime numbers less than or equal\
    \ to a given number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4rpwupn7.jl:13\nin expression starting at /tmp/tmp4rpwupn7.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program that prints the square of the numbers from\
    \ 1 to 100. \nThe program should print each number on a separate line.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkpibj6ho.jl:13\nin expression starting at /tmp/tmpkpibj6ho.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ number of prime numbers less than a given number. \nThe function should take\
    \ one argument, x, and should return the number of prime numbers less than x.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmut3_ylx.jl:13\nin expression starting at /tmp/tmpmut3_ylx.jl:13\n"
  stdout: ''
  timestamp: 1659822640
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function which returns\
    \ the number of times a given value occurs in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64ou18vv.jl:17\nin expression starting at\
    \ /tmp/tmp64ou18vv.jl:17\n"
  stdout: ''
  timestamp: 1659822640
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints\
    \ the square of x if x is odd and prints the square of y if x is even.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr1bifgtp.jl:13\nin expression starting at /tmp/tmpr1bifgtp.jl:13\n"
  stdout: ''
  timestamp: 1659822640
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the numbers from 1 to 100 in reverse order. \nThe program should print each\
    \ number on a new line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo82o_4oc.jl:13\nin expression starting at /tmp/tmpo82o_4oc.jl:13\n"
  stdout: ''
  timestamp: 1659822639
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers and returns\
    \ the sum of the squares of the numbers in the vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6utqjkvv.jl:13\nin expression starting at /tmp/tmp6utqjkvv.jl:13\n"
  stdout: ''
  timestamp: 1659822640
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw50o_czy.jl:13\nin expression starting at /tmp/tmpw50o_czy.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in a vector of numbers and returns\
    \ the sum of the squares of the numbers in the vector. For example,\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3dy7amzq.jl:17\nin expression starting at\
    \ /tmp/tmp3dy7amzq.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which takes a number as input and prints out the square\
    \ of \nthat number. \nThe input number should be between 1 and 100. \nThe output\
    \ should be between 1 and 100.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp002vz3m1.jl:17\nin expression starting at\
    \ /tmp/tmp002vz3m1.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the sum of the\
    \ squares of the integers in the vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmeom1anl.jl:13\nin expression starting at /tmp/tmpmeom1anl.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if isPrime(n) \n        then return y\n\
    \    else \n        then return x_or_y(n-1, x, y+1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ number of times a given value appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzpxd4d5q.jl:13\nin expression starting at /tmp/tmpzpxd4d5q.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp86g6n31u.jl:13\nin expression starting at /tmp/tmp86g6n31u.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a number as input and returns the factorial of that number.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp47tukv8.jl:13\nin expression starting at /tmp/tmpp47tukv8.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ number appears in a list. \nFor example, given the list [1,2,3,4,5,6,7,8,9,10]\
    \ and the number 3, the function should return 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5uolvqvi.jl:17\nin expression starting at\
    \ /tmp/tmp5uolvqvi.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a number and returns its factorial. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers up to and including $n$. \nFor example, 5!\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a recursive function factorial\
    \ that computes the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmjjkuu0l.jl:13\nin expression starting at /tmp/tmpmjjkuu0l.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpehexoi_u.jl:17\nin expression starting at\
    \ /tmp/tmpehexoi_u.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers and returns the sum of the\
    \ squares of the numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wblf7uh.jl:13\nin expression starting at /tmp/tmp5wblf7uh.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmnzfdcmj.jl:17\nin expression starting at\
    \ /tmp/tmpmnzfdcmj.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of times a given value appears in a given array.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwn5t4503.jl:13\nin expression starting at /tmp/tmpwn5t4503.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbwwmjsbz.jl:13\nin expression starting at /tmp/tmpbwwmjsbz.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2\n        return y\n    else\n        return x_or_y(n-1, x, y+1)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which prints the value of x if n is a prime\
    \ number and prints the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo26ao3nl.jl:17\nin expression starting at\
    \ /tmp/tmpo26ao3nl.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program that prints\
    \ the numbers from 1 to 10 in reverse order. \nThe program should print each number\
    \ on a separate line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp17vdyp1m.jl:13\nin expression starting at /tmp/tmp17vdyp1m.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of digits in an integer. \nFor example, \n$$\n\\begin{align}\n\\text{digits}(123)\
    \ = 2 \\\n\\text{digits}(1234) = 4 \\\n\\text{digits}(1234567) = 6\n\\end{align}\n\
    $$\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91rxq2f2.jl:17\nin expression starting at\
    \ /tmp/tmp91rxq2f2.jl:17\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given number appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc7910afe.jl:13\nin expression starting at /tmp/tmpc7910afe.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphgxfmm5e.jl:13\nin expression starting at /tmp/tmphgxfmm5e.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which takes in two numbers and returns the\
    \ sum of the squares of the first number and the second number. \nThe sum of the\
    \ squares of the first number and the second number should be equal to the product\
    \ of the two numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu8vygtrc.jl:13\nin expression starting at /tmp/tmpu8vygtrc.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.1>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6tcy48t3.jl:13\nin expression starting at /tmp/tmp6tcy48t3.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr8sztu95.jl:13\nin expression starting at /tmp/tmpr8sztu95.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which takes a number n and returns the value of x\
    \ if n is a prime number and returns the value of y otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu3wwfuds.jl:13\nin expression starting at /tmp/tmpu3wwfuds.jl:13\n"
  stdout: ''
  timestamp: 1659822642
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of digits in an integer. \nFor example, \n\
    $$ 10^3 = 1000$$\n$$ 10^4 = 10000$$\n$$ 10^5 = 100000$$\n$$ 10^6 = 1000000$$\n\
    $$ 10^7 = 10000000$$\n$$ 10^8 = 100000000$$\n$$ 10^9 = 1000000000$$\n$$ 10^10\
    \ = 10000000000$$\n$$ 10^11 = 100000000000$$\n$$ 10^12 = 1000000000000$$\n$$ 10^13\
    \ = 10000000000000$$\n$$ 10^14 = 100000000000000$$\n$$ 10^15 = 1000000000000000$$\n\
    $$ 10^16 = 10000000000000000$$\n$$ 10^17 = 100000000000000000$$\n$$ 10^18 = 1000000000000000000$$\n\
    $$ 10^19 = 10000000000000000000$$\n$$ 10^20 = 100000000000000000000$$\n$$ 10^21\
    \ = 1000000000000000000000$$\n$$ 10^22 = 10000000000000000000000$$\n$$ 10^23 =\
    \ 100000000000000000000000$$\n$$ 10^24 = 1000000000000000000000000$$\n$$ 10^25\
    \ = 10000000000000000000000000$$\n$$ 10^26 = 100000000000000000000000000$$\n$$\
    \ 10^27 = 1000000000000000000000000000$$\n$$ 10^28 = 10000000000000000000000000000$$\n\
    $$ 10^29 = 100000000000000000000000000000$$\n$$ 10^30 = 1000000000000000000000000000000$$\n\
    $$ 10^31 = 10000000000000000000000000000000$$\n$$ 10^32 = 100000000000000000000000000000000$$\n\
    $$ 10^33 = 1000000000000000000000000000000000$$\n$$ 10^34 = 10000000000000000000000000000000000$$\n\
    $$ 10^35 = 100000000000000000000000000000000000$$\n$$ 10^36 = 1000000000000000000000000000000000000$$\n\
    $$ 10^37 = 10000000000000000000000000000000000000$$\n$$ 10^38 = 100000000000000000000000000000000000000$$\n\
    $$ 10^39 = 1000000000000000000000000000000000000000$$\n$$ 10^40 = 10000000000000000000000000000000000000000$$\n\
    $$ 10^41 = 100000000000000000000000000000000000000000$$\n$$ 10^42 = 1000000000000000000000000000000000000000000\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvhyz366k.jl:13\nin expression starting at /tmp/tmpvhyz366k.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.1>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and should return\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpay1feqh8.jl:13\nin expression starting at /tmp/tmpay1feqh8.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of prime numbers less than a given number. \nThe function should\
    \ take one argument, n, which represents the number to be tested.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl29fuj9s.jl:13\nin expression starting at /tmp/tmpl29fuj9s.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the square of the numbers from\
    \ 1 to 10. \nThe program should print each number on a separate line.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgw3txtn1.jl:13\nin expression starting at /tmp/tmpgw3txtn1.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmu07kkjq.jl:13\nin expression starting at /tmp/tmpmu07kkjq.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a program which takes as input a number n and returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeyn8vjb9.jl:13\nin expression starting at /tmp/tmpeyn8vjb9.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnkvprs56.jl:13\nin expression starting at /tmp/tmpnkvprs56.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpepawxy3q.jl:13\nin expression starting at /tmp/tmpepawxy3q.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of numbers and returns the sum of the squares of the numbers in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1d1ued4n.jl:17\nin expression starting at\
    \ /tmp/tmp1d1ued4n.jl:17\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdl7vavyq.jl:13\nin expression starting at /tmp/tmpdl7vavyq.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%x ==\
    \ 0 && n%y == 0 \n        then return n\n        else return y\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes in\
    \ two numbers and returns the sum of the squares of the first number and the second\
    \ number. \nFor example: \n$$ f(x, y) = x_1^2 + x_2^2 + y_1^2 + y_2^2 $$\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg8u7kcml.jl:13\nin expression starting at /tmp/tmpg8u7kcml.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.4>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise:\
    \ Write a recursive function which returns the factorial of a given number. \n\
    \    \n    Examples:\n    >>> factorial(5)\n    120\n    >>> factorial(10)\n \
    \   3628800\n    \n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4u069iay.jl:13\nin expression starting at /tmp/tmp4u069iay.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6dyr3q1q.jl:13\nin expression starting at /tmp/tmp6dyr3q1q.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0l3lred.jl:13\nin expression starting at /tmp/tmpc0l3lred.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the number of prime numbers\
    \ less than or equal to a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwn2ov8k_.jl:13\nin expression starting at /tmp/tmpwn2ov8k_.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec7kc1cw.jl:13\nin expression starting at /tmp/tmpec7kc1cw.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the numbers $1$ to $n$, i.e.,\
    \ $1! = 1$, $2! = 2$, ..., $n! = n \\times 1$. \nThe factorial of a negative number\
    \ $n$ is defined as the product of all the numbers $1$ to $n$, i.e., $1! = 1$,\
    \ $2! = 2$, ..., $n! = n \\times 1$.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3l8lnabb.jl:13\nin expression starting at /tmp/tmp3l8lnabb.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbvabd1kd.jl:13\nin expression starting at /tmp/tmpbvabd1kd.jl:13\n"
  stdout: ''
  timestamp: 1659822638
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpahpiyj28.jl:13\nin expression starting at /tmp/tmpahpiyj28.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmu07kkjq.jl:13\nin expression starting at /tmp/tmpmu07kkjq.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw50o_czy.jl:13\nin expression starting at /tmp/tmpw50o_czy.jl:13\n"
  stdout: ''
  timestamp: 1659822641
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function which\
    \ returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpus4pfgbj.jl:13\nin expression starting at /tmp/tmpus4pfgbj.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the first n prime numbers. \n\
    The function should take in n as an argument and return the prime numbers in ascending\
    \ order.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi7fa8sfa.jl:13\nin expression starting at /tmp/tmpi7fa8sfa.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as $n! = n * (n - 1)!$. \nFor example, $5! = 5 \\times 4! = 25$. \nWrite a program\
    \ which prints the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as $n! = n * (n - 1)!$. \nFor example, $5! = 5 \\times 4! = 25$.\
    \ \nWrite a program which prints the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as $n! = n * (n - 1)!$. \nFor example, $5! = 5 \\\
    times 4! = 25$. \nWrite a program which prints the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as $n! = n * (n - 1)!$. \nFor example,\
    \ $5! = 5 \\times 4! = 25$. \nWrite a program which prints the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as $n! = n * (n - 1)!$.\
    \ \nFor example, $5! = 5 \\times 4! = 25$. \nWrite a program which prints the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as $n!\
    \ = n * (n - 1)!$. \nFor example, $5! = 5 \\times 4! = 25$. \nWrite a program\
    \ which prints the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as $n! = n * (n - 1)!$. \nFor example, $5! = 5 \\times 4! = 25$.\
    \ \nWrite a program which prints the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as $n! = n * (n - 1)!$. \nFor example, $5! = 5 \\\
    times 4! = 25$. \nWrite a program which prints the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as $n! = n * (n - 1)!$. \nFor example,\
    \ $5! = 5 \\times 4! = 25$. \nWrite a program which prints the \nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp79xllith.jl:13\nin expression starting at /tmp/tmp79xllith.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program that prints\
    \ the numbers from 1 to 100. \nThe program should print each number on a new line.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9ejkvipx.jl:13\nin expression starting at /tmp/tmp9ejkvipx.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program that prints the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjzo0jw2d.jl:13\nin expression starting at /tmp/tmpjzo0jw2d.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a function which returns the value of x if\
    \ n is a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvo9jirg9.jl:13\nin expression starting at /tmp/tmpvo9jirg9.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the square of x if x is odd and\
    \ prints \nthe square of y if x is even.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp71v74swv.jl:13\nin expression starting at /tmp/tmp71v74swv.jl:13\n"
  stdout: ''
  timestamp: 1659822643
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a given array. For example, for the\
    \ array [1, 1, 2, 3, 4, 4, 5], the function should return 3 because the value\
    \ 1 appears 3 times in the array.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuzlt6m43.jl:13\nin expression starting at /tmp/tmpuzlt6m43.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ \n        then return x\n        else return y\n    end\n    if n%2==0 \n  \
    \      then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppa65bsip.jl:13\nin expression starting at /tmp/tmppa65bsip.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that will return the number of times a given\
    \ number appears in a list. For example, the number 3 appears 3 times in the list\
    \ [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqaapn789.jl:13\nin expression starting at /tmp/tmpqaapn789.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6a3zphym.jl:13\nin expression starting at /tmp/tmp6a3zphym.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers and the sum of the squares of the\
    \ last two numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc5frwfn3.jl:13\nin expression starting at /tmp/tmpc5frwfn3.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt8vcqebp.jl:13\nin expression starting at /tmp/tmpt8vcqebp.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the prime numbers up to a number n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2kolcdqi.jl:13\nin expression starting at /tmp/tmp2kolcdqi.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of elements in a vector. \nThe function should take one argument, x,\
    \ which should be a vector of Int64s.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6eyxl7pg.jl:13\nin expression starting at /tmp/tmp6eyxl7pg.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of prime numbers less than a given number. \nThe function should\
    \ take one argument n::Int64.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9jpqdg1z.jl:17\nin expression starting at\
    \ /tmp/tmp9jpqdg1z.jl:17\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements of the vector.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpngjenu4r.jl:17\nin expression starting at\
    \ /tmp/tmpngjenu4r.jl:17\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2,\
    \ x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ number appears in a given array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphhypn7_p.jl:14\nin expression starting at\
    \ /tmp/tmphhypn7_p.jl:14\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as the\
    \ product of all the integers less than or equal to $n$. \nFor example, the factorial\
    \ of $n$ is defined as $n! = n * (n - 1) * (n - 2) * ... * 1$. \nThe factorial\
    \ of 0 is defined as $1$. \nThe factorial of negative numbers is defined as $0$.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo0c5jmmh.jl:13\nin expression starting at /tmp/tmpo0c5jmmh.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4e5w9v8g.jl:13\nin expression starting at /tmp/tmp4e5w9v8g.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. \n\
    The function should accept a number as an argument and should return the factorial\
    \ of that number. \nThe function should raise an error if the number passed is\
    \ not an integer.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2bie8d1p.jl:13\nin expression starting at /tmp/tmp2bie8d1p.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkgsqy2p9.jl:13\nin expression starting at /tmp/tmpkgsqy2p9.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a number as input and returns the factorial\
    \ of that number. \nThe factorial of a number $n$ is defined as $n! = n * (n -\
    \ 1)!$. \nThe factorial of 0 is $1$. \nThe factorial of negative numbers is undefined.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsdgr5ju1.jl:13\nin expression starting at /tmp/tmpsdgr5ju1.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return True if n is prime and\
    \ False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpevl8zwo3.jl:13\nin expression starting at /tmp/tmpevl8zwo3.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value is found in a vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy97sr1_4.jl:13\nin expression starting at /tmp/tmpy97sr1_4.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsq5iskjf.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsq5iskjf.jl:1\n\
    in expression starting at /tmp/tmpsq5iskjf.jl:1\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a program which takes a number as input and returns\
    \ the factorial of it.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5xxl39gb.jl:13\nin expression starting at /tmp/tmp5xxl39gb.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns True if n is a prime number\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf52_9nu.jl:13\nin expression starting at /tmp/tmpxf52_9nu.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the number of divisors of n\
    \ which are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv3k87cpe.jl:13\nin expression starting at /tmp/tmpv3k87cpe.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the Fibonacci sequence up to a specified number. \nThe Fibonacci sequence is\
    \ defined by the recurrence relation:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbzivd6pt.jl:13\nin expression starting at /tmp/tmpbzivd6pt.jl:13\n"
  stdout: ''
  timestamp: 1659822645
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ a prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp613xy9f3.jl:13\nin expression starting at /tmp/tmp613xy9f3.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes in three numbers and returns the\
    \ product of the numbers. \nThe function should return an error if the numbers\
    \ are less than or equal to 0.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmf2k5p93.jl:13\nin expression starting at /tmp/tmpmf2k5p93.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes\
    \ as input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe_sjdq6z.jl:13\nin expression starting at /tmp/tmpe_sjdq6z.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfjg0fxm2.jl:13\nin expression starting at /tmp/tmpfjg0fxm2.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x,\
    \ y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which prints the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rc1jac5.jl:14\nin expression starting at\
    \ /tmp/tmp4rc1jac5.jl:14\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ a prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpglrroz6r.jl:13\nin expression starting at /tmp/tmpglrroz6r.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which takes in three numbers and returns the product of\
    \ the three numbers. \nThe function should return 0 if any of the numbers is zero.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0flj22nx.jl:13\nin expression starting at /tmp/tmp0flj22nx.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the square of x if x is odd and prints the square of y if x is even.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnbivlfc4.jl:13\nin expression starting at /tmp/tmpnbivlfc4.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers and returns the product of\
    \ the numbers in the array. \nThe function should raise an error if the array\
    \ is empty.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpigudf3eo.jl:13\nin expression starting at /tmp/tmpigudf3eo.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of elements in a vector that satisfy a certain condition. For example,\
    \ a vector [1,2,3,4,5,6,7,8,9] has 9 elements which satisfy the condition x>3\
    \ or x<5.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9r6ldr69.jl:17\nin expression starting at\
    \ /tmp/tmp9r6ldr69.jl:17\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a number as input and returns the number of digits\
    \ in that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz87ab71z.jl:13\nin expression starting at /tmp/tmpz87ab71z.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which takes as input a number n and returns the value\
    \ of x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpevq1po_p.jl:17\nin expression starting at\
    \ /tmp/tmpevq1po_p.jl:17\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in\
    \ three numbers and returns the sum of the squares of the first two numbers and\
    \ the sum of the squares of the last two numbers. \nThe function should only take\
    \ in three numbers and return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function should return two numbers. \nThe function should return two numbers.\
    \ \nThe function \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8az9ac6.jl:13\nin expression starting at /tmp/tmpn8az9ac6.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the product of all the numbers\
    \ from 1 to n. \nThe function should take one argument, n, which represents the\
    \ number of \nnumbers to return.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_sx5sy7m.jl:13\nin expression starting at /tmp/tmp_sx5sy7m.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbubeubp1.jl:13\nin expression starting at /tmp/tmpbubeubp1.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that will return the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplozaeq1o.jl:13\nin expression starting at /tmp/tmplozaeq1o.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return True if n is a prime number and\
    \ False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8o1g3841.jl:13\nin expression starting at /tmp/tmp8o1g3841.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that takes in three numbers and returns\
    \ the sum of the squares of the first two numbers and the sum of the squares of\
    \ the last two numbers. For example, the sum of the squares of the first two numbers\
    \ is $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 +\
    \ y^2 + z^2$. Write a function that takes in three numbers and returns the sum\
    \ of the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2\
    \ + z^2$. Write a function that takes in three numbers and returns the sum of\
    \ the squares of the first two numbers and the sum of the squares of the last\
    \ two numbers. For example, the sum of the squares of the first two numbers is\
    \ $x^2 + y^2$ and the sum of the squares of the last two number\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo1ng8psa.jl:13\nin expression starting at /tmp/tmpo1ng8psa.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given number appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7zdnafj4.jl:13\nin expression starting at /tmp/tmp7zdnafj4.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given value appears in\
    \ a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6gq7kxoa.jl:13\nin expression starting at /tmp/tmp6gq7kxoa.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the number of times a given number appears\
    \ in a given array. \nFor example, for the array [1, 1, 2, 3], the function should\
    \ return 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuu0sb5by.jl:13\nin expression starting at /tmp/tmpuu0sb5by.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpazi6r6pl.jl:13\nin expression starting at /tmp/tmpazi6r6pl.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of prime numbers less than a given number.\
    \ \nThe function should take one argument, the number to be tested.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ydfpf35.jl:13\nin expression starting at /tmp/tmp0ydfpf35.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp80klamca.jl:13\nin expression starting at /tmp/tmp80klamca.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which takes in\
    \ a vector of numbers and returns the sum of all even numbers in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx5276fip.jl:13\nin expression starting at /tmp/tmpx5276fip.jl:13\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp047buqfm.jl:17\nin expression starting at\
    \ /tmp/tmp047buqfm.jl:17\n"
  stdout: ''
  timestamp: 1659822647
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes as\
    \ input a number n and returns the number of digits in n. \nFor example, f(100)\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsl5sx8ly.jl:13\nin expression starting at /tmp/tmpsl5sx8ly.jl:13\n"
  stdout: ''
  timestamp: 1659822648
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which takes a number as input and prints the\
    \ square of the number if it is an integer.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt9plm7v1.jl:13\nin expression starting at /tmp/tmpt9plm7v1.jl:13\n"
  stdout: ''
  timestamp: 1659822648
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphgxfmm5e.jl:13\nin expression starting at /tmp/tmphgxfmm5e.jl:13\n"
  stdout: ''
  timestamp: 1659822636
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm81urv6h.jl:13\nin expression starting at /tmp/tmpm81urv6h.jl:13\n"
  stdout: ''
  timestamp: 1659822648
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n == 2 \n        then return y\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        then\
    \ return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise 2\nWrite a program\
    \ which returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ylc2j39.jl:13\nin expression starting at /tmp/tmp8ylc2j39.jl:13\n"
  stdout: ''
  timestamp: 1659822648
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of divisors of n that are less than or equal to n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpktf16u2h.jl:13\nin expression starting at /tmp/tmpktf16u2h.jl:13\n"
  stdout: ''
  timestamp: 1659822648
